/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */ ! function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document) throw new Error("jQuery requires a window with a document");
        return t(e)
    } : t(e)
}("undefined" != typeof window ? window : this, function(ie, e) {
    "use strict";
    var oe = [],
        r = Object.getPrototypeOf,
        ae = oe.slice,
        g = oe.flat ? function(e) {
            return oe.flat.call(e)
        } : function(e) {
            return oe.concat.apply([], e)
        },
        s = oe.push,
        se = oe.indexOf,
        n = {},
        i = n.toString,
        ue = n.hasOwnProperty,
        o = ue.toString,
        a = o.call(Object),
        le = {},
        v = function(e) {
            return "function" == typeof e && "number" != typeof e.nodeType && "function" != typeof e.item
        },
        y = function(e) {
            return null != e && e === e.window
        },
        C = ie.document,
        u = {
            type: !0,
            src: !0,
            nonce: !0,
            noModule: !0
        };

    function m(e, t, n) {
        var r, i, o = (n = n || C).createElement("script");
        if (o.text = e, t)
            for (r in u)(i = t[r] || t.getAttribute && t.getAttribute(r)) && o.setAttribute(r, i);
        n.head.appendChild(o).parentNode.removeChild(o)
    }

    function x(e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? n[i.call(e)] || "object" : typeof e
    }
    var t = "3.7.1",
        l = /HTML$/i,
        ce = function(e, t) {
            return new ce.fn.init(e, t)
        };

    function c(e) {
        var t = !!e && "length" in e && e.length,
            n = x(e);
        return !v(e) && !y(e) && ("array" === n || 0 === t || "number" == typeof t && 0 < t && t - 1 in e)
    }

    function fe(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
    }
    ce.fn = ce.prototype = {
        jquery: t,
        constructor: ce,
        length: 0,
        toArray: function() {
            return ae.call(this)
        },
        get: function(e) {
            return null == e ? ae.call(this) : e < 0 ? this[e + this.length] : this[e]
        },
        pushStack: function(e) {
            var t = ce.merge(this.constructor(), e);
            return t.prevObject = this, t
        },
        each: function(e) {
            return ce.each(this, e)
        },
        map: function(n) {
            return this.pushStack(ce.map(this, function(e, t) {
                return n.call(e, t, e)
            }))
        },
        slice: function() {
            return this.pushStack(ae.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        even: function() {
            return this.pushStack(ce.grep(this, function(e, t) {
                return (t + 1) % 2
            }))
        },
        odd: function() {
            return this.pushStack(ce.grep(this, function(e, t) {
                return t % 2
            }))
        },
        eq: function(e) {
            var t = this.length,
                n = +e + (e < 0 ? t : 0);
            return this.pushStack(0 <= n && n < t ? [this[n]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor()
        },
        push: s,
        sort: oe.sort,
        splice: oe.splice
    }, ce.extend = ce.fn.extend = function() {
        var e, t, n, r, i, o, a = arguments[0] || {},
            s = 1,
            u = arguments.length,
            l = !1;
        for ("boolean" == typeof a && (l = a, a = arguments[s] || {}, s++), "object" == typeof a || v(a) || (a = {}), s === u && (a = this, s--); s < u; s++)
            if (null != (e = arguments[s]))
                for (t in e) r = e[t], "__proto__" !== t && a !== r && (l && r && (ce.isPlainObject(r) || (i = Array.isArray(r))) ? (n = a[t], o = i && !Array.isArray(n) ? [] : i || ce.isPlainObject(n) ? n : {}, i = !1, a[t] = ce.extend(l, o, r)) : void 0 !== r && (a[t] = r));
        return a
    }, ce.extend({
        expando: "jQuery" + (t + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(e) {
            throw new Error(e)
        },
        noop: function() {},
        isPlainObject: function(e) {
            var t, n;
            return !(!e || "[object Object]" !== i.call(e)) && (!(t = r(e)) || "function" == typeof(n = ue.call(t, "constructor") && t.constructor) && o.call(n) === a)
        },
        isEmptyObject: function(e) {
            var t;
            for (t in e) return !1;
            return !0
        },
        globalEval: function(e, t, n) {
            m(e, {
                nonce: t && t.nonce
            }, n)
        },
        each: function(e, t) {
            var n, r = 0;
            if (c(e)) {
                for (n = e.length; r < n; r++)
                    if (!1 === t.call(e[r], r, e[r])) break
            } else
                for (r in e)
                    if (!1 === t.call(e[r], r, e[r])) break;
            return e
        },
        text: function(e) {
            var t, n = "",
                r = 0,
                i = e.nodeType;
            if (!i)
                while (t = e[r++]) n += ce.text(t);
            return 1 === i || 11 === i ? e.textContent : 9 === i ? e.documentElement.textContent : 3 === i || 4 === i ? e.nodeValue : n
        },
        makeArray: function(e, t) {
            var n = t || [];
            return null != e && (c(Object(e)) ? ce.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)), n
        },
        inArray: function(e, t, n) {
            return null == t ? -1 : se.call(t, e, n)
        },
        isXMLDoc: function(e) {
            var t = e && e.namespaceURI,
                n = e && (e.ownerDocument || e).documentElement;
            return !l.test(t || n && n.nodeName || "HTML")
        },
        merge: function(e, t) {
            for (var n = +t.length, r = 0, i = e.length; r < n; r++) e[i++] = t[r];
            return e.length = i, e
        },
        grep: function(e, t, n) {
            for (var r = [], i = 0, o = e.length, a = !n; i < o; i++) !t(e[i], i) !== a && r.push(e[i]);
            return r
        },
        map: function(e, t, n) {
            var r, i, o = 0,
                a = [];
            if (c(e))
                for (r = e.length; o < r; o++) null != (i = t(e[o], o, n)) && a.push(i);
            else
                for (o in e) null != (i = t(e[o], o, n)) && a.push(i);
            return g(a)
        },
        guid: 1,
        support: le
    }), "function" == typeof Symbol && (ce.fn[Symbol.iterator] = oe[Symbol.iterator]), ce.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        n["[object " + t + "]"] = t.toLowerCase()
    });
    var pe = oe.pop,
        de = oe.sort,
        he = oe.splice,
        ge = "[\\x20\\t\\r\\n\\f]",
        ve = new RegExp("^" + ge + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ge + "+$", "g");
    ce.contains = function(e, t) {
        var n = t && t.parentNode;
        return e === n || !(!n || 1 !== n.nodeType || !(e.contains ? e.contains(n) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(n)))
    };
    var f = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;

    function p(e, t) {
        return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
    }
    ce.escapeSelector = function(e) {
        return (e + "").replace(f, p)
    };
    var ye = C,
        me = s;
    ! function() {
        var e, b, w, o, a, T, r, C, d, i, k = me,
            S = ce.expando,
            E = 0,
            n = 0,
            s = W(),
            c = W(),
            u = W(),
            h = W(),
            l = function(e, t) {
                return e === t && (a = !0), 0
            },
            f = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            t = "(?:\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
            p = "\\[" + ge + "*(" + t + ")(?:" + ge + "*([*^$|!~]?=)" + ge + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + t + "))|)" + ge + "*\\]",
            g = ":(" + t + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + p + ")*)|.*)\\)|)",
            v = new RegExp(ge + "+", "g"),
            y = new RegExp("^" + ge + "*," + ge + "*"),
            m = new RegExp("^" + ge + "*([>+~]|" + ge + ")" + ge + "*"),
            x = new RegExp(ge + "|>"),
            j = new RegExp(g),
            A = new RegExp("^" + t + "$"),
            D = {
                ID: new RegExp("^#(" + t + ")"),
                CLASS: new RegExp("^\\.(" + t + ")"),
                TAG: new RegExp("^(" + t + "|[*])"),
                ATTR: new RegExp("^" + p),
                PSEUDO: new RegExp("^" + g),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + ge + "*(even|odd|(([+-]|)(\\d*)n|)" + ge + "*(?:([+-]|)" + ge + "*(\\d+)|))" + ge + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + f + ")$", "i"),
                needsContext: new RegExp("^" + ge + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + ge + "*((?:-\\d)?\\d*)" + ge + "*\\)|)(?=[^-]|$)", "i")
            },
            N = /^(?:input|select|textarea|button)$/i,
            q = /^h\d$/i,
            L = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            H = /[+~]/,
            O = new RegExp("\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\([^\\r\\n\\f])", "g"),
            P = function(e, t) {
                var n = "0x" + e.slice(1) - 65536;
                return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320))
            },
            M = function() {
                V()
            },
            R = J(function(e) {
                return !0 === e.disabled && fe(e, "fieldset")
            }, {
                dir: "parentNode",
                next: "legend"
            });
        try {
            k.apply(oe = ae.call(ye.childNodes), ye.childNodes), oe[ye.childNodes.length].nodeType
        } catch (e) {
            k = {
                apply: function(e, t) {
                    me.apply(e, ae.call(t))
                },
                call: function(e) {
                    me.apply(e, ae.call(arguments, 1))
                }
            }
        }

        function I(t, e, n, r) {
            var i, o, a, s, u, l, c, f = e && e.ownerDocument,
                p = e ? e.nodeType : 9;
            if (n = n || [], "string" != typeof t || !t || 1 !== p && 9 !== p && 11 !== p) return n;
            if (!r && (V(e), e = e || T, C)) {
                if (11 !== p && (u = L.exec(t)))
                    if (i = u[1]) {
                        if (9 === p) {
                            if (!(a = e.getElementById(i))) return n;
                            if (a.id === i) return k.call(n, a), n
                        } else if (f && (a = f.getElementById(i)) && I.contains(e, a) && a.id === i) return k.call(n, a), n
                    } else {
                        if (u[2]) return k.apply(n, e.getElementsByTagName(t)), n;
                        if ((i = u[3]) && e.getElementsByClassName) return k.apply(n, e.getElementsByClassName(i)), n
                    }
                if (!(h[t + " "] || d && d.test(t))) {
                    if (c = t, f = e, 1 === p && (x.test(t) || m.test(t))) {
                        (f = H.test(t) && U(e.parentNode) || e) == e && le.scope || ((s = e.getAttribute("id")) ? s = ce.escapeSelector(s) : e.setAttribute("id", s = S)), o = (l = Y(t)).length;
                        while (o--) l[o] = (s ? "#" + s : ":scope") + " " + Q(l[o]);
                        c = l.join(",")
                    }
                    try {
                        return k.apply(n, f.querySelectorAll(c)), n
                    } catch (e) {
                        h(t, !0)
                    } finally {
                        s === S && e.removeAttribute("id")
                    }
                }
            }
            return re(t.replace(ve, "$1"), e, n, r)
        }

        function W() {
            var r = [];
            return function e(t, n) {
                return r.push(t + " ") > b.cacheLength && delete e[r.shift()], e[t + " "] = n
            }
        }

        function F(e) {
            return e[S] = !0, e
        }

        function $(e) {
            var t = T.createElement("fieldset");
            try {
                return !!e(t)
            } catch (e) {
                return !1
            } finally {
                t.parentNode && t.parentNode.removeChild(t), t = null
            }
        }

        function B(t) {
            return function(e) {
                return fe(e, "input") && e.type === t
            }
        }

        function _(t) {
            return function(e) {
                return (fe(e, "input") || fe(e, "button")) && e.type === t
            }
        }

        function z(t) {
            return function(e) {
                return "form" in e ? e.parentNode && !1 === e.disabled ? "label" in e ? "label" in e.parentNode ? e.parentNode.disabled === t : e.disabled === t : e.isDisabled === t || e.isDisabled !== !t && R(e) === t : e.disabled === t : "label" in e && e.disabled === t
            }
        }

        function X(a) {
            return F(function(o) {
                return o = +o, F(function(e, t) {
                    var n, r = a([], e.length, o),
                        i = r.length;
                    while (i--) e[n = r[i]] && (e[n] = !(t[n] = e[n]))
                })
            })
        }

        function U(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e
        }

        function V(e) {
            var t, n = e ? e.ownerDocument || e : ye;
            return n != T && 9 === n.nodeType && n.documentElement && (r = (T = n).documentElement, C = !ce.isXMLDoc(T), i = r.matches || r.webkitMatchesSelector || r.msMatchesSelector, r.msMatchesSelector && ye != T && (t = T.defaultView) && t.top !== t && t.addEventListener("unload", M), le.getById = $(function(e) {
                return r.appendChild(e).id = ce.expando, !T.getElementsByName || !T.getElementsByName(ce.expando).length
            }), le.disconnectedMatch = $(function(e) {
                return i.call(e, "*")
            }), le.scope = $(function() {
                return T.querySelectorAll(":scope")
            }), le.cssHas = $(function() {
                try {
                    return T.querySelector(":has(*,:jqfake)"), !1
                } catch (e) {
                    return !0
                }
            }), le.getById ? (b.filter.ID = function(e) {
                var t = e.replace(O, P);
                return function(e) {
                    return e.getAttribute("id") === t
                }
            }, b.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && C) {
                    var n = t.getElementById(e);
                    return n ? [n] : []
                }
            }) : (b.filter.ID = function(e) {
                var n = e.replace(O, P);
                return function(e) {
                    var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                    return t && t.value === n
                }
            }, b.find.ID = function(e, t) {
                if ("undefined" != typeof t.getElementById && C) {
                    var n, r, i, o = t.getElementById(e);
                    if (o) {
                        if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
                        i = t.getElementsByName(e), r = 0;
                        while (o = i[r++])
                            if ((n = o.getAttributeNode("id")) && n.value === e) return [o]
                    }
                    return []
                }
            }), b.find.TAG = function(e, t) {
                return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : t.querySelectorAll(e)
            }, b.find.CLASS = function(e, t) {
                if ("undefined" != typeof t.getElementsByClassName && C) return t.getElementsByClassName(e)
            }, d = [], $(function(e) {
                var t;
                r.appendChild(e).innerHTML = "<a id='" + S + "' href='' disabled='disabled'></a><select id='" + S + "-\r\\' disabled='disabled'><option selected=''></option></select>", e.querySelectorAll("[selected]").length || d.push("\\[" + ge + "*(?:value|" + f + ")"), e.querySelectorAll("[id~=" + S + "-]").length || d.push("~="), e.querySelectorAll("a#" + S + "+*").length || d.push(".#.+[+~]"), e.querySelectorAll(":checked").length || d.push(":checked"), (t = T.createElement("input")).setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), r.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && d.push(":enabled", ":disabled"), (t = T.createElement("input")).setAttribute("name", ""), e.appendChild(t), e.querySelectorAll("[name='']").length || d.push("\\[" + ge + "*name" + ge + "*=" + ge + "*(?:''|\"\")")
            }), le.cssHas || d.push(":has"), d = d.length && new RegExp(d.join("|")), l = function(e, t) {
                if (e === t) return a = !0, 0;
                var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                return n || (1 & (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !le.sortDetached && t.compareDocumentPosition(e) === n ? e === T || e.ownerDocument == ye && I.contains(ye, e) ? -1 : t === T || t.ownerDocument == ye && I.contains(ye, t) ? 1 : o ? se.call(o, e) - se.call(o, t) : 0 : 4 & n ? -1 : 1)
            }), T
        }
        for (e in I.matches = function(e, t) {
                return I(e, null, null, t)
            }, I.matchesSelector = function(e, t) {
                if (V(e), C && !h[t + " "] && (!d || !d.test(t))) try {
                    var n = i.call(e, t);
                    if (n || le.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n
                } catch (e) {
                    h(t, !0)
                }
                return 0 < I(t, T, null, [e]).length
            }, I.contains = function(e, t) {
                return (e.ownerDocument || e) != T && V(e), ce.contains(e, t)
            }, I.attr = function(e, t) {
                (e.ownerDocument || e) != T && V(e);
                var n = b.attrHandle[t.toLowerCase()],
                    r = n && ue.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !C) : void 0;
                return void 0 !== r ? r : e.getAttribute(t)
            }, I.error = function(e) {
                throw new Error("Syntax error, unrecognized expression: " + e)
            }, ce.uniqueSort = function(e) {
                var t, n = [],
                    r = 0,
                    i = 0;
                if (a = !le.sortStable, o = !le.sortStable && ae.call(e, 0), de.call(e, l), a) {
                    while (t = e[i++]) t === e[i] && (r = n.push(i));
                    while (r--) he.call(e, n[r], 1)
                }
                return o = null, e
            }, ce.fn.uniqueSort = function() {
                return this.pushStack(ce.uniqueSort(ae.apply(this)))
            }, (b = ce.expr = {
                cacheLength: 50,
                createPseudo: F,
                match: D,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(e) {
                        return e[1] = e[1].replace(O, P), e[3] = (e[3] || e[4] || e[5] || "").replace(O, P), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4)
                    },
                    CHILD: function(e) {
                        return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || I.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && I.error(e[0]), e
                    },
                    PSEUDO: function(e) {
                        var t, n = !e[6] && e[2];
                        return D.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && j.test(n) && (t = Y(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function(e) {
                        var t = e.replace(O, P).toLowerCase();
                        return "*" === e ? function() {
                            return !0
                        } : function(e) {
                            return fe(e, t)
                        }
                    },
                    CLASS: function(e) {
                        var t = s[e + " "];
                        return t || (t = new RegExp("(^|" + ge + ")" + e + "(" + ge + "|$)")) && s(e, function(e) {
                            return t.test("string" == typeof e.className && e.className || "undefined" != typeof e.getAttribute && e.getAttribute("class") || "")
                        })
                    },
                    ATTR: function(n, r, i) {
                        return function(e) {
                            var t = I.attr(e, n);
                            return null == t ? "!=" === r : !r || (t += "", "=" === r ? t === i : "!=" === r ? t !== i : "^=" === r ? i && 0 === t.indexOf(i) : "*=" === r ? i && -1 < t.indexOf(i) : "$=" === r ? i && t.slice(-i.length) === i : "~=" === r ? -1 < (" " + t.replace(v, " ") + " ").indexOf(i) : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-"))
                        }
                    },
                    CHILD: function(d, e, t, h, g) {
                        var v = "nth" !== d.slice(0, 3),
                            y = "last" !== d.slice(-4),
                            m = "of-type" === e;
                        return 1 === h && 0 === g ? function(e) {
                            return !!e.parentNode
                        } : function(e, t, n) {
                            var r, i, o, a, s, u = v !== y ? "nextSibling" : "previousSibling",
                                l = e.parentNode,
                                c = m && e.nodeName.toLowerCase(),
                                f = !n && !m,
                                p = !1;
                            if (l) {
                                if (v) {
                                    while (u) {
                                        o = e;
                                        while (o = o[u])
                                            if (m ? fe(o, c) : 1 === o.nodeType) return !1;
                                        s = u = "only" === d && !s && "nextSibling"
                                    }
                                    return !0
                                }
                                if (s = [y ? l.firstChild : l.lastChild], y && f) {
                                    p = (a = (r = (i = l[S] || (l[S] = {}))[d] || [])[0] === E && r[1]) && r[2], o = a && l.childNodes[a];
                                    while (o = ++a && o && o[u] || (p = a = 0) || s.pop())
                                        if (1 === o.nodeType && ++p && o === e) {
                                            i[d] = [E, a, p];
                                            break
                                        }
                                } else if (f && (p = a = (r = (i = e[S] || (e[S] = {}))[d] || [])[0] === E && r[1]), !1 === p)
                                    while (o = ++a && o && o[u] || (p = a = 0) || s.pop())
                                        if ((m ? fe(o, c) : 1 === o.nodeType) && ++p && (f && ((i = o[S] || (o[S] = {}))[d] = [E, p]), o === e)) break;
                                return (p -= g) === h || p % h == 0 && 0 <= p / h
                            }
                        }
                    },
                    PSEUDO: function(e, o) {
                        var t, a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || I.error("unsupported pseudo: " + e);
                        return a[S] ? a(o) : 1 < a.length ? (t = [e, e, "", o], b.setFilters.hasOwnProperty(e.toLowerCase()) ? F(function(e, t) {
                            var n, r = a(e, o),
                                i = r.length;
                            while (i--) e[n = se.call(e, r[i])] = !(t[n] = r[i])
                        }) : function(e) {
                            return a(e, 0, t)
                        }) : a
                    }
                },
                pseudos: {
                    not: F(function(e) {
                        var r = [],
                            i = [],
                            s = ne(e.replace(ve, "$1"));
                        return s[S] ? F(function(e, t, n, r) {
                            var i, o = s(e, null, r, []),
                                a = e.length;
                            while (a--)(i = o[a]) && (e[a] = !(t[a] = i))
                        }) : function(e, t, n) {
                            return r[0] = e, s(r, null, n, i), r[0] = null, !i.pop()
                        }
                    }),
                    has: F(function(t) {
                        return function(e) {
                            return 0 < I(t, e).length
                        }
                    }),
                    contains: F(function(t) {
                        return t = t.replace(O, P),
                            function(e) {
                                return -1 < (e.textContent || ce.text(e)).indexOf(t)
                            }
                    }),
                    lang: F(function(n) {
                        return A.test(n || "") || I.error("unsupported lang: " + n), n = n.replace(O, P).toLowerCase(),
                            function(e) {
                                var t;
                                do {
                                    if (t = C ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-")
                                } while ((e = e.parentNode) && 1 === e.nodeType);
                                return !1
                            }
                    }),
                    target: function(e) {
                        var t = ie.location && ie.location.hash;
                        return t && t.slice(1) === e.id
                    },
                    root: function(e) {
                        return e === r
                    },
                    focus: function(e) {
                        return e === function() {
                            try {
                                return T.activeElement
                            } catch (e) {}
                        }() && T.hasFocus() && !!(e.type || e.href || ~e.tabIndex)
                    },
                    enabled: z(!1),
                    disabled: z(!0),
                    checked: function(e) {
                        return fe(e, "input") && !!e.checked || fe(e, "option") && !!e.selected
                    },
                    selected: function(e) {
                        return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
                    },
                    empty: function(e) {
                        for (e = e.firstChild; e; e = e.nextSibling)
                            if (e.nodeType < 6) return !1;
                        return !0
                    },
                    parent: function(e) {
                        return !b.pseudos.empty(e)
                    },
                    header: function(e) {
                        return q.test(e.nodeName)
                    },
                    input: function(e) {
                        return N.test(e.nodeName)
                    },
                    button: function(e) {
                        return fe(e, "input") && "button" === e.type || fe(e, "button")
                    },
                    text: function(e) {
                        var t;
                        return fe(e, "input") && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                    },
                    first: X(function() {
                        return [0]
                    }),
                    last: X(function(e, t) {
                        return [t - 1]
                    }),
                    eq: X(function(e, t, n) {
                        return [n < 0 ? n + t : n]
                    }),
                    even: X(function(e, t) {
                        for (var n = 0; n < t; n += 2) e.push(n);
                        return e
                    }),
                    odd: X(function(e, t) {
                        for (var n = 1; n < t; n += 2) e.push(n);
                        return e
                    }),
                    lt: X(function(e, t, n) {
                        var r;
                        for (r = n < 0 ? n + t : t < n ? t : n; 0 <= --r;) e.push(r);
                        return e
                    }),
                    gt: X(function(e, t, n) {
                        for (var r = n < 0 ? n + t : n; ++r < t;) e.push(r);
                        return e
                    })
                }
            }).pseudos.nth = b.pseudos.eq, {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            }) b.pseudos[e] = B(e);
        for (e in {
                submit: !0,
                reset: !0
            }) b.pseudos[e] = _(e);

        function G() {}

        function Y(e, t) {
            var n, r, i, o, a, s, u, l = c[e + " "];
            if (l) return t ? 0 : l.slice(0);
            a = e, s = [], u = b.preFilter;
            while (a) {
                for (o in n && !(r = y.exec(a)) || (r && (a = a.slice(r[0].length) || a), s.push(i = [])), n = !1, (r = m.exec(a)) && (n = r.shift(), i.push({
                        value: n,
                        type: r[0].replace(ve, " ")
                    }), a = a.slice(n.length)), b.filter) !(r = D[o].exec(a)) || u[o] && !(r = u[o](r)) || (n = r.shift(), i.push({
                    value: n,
                    type: o,
                    matches: r
                }), a = a.slice(n.length));
                if (!n) break
            }
            return t ? a.length : a ? I.error(e) : c(e, s).slice(0)
        }

        function Q(e) {
            for (var t = 0, n = e.length, r = ""; t < n; t++) r += e[t].value;
            return r
        }

        function J(a, e, t) {
            var s = e.dir,
                u = e.next,
                l = u || s,
                c = t && "parentNode" === l,
                f = n++;
            return e.first ? function(e, t, n) {
                while (e = e[s])
                    if (1 === e.nodeType || c) return a(e, t, n);
                return !1
            } : function(e, t, n) {
                var r, i, o = [E, f];
                if (n) {
                    while (e = e[s])
                        if ((1 === e.nodeType || c) && a(e, t, n)) return !0
                } else
                    while (e = e[s])
                        if (1 === e.nodeType || c)
                            if (i = e[S] || (e[S] = {}), u && fe(e, u)) e = e[s] || e;
                            else {
                                if ((r = i[l]) && r[0] === E && r[1] === f) return o[2] = r[2];
                                if ((i[l] = o)[2] = a(e, t, n)) return !0
                            } return !1
            }
        }

        function K(i) {
            return 1 < i.length ? function(e, t, n) {
                var r = i.length;
                while (r--)
                    if (!i[r](e, t, n)) return !1;
                return !0
            } : i[0]
        }

        function Z(e, t, n, r, i) {
            for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s)));
            return a
        }

        function ee(d, h, g, v, y, e) {
            return v && !v[S] && (v = ee(v)), y && !y[S] && (y = ee(y, e)), F(function(e, t, n, r) {
                var i, o, a, s, u = [],
                    l = [],
                    c = t.length,
                    f = e || function(e, t, n) {
                        for (var r = 0, i = t.length; r < i; r++) I(e, t[r], n);
                        return n
                    }(h || "*", n.nodeType ? [n] : n, []),
                    p = !d || !e && h ? f : Z(f, u, d, n, r);
                if (g ? g(p, s = y || (e ? d : c || v) ? [] : t, n, r) : s = p, v) {
                    i = Z(s, l), v(i, [], n, r), o = i.length;
                    while (o--)(a = i[o]) && (s[l[o]] = !(p[l[o]] = a))
                }
                if (e) {
                    if (y || d) {
                        if (y) {
                            i = [], o = s.length;
                            while (o--)(a = s[o]) && i.push(p[o] = a);
                            y(null, s = [], i, r)
                        }
                        o = s.length;
                        while (o--)(a = s[o]) && -1 < (i = y ? se.call(e, a) : u[o]) && (e[i] = !(t[i] = a))
                    }
                } else s = Z(s === t ? s.splice(c, s.length) : s), y ? y(null, t, s, r) : k.apply(t, s)
            })
        }

        function te(e) {
            for (var i, t, n, r = e.length, o = b.relative[e[0].type], a = o || b.relative[" "], s = o ? 1 : 0, u = J(function(e) {
                    return e === i
                }, a, !0), l = J(function(e) {
                    return -1 < se.call(i, e)
                }, a, !0), c = [function(e, t, n) {
                    var r = !o && (n || t != w) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
                    return i = null, r
                }]; s < r; s++)
                if (t = b.relative[e[s].type]) c = [J(K(c), t)];
                else {
                    if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) {
                        for (n = ++s; n < r; n++)
                            if (b.relative[e[n].type]) break;
                        return ee(1 < s && K(c), 1 < s && Q(e.slice(0, s - 1).concat({
                            value: " " === e[s - 2].type ? "*" : ""
                        })).replace(ve, "$1"), t, s < n && te(e.slice(s, n)), n < r && te(e = e.slice(n)), n < r && Q(e))
                    }
                    c.push(t)
                }
            return K(c)
        }

        function ne(e, t) {
            var n, v, y, m, x, r, i = [],
                o = [],
                a = u[e + " "];
            if (!a) {
                t || (t = Y(e)), n = t.length;
                while (n--)(a = te(t[n]))[S] ? i.push(a) : o.push(a);
                (a = u(e, (v = o, m = 0 < (y = i).length, x = 0 < v.length, r = function(e, t, n, r, i) {
                    var o, a, s, u = 0,
                        l = "0",
                        c = e && [],
                        f = [],
                        p = w,
                        d = e || x && b.find.TAG("*", i),
                        h = E += null == p ? 1 : Math.random() || .1,
                        g = d.length;
                    for (i && (w = t == T || t || i); l !== g && null != (o = d[l]); l++) {
                        if (x && o) {
                            a = 0, t || o.ownerDocument == T || (V(o), n = !C);
                            while (s = v[a++])
                                if (s(o, t || T, n)) {
                                    k.call(r, o);
                                    break
                                }
                            i && (E = h)
                        }
                        m && ((o = !s && o) && u--, e && c.push(o))
                    }
                    if (u += l, m && l !== u) {
                        a = 0;
                        while (s = y[a++]) s(c, f, t, n);
                        if (e) {
                            if (0 < u)
                                while (l--) c[l] || f[l] || (f[l] = pe.call(r));
                            f = Z(f)
                        }
                        k.apply(r, f), i && !e && 0 < f.length && 1 < u + y.length && ce.uniqueSort(r)
                    }
                    return i && (E = h, w = p), c
                }, m ? F(r) : r))).selector = e
            }
            return a
        }

        function re(e, t, n, r) {
            var i, o, a, s, u, l = "function" == typeof e && e,
                c = !r && Y(e = l.selector || e);
            if (n = n || [], 1 === c.length) {
                if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && C && b.relative[o[1].type]) {
                    if (!(t = (b.find.ID(a.matches[0].replace(O, P), t) || [])[0])) return n;
                    l && (t = t.parentNode), e = e.slice(o.shift().value.length)
                }
                i = D.needsContext.test(e) ? 0 : o.length;
                while (i--) {
                    if (a = o[i], b.relative[s = a.type]) break;
                    if ((u = b.find[s]) && (r = u(a.matches[0].replace(O, P), H.test(o[0].type) && U(t.parentNode) || t))) {
                        if (o.splice(i, 1), !(e = r.length && Q(o))) return k.apply(n, r), n;
                        break
                    }
                }
            }
            return (l || ne(e, c))(r, t, !C, n, !t || H.test(e) && U(t.parentNode) || t), n
        }
        G.prototype = b.filters = b.pseudos, b.setFilters = new G, le.sortStable = S.split("").sort(l).join("") === S, V(), le.sortDetached = $(function(e) {
            return 1 & e.compareDocumentPosition(T.createElement("fieldset"))
        }), ce.find = I, ce.expr[":"] = ce.expr.pseudos, ce.unique = ce.uniqueSort, I.compile = ne, I.select = re, I.setDocument = V, I.tokenize = Y, I.escape = ce.escapeSelector, I.getText = ce.text, I.isXML = ce.isXMLDoc, I.selectors = ce.expr, I.support = ce.support, I.uniqueSort = ce.uniqueSort
    }();
    var d = function(e, t, n) {
            var r = [],
                i = void 0 !== n;
            while ((e = e[t]) && 9 !== e.nodeType)
                if (1 === e.nodeType) {
                    if (i && ce(e).is(n)) break;
                    r.push(e)
                }
            return r
        },
        h = function(e, t) {
            for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
            return n
        },
        b = ce.expr.match.needsContext,
        w = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;

    function T(e, n, r) {
        return v(n) ? ce.grep(e, function(e, t) {
            return !!n.call(e, t, e) !== r
        }) : n.nodeType ? ce.grep(e, function(e) {
            return e === n !== r
        }) : "string" != typeof n ? ce.grep(e, function(e) {
            return -1 < se.call(n, e) !== r
        }) : ce.filter(n, e, r)
    }
    ce.filter = function(e, t, n) {
        var r = t[0];
        return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? ce.find.matchesSelector(r, e) ? [r] : [] : ce.find.matches(e, ce.grep(t, function(e) {
            return 1 === e.nodeType
        }))
    }, ce.fn.extend({
        find: function(e) {
            var t, n, r = this.length,
                i = this;
            if ("string" != typeof e) return this.pushStack(ce(e).filter(function() {
                for (t = 0; t < r; t++)
                    if (ce.contains(i[t], this)) return !0
            }));
            for (n = this.pushStack([]), t = 0; t < r; t++) ce.find(e, i[t], n);
            return 1 < r ? ce.uniqueSort(n) : n
        },
        filter: function(e) {
            return this.pushStack(T(this, e || [], !1))
        },
        not: function(e) {
            return this.pushStack(T(this, e || [], !0))
        },
        is: function(e) {
            return !!T(this, "string" == typeof e && b.test(e) ? ce(e) : e || [], !1).length
        }
    });
    var k, S = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    (ce.fn.init = function(e, t, n) {
        var r, i;
        if (!e) return this;
        if (n = n || k, "string" == typeof e) {
            if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : S.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            if (r[1]) {
                if (t = t instanceof ce ? t[0] : t, ce.merge(this, ce.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : C, !0)), w.test(r[1]) && ce.isPlainObject(t))
                    for (r in t) v(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                return this
            }
            return (i = C.getElementById(r[2])) && (this[0] = i, this.length = 1), this
        }
        return e.nodeType ? (this[0] = e, this.length = 1, this) : v(e) ? void 0 !== n.ready ? n.ready(e) : e(ce) : ce.makeArray(e, this)
    }).prototype = ce.fn, k = ce(C);
    var E = /^(?:parents|prev(?:Until|All))/,
        j = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };

    function A(e, t) {
        while ((e = e[t]) && 1 !== e.nodeType);
        return e
    }
    ce.fn.extend({
        has: function(e) {
            var t = ce(e, this),
                n = t.length;
            return this.filter(function() {
                for (var e = 0; e < n; e++)
                    if (ce.contains(this, t[e])) return !0
            })
        },
        closest: function(e, t) {
            var n, r = 0,
                i = this.length,
                o = [],
                a = "string" != typeof e && ce(e);
            if (!b.test(e))
                for (; r < i; r++)
                    for (n = this[r]; n && n !== t; n = n.parentNode)
                        if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && ce.find.matchesSelector(n, e))) {
                            o.push(n);
                            break
                        }
            return this.pushStack(1 < o.length ? ce.uniqueSort(o) : o)
        },
        index: function(e) {
            return e ? "string" == typeof e ? se.call(ce(e), this[0]) : se.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(e, t) {
            return this.pushStack(ce.uniqueSort(ce.merge(this.get(), ce(e, t))))
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
        }
    }), ce.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function(e) {
            return d(e, "parentNode")
        },
        parentsUntil: function(e, t, n) {
            return d(e, "parentNode", n)
        },
        next: function(e) {
            return A(e, "nextSibling")
        },
        prev: function(e) {
            return A(e, "previousSibling")
        },
        nextAll: function(e) {
            return d(e, "nextSibling")
        },
        prevAll: function(e) {
            return d(e, "previousSibling")
        },
        nextUntil: function(e, t, n) {
            return d(e, "nextSibling", n)
        },
        prevUntil: function(e, t, n) {
            return d(e, "previousSibling", n)
        },
        siblings: function(e) {
            return h((e.parentNode || {}).firstChild, e)
        },
        children: function(e) {
            return h(e.firstChild)
        },
        contents: function(e) {
            return null != e.contentDocument && r(e.contentDocument) ? e.contentDocument : (fe(e, "template") && (e = e.content || e), ce.merge([], e.childNodes))
        }
    }, function(r, i) {
        ce.fn[r] = function(e, t) {
            var n = ce.map(this, i, e);
            return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = ce.filter(t, n)), 1 < this.length && (j[r] || ce.uniqueSort(n), E.test(r) && n.reverse()), this.pushStack(n)
        }
    });
    var D = /[^\x20\t\r\n\f]+/g;

    function N(e) {
        return e
    }

    function q(e) {
        throw e
    }

    function L(e, t, n, r) {
        var i;
        try {
            e && v(i = e.promise) ? i.call(e).done(t).fail(n) : e && v(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r))
        } catch (e) {
            n.apply(void 0, [e])
        }
    }
    ce.Callbacks = function(r) {
        var e, n;
        r = "string" == typeof r ? (e = r, n = {}, ce.each(e.match(D) || [], function(e, t) {
            n[t] = !0
        }), n) : ce.extend({}, r);
        var i, t, o, a, s = [],
            u = [],
            l = -1,
            c = function() {
                for (a = a || r.once, o = i = !0; u.length; l = -1) {
                    t = u.shift();
                    while (++l < s.length) !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && (l = s.length, t = !1)
                }
                r.memory || (t = !1), i = !1, a && (s = t ? [] : "")
            },
            f = {
                add: function() {
                    return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) {
                        ce.each(e, function(e, t) {
                            v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && "string" !== x(t) && n(t)
                        })
                    }(arguments), t && !i && c()), this
                },
                remove: function() {
                    return ce.each(arguments, function(e, t) {
                        var n;
                        while (-1 < (n = ce.inArray(t, s, n))) s.splice(n, 1), n <= l && l--
                    }), this
                },
                has: function(e) {
                    return e ? -1 < ce.inArray(e, s) : 0 < s.length
                },
                empty: function() {
                    return s && (s = []), this
                },
                disable: function() {
                    return a = u = [], s = t = "", this
                },
                disabled: function() {
                    return !s
                },
                lock: function() {
                    return a = u = [], t || i || (s = t = ""), this
                },
                locked: function() {
                    return !!a
                },
                fireWith: function(e, t) {
                    return a || (t = [e, (t = t || []).slice ? t.slice() : t], u.push(t), i || c()), this
                },
                fire: function() {
                    return f.fireWith(this, arguments), this
                },
                fired: function() {
                    return !!o
                }
            };
        return f
    }, ce.extend({
        Deferred: function(e) {
            var o = [
                    ["notify", "progress", ce.Callbacks("memory"), ce.Callbacks("memory"), 2],
                    ["resolve", "done", ce.Callbacks("once memory"), ce.Callbacks("once memory"), 0, "resolved"],
                    ["reject", "fail", ce.Callbacks("once memory"), ce.Callbacks("once memory"), 1, "rejected"]
                ],
                i = "pending",
                a = {
                    state: function() {
                        return i
                    },
                    always: function() {
                        return s.done(arguments).fail(arguments), this
                    },
                    "catch": function(e) {
                        return a.then(null, e)
                    },
                    pipe: function() {
                        var i = arguments;
                        return ce.Deferred(function(r) {
                            ce.each(o, function(e, t) {
                                var n = v(i[t[4]]) && i[t[4]];
                                s[t[1]](function() {
                                    var e = n && n.apply(this, arguments);
                                    e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments)
                                })
                            }), i = null
                        }).promise()
                    },
                    then: function(t, n, r) {
                        var u = 0;

                        function l(i, o, a, s) {
                            return function() {
                                var n = this,
                                    r = arguments,
                                    e = function() {
                                        var e, t;
                                        if (!(i < u)) {
                                            if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution");
                                            t = e && ("object" == typeof e || "function" == typeof e) && e.then, v(t) ? s ? t.call(e, l(u, o, N, s), l(u, o, q, s)) : (u++, t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith))) : (a !== N && (n = void 0, r = [e]), (s || o.resolveWith)(n, r))
                                        }
                                    },
                                    t = s ? e : function() {
                                        try {
                                            e()
                                        } catch (e) {
                                            ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error), u <= i + 1 && (a !== q && (n = void 0, r = [e]), o.rejectWith(n, r))
                                        }
                                    };
                                i ? t() : (ce.Deferred.getErrorHook ? t.error = ce.Deferred.getErrorHook() : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()), ie.setTimeout(t))
                            }
                        }
                        return ce.Deferred(function(e) {
                            o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)), o[1][3].add(l(0, e, v(t) ? t : N)), o[2][3].add(l(0, e, v(n) ? n : q))
                        }).promise()
                    },
                    promise: function(e) {
                        return null != e ? ce.extend(e, a) : a
                    }
                },
                s = {};
            return ce.each(o, function(e, t) {
                var n = t[2],
                    r = t[5];
                a[t[1]] = n.add, r && n.add(function() {
                    i = r
                }, o[3 - e][2].disable, o[3 - e][3].disable, o[0][2].lock, o[0][3].lock), n.add(t[3].fire), s[t[0]] = function() {
                    return s[t[0] + "With"](this === s ? void 0 : this, arguments), this
                }, s[t[0] + "With"] = n.fireWith
            }), a.promise(s), e && e.call(s, s), s
        },
        when: function(e) {
            var n = arguments.length,
                t = n,
                r = Array(t),
                i = ae.call(arguments),
                o = ce.Deferred(),
                a = function(t) {
                    return function(e) {
                        r[t] = this, i[t] = 1 < arguments.length ? ae.call(arguments) : e, --n || o.resolveWith(r, i)
                    }
                };
            if (n <= 1 && (L(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || v(i[t] && i[t].then))) return o.then();
            while (t--) L(i[t], a(t), o.reject);
            return o.promise()
        }
    });
    var H = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    ce.Deferred.exceptionHook = function(e, t) {
        ie.console && ie.console.warn && e && H.test(e.name) && ie.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t)
    }, ce.readyException = function(e) {
        ie.setTimeout(function() {
            throw e
        })
    };
    var O = ce.Deferred();

    function P() {
        C.removeEventListener("DOMContentLoaded", P), ie.removeEventListener("load", P), ce.ready()
    }
    ce.fn.ready = function(e) {
        return O.then(e)["catch"](function(e) {
            ce.readyException(e)
        }), this
    }, ce.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(e) {
            (!0 === e ? --ce.readyWait : ce.isReady) || (ce.isReady = !0) !== e && 0 < --ce.readyWait || O.resolveWith(C, [ce])
        }
    }), ce.ready.then = O.then, "complete" === C.readyState || "loading" !== C.readyState && !C.documentElement.doScroll ? ie.setTimeout(ce.ready) : (C.addEventListener("DOMContentLoaded", P), ie.addEventListener("load", P));
    var M = function(e, t, n, r, i, o, a) {
            var s = 0,
                u = e.length,
                l = null == n;
            if ("object" === x(n))
                for (s in i = !0, n) M(e, t, s, n[s], !0, o, a);
            else if (void 0 !== r && (i = !0, v(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function(e, t, n) {
                    return l.call(ce(e), n)
                })), t))
                for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
            return i ? e : l ? t.call(e) : u ? t(e[0], n) : o
        },
        R = /^-ms-/,
        I = /-([a-z])/g;

    function W(e, t) {
        return t.toUpperCase()
    }

    function F(e) {
        return e.replace(R, "ms-").replace(I, W)
    }
    var $ = function(e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
    };

    function B() {
        this.expando = ce.expando + B.uid++
    }
    B.uid = 1, B.prototype = {
        cache: function(e) {
            var t = e[this.expando];
            return t || (t = {}, $(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))), t
        },
        set: function(e, t, n) {
            var r, i = this.cache(e);
            if ("string" == typeof t) i[F(t)] = n;
            else
                for (r in t) i[F(r)] = t[r];
            return i
        },
        get: function(e, t) {
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][F(t)]
        },
        access: function(e, t, n) {
            return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t)
        },
        remove: function(e, t) {
            var n, r = e[this.expando];
            if (void 0 !== r) {
                if (void 0 !== t) {
                    n = (t = Array.isArray(t) ? t.map(F) : (t = F(t)) in r ? [t] : t.match(D) || []).length;
                    while (n--) delete r[t[n]]
                }(void 0 === t || ce.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !ce.isEmptyObject(t)
        }
    };
    var _ = new B,
        z = new B,
        X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        U = /[A-Z]/g;

    function V(e, t, n) {
        var r, i;
        if (void 0 === n && 1 === e.nodeType)
            if (r = "data-" + t.replace(U, "-$&").toLowerCase(), "string" == typeof(n = e.getAttribute(r))) {
                try {
                    n = "true" === (i = n) || "false" !== i && ("null" === i ? null : i === +i + "" ? +i : X.test(i) ? JSON.parse(i) : i)
                } catch (e) {}
                z.set(e, t, n)
            } else n = void 0;
        return n
    }
    ce.extend({
        hasData: function(e) {
            return z.hasData(e) || _.hasData(e)
        },
        data: function(e, t, n) {
            return z.access(e, t, n)
        },
        removeData: function(e, t) {
            z.remove(e, t)
        },
        _data: function(e, t, n) {
            return _.access(e, t, n)
        },
        _removeData: function(e, t) {
            _.remove(e, t)
        }
    }), ce.fn.extend({
        data: function(n, e) {
            var t, r, i, o = this[0],
                a = o && o.attributes;
            if (void 0 === n) {
                if (this.length && (i = z.get(o), 1 === o.nodeType && !_.get(o, "hasDataAttrs"))) {
                    t = a.length;
                    while (t--) a[t] && 0 === (r = a[t].name).indexOf("data-") && (r = F(r.slice(5)), V(o, r, i[r]));
                    _.set(o, "hasDataAttrs", !0)
                }
                return i
            }
            return "object" == typeof n ? this.each(function() {
                z.set(this, n)
            }) : M(this, function(e) {
                var t;
                if (o && void 0 === e) return void 0 !== (t = z.get(o, n)) ? t : void 0 !== (t = V(o, n)) ? t : void 0;
                this.each(function() {
                    z.set(this, n, e)
                })
            }, null, e, 1 < arguments.length, null, !0)
        },
        removeData: function(e) {
            return this.each(function() {
                z.remove(this, e)
            })
        }
    }), ce.extend({
        queue: function(e, t, n) {
            var r;
            if (e) return t = (t || "fx") + "queue", r = _.get(e, t), n && (!r || Array.isArray(n) ? r = _.access(e, t, ce.makeArray(n)) : r.push(n)), r || []
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = ce.queue(e, t),
                r = n.length,
                i = n.shift(),
                o = ce._queueHooks(e, t);
            "inprogress" === i && (i = n.shift(), r--), i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, function() {
                ce.dequeue(e, t)
            }, o)), !r && o && o.empty.fire()
        },
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return _.get(e, n) || _.access(e, n, {
                empty: ce.Callbacks("once memory").add(function() {
                    _.remove(e, [t + "queue", n])
                })
            })
        }
    }), ce.fn.extend({
        queue: function(t, n) {
            var e = 2;
            return "string" != typeof t && (n = t, t = "fx", e--), arguments.length < e ? ce.queue(this[0], t) : void 0 === n ? this : this.each(function() {
                var e = ce.queue(this, t, n);
                ce._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && ce.dequeue(this, t)
            })
        },
        dequeue: function(e) {
            return this.each(function() {
                ce.dequeue(this, e)
            })
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", [])
        },
        promise: function(e, t) {
            var n, r = 1,
                i = ce.Deferred(),
                o = this,
                a = this.length,
                s = function() {
                    --r || i.resolveWith(o, [o])
                };
            "string" != typeof e && (t = e, e = void 0), e = e || "fx";
            while (a--)(n = _.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s));
            return s(), i.promise(t)
        }
    });
    var G = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        Y = new RegExp("^(?:([+-])=|)(" + G + ")([a-z%]*)$", "i"),
        Q = ["Top", "Right", "Bottom", "Left"],
        J = C.documentElement,
        K = function(e) {
            return ce.contains(e.ownerDocument, e)
        },
        Z = {
            composed: !0
        };
    J.getRootNode && (K = function(e) {
        return ce.contains(e.ownerDocument, e) || e.getRootNode(Z) === e.ownerDocument
    });
    var ee = function(e, t) {
        return "none" === (e = t || e).style.display || "" === e.style.display && K(e) && "none" === ce.css(e, "display")
    };

    function te(e, t, n, r) {
        var i, o, a = 20,
            s = r ? function() {
                return r.cur()
            } : function() {
                return ce.css(e, t, "")
            },
            u = s(),
            l = n && n[3] || (ce.cssNumber[t] ? "" : "px"),
            c = e.nodeType && (ce.cssNumber[t] || "px" !== l && +u) && Y.exec(ce.css(e, t));
        if (c && c[3] !== l) {
            u /= 2, l = l || c[3], c = +u || 1;
            while (a--) ce.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || .5)) <= 0 && (a = 0), c /= o;
            c *= 2, ce.style(e, t, c + l), n = n || []
        }
        return n && (c = +c || +u || 0, i = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, r.start = c, r.end = i)), i
    }
    var ne = {};

    function re(e, t) {
        for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)(r = e[c]).style && (n = r.style.display, t ? ("none" === n && (l[c] = _.get(r, "display") || null, l[c] || (r.style.display = "")), "" === r.style.display && ee(r) && (l[c] = (u = a = o = void 0, a = (i = r).ownerDocument, s = i.nodeName, (u = ne[s]) || (o = a.body.appendChild(a.createElement(s)), u = ce.css(o, "display"), o.parentNode.removeChild(o), "none" === u && (u = "block"), ne[s] = u)))) : "none" !== n && (l[c] = "none", _.set(r, "display", n)));
        for (c = 0; c < f; c++) null != l[c] && (e[c].style.display = l[c]);
        return e
    }
    ce.fn.extend({
        show: function() {
            return re(this, !0)
        },
        hide: function() {
            return re(this)
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                ee(this) ? ce(this).show() : ce(this).hide()
            })
        }
    });
    var xe, be, we = /^(?:checkbox|radio)$/i,
        Te = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
        Ce = /^$|^module$|\/(?:java|ecma)script/i;
    xe = C.createDocumentFragment().appendChild(C.createElement("div")), (be = C.createElement("input")).setAttribute("type", "radio"), be.setAttribute("checked", "checked"), be.setAttribute("name", "t"), xe.appendChild(be), le.checkClone = xe.cloneNode(!0).cloneNode(!0).lastChild.checked, xe.innerHTML = "<textarea>x</textarea>", le.noCloneChecked = !!xe.cloneNode(!0).lastChild.defaultValue, xe.innerHTML = "<option></option>", le.option = !!xe.lastChild;
    var ke = {
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };

    function Se(e, t) {
        var n;
        return n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [], void 0 === t || t && fe(e, t) ? ce.merge([e], n) : n
    }

    function Ee(e, t) {
        for (var n = 0, r = e.length; n < r; n++) _.set(e[n], "globalEval", !t || _.get(t[n], "globalEval"))
    }
    ke.tbody = ke.tfoot = ke.colgroup = ke.caption = ke.thead, ke.th = ke.td, le.option || (ke.optgroup = ke.option = [1, "<select multiple='multiple'>", "</select>"]);
    var je = /<|&#?\w+;/;

    function Ae(e, t, n, r, i) {
        for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)
            if ((o = e[d]) || 0 === o)
                if ("object" === x(o)) ce.merge(p, o.nodeType ? [o] : o);
                else if (je.test(o)) {
            a = a || f.appendChild(t.createElement("div")), s = (Te.exec(o) || ["", ""])[1].toLowerCase(), u = ke[s] || ke._default, a.innerHTML = u[1] + ce.htmlPrefilter(o) + u[2], c = u[0];
            while (c--) a = a.lastChild;
            ce.merge(p, a.childNodes), (a = f.firstChild).textContent = ""
        } else p.push(t.createTextNode(o));
        f.textContent = "", d = 0;
        while (o = p[d++])
            if (r && -1 < ce.inArray(o, r)) i && i.push(o);
            else if (l = K(o), a = Se(f.appendChild(o), "script"), l && Ee(a), n) {
            c = 0;
            while (o = a[c++]) Ce.test(o.type || "") && n.push(o)
        }
        return f
    }
    var De = /^([^.]*)(?:\.(.+)|)/;

    function Ne() {
        return !0
    }

    function qe() {
        return !1
    }

    function Le(e, t, n, r, i, o) {
        var a, s;
        if ("object" == typeof t) {
            for (s in "string" != typeof n && (r = r || n, n = void 0), t) Le(e, s, n, r, t[s], o);
            return e
        }
        if (null == r && null == i ? (i = n, r = n = void 0) : null == i && ("string" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = qe;
        else if (!i) return e;
        return 1 === o && (a = i, (i = function(e) {
            return ce().off(e), a.apply(this, arguments)
        }).guid = a.guid || (a.guid = ce.guid++)), e.each(function() {
            ce.event.add(this, t, i, r, n)
        })
    }

    function He(e, r, t) {
        t ? (_.set(e, r, !1), ce.event.add(e, r, {
            namespace: !1,
            handler: function(e) {
                var t, n = _.get(this, r);
                if (1 & e.isTrigger && this[r]) {
                    if (n)(ce.event.special[r] || {}).delegateType && e.stopPropagation();
                    else if (n = ae.call(arguments), _.set(this, r, n), this[r](), t = _.get(this, r), _.set(this, r, !1), n !== t) return e.stopImmediatePropagation(), e.preventDefault(), t
                } else n && (_.set(this, r, ce.event.trigger(n[0], n.slice(1), this)), e.stopPropagation(), e.isImmediatePropagationStopped = Ne)
            }
        })) : void 0 === _.get(e, r) && ce.event.add(e, r, Ne)
    }
    ce.event = {
        global: {},
        add: function(t, e, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, v = _.get(t);
            if ($(t)) {
                n.handler && (n = (o = n).handler, i = o.selector), i && ce.find.matchesSelector(J, i), n.guid || (n.guid = ce.guid++), (u = v.events) || (u = v.events = Object.create(null)), (a = v.handle) || (a = v.handle = function(e) {
                    return "undefined" != typeof ce && ce.event.triggered !== e.type ? ce.event.dispatch.apply(t, arguments) : void 0
                }), l = (e = (e || "").match(D) || [""]).length;
                while (l--) d = g = (s = De.exec(e[l]) || [])[1], h = (s[2] || "").split(".").sort(), d && (f = ce.event.special[d] || {}, d = (i ? f.delegateType : f.bindType) || d, f = ce.event.special[d] || {}, c = ce.extend({
                    type: d,
                    origType: g,
                    data: r,
                    handler: n,
                    guid: n.guid,
                    selector: i,
                    needsContext: i && ce.expr.match.needsContext.test(i),
                    namespace: h.join(".")
                }, o), (p = u[d]) || ((p = u[d] = []).delegateCount = 0, f.setup && !1 !== f.setup.call(t, r, h, a) || t.addEventListener && t.addEventListener(d, a)), f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)), i ? p.splice(p.delegateCount++, 0, c) : p.push(c), ce.event.global[d] = !0)
            }
        },
        remove: function(e, t, n, r, i) {
            var o, a, s, u, l, c, f, p, d, h, g, v = _.hasData(e) && _.get(e);
            if (v && (u = v.events)) {
                l = (t = (t || "").match(D) || [""]).length;
                while (l--)
                    if (d = g = (s = De.exec(t[l]) || [])[1], h = (s[2] || "").split(".").sort(), d) {
                        f = ce.event.special[d] || {}, p = u[d = (r ? f.delegateType : f.bindType) || d] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length;
                        while (o--) c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c));
                        a && !p.length && (f.teardown && !1 !== f.teardown.call(e, h, v.handle) || ce.removeEvent(e, d, v.handle), delete u[d])
                    } else
                        for (d in u) ce.event.remove(e, d + t[l], n, r, !0);
                ce.isEmptyObject(u) && _.remove(e, "handle events")
            }
        },
        dispatch: function(e) {
            var t, n, r, i, o, a, s = new Array(arguments.length),
                u = ce.event.fix(e),
                l = (_.get(this, "events") || Object.create(null))[u.type] || [],
                c = ce.event.special[u.type] || {};
            for (s[0] = u, t = 1; t < arguments.length; t++) s[t] = arguments[t];
            if (u.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, u)) {
                a = ce.event.handlers.call(this, u, l), t = 0;
                while ((i = a[t++]) && !u.isPropagationStopped()) {
                    u.currentTarget = i.elem, n = 0;
                    while ((o = i.handlers[n++]) && !u.isImmediatePropagationStopped()) u.rnamespace && !1 !== o.namespace && !u.rnamespace.test(o.namespace) || (u.handleObj = o, u.data = o.data, void 0 !== (r = ((ce.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (u.result = r) && (u.preventDefault(), u.stopPropagation()))
                }
                return c.postDispatch && c.postDispatch.call(this, u), u.result
            }
        },
        handlers: function(e, t) {
            var n, r, i, o, a, s = [],
                u = t.delegateCount,
                l = e.target;
            if (u && l.nodeType && !("click" === e.type && 1 <= e.button))
                for (; l !== this; l = l.parentNode || this)
                    if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                        for (o = [], a = {}, n = 0; n < u; n++) void 0 === a[i = (r = t[n]).selector + " "] && (a[i] = r.needsContext ? -1 < ce(i, this).index(l) : ce.find(i, this, null, [l]).length), a[i] && o.push(r);
                        o.length && s.push({
                            elem: l,
                            handlers: o
                        })
                    }
            return l = this, u < t.length && s.push({
                elem: l,
                handlers: t.slice(u)
            }), s
        },
        addProp: function(t, e) {
            Object.defineProperty(ce.Event.prototype, t, {
                enumerable: !0,
                configurable: !0,
                get: v(e) ? function() {
                    if (this.originalEvent) return e(this.originalEvent)
                } : function() {
                    if (this.originalEvent) return this.originalEvent[t]
                },
                set: function(e) {
                    Object.defineProperty(this, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    })
                }
            })
        },
        fix: function(e) {
            return e[ce.expando] ? e : new ce.Event(e)
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                setup: function(e) {
                    var t = this || e;
                    return we.test(t.type) && t.click && fe(t, "input") && He(t, "click", !0), !1
                },
                trigger: function(e) {
                    var t = this || e;
                    return we.test(t.type) && t.click && fe(t, "input") && He(t, "click"), !0
                },
                _default: function(e) {
                    var t = e.target;
                    return we.test(t.type) && t.click && fe(t, "input") && _.get(t, "click") || fe(t, "a")
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                }
            }
        }
    }, ce.removeEvent = function(e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n)
    }, ce.Event = function(e, t) {
        if (!(this instanceof ce.Event)) return new ce.Event(e, t);
        e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? Ne : qe, this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, t && ce.extend(this, t), this.timeStamp = e && e.timeStamp || Date.now(), this[ce.expando] = !0
    }, ce.Event.prototype = {
        constructor: ce.Event,
        isDefaultPrevented: qe,
        isPropagationStopped: qe,
        isImmediatePropagationStopped: qe,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = Ne, e && !this.isSimulated && e.preventDefault()
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = Ne, e && !this.isSimulated && e.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = Ne, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation()
        }
    }, ce.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        "char": !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: !0
    }, ce.event.addProp), ce.each({
        focus: "focusin",
        blur: "focusout"
    }, function(r, i) {
        function o(e) {
            if (C.documentMode) {
                var t = _.get(this, "handle"),
                    n = ce.event.fix(e);
                n.type = "focusin" === e.type ? "focus" : "blur", n.isSimulated = !0, t(e), n.target === n.currentTarget && t(n)
            } else ce.event.simulate(i, e.target, ce.event.fix(e))
        }
        ce.event.special[r] = {
            setup: function() {
                var e;
                if (He(this, r, !0), !C.documentMode) return !1;
                (e = _.get(this, i)) || this.addEventListener(i, o), _.set(this, i, (e || 0) + 1)
            },
            trigger: function() {
                return He(this, r), !0
            },
            teardown: function() {
                var e;
                if (!C.documentMode) return !1;
                (e = _.get(this, i) - 1) ? _.set(this, i, e): (this.removeEventListener(i, o), _.remove(this, i))
            },
            _default: function(e) {
                return _.get(e.target, r)
            },
            delegateType: i
        }, ce.event.special[i] = {
            setup: function() {
                var e = this.ownerDocument || this.document || this,
                    t = C.documentMode ? this : e,
                    n = _.get(t, i);
                n || (C.documentMode ? this.addEventListener(i, o) : e.addEventListener(r, o, !0)), _.set(t, i, (n || 0) + 1)
            },
            teardown: function() {
                var e = this.ownerDocument || this.document || this,
                    t = C.documentMode ? this : e,
                    n = _.get(t, i) - 1;
                n ? _.set(t, i, n) : (C.documentMode ? this.removeEventListener(i, o) : e.removeEventListener(r, o, !0), _.remove(t, i))
            }
        }
    }), ce.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, i) {
        ce.event.special[e] = {
            delegateType: i,
            bindType: i,
            handle: function(e) {
                var t, n = e.relatedTarget,
                    r = e.handleObj;
                return n && (n === this || ce.contains(this, n)) || (e.type = r.origType, t = r.handler.apply(this, arguments), e.type = i), t
            }
        }
    }), ce.fn.extend({
        on: function(e, t, n, r) {
            return Le(this, e, t, n, r)
        },
        one: function(e, t, n, r) {
            return Le(this, e, t, n, r, 1)
        },
        off: function(e, t, n) {
            var r, i;
            if (e && e.preventDefault && e.handleObj) return r = e.handleObj, ce(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;
            if ("object" == typeof e) {
                for (i in e) this.off(i, t, e[i]);
                return this
            }
            return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = qe), this.each(function() {
                ce.event.remove(this, e, n, t)
            })
        }
    });
    var Oe = /<script|<style|<link/i,
        Pe = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Me = /^\s*<!\[CDATA\[|\]\]>\s*$/g;

    function Re(e, t) {
        return fe(e, "table") && fe(11 !== t.nodeType ? t : t.firstChild, "tr") && ce(e).children("tbody")[0] || e
    }

    function Ie(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e
    }

    function We(e) {
        return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"), e
    }

    function Fe(e, t) {
        var n, r, i, o, a, s;
        if (1 === t.nodeType) {
            if (_.hasData(e) && (s = _.get(e).events))
                for (i in _.remove(t, "handle events"), s)
                    for (n = 0, r = s[i].length; n < r; n++) ce.event.add(t, i, s[i][n]);
            z.hasData(e) && (o = z.access(e), a = ce.extend({}, o), z.set(t, a))
        }
    }

    function $e(n, r, i, o) {
        r = g(r);
        var e, t, a, s, u, l, c = 0,
            f = n.length,
            p = f - 1,
            d = r[0],
            h = v(d);
        if (h || 1 < f && "string" == typeof d && !le.checkClone && Pe.test(d)) return n.each(function(e) {
            var t = n.eq(e);
            h && (r[0] = d.call(this, e, t.html())), $e(t, r, i, o)
        });
        if (f && (t = (e = Ae(r, n[0].ownerDocument, !1, n, o)).firstChild, 1 === e.childNodes.length && (e = t), t || o)) {
            for (s = (a = ce.map(Se(e, "script"), Ie)).length; c < f; c++) u = e, c !== p && (u = ce.clone(u, !0, !0), s && ce.merge(a, Se(u, "script"))), i.call(n[c], u, c);
            if (s)
                for (l = a[a.length - 1].ownerDocument, ce.map(a, We), c = 0; c < s; c++) u = a[c], Ce.test(u.type || "") && !_.access(u, "globalEval") && ce.contains(l, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? ce._evalUrl && !u.noModule && ce._evalUrl(u.src, {
                    nonce: u.nonce || u.getAttribute("nonce")
                }, l) : m(u.textContent.replace(Me, ""), u, l))
        }
        return n
    }

    function Be(e, t, n) {
        for (var r, i = t ? ce.filter(t, e) : e, o = 0; null != (r = i[o]); o++) n || 1 !== r.nodeType || ce.cleanData(Se(r)), r.parentNode && (n && K(r) && Ee(Se(r, "script")), r.parentNode.removeChild(r));
        return e
    }
    ce.extend({
        htmlPrefilter: function(e) {
            return e
        },
        clone: function(e, t, n) {
            var r, i, o, a, s, u, l, c = e.cloneNode(!0),
                f = K(e);
            if (!(le.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || ce.isXMLDoc(e)))
                for (a = Se(c), r = 0, i = (o = Se(e)).length; r < i; r++) s = o[r], u = a[r], void 0, "input" === (l = u.nodeName.toLowerCase()) && we.test(s.type) ? u.checked = s.checked : "input" !== l && "textarea" !== l || (u.defaultValue = s.defaultValue);
            if (t)
                if (n)
                    for (o = o || Se(e), a = a || Se(c), r = 0, i = o.length; r < i; r++) Fe(o[r], a[r]);
                else Fe(e, c);
            return 0 < (a = Se(c, "script")).length && Ee(a, !f && Se(e, "script")), c
        },
        cleanData: function(e) {
            for (var t, n, r, i = ce.event.special, o = 0; void 0 !== (n = e[o]); o++)
                if ($(n)) {
                    if (t = n[_.expando]) {
                        if (t.events)
                            for (r in t.events) i[r] ? ce.event.remove(n, r) : ce.removeEvent(n, r, t.handle);
                        n[_.expando] = void 0
                    }
                    n[z.expando] && (n[z.expando] = void 0)
                }
        }
    }), ce.fn.extend({
        detach: function(e) {
            return Be(this, e, !0)
        },
        remove: function(e) {
            return Be(this, e)
        },
        text: function(e) {
            return M(this, function(e) {
                return void 0 === e ? ce.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                })
            }, null, e, arguments.length)
        },
        append: function() {
            return $e(this, arguments, function(e) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Re(this, e).appendChild(e)
            })
        },
        prepend: function() {
            return $e(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = Re(this, e);
                    t.insertBefore(e, t.firstChild)
                }
            })
        },
        before: function() {
            return $e(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this)
            })
        },
        after: function() {
            return $e(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
            })
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++) 1 === e.nodeType && (ce.cleanData(Se(e, !1)), e.textContent = "");
            return this
        },
        clone: function(e, t) {
            return e = null != e && e, t = null == t ? e : t, this.map(function() {
                return ce.clone(this, e, t)
            })
        },
        html: function(e) {
            return M(this, function(e) {
                var t = this[0] || {},
                    n = 0,
                    r = this.length;
                if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                if ("string" == typeof e && !Oe.test(e) && !ke[(Te.exec(e) || ["", ""])[1].toLowerCase()]) {
                    e = ce.htmlPrefilter(e);
                    try {
                        for (; n < r; n++) 1 === (t = this[n] || {}).nodeType && (ce.cleanData(Se(t, !1)), t.innerHTML = e);
                        t = 0
                    } catch (e) {}
                }
                t && this.empty().append(e)
            }, null, e, arguments.length)
        },
        replaceWith: function() {
            var n = [];
            return $e(this, arguments, function(e) {
                var t = this.parentNode;
                ce.inArray(this, n) < 0 && (ce.cleanData(Se(this)), t && t.replaceChild(e, this))
            }, n)
        }
    }), ce.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, a) {
        ce.fn[e] = function(e) {
            for (var t, n = [], r = ce(e), i = r.length - 1, o = 0; o <= i; o++) t = o === i ? this : this.clone(!0), ce(r[o])[a](t), s.apply(n, t.get());
            return this.pushStack(n)
        }
    });
    var _e = new RegExp("^(" + G + ")(?!px)[a-z%]+$", "i"),
        ze = /^--/,
        Xe = function(e) {
            var t = e.ownerDocument.defaultView;
            return t && t.opener || (t = ie), t.getComputedStyle(e)
        },
        Ue = function(e, t, n) {
            var r, i, o = {};
            for (i in t) o[i] = e.style[i], e.style[i] = t[i];
            for (i in r = n.call(e), t) e.style[i] = o[i];
            return r
        },
        Ve = new RegExp(Q.join("|"), "i");

    function Ge(e, t, n) {
        var r, i, o, a, s = ze.test(t),
            u = e.style;
        return (n = n || Xe(e)) && (a = n.getPropertyValue(t) || n[t], s && a && (a = a.replace(ve, "$1") || void 0), "" !== a || K(e) || (a = ce.style(e, t)), !le.pixelBoxStyles() && _e.test(a) && Ve.test(t) && (r = u.width, i = u.minWidth, o = u.maxWidth, u.minWidth = u.maxWidth = u.width = a, a = n.width, u.width = r, u.minWidth = i, u.maxWidth = o)), void 0 !== a ? a + "" : a
    }

    function Ye(e, t) {
        return {
            get: function() {
                if (!e()) return (this.get = t).apply(this, arguments);
                delete this.get
            }
        }
    }! function() {
        function e() {
            if (l) {
                u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", l.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", J.appendChild(u).appendChild(l);
                var e = ie.getComputedStyle(l);
                n = "1%" !== e.top, s = 12 === t(e.marginLeft), l.style.right = "60%", o = 36 === t(e.right), r = 36 === t(e.width), l.style.position = "absolute", i = 12 === t(l.offsetWidth / 3), J.removeChild(u), l = null
            }
        }

        function t(e) {
            return Math.round(parseFloat(e))
        }
        var n, r, i, o, a, s, u = C.createElement("div"),
            l = C.createElement("div");
        l.style && (l.style.backgroundClip = "content-box", l.cloneNode(!0).style.backgroundClip = "", le.clearCloneStyle = "content-box" === l.style.backgroundClip, ce.extend(le, {
            boxSizingReliable: function() {
                return e(), r
            },
            pixelBoxStyles: function() {
                return e(), o
            },
            pixelPosition: function() {
                return e(), n
            },
            reliableMarginLeft: function() {
                return e(), s
            },
            scrollboxSize: function() {
                return e(), i
            },
            reliableTrDimensions: function() {
                var e, t, n, r;
                return null == a && (e = C.createElement("table"), t = C.createElement("tr"), n = C.createElement("div"), e.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", t.style.cssText = "box-sizing:content-box;border:1px solid", t.style.height = "1px", n.style.height = "9px", n.style.display = "block", J.appendChild(e).appendChild(t).appendChild(n), r = ie.getComputedStyle(t), a = parseInt(r.height, 10) + parseInt(r.borderTopWidth, 10) + parseInt(r.borderBottomWidth, 10) === t.offsetHeight, J.removeChild(e)), a
            }
        }))
    }();
    var Qe = ["Webkit", "Moz", "ms"],
        Je = C.createElement("div").style,
        Ke = {};

    function Ze(e) {
        var t = ce.cssProps[e] || Ke[e];
        return t || (e in Je ? e : Ke[e] = function(e) {
            var t = e[0].toUpperCase() + e.slice(1),
                n = Qe.length;
            while (n--)
                if ((e = Qe[n] + t) in Je) return e
        }(e) || e)
    }
    var et = /^(none|table(?!-c[ea]).+)/,
        tt = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        nt = {
            letterSpacing: "0",
            fontWeight: "400"
        };

    function rt(e, t, n) {
        var r = Y.exec(t);
        return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t
    }

    function it(e, t, n, r, i, o) {
        var a = "width" === t ? 1 : 0,
            s = 0,
            u = 0,
            l = 0;
        if (n === (r ? "border" : "content")) return 0;
        for (; a < 4; a += 2) "margin" === n && (l += ce.css(e, n + Q[a], !0, i)), r ? ("content" === n && (u -= ce.css(e, "padding" + Q[a], !0, i)), "margin" !== n && (u -= ce.css(e, "border" + Q[a] + "Width", !0, i))) : (u += ce.css(e, "padding" + Q[a], !0, i), "padding" !== n ? u += ce.css(e, "border" + Q[a] + "Width", !0, i) : s += ce.css(e, "border" + Q[a] + "Width", !0, i));
        return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5)) || 0), u + l
    }

    function ot(e, t, n) {
        var r = Xe(e),
            i = (!le.boxSizingReliable() || n) && "border-box" === ce.css(e, "boxSizing", !1, r),
            o = i,
            a = Ge(e, t, r),
            s = "offset" + t[0].toUpperCase() + t.slice(1);
        if (_e.test(a)) {
            if (!n) return a;
            a = "auto"
        }
        return (!le.boxSizingReliable() && i || !le.reliableTrDimensions() && fe(e, "tr") || "auto" === a || !parseFloat(a) && "inline" === ce.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === ce.css(e, "boxSizing", !1, r), (o = s in e) && (a = e[s])), (a = parseFloat(a) || 0) + it(e, t, n || (i ? "border" : "content"), o, r, a) + "px"
    }

    function at(e, t, n, r, i) {
        return new at.prototype.init(e, t, n, r, i)
    }
    ce.extend({
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        var n = Ge(e, "opacity");
                        return "" === n ? "1" : n
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageSlice: !0,
            columnCount: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            scale: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0
        },
        cssProps: {},
        style: function(e, t, n, r) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var i, o, a, s = F(t),
                    u = ze.test(t),
                    l = e.style;
                if (u || (t = Ze(s)), a = ce.cssHooks[t] || ce.cssHooks[s], void 0 === n) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                "string" === (o = typeof n) && (i = Y.exec(n)) && i[1] && (n = te(e, t, i), o = "number"), null != n && n == n && ("number" !== o || u || (n += i && i[3] || (ce.cssNumber[s] ? "" : "px")), le.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n))
            }
        },
        css: function(e, t, n, r) {
            var i, o, a, s = F(t);
            return ze.test(t) || (t = Ze(s)), (a = ce.cssHooks[t] || ce.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)), void 0 === i && (i = Ge(e, t, r)), "normal" === i && t in nt && (i = nt[t]), "" === n || n ? (o = parseFloat(i), !0 === n || isFinite(o) ? o || 0 : i) : i
        }
    }), ce.each(["height", "width"], function(e, u) {
        ce.cssHooks[u] = {
            get: function(e, t, n) {
                if (t) return !et.test(ce.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? ot(e, u, n) : Ue(e, tt, function() {
                    return ot(e, u, n)
                })
            },
            set: function(e, t, n) {
                var r, i = Xe(e),
                    o = !le.scrollboxSize() && "absolute" === i.position,
                    a = (o || n) && "border-box" === ce.css(e, "boxSizing", !1, i),
                    s = n ? it(e, u, n, a, i) : 0;
                return a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - it(e, u, "border", !1, i) - .5)), s && (r = Y.exec(t)) && "px" !== (r[3] || "px") && (e.style[u] = t, t = ce.css(e, u)), rt(0, t, s)
            }
        }
    }), ce.cssHooks.marginLeft = Ye(le.reliableMarginLeft, function(e, t) {
        if (t) return (parseFloat(Ge(e, "marginLeft")) || e.getBoundingClientRect().left - Ue(e, {
            marginLeft: 0
        }, function() {
            return e.getBoundingClientRect().left
        })) + "px"
    }), ce.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(i, o) {
        ce.cssHooks[i + o] = {
            expand: function(e) {
                for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++) n[i + Q[t] + o] = r[t] || r[t - 2] || r[0];
                return n
            }
        }, "margin" !== i && (ce.cssHooks[i + o].set = rt)
    }), ce.fn.extend({
        css: function(e, t) {
            return M(this, function(e, t, n) {
                var r, i, o = {},
                    a = 0;
                if (Array.isArray(t)) {
                    for (r = Xe(e), i = t.length; a < i; a++) o[t[a]] = ce.css(e, t[a], !1, r);
                    return o
                }
                return void 0 !== n ? ce.style(e, t, n) : ce.css(e, t)
            }, e, t, 1 < arguments.length)
        }
    }), ((ce.Tween = at).prototype = {
        constructor: at,
        init: function(e, t, n, r, i, o) {
            this.elem = e, this.prop = n, this.easing = i || ce.easing._default, this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (ce.cssNumber[n] ? "" : "px")
        },
        cur: function() {
            var e = at.propHooks[this.prop];
            return e && e.get ? e.get(this) : at.propHooks._default.get(this)
        },
        run: function(e) {
            var t, n = at.propHooks[this.prop];
            return this.options.duration ? this.pos = t = ce.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : at.propHooks._default.set(this), this
        }
    }).init.prototype = at.prototype, (at.propHooks = {
        _default: {
            get: function(e) {
                var t;
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = ce.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0
            },
            set: function(e) {
                ce.fx.step[e.prop] ? ce.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !ce.cssHooks[e.prop] && null == e.elem.style[Ze(e.prop)] ? e.elem[e.prop] = e.now : ce.style(e.elem, e.prop, e.now + e.unit)
            }
        }
    }).scrollTop = at.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
        }
    }, ce.easing = {
        linear: function(e) {
            return e
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2
        },
        _default: "swing"
    }, ce.fx = at.prototype.init, ce.fx.step = {};
    var st, ut, lt, ct, ft = /^(?:toggle|show|hide)$/,
        pt = /queueHooks$/;

    function dt() {
        ut && (!1 === C.hidden && ie.requestAnimationFrame ? ie.requestAnimationFrame(dt) : ie.setTimeout(dt, ce.fx.interval), ce.fx.tick())
    }

    function ht() {
        return ie.setTimeout(function() {
            st = void 0
        }), st = Date.now()
    }

    function gt(e, t) {
        var n, r = 0,
            i = {
                height: e
            };
        for (t = t ? 1 : 0; r < 4; r += 2 - t) i["margin" + (n = Q[r])] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e), i
    }

    function vt(e, t, n) {
        for (var r, i = (yt.tweeners[t] || []).concat(yt.tweeners["*"]), o = 0, a = i.length; o < a; o++)
            if (r = i[o].call(n, t, e)) return r
    }

    function yt(o, e, t) {
        var n, a, r = 0,
            i = yt.prefilters.length,
            s = ce.Deferred().always(function() {
                delete u.elem
            }),
            u = function() {
                if (a) return !1;
                for (var e = st || ht(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++) l.tweens[r].run(n);
                return s.notifyWith(o, [l, n, t]), n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1)
            },
            l = s.promise({
                elem: o,
                props: ce.extend({}, e),
                opts: ce.extend(!0, {
                    specialEasing: {},
                    easing: ce.easing._default
                }, t),
                originalProperties: e,
                originalOptions: t,
                startTime: st || ht(),
                duration: t.duration,
                tweens: [],
                createTween: function(e, t) {
                    var n = ce.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing);
                    return l.tweens.push(n), n
                },
                stop: function(e) {
                    var t = 0,
                        n = e ? l.tweens.length : 0;
                    if (a) return this;
                    for (a = !0; t < n; t++) l.tweens[t].run(1);
                    return e ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]), this
                }
            }),
            c = l.props;
        for (! function(e, t) {
                var n, r, i, o, a;
                for (n in e)
                    if (i = t[r = F(n)], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = ce.cssHooks[r]) && "expand" in a)
                        for (n in o = a.expand(o), delete e[r], o) n in e || (e[n] = o[n], t[n] = i);
                    else t[r] = i
            }(c, l.opts.specialEasing); r < i; r++)
            if (n = yt.prefilters[r].call(l, o, c, l.opts)) return v(n.stop) && (ce._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n;
        return ce.map(c, vt, l), v(l.opts.start) && l.opts.start.call(o, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), ce.fx.timer(ce.extend(u, {
            elem: o,
            anim: l,
            queue: l.opts.queue
        })), l
    }
    ce.Animation = ce.extend(yt, {
        tweeners: {
            "*": [function(e, t) {
                var n = this.createTween(e, t);
                return te(n.elem, e, Y.exec(t), n), n
            }]
        },
        tweener: function(e, t) {
            v(e) ? (t = e, e = ["*"]) : e = e.match(D);
            for (var n, r = 0, i = e.length; r < i; r++) n = e[r], yt.tweeners[n] = yt.tweeners[n] || [], yt.tweeners[n].unshift(t)
        },
        prefilters: [function(e, t, n) {
            var r, i, o, a, s, u, l, c, f = "width" in t || "height" in t,
                p = this,
                d = {},
                h = e.style,
                g = e.nodeType && ee(e),
                v = _.get(e, "fxshow");
            for (r in n.queue || (null == (a = ce._queueHooks(e, "fx")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function() {
                    a.unqueued || s()
                }), a.unqueued++, p.always(function() {
                    p.always(function() {
                        a.unqueued--, ce.queue(e, "fx").length || a.empty.fire()
                    })
                })), t)
                if (i = t[r], ft.test(i)) {
                    if (delete t[r], o = o || "toggle" === i, i === (g ? "hide" : "show")) {
                        if ("show" !== i || !v || void 0 === v[r]) continue;
                        g = !0
                    }
                    d[r] = v && v[r] || ce.style(e, r)
                }
            if ((u = !ce.isEmptyObject(t)) || !ce.isEmptyObject(d))
                for (r in f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = v && v.display) && (l = _.get(e, "display")), "none" === (c = ce.css(e, "display")) && (l ? c = l : (re([e], !0), l = e.style.display || l, c = ce.css(e, "display"), re([e]))), ("inline" === c || "inline-block" === c && null != l) && "none" === ce.css(e, "float") && (u || (p.done(function() {
                        h.display = l
                    }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function() {
                        h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2]
                    })), u = !1, d) u || (v ? "hidden" in v && (g = v.hidden) : v = _.access(e, "fxshow", {
                    display: l
                }), o && (v.hidden = !g), g && re([e], !0), p.done(function() {
                    for (r in g || re([e]), _.remove(e, "fxshow"), d) ce.style(e, r, d[r])
                })), u = vt(g ? v[r] : 0, r, p), r in v || (v[r] = u.start, g && (u.end = u.start, u.start = 0))
        }],
        prefilter: function(e, t) {
            t ? yt.prefilters.unshift(e) : yt.prefilters.push(e)
        }
    }), ce.speed = function(e, t, n) {
        var r = e && "object" == typeof e ? ce.extend({}, e) : {
            complete: n || !n && t || v(e) && e,
            duration: e,
            easing: n && t || t && !v(t) && t
        };
        return ce.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in ce.fx.speeds ? r.duration = ce.fx.speeds[r.duration] : r.duration = ce.fx.speeds._default), null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function() {
            v(r.old) && r.old.call(this), r.queue && ce.dequeue(this, r.queue)
        }, r
    }, ce.fn.extend({
        fadeTo: function(e, t, n, r) {
            return this.filter(ee).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, r)
        },
        animate: function(t, e, n, r) {
            var i = ce.isEmptyObject(t),
                o = ce.speed(e, n, r),
                a = function() {
                    var e = yt(this, ce.extend({}, t), o);
                    (i || _.get(this, "finish")) && e.stop(!0)
                };
            return a.finish = a, i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a)
        },
        stop: function(i, e, o) {
            var a = function(e) {
                var t = e.stop;
                delete e.stop, t(o)
            };
            return "string" != typeof i && (o = e, e = i, i = void 0), e && this.queue(i || "fx", []), this.each(function() {
                var e = !0,
                    t = null != i && i + "queueHooks",
                    n = ce.timers,
                    r = _.get(this);
                if (t) r[t] && r[t].stop && a(r[t]);
                else
                    for (t in r) r[t] && r[t].stop && pt.test(t) && a(r[t]);
                for (t = n.length; t--;) n[t].elem !== this || null != i && n[t].queue !== i || (n[t].anim.stop(o), e = !1, n.splice(t, 1));
                !e && o || ce.dequeue(this, i)
            })
        },
        finish: function(a) {
            return !1 !== a && (a = a || "fx"), this.each(function() {
                var e, t = _.get(this),
                    n = t[a + "queue"],
                    r = t[a + "queueHooks"],
                    i = ce.timers,
                    o = n ? n.length : 0;
                for (t.finish = !0, ce.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--;) i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1));
                for (e = 0; e < o; e++) n[e] && n[e].finish && n[e].finish.call(this);
                delete t.finish
            })
        }
    }), ce.each(["toggle", "show", "hide"], function(e, r) {
        var i = ce.fn[r];
        ce.fn[r] = function(e, t, n) {
            return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(gt(r, !0), e, t, n)
        }
    }), ce.each({
        slideDown: gt("show"),
        slideUp: gt("hide"),
        slideToggle: gt("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, r) {
        ce.fn[e] = function(e, t, n) {
            return this.animate(r, e, t, n)
        }
    }), ce.timers = [], ce.fx.tick = function() {
        var e, t = 0,
            n = ce.timers;
        for (st = Date.now(); t < n.length; t++)(e = n[t])() || n[t] !== e || n.splice(t--, 1);
        n.length || ce.fx.stop(), st = void 0
    }, ce.fx.timer = function(e) {
        ce.timers.push(e), ce.fx.start()
    }, ce.fx.interval = 13, ce.fx.start = function() {
        ut || (ut = !0, dt())
    }, ce.fx.stop = function() {
        ut = null
    }, ce.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, ce.fn.delay = function(r, e) {
        return r = ce.fx && ce.fx.speeds[r] || r, e = e || "fx", this.queue(e, function(e, t) {
            var n = ie.setTimeout(e, r);
            t.stop = function() {
                ie.clearTimeout(n)
            }
        })
    }, lt = C.createElement("input"), ct = C.createElement("select").appendChild(C.createElement("option")), lt.type = "checkbox", le.checkOn = "" !== lt.value, le.optSelected = ct.selected, (lt = C.createElement("input")).value = "t", lt.type = "radio", le.radioValue = "t" === lt.value;
    var mt, xt = ce.expr.attrHandle;
    ce.fn.extend({
        attr: function(e, t) {
            return M(this, ce.attr, e, t, 1 < arguments.length)
        },
        removeAttr: function(e) {
            return this.each(function() {
                ce.removeAttr(this, e)
            })
        }
    }), ce.extend({
        attr: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o) return "undefined" == typeof e.getAttribute ? ce.prop(e, t, n) : (1 === o && ce.isXMLDoc(e) || (i = ce.attrHooks[t.toLowerCase()] || (ce.expr.match.bool.test(t) ? mt : void 0)), void 0 !== n ? null === n ? void ce.removeAttr(e, t) : i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), n) : i && "get" in i && null !== (r = i.get(e, t)) ? r : null == (r = ce.find.attr(e, t)) ? void 0 : r)
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!le.radioValue && "radio" === t && fe(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t), n && (e.value = n), t
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var n, r = 0,
                i = t && t.match(D);
            if (i && 1 === e.nodeType)
                while (n = i[r++]) e.removeAttribute(n)
        }
    }), mt = {
        set: function(e, t, n) {
            return !1 === t ? ce.removeAttr(e, n) : e.setAttribute(n, n), n
        }
    }, ce.each(ce.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var a = xt[t] || ce.find.attr;
        xt[t] = function(e, t, n) {
            var r, i, o = t.toLowerCase();
            return n || (i = xt[o], xt[o] = r, r = null != a(e, t, n) ? o : null, xt[o] = i), r
        }
    });
    var bt = /^(?:input|select|textarea|button)$/i,
        wt = /^(?:a|area)$/i;

    function Tt(e) {
        return (e.match(D) || []).join(" ")
    }

    function Ct(e) {
        return e.getAttribute && e.getAttribute("class") || ""
    }

    function kt(e) {
        return Array.isArray(e) ? e : "string" == typeof e && e.match(D) || []
    }
    ce.fn.extend({
        prop: function(e, t) {
            return M(this, ce.prop, e, t, 1 < arguments.length)
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[ce.propFix[e] || e]
            })
        }
    }), ce.extend({
        prop: function(e, t, n) {
            var r, i, o = e.nodeType;
            if (3 !== o && 8 !== o && 2 !== o) return 1 === o && ce.isXMLDoc(e) || (t = ce.propFix[t] || t, i = ce.propHooks[t]), void 0 !== n ? i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t]
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    var t = ce.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : bt.test(e.nodeName) || wt.test(e.nodeName) && e.href ? 0 : -1
                }
            }
        },
        propFix: {
            "for": "htmlFor",
            "class": "className"
        }
    }), le.optSelected || (ce.propHooks.selected = {
        get: function(e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex, null
        },
        set: function(e) {
            var t = e.parentNode;
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex)
        }
    }), ce.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        ce.propFix[this.toLowerCase()] = this
    }), ce.fn.extend({
        addClass: function(t) {
            var e, n, r, i, o, a;
            return v(t) ? this.each(function(e) {
                ce(this).addClass(t.call(this, e, Ct(this)))
            }) : (e = kt(t)).length ? this.each(function() {
                if (r = Ct(this), n = 1 === this.nodeType && " " + Tt(r) + " ") {
                    for (o = 0; o < e.length; o++) i = e[o], n.indexOf(" " + i + " ") < 0 && (n += i + " ");
                    a = Tt(n), r !== a && this.setAttribute("class", a)
                }
            }) : this
        },
        removeClass: function(t) {
            var e, n, r, i, o, a;
            return v(t) ? this.each(function(e) {
                ce(this).removeClass(t.call(this, e, Ct(this)))
            }) : arguments.length ? (e = kt(t)).length ? this.each(function() {
                if (r = Ct(this), n = 1 === this.nodeType && " " + Tt(r) + " ") {
                    for (o = 0; o < e.length; o++) {
                        i = e[o];
                        while (-1 < n.indexOf(" " + i + " ")) n = n.replace(" " + i + " ", " ")
                    }
                    a = Tt(n), r !== a && this.setAttribute("class", a)
                }
            }) : this : this.attr("class", "")
        },
        toggleClass: function(t, n) {
            var e, r, i, o, a = typeof t,
                s = "string" === a || Array.isArray(t);
            return v(t) ? this.each(function(e) {
                ce(this).toggleClass(t.call(this, e, Ct(this), n), n)
            }) : "boolean" == typeof n && s ? n ? this.addClass(t) : this.removeClass(t) : (e = kt(t), this.each(function() {
                if (s)
                    for (o = ce(this), i = 0; i < e.length; i++) r = e[i], o.hasClass(r) ? o.removeClass(r) : o.addClass(r);
                else void 0 !== t && "boolean" !== a || ((r = Ct(this)) && _.set(this, "__className__", r), this.setAttribute && this.setAttribute("class", r || !1 === t ? "" : _.get(this, "__className__") || ""))
            }))
        },
        hasClass: function(e) {
            var t, n, r = 0;
            t = " " + e + " ";
            while (n = this[r++])
                if (1 === n.nodeType && -1 < (" " + Tt(Ct(n)) + " ").indexOf(t)) return !0;
            return !1
        }
    });
    var St = /\r/g;
    ce.fn.extend({
        val: function(n) {
            var r, e, i, t = this[0];
            return arguments.length ? (i = v(n), this.each(function(e) {
                var t;
                1 === this.nodeType && (null == (t = i ? n.call(this, e, ce(this).val()) : n) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = ce.map(t, function(e) {
                    return null == e ? "" : e + ""
                })), (r = ce.valHooks[this.type] || ce.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value") || (this.value = t))
            })) : t ? (r = ce.valHooks[t.type] || ce.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value")) ? e : "string" == typeof(e = t.value) ? e.replace(St, "") : null == e ? "" : e : void 0
        }
    }), ce.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = ce.find.attr(e, "value");
                    return null != t ? t : Tt(ce.text(e))
                }
            },
            select: {
                get: function(e) {
                    var t, n, r, i = e.options,
                        o = e.selectedIndex,
                        a = "select-one" === e.type,
                        s = a ? null : [],
                        u = a ? o + 1 : i.length;
                    for (r = o < 0 ? u : a ? o : 0; r < u; r++)
                        if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !fe(n.parentNode, "optgroup"))) {
                            if (t = ce(n).val(), a) return t;
                            s.push(t)
                        }
                    return s
                },
                set: function(e, t) {
                    var n, r, i = e.options,
                        o = ce.makeArray(t),
                        a = i.length;
                    while (a--)((r = i[a]).selected = -1 < ce.inArray(ce.valHooks.option.get(r), o)) && (n = !0);
                    return n || (e.selectedIndex = -1), o
                }
            }
        }
    }), ce.each(["radio", "checkbox"], function() {
        ce.valHooks[this] = {
            set: function(e, t) {
                if (Array.isArray(t)) return e.checked = -1 < ce.inArray(ce(e).val(), t)
            }
        }, le.checkOn || (ce.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value
        })
    });
    var Et = ie.location,
        jt = {
            guid: Date.now()
        },
        At = /\?/;
    ce.parseXML = function(e) {
        var t, n;
        if (!e || "string" != typeof e) return null;
        try {
            t = (new ie.DOMParser).parseFromString(e, "text/xml")
        } catch (e) {}
        return n = t && t.getElementsByTagName("parsererror")[0], t && !n || ce.error("Invalid XML: " + (n ? ce.map(n.childNodes, function(e) {
            return e.textContent
        }).join("\n") : e)), t
    };
    var Dt = /^(?:focusinfocus|focusoutblur)$/,
        Nt = function(e) {
            e.stopPropagation()
        };
    ce.extend(ce.event, {
        trigger: function(e, t, n, r) {
            var i, o, a, s, u, l, c, f, p = [n || C],
                d = ue.call(e, "type") ? e.type : e,
                h = ue.call(e, "namespace") ? e.namespace.split(".") : [];
            if (o = f = a = n = n || C, 3 !== n.nodeType && 8 !== n.nodeType && !Dt.test(d + ce.event.triggered) && (-1 < d.indexOf(".") && (d = (h = d.split(".")).shift(), h.sort()), u = d.indexOf(":") < 0 && "on" + d, (e = e[ce.expando] ? e : new ce.Event(d, "object" == typeof e && e)).isTrigger = r ? 2 : 3, e.namespace = h.join("."), e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), t = null == t ? [e] : ce.makeArray(t, [e]), c = ce.event.special[d] || {}, r || !c.trigger || !1 !== c.trigger.apply(n, t))) {
                if (!r && !c.noBubble && !y(n)) {
                    for (s = c.delegateType || d, Dt.test(s + d) || (o = o.parentNode); o; o = o.parentNode) p.push(o), a = o;
                    a === (n.ownerDocument || C) && p.push(a.defaultView || a.parentWindow || ie)
                }
                i = 0;
                while ((o = p[i++]) && !e.isPropagationStopped()) f = o, e.type = 1 < i ? s : c.bindType || d, (l = (_.get(o, "events") || Object.create(null))[e.type] && _.get(o, "handle")) && l.apply(o, t), (l = u && o[u]) && l.apply && $(o) && (e.result = l.apply(o, t), !1 === e.result && e.preventDefault());
                return e.type = d, r || e.isDefaultPrevented() || c._default && !1 !== c._default.apply(p.pop(), t) || !$(n) || u && v(n[d]) && !y(n) && ((a = n[u]) && (n[u] = null), ce.event.triggered = d, e.isPropagationStopped() && f.addEventListener(d, Nt), n[d](), e.isPropagationStopped() && f.removeEventListener(d, Nt), ce.event.triggered = void 0, a && (n[u] = a)), e.result
            }
        },
        simulate: function(e, t, n) {
            var r = ce.extend(new ce.Event, n, {
                type: e,
                isSimulated: !0
            });
            ce.event.trigger(r, null, t)
        }
    }), ce.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                ce.event.trigger(e, t, this)
            })
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n) return ce.event.trigger(e, t, n, !0)
        }
    });
    var qt = /\[\]$/,
        Lt = /\r?\n/g,
        Ht = /^(?:submit|button|image|reset|file)$/i,
        Ot = /^(?:input|select|textarea|keygen)/i;

    function Pt(n, e, r, i) {
        var t;
        if (Array.isArray(e)) ce.each(e, function(e, t) {
            r || qt.test(n) ? i(n, t) : Pt(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, i)
        });
        else if (r || "object" !== x(e)) i(n, e);
        else
            for (t in e) Pt(n + "[" + t + "]", e[t], r, i)
    }
    ce.param = function(e, t) {
        var n, r = [],
            i = function(e, t) {
                var n = v(t) ? t() : t;
                r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n)
            };
        if (null == e) return "";
        if (Array.isArray(e) || e.jquery && !ce.isPlainObject(e)) ce.each(e, function() {
            i(this.name, this.value)
        });
        else
            for (n in e) Pt(n, e[n], t, i);
        return r.join("&")
    }, ce.fn.extend({
        serialize: function() {
            return ce.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var e = ce.prop(this, "elements");
                return e ? ce.makeArray(e) : this
            }).filter(function() {
                var e = this.type;
                return this.name && !ce(this).is(":disabled") && Ot.test(this.nodeName) && !Ht.test(e) && (this.checked || !we.test(e))
            }).map(function(e, t) {
                var n = ce(this).val();
                return null == n ? null : Array.isArray(n) ? ce.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(Lt, "\r\n")
                    }
                }) : {
                    name: t.name,
                    value: n.replace(Lt, "\r\n")
                }
            }).get()
        }
    });
    var Mt = /%20/g,
        Rt = /#.*$/,
        It = /([?&])_=[^&]*/,
        Wt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        Ft = /^(?:GET|HEAD)$/,
        $t = /^\/\//,
        Bt = {},
        _t = {},
        zt = "*/".concat("*"),
        Xt = C.createElement("a");

    function Ut(o) {
        return function(e, t) {
            "string" != typeof e && (t = e, e = "*");
            var n, r = 0,
                i = e.toLowerCase().match(D) || [];
            if (v(t))
                while (n = i[r++]) "+" === n[0] ? (n = n.slice(1) || "*", (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t)
        }
    }

    function Vt(t, i, o, a) {
        var s = {},
            u = t === _t;

        function l(e) {
            var r;
            return s[e] = !0, ce.each(t[e] || [], function(e, t) {
                var n = t(i, o, a);
                return "string" != typeof n || u || s[n] ? u ? !(r = n) : void 0 : (i.dataTypes.unshift(n), l(n), !1)
            }), r
        }
        return l(i.dataTypes[0]) || !s["*"] && l("*")
    }

    function Gt(e, t) {
        var n, r, i = ce.ajaxSettings.flatOptions || {};
        for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
        return r && ce.extend(!0, e, r), e
    }
    Xt.href = Et.href, ce.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Et.href,
            type: "GET",
            isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": zt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": ce.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(e, t) {
            return t ? Gt(Gt(e, ce.ajaxSettings), t) : Gt(ce.ajaxSettings, e)
        },
        ajaxPrefilter: Ut(Bt),
        ajaxTransport: Ut(_t),
        ajax: function(e, t) {
            "object" == typeof e && (t = e, e = void 0), t = t || {};
            var c, f, p, n, d, r, h, g, i, o, v = ce.ajaxSetup({}, t),
                y = v.context || v,
                m = v.context && (y.nodeType || y.jquery) ? ce(y) : ce.event,
                x = ce.Deferred(),
                b = ce.Callbacks("once memory"),
                w = v.statusCode || {},
                a = {},
                s = {},
                u = "canceled",
                T = {
                    readyState: 0,
                    getResponseHeader: function(e) {
                        var t;
                        if (h) {
                            if (!n) {
                                n = {};
                                while (t = Wt.exec(p)) n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2])
                            }
                            t = n[e.toLowerCase() + " "]
                        }
                        return null == t ? null : t.join(", ")
                    },
                    getAllResponseHeaders: function() {
                        return h ? p : null
                    },
                    setRequestHeader: function(e, t) {
                        return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this
                    },
                    overrideMimeType: function(e) {
                        return null == h && (v.mimeType = e), this
                    },
                    statusCode: function(e) {
                        var t;
                        if (e)
                            if (h) T.always(e[T.status]);
                            else
                                for (t in e) w[t] = [w[t], e[t]];
                        return this
                    },
                    abort: function(e) {
                        var t = e || u;
                        return c && c.abort(t), l(0, t), this
                    }
                };
            if (x.promise(T), v.url = ((e || v.url || Et.href) + "").replace($t, Et.protocol + "//"), v.type = t.method || t.type || v.method || v.type, v.dataTypes = (v.dataType || "*").toLowerCase().match(D) || [""], null == v.crossDomain) {
                r = C.createElement("a");
                try {
                    r.href = v.url, r.href = r.href, v.crossDomain = Xt.protocol + "//" + Xt.host != r.protocol + "//" + r.host
                } catch (e) {
                    v.crossDomain = !0
                }
            }
            if (v.data && v.processData && "string" != typeof v.data && (v.data = ce.param(v.data, v.traditional)), Vt(Bt, v, t, T), h) return T;
            for (i in (g = ce.event && v.global) && 0 == ce.active++ && ce.event.trigger("ajaxStart"), v.type = v.type.toUpperCase(), v.hasContent = !Ft.test(v.type), f = v.url.replace(Rt, ""), v.hasContent ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(Mt, "+")) : (o = v.url.slice(f.length), v.data && (v.processData || "string" == typeof v.data) && (f += (At.test(f) ? "&" : "?") + v.data, delete v.data), !1 === v.cache && (f = f.replace(It, "$1"), o = (At.test(f) ? "&" : "?") + "_=" + jt.guid++ + o), v.url = f + o), v.ifModified && (ce.lastModified[f] && T.setRequestHeader("If-Modified-Since", ce.lastModified[f]), ce.etag[f] && T.setRequestHeader("If-None-Match", ce.etag[f])), (v.data && v.hasContent && !1 !== v.contentType || t.contentType) && T.setRequestHeader("Content-Type", v.contentType), T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + zt + "; q=0.01" : "") : v.accepts["*"]), v.headers) T.setRequestHeader(i, v.headers[i]);
            if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h)) return T.abort();
            if (u = "abort", b.add(v.complete), T.done(v.success), T.fail(v.error), c = Vt(_t, v, t, T)) {
                if (T.readyState = 1, g && m.trigger("ajaxSend", [T, v]), h) return T;
                v.async && 0 < v.timeout && (d = ie.setTimeout(function() {
                    T.abort("timeout")
                }, v.timeout));
                try {
                    h = !1, c.send(a, l)
                } catch (e) {
                    if (h) throw e;
                    l(-1, e)
                }
            } else l(-1, "No Transport");

            function l(e, t, n, r) {
                var i, o, a, s, u, l = t;
                h || (h = !0, d && ie.clearTimeout(d), c = void 0, p = r || "", T.readyState = 0 < e ? 4 : 0, i = 200 <= e && e < 300 || 304 === e, n && (s = function(e, t, n) {
                    var r, i, o, a, s = e.contents,
                        u = e.dataTypes;
                    while ("*" === u[0]) u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                    if (r)
                        for (i in s)
                            if (s[i] && s[i].test(r)) {
                                u.unshift(i);
                                break
                            }
                    if (u[0] in n) o = u[0];
                    else {
                        for (i in n) {
                            if (!u[0] || e.converters[i + " " + u[0]]) {
                                o = i;
                                break
                            }
                            a || (a = i)
                        }
                        o = o || a
                    }
                    if (o) return o !== u[0] && u.unshift(o), n[o]
                }(v, T, n)), !i && -1 < ce.inArray("script", v.dataTypes) && ce.inArray("json", v.dataTypes) < 0 && (v.converters["text script"] = function() {}), s = function(e, t, n, r) {
                    var i, o, a, s, u, l = {},
                        c = e.dataTypes.slice();
                    if (c[1])
                        for (a in e.converters) l[a.toLowerCase()] = e.converters[a];
                    o = c.shift();
                    while (o)
                        if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift())
                            if ("*" === o) o = u;
                            else if ("*" !== u && u !== o) {
                        if (!(a = l[u + " " + o] || l["* " + o]))
                            for (i in l)
                                if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                                    !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1]));
                                    break
                                }
                        if (!0 !== a)
                            if (a && e["throws"]) t = a(t);
                            else try {
                                t = a(t)
                            } catch (e) {
                                return {
                                    state: "parsererror",
                                    error: a ? e : "No conversion from " + u + " to " + o
                                }
                            }
                    }
                    return {
                        state: "success",
                        data: t
                    }
                }(v, s, T, i), i ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (ce.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (ce.etag[f] = u)), 204 === e || "HEAD" === v.type ? l = "nocontent" : 304 === e ? l = "notmodified" : (l = s.state, o = s.data, i = !(a = s.error))) : (a = l, !e && l || (l = "error", e < 0 && (e = 0))), T.status = e, T.statusText = (t || l) + "", i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]), T.statusCode(w), w = void 0, g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]), b.fireWith(y, [T, l]), g && (m.trigger("ajaxComplete", [T, v]), --ce.active || ce.event.trigger("ajaxStop")))
            }
            return T
        },
        getJSON: function(e, t, n) {
            return ce.get(e, t, n, "json")
        },
        getScript: function(e, t) {
            return ce.get(e, void 0, t, "script")
        }
    }), ce.each(["get", "post"], function(e, i) {
        ce[i] = function(e, t, n, r) {
            return v(t) && (r = r || n, n = t, t = void 0), ce.ajax(ce.extend({
                url: e,
                type: i,
                dataType: r,
                data: t,
                success: n
            }, ce.isPlainObject(e) && e))
        }
    }), ce.ajaxPrefilter(function(e) {
        var t;
        for (t in e.headers) "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "")
    }), ce._evalUrl = function(e, t, n) {
        return ce.ajax({
            url: e,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            converters: {
                "text script": function() {}
            },
            dataFilter: function(e) {
                ce.globalEval(e, t, n)
            }
        })
    }, ce.fn.extend({
        wrapAll: function(e) {
            var t;
            return this[0] && (v(e) && (e = e.call(this[0])), t = ce(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function() {
                var e = this;
                while (e.firstElementChild) e = e.firstElementChild;
                return e
            }).append(this)), this
        },
        wrapInner: function(n) {
            return v(n) ? this.each(function(e) {
                ce(this).wrapInner(n.call(this, e))
            }) : this.each(function() {
                var e = ce(this),
                    t = e.contents();
                t.length ? t.wrapAll(n) : e.append(n)
            })
        },
        wrap: function(t) {
            var n = v(t);
            return this.each(function(e) {
                ce(this).wrapAll(n ? t.call(this, e) : t)
            })
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                ce(this).replaceWith(this.childNodes)
            }), this
        }
    }), ce.expr.pseudos.hidden = function(e) {
        return !ce.expr.pseudos.visible(e)
    }, ce.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
    }, ce.ajaxSettings.xhr = function() {
        try {
            return new ie.XMLHttpRequest
        } catch (e) {}
    };
    var Yt = {
            0: 200,
            1223: 204
        },
        Qt = ce.ajaxSettings.xhr();
    le.cors = !!Qt && "withCredentials" in Qt, le.ajax = Qt = !!Qt, ce.ajaxTransport(function(i) {
        var o, a;
        if (le.cors || Qt && !i.crossDomain) return {
            send: function(e, t) {
                var n, r = i.xhr();
                if (r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields)
                    for (n in i.xhrFields) r[n] = i.xhrFields[n];
                for (n in i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e) r.setRequestHeader(n, e[n]);
                o = function(e) {
                    return function() {
                        o && (o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, "abort" === e ? r.abort() : "error" === e ? "number" != typeof r.status ? t(0, "error") : t(r.status, r.statusText) : t(Yt[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? {
                            binary: r.response
                        } : {
                            text: r.responseText
                        }, r.getAllResponseHeaders()))
                    }
                }, r.onload = o(), a = r.onerror = r.ontimeout = o("error"), void 0 !== r.onabort ? r.onabort = a : r.onreadystatechange = function() {
                    4 === r.readyState && ie.setTimeout(function() {
                        o && a()
                    })
                }, o = o("abort");
                try {
                    r.send(i.hasContent && i.data || null)
                } catch (e) {
                    if (o) throw e
                }
            },
            abort: function() {
                o && o()
            }
        }
    }), ce.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1)
    }), ce.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return ce.globalEval(e), e
            }
        }
    }), ce.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET")
    }), ce.ajaxTransport("script", function(n) {
        var r, i;
        if (n.crossDomain || n.scriptAttrs) return {
            send: function(e, t) {
                r = ce("<script>").attr(n.scriptAttrs || {}).prop({
                    charset: n.scriptCharset,
                    src: n.url
                }).on("load error", i = function(e) {
                    r.remove(), i = null, e && t("error" === e.type ? 404 : 200, e.type)
                }), C.head.appendChild(r[0])
            },
            abort: function() {
                i && i()
            }
        }
    });
    var Jt, Kt = [],
        Zt = /(=)\?(?=&|$)|\?\?/;
    ce.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Kt.pop() || ce.expando + "_" + jt.guid++;
            return this[e] = !0, e
        }
    }), ce.ajaxPrefilter("json jsonp", function(e, t, n) {
        var r, i, o, a = !1 !== e.jsonp && (Zt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Zt.test(e.data) && "data");
        if (a || "jsonp" === e.dataTypes[0]) return r = e.jsonpCallback = v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, a ? e[a] = e[a].replace(Zt, "$1" + r) : !1 !== e.jsonp && (e.url += (At.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function() {
            return o || ce.error(r + " was not called"), o[0]
        }, e.dataTypes[0] = "json", i = ie[r], ie[r] = function() {
            o = arguments
        }, n.always(function() {
            void 0 === i ? ce(ie).removeProp(r) : ie[r] = i, e[r] && (e.jsonpCallback = t.jsonpCallback, Kt.push(r)), o && v(i) && i(o[0]), o = i = void 0
        }), "script"
    }), le.createHTMLDocument = ((Jt = C.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === Jt.childNodes.length), ce.parseHTML = function(e, t, n) {
        return "string" != typeof e ? [] : ("boolean" == typeof t && (n = t, t = !1), t || (le.createHTMLDocument ? ((r = (t = C.implementation.createHTMLDocument("")).createElement("base")).href = C.location.href, t.head.appendChild(r)) : t = C), o = !n && [], (i = w.exec(e)) ? [t.createElement(i[1])] : (i = Ae([e], t, o), o && o.length && ce(o).remove(), ce.merge([], i.childNodes)));
        var r, i, o
    }, ce.fn.load = function(e, t, n) {
        var r, i, o, a = this,
            s = e.indexOf(" ");
        return -1 < s && (r = Tt(e.slice(s)), e = e.slice(0, s)), v(t) ? (n = t, t = void 0) : t && "object" == typeof t && (i = "POST"), 0 < a.length && ce.ajax({
            url: e,
            type: i || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            o = arguments, a.html(r ? ce("<div>").append(ce.parseHTML(e)).find(r) : e)
        }).always(n && function(e, t) {
            a.each(function() {
                n.apply(this, o || [e.responseText, t, e])
            })
        }), this
    }, ce.expr.pseudos.animated = function(t) {
        return ce.grep(ce.timers, function(e) {
            return t === e.elem
        }).length
    }, ce.offset = {
        setOffset: function(e, t, n) {
            var r, i, o, a, s, u, l = ce.css(e, "position"),
                c = ce(e),
                f = {};
            "static" === l && (e.style.position = "relative"), s = c.offset(), o = ce.css(e, "top"), u = ce.css(e, "left"), ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? (a = (r = c.position()).top, i = r.left) : (a = parseFloat(o) || 0, i = parseFloat(u) || 0), v(t) && (t = t.call(e, n, ce.extend({}, s))), null != t.top && (f.top = t.top - s.top + a), null != t.left && (f.left = t.left - s.left + i), "using" in t ? t.using.call(e, f) : c.css(f)
        }
    }, ce.fn.extend({
        offset: function(t) {
            if (arguments.length) return void 0 === t ? this : this.each(function(e) {
                ce.offset.setOffset(this, t, e)
            });
            var e, n, r = this[0];
            return r ? r.getClientRects().length ? (e = r.getBoundingClientRect(), n = r.ownerDocument.defaultView, {
                top: e.top + n.pageYOffset,
                left: e.left + n.pageXOffset
            }) : {
                top: 0,
                left: 0
            } : void 0
        },
        position: function() {
            if (this[0]) {
                var e, t, n, r = this[0],
                    i = {
                        top: 0,
                        left: 0
                    };
                if ("fixed" === ce.css(r, "position")) t = r.getBoundingClientRect();
                else {
                    t = this.offset(), n = r.ownerDocument, e = r.offsetParent || n.documentElement;
                    while (e && (e === n.body || e === n.documentElement) && "static" === ce.css(e, "position")) e = e.parentNode;
                    e && e !== r && 1 === e.nodeType && ((i = ce(e).offset()).top += ce.css(e, "borderTopWidth", !0), i.left += ce.css(e, "borderLeftWidth", !0))
                }
                return {
                    top: t.top - i.top - ce.css(r, "marginTop", !0),
                    left: t.left - i.left - ce.css(r, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var e = this.offsetParent;
                while (e && "static" === ce.css(e, "position")) e = e.offsetParent;
                return e || J
            })
        }
    }), ce.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(t, i) {
        var o = "pageYOffset" === i;
        ce.fn[t] = function(e) {
            return M(this, function(e, t, n) {
                var r;
                if (y(e) ? r = e : 9 === e.nodeType && (r = e.defaultView), void 0 === n) return r ? r[i] : e[t];
                r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : e[t] = n
            }, t, e, arguments.length)
        }
    }), ce.each(["top", "left"], function(e, n) {
        ce.cssHooks[n] = Ye(le.pixelPosition, function(e, t) {
            if (t) return t = Ge(e, n), _e.test(t) ? ce(e).position()[n] + "px" : t
        })
    }), ce.each({
        Height: "height",
        Width: "width"
    }, function(a, s) {
        ce.each({
            padding: "inner" + a,
            content: s,
            "": "outer" + a
        }, function(r, o) {
            ce.fn[o] = function(e, t) {
                var n = arguments.length && (r || "boolean" != typeof e),
                    i = r || (!0 === e || !0 === t ? "margin" : "border");
                return M(this, function(e, t, n) {
                    var r;
                    return y(e) ? 0 === o.indexOf("outer") ? e["inner" + a] : e.document.documentElement["client" + a] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a])) : void 0 === n ? ce.css(e, t, i) : ce.style(e, t, n, i)
                }, s, n ? e : void 0, n)
            }
        })
    }), ce.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(e, t) {
        ce.fn[t] = function(e) {
            return this.on(t, e)
        }
    }), ce.fn.extend({
        bind: function(e, t, n) {
            return this.on(e, null, t, n)
        },
        unbind: function(e, t) {
            return this.off(e, null, t)
        },
        delegate: function(e, t, n, r) {
            return this.on(t, e, n, r)
        },
        undelegate: function(e, t, n) {
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
        },
        hover: function(e, t) {
            return this.on("mouseenter", e).on("mouseleave", t || e)
        }
    }), ce.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, n) {
        ce.fn[n] = function(e, t) {
            return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n)
        }
    });
    var en = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    ce.proxy = function(e, t) {
        var n, r, i;
        if ("string" == typeof t && (n = e[t], t = e, e = n), v(e)) return r = ae.call(arguments, 2), (i = function() {
            return e.apply(t || this, r.concat(ae.call(arguments)))
        }).guid = e.guid = e.guid || ce.guid++, i
    }, ce.holdReady = function(e) {
        e ? ce.readyWait++ : ce.ready(!0)
    }, ce.isArray = Array.isArray, ce.parseJSON = JSON.parse, ce.nodeName = fe, ce.isFunction = v, ce.isWindow = y, ce.camelCase = F, ce.type = x, ce.now = Date.now, ce.isNumeric = function(e) {
        var t = ce.type(e);
        return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
    }, ce.trim = function(e) {
        return null == e ? "" : (e + "").replace(en, "$1")
    }, "function" == typeof define && define.amd && define("jquery", [], function() {
        return ce
    });
    var tn = ie.jQuery,
        nn = ie.$;
    return ce.noConflict = function(e) {
        return ie.$ === ce && (ie.$ = nn), e && ie.jQuery === ce && (ie.jQuery = tn), ce
    }, "undefined" == typeof e && (ie.jQuery = ie.$ = ce), ce
});
/* jshint node: true */

/**
 * Unobtrusive scripting adapter for jQuery
 * https://github.com/rails/jquery-ujs
 *
 * Requires jQuery 1.8.0 or later.
 *
 * Released under the MIT license
 *
 */

(function() {
    'use strict';

    var jqueryUjsInit = function($, undefined) {

        // Cut down on the number of issues from people inadvertently including jquery_ujs twice
        // by detecting and raising an error when it happens.
        if ($.rails !== undefined) {
            $.error('jquery-ujs has already been loaded!');
        }

        // Shorthand to make it a little easier to call public rails functions from within rails.js
        var rails;
        var $document = $(document);

        $.rails = rails = {
            // Link elements bound by jquery-ujs
            linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',

            // Button elements bound by jquery-ujs
            buttonClickSelector: 'button[data-remote]:not([form]):not(form button), button[data-confirm]:not([form]):not(form button)',

            // Select elements bound by jquery-ujs
            inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',

            // Form elements bound by jquery-ujs
            formSubmitSelector: 'form:not([data-turbo=true])',

            // Form input elements bound by jquery-ujs
            formInputClickSelector: 'form:not([data-turbo=true]) input[type=submit], form:not([data-turbo=true]) input[type=image], form:not([data-turbo=true]) button[type=submit], form:not([data-turbo=true]) button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',

            // Form input elements disabled during form submission
            disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',

            // Form input elements re-enabled after form submission
            enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',

            // Form required input elements
            requiredInputSelector: 'input[name][required]:not([disabled]), textarea[name][required]:not([disabled])',

            // Form file input elements
            fileInputSelector: 'input[name][type=file]:not([disabled])',

            // Link onClick disable selector with possible reenable after remote submission
            linkDisableSelector: 'a[data-disable-with], a[data-disable]',

            // Button onClick disable selector with possible reenable after remote submission
            buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',

            // Up-to-date Cross-Site Request Forgery token
            csrfToken: function() {
                return $('meta[name=csrf-token]').attr('content');
            },

            // URL param that must contain the CSRF token
            csrfParam: function() {
                return $('meta[name=csrf-param]').attr('content');
            },

            // Make sure that every Ajax request sends the CSRF token
            CSRFProtection: function(xhr) {
                var token = rails.csrfToken();
                if (token) xhr.setRequestHeader('X-CSRF-Token', token);
            },

            // Make sure that all forms have actual up-to-date tokens (cached forms contain old ones)
            refreshCSRFTokens: function() {
                $('form input[name="' + rails.csrfParam() + '"]').val(rails.csrfToken());
            },

            // Triggers an event on an element and returns false if the event result is false
            fire: function(obj, name, data) {
                var event = $.Event(name);
                obj.trigger(event, data);
                return event.result !== false;
            },

            // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm
            confirm: function(message) {
                return confirm(message);
            },

            // Default ajax function, may be overridden with custom function in $.rails.ajax
            ajax: function(options) {
                return $.ajax(options);
            },

            // Default way to get an element's href. May be overridden at $.rails.href.
            href: function(element) {
                return element[0].href;
            },

            // Checks "data-remote" if true to handle the request through a XHR request.
            isRemote: function(element) {
                return element.data('remote') !== undefined && element.data('remote') !== false;
            },

            // Submits "remote" forms and links with ajax
            handleRemote: function(element) {
                var method, url, data, withCredentials, dataType, options;

                if (rails.fire(element, 'ajax:before')) {
                    withCredentials = element.data('with-credentials') || null;
                    dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);

                    if (element.is('form')) {
                        method = element.data('ujs:submit-button-formmethod') || element.attr('method');
                        url = element.data('ujs:submit-button-formaction') || element.attr('action');
                        data = $(element[0]).serializeArray();
                        // memoized value from clicked submit button
                        var button = element.data('ujs:submit-button');
                        if (button) {
                            data.push(button);
                            element.data('ujs:submit-button', null);
                        }
                        element.data('ujs:submit-button-formmethod', null);
                        element.data('ujs:submit-button-formaction', null);
                    } else if (element.is(rails.inputChangeSelector)) {
                        method = element.data('method');
                        url = element.data('url');
                        data = element.serialize();
                        if (element.data('params')) data = data + '&' + element.data('params');
                    } else if (element.is(rails.buttonClickSelector)) {
                        method = element.data('method') || 'get';
                        url = element.data('url');
                        data = element.serialize();
                        if (element.data('params')) data = data + '&' + element.data('params');
                    } else {
                        method = element.data('method');
                        url = rails.href(element);
                        data = element.data('params') || null;
                    }

                    options = {
                        type: method || 'GET',
                        data: data,
                        dataType: dataType,
                        // stopping the "ajax:beforeSend" event will cancel the ajax request
                        beforeSend: function(xhr, settings) {
                            if (settings.dataType === undefined) {
                                xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
                            }
                            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {
                                element.trigger('ajax:send', xhr);
                            } else {
                                return false;
                            }
                        },
                        success: function(data, status, xhr) {
                            element.trigger('ajax:success', [data, status, xhr]);
                        },
                        complete: function(xhr, status) {
                            element.trigger('ajax:complete', [xhr, status]);
                        },
                        error: function(xhr, status, error) {
                            element.trigger('ajax:error', [xhr, status, error]);
                        },
                        crossDomain: rails.isCrossDomain(url)
                    };

                    // There is no withCredentials for IE6-8 when
                    // "Enable native XMLHTTP support" is disabled
                    if (withCredentials) {
                        options.xhrFields = {
                            withCredentials: withCredentials
                        };
                    }

                    // Only pass url to `ajax` options if not blank
                    if (url) {
                        options.url = url;
                    }

                    return rails.ajax(options);
                } else {
                    return false;
                }
            },

            // Determines if the request is a cross domain request.
            isCrossDomain: function(url) {
                var originAnchor = document.createElement('a');
                originAnchor.href = location.href;
                var urlAnchor = document.createElement('a');

                try {
                    urlAnchor.href = url;
                    // This is a workaround to a IE bug.
                    urlAnchor.href = urlAnchor.href;

                    // If URL protocol is false or is a string containing a single colon
                    // *and* host are false, assume it is not a cross-domain request
                    // (should only be the case for IE7 and IE compatibility mode).
                    // Otherwise, evaluate protocol and host of the URL against the origin
                    // protocol and host.
                    return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) ||
                        (originAnchor.protocol + '//' + originAnchor.host ===
                            urlAnchor.protocol + '//' + urlAnchor.host));
                } catch (e) {
                    // If there is an error parsing the URL, assume it is crossDomain.
                    return true;
                }
            },

            // Handles "data-method" on links such as:
            // <a href="/users/5" data-method="delete" rel="nofollow" data-confirm="Are you sure?">Delete</a>
            handleMethod: function(link) {
                var href = rails.href(link),
                    method = link.data('method'),
                    target = link.attr('target'),
                    csrfToken = rails.csrfToken(),
                    csrfParam = rails.csrfParam(),
                    form = $('<form method="post" action="' + href + '"></form>'),
                    metadataInput = '<input name="_method" value="' + method + '" type="hidden" />';

                if (csrfParam !== undefined && csrfToken !== undefined && !rails.isCrossDomain(href)) {
                    metadataInput += '<input name="' + csrfParam + '" value="' + csrfToken + '" type="hidden" />';
                }

                if (target) {
                    form.attr('target', target);
                }

                form.hide().append(metadataInput).appendTo('body');
                form.submit();
            },

            // Helper function that returns form elements that match the specified CSS selector
            // If form is actually a "form" element this will return associated elements outside the from that have
            // the html form attribute set
            formElements: function(form, selector) {
                return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);
            },

            /* Disables form elements:
              - Caches element value in 'ujs:enable-with' data store
              - Replaces element text with value of 'data-disable-with' attribute
              - Sets disabled property to true
            */
            disableFormElements: function(form) {
                rails.formElements(form, rails.disableSelector).each(function() {
                    rails.disableFormElement($(this));
                });
            },

            disableFormElement: function(element) {
                var method, replacement;

                method = element.is('button') ? 'html' : 'val';
                replacement = element.data('disable-with');

                if (replacement !== undefined) {
                    element.data('ujs:enable-with', element[method]());
                    element[method](replacement);
                }

                element.prop('disabled', true);
                element.data('ujs:disabled', true);
            },

            /* Re-enables disabled form elements:
              - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)
              - Sets disabled property to false
            */
            enableFormElements: function(form) {
                rails.formElements(form, rails.enableSelector).each(function() {
                    rails.enableFormElement($(this));
                });
            },

            enableFormElement: function(element) {
                var method = element.is('button') ? 'html' : 'val';
                if (element.data('ujs:enable-with') !== undefined) {
                    element[method](element.data('ujs:enable-with'));
                    element.removeData('ujs:enable-with'); // clean up cache
                }
                element.prop('disabled', false);
                element.removeData('ujs:disabled');
            },

            /* For 'data-confirm' attribute:
               - Fires `confirm` event
               - Shows the confirmation dialog
               - Fires the `confirm:complete` event

               Returns `true` if no function stops the chain and user chose yes; `false` otherwise.
               Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.
               Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function
               return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.
            */
            allowAction: function(element) {
                var message = element.data('confirm'),
                    answer = false,
                    callback;
                if (!message) {
                    return true;
                }

                if (rails.fire(element, 'confirm')) {
                    try {
                        answer = rails.confirm(message);
                    } catch (e) {
                        (console.error || console.log).call(console, e.stack || e);
                    }
                    callback = rails.fire(element, 'confirm:complete', [answer]);
                }
                return answer && callback;
            },

            // Helper function which checks for blank inputs in a form that match the specified CSS selector
            blankInputs: function(form, specifiedSelector, nonBlank) {
                var foundInputs = $(),
                    input,
                    valueToCheck,
                    radiosForNameWithNoneSelected,
                    radioName,
                    selector = specifiedSelector || 'input,textarea',
                    requiredInputs = form.find(selector),
                    checkedRadioButtonNames = {};

                requiredInputs.each(function() {
                    input = $(this);
                    if (input.is('input[type=radio]')) {

                        // Don't count unchecked required radio as blank if other radio with same name is checked,
                        // regardless of whether same-name radio input has required attribute or not. The spec
                        // states https://www.w3.org/TR/html5/forms.html#the-required-attribute
                        radioName = input.attr('name');

                        // Skip if we've already seen the radio with this name.
                        if (!checkedRadioButtonNames[radioName]) {

                            // If none checked
                            if (form.find('input[type=radio]:checked[name="' + radioName + '"]').length === 0) {
                                radiosForNameWithNoneSelected = form.find(
                                    'input[type=radio][name="' + radioName + '"]');
                                foundInputs = foundInputs.add(radiosForNameWithNoneSelected);
                            }

                            // We only need to check each name once.
                            checkedRadioButtonNames[radioName] = radioName;
                        }
                    } else {
                        valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : !!input.val();
                        if (valueToCheck === nonBlank) {
                            foundInputs = foundInputs.add(input);
                        }
                    }
                });
                return foundInputs.length ? foundInputs : false;
            },

            // Helper function which checks for non-blank inputs in a form that match the specified CSS selector
            nonBlankInputs: function(form, specifiedSelector) {
                return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank
            },

            // Helper function, needed to provide consistent behavior in IE
            stopEverything: function(e) {
                $(e.target).trigger('ujs:everythingStopped');
                e.stopImmediatePropagation();
                return false;
            },

            //  Replace element's html with the 'data-disable-with' after storing original html
            //  and prevent clicking on it
            disableElement: function(element) {
                var replacement = element.data('disable-with');

                if (replacement !== undefined) {
                    element.data('ujs:enable-with', element.html()); // store enabled state
                    element.html(replacement);
                }

                element.on('click.railsDisable', function(e) { // prevent further clicking
                    return rails.stopEverything(e);
                });
                element.data('ujs:disabled', true);
            },

            // Restore element to its original state which was disabled by 'disableElement' above
            enableElement: function(element) {
                if (element.data('ujs:enable-with') !== undefined) {
                    element.html(element.data('ujs:enable-with')); // set to old enabled state
                    element.removeData('ujs:enable-with'); // clean up cache
                }
                element.off('click.railsDisable'); // enable element
                element.removeData('ujs:disabled');
            }
        };

        if (rails.fire($document, 'rails:attachBindings')) {

            $.ajaxPrefilter(function(options, originalOptions, xhr) {
                if (!options.crossDomain) {
                    rails.CSRFProtection(xhr);
                }
            });

            // This event works the same as the load event, except that it fires every
            // time the page is loaded.
            //
            // See https://github.com/rails/jquery-ujs/issues/357
            // See https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching
            $(window).on('pageshow.rails', function() {
                $($.rails.enableSelector).each(function() {
                    var element = $(this);

                    if (element.data('ujs:disabled')) {
                        $.rails.enableFormElement(element);
                    }
                });

                $($.rails.linkDisableSelector).each(function() {
                    var element = $(this);

                    if (element.data('ujs:disabled')) {
                        $.rails.enableElement(element);
                    }
                });
            });

            $document.on('ajax:complete', rails.linkDisableSelector, function() {
                rails.enableElement($(this));
            });

            $document.on('ajax:complete', rails.buttonDisableSelector, function() {
                rails.enableFormElement($(this));
            });

            $document.on('click.rails', rails.linkClickSelector, function(e) {
                var link = $(this),
                    method = link.data('method'),
                    data = link.data('params'),
                    metaClick = e.metaKey || e.ctrlKey;
                if (!rails.allowAction(link)) return rails.stopEverything(e);

                if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);

                if (rails.isRemote(link)) {
                    if (metaClick && (!method || method === 'GET') && !data) {
                        return true;
                    }

                    var handleRemote = rails.handleRemote(link);
                    // Response from rails.handleRemote() will either be false or a deferred object promise.
                    if (handleRemote === false) {
                        rails.enableElement(link);
                    } else {
                        handleRemote.fail(function() {
                            rails.enableElement(link);
                        });
                    }
                    return false;

                } else if (method) {
                    rails.handleMethod(link);
                    return false;
                }
            });

            $document.on('click.rails', rails.buttonClickSelector, function(e) {
                var button = $(this);

                if (!rails.allowAction(button) || !rails.isRemote(button)) return rails.stopEverything(e);

                if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);

                var handleRemote = rails.handleRemote(button);
                // Response from rails.handleRemote() will either be false or a deferred object promise.
                if (handleRemote === false) {
                    rails.enableFormElement(button);
                } else {
                    handleRemote.fail(function() {
                        rails.enableFormElement(button);
                    });
                }
                return false;
            });

            $document.on('change.rails', rails.inputChangeSelector, function(e) {
                var link = $(this);
                if (!rails.allowAction(link) || !rails.isRemote(link)) return rails.stopEverything(e);

                rails.handleRemote(link);
                return false;
            });

            $document.on('submit.rails', rails.formSubmitSelector, function(e) {
                var form = $(this),
                    remote = rails.isRemote(form),
                    blankRequiredInputs,
                    nonBlankFileInputs;

                if (!rails.allowAction(form)) return rails.stopEverything(e);

                // Skip other logic when required values are missing or file upload is present
                if (form.attr('novalidate') === undefined) {
                    if (form.data('ujs:formnovalidate-button') === undefined) {
                        blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector, false);
                        if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {
                            return rails.stopEverything(e);
                        }
                    } else {
                        // Clear the formnovalidate in case the next button click is not on a formnovalidate button
                        // Not strictly necessary to do here, since it is also reset on each button click, but just to be certain
                        form.data('ujs:formnovalidate-button', undefined);
                    }
                }

                if (remote) {
                    nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);
                    if (nonBlankFileInputs) {
                        // Slight timeout so that the submit button gets properly serialized
                        // (make it easy for event handler to serialize form without disabled values)
                        setTimeout(function() {
                            rails.disableFormElements(form);
                        }, 13);
                        var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);

                        // Re-enable form elements if event bindings return false (canceling normal form submission)
                        if (!aborted) {
                            setTimeout(function() {
                                rails.enableFormElements(form);
                            }, 13);
                        }

                        return aborted;
                    }

                    rails.handleRemote(form);
                    return false;

                } else {
                    // Slight timeout so that the submit button gets properly serialized
                    setTimeout(function() {
                        rails.disableFormElements(form);
                    }, 13);
                }
            });

            $document.on('click.rails', rails.formInputClickSelector, function(event) {
                var button = $(this);

                if (!rails.allowAction(button)) return rails.stopEverything(event);

                // Register the pressed submit button
                var name = button.attr('name'),
                    data = name ? {
                        name: name,
                        value: button.val()
                    } : null;

                var form = button.closest('form');
                if (form.length === 0) {
                    form = $('#' + button.attr('form'));
                }
                form.data('ujs:submit-button', data);

                // Save attributes from button
                form.data('ujs:formnovalidate-button', button.attr('formnovalidate'));
                form.data('ujs:submit-button-formaction', button.attr('formaction'));
                form.data('ujs:submit-button-formmethod', button.attr('formmethod'));
            });

            $document.on('ajax:send.rails', rails.formSubmitSelector, function(event) {
                if (this === event.target) rails.disableFormElements($(this));
            });

            $document.on('ajax:complete.rails', rails.formSubmitSelector, function(event) {
                if (this === event.target) rails.enableFormElements($(this));
            });

            $(function() {
                rails.refreshCSRFTokens();
            });
        }

    };

    if (window.jQuery) {
        jqueryUjsInit(jQuery);
    } else if (typeof exports === 'object' && typeof module === 'object') {
        module.exports = jqueryUjsInit;
    }
})();
(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.ui = $.ui || {};

    return $.ui.version = "1.13.0";

});


/*!
 * jQuery UI :data 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: :data Selector
//>>group: Core
//>>description: Selects elements which have data stored under the specified key.
//>>docs: http://api.jqueryui.com/data-selector/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.extend($.expr.pseudos, {
        data: $.expr.createPseudo ?
            $.expr.createPseudo(function(dataName) {
                return function(elem) {
                    return !!$.data(elem, dataName);
                };
            }) :

            // Support: jQuery <1.8
            function(elem, i, match) {
                return !!$.data(elem, match[3]);
            }
    });
});


/*!
 * jQuery UI Disable Selection 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: disableSelection
//>>group: Core
//>>description: Disable selection of text content within the set of matched elements.
//>>docs: http://api.jqueryui.com/disableSelection/

// This file is deprecated
(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.fn.extend({
        disableSelection: (function() {
            var eventType = "onselectstart" in document.createElement("div") ?
                "selectstart" :
                "mousedown";

            return function() {
                return this.on(eventType + ".ui-disableSelection", function(event) {
                    event.preventDefault();
                });
            };
        })(),

        enableSelection: function() {
            return this.off(".ui-disableSelection");
        }
    });

});


/*!
 * jQuery UI Focusable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: :focusable Selector
//>>group: Core
//>>description: Selects elements which can be focused.
//>>docs: http://api.jqueryui.com/focusable-selector/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    // Selectors
    $.ui.focusable = function(element, hasTabindex) {
        var map, mapName, img, focusableIfVisible, fieldset,
            nodeName = element.nodeName.toLowerCase();

        if ("area" === nodeName) {
            map = element.parentNode;
            mapName = map.name;
            if (!element.href || !mapName || map.nodeName.toLowerCase() !== "map") {
                return false;
            }
            img = $("img[usemap='#" + mapName + "']");
            return img.length > 0 && img.is(":visible");
        }

        if (/^(input|select|textarea|button|object)$/.test(nodeName)) {
            focusableIfVisible = !element.disabled;

            if (focusableIfVisible) {

                // Form controls within a disabled fieldset are disabled.
                // However, controls within the fieldset's legend do not get disabled.
                // Since controls generally aren't placed inside legends, we skip
                // this portion of the check.
                fieldset = $(element).closest("fieldset")[0];
                if (fieldset) {
                    focusableIfVisible = !fieldset.disabled;
                }
            }
        } else if ("a" === nodeName) {
            focusableIfVisible = element.href || hasTabindex;
        } else {
            focusableIfVisible = hasTabindex;
        }

        return focusableIfVisible && $(element).is(":visible") && visible($(element));
    };

    // Support: IE 8 only
    // IE 8 doesn't resolve inherit to visible/hidden for computed values
    function visible(element) {
        var visibility = element.css("visibility");
        while (visibility === "inherit") {
            element = element.parent();
            visibility = element.css("visibility");
        }
        return visibility === "visible";
    }

    $.extend($.expr.pseudos, {
        focusable: function(element) {
            return $.ui.focusable(element, $.attr(element, "tabindex") != null);
        }
    });

    return $.ui.focusable;

});

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    // Support: IE8 Only
    // IE8 does not support the form attribute and when it is supplied. It overwrites the form prop
    // with a string, so we need to find the proper form.
    return $.fn._form = function() {
        return typeof this[0].form === "string" ? this.closest("form") : $(this[0].form);
    };

});

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    // This file is deprecated
    return $.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());
});


/*!
 * jQuery UI Keycode 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Keycode
//>>group: Core
//>>description: Provide keycodes as keynames
//>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.ui.keyCode = {
        BACKSPACE: 8,
        COMMA: 188,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        LEFT: 37,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SPACE: 32,
        TAB: 9,
        UP: 38
    };

});


/*!
 * jQuery UI Labels 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: labels
//>>group: Core
//>>description: Find all the labels associated with a given input
//>>docs: http://api.jqueryui.com/labels/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.fn.labels = function() {
        var ancestor, selector, id, labels, ancestors;

        if (!this.length) {
            return this.pushStack([]);
        }

        // Check control.labels first
        if (this[0].labels && this[0].labels.length) {
            return this.pushStack(this[0].labels);
        }

        // Support: IE <= 11, FF <= 37, Android <= 2.3 only
        // Above browsers do not support control.labels. Everything below is to support them
        // as well as document fragments. control.labels does not work on document fragments
        labels = this.eq(0).parents("label");

        // Look for the label based on the id
        id = this.attr("id");
        if (id) {

            // We don't search against the document in case the element
            // is disconnected from the DOM
            ancestor = this.eq(0).parents().last();

            // Get a full set of top level ancestors
            ancestors = ancestor.add(ancestor.length ? ancestor.siblings() : this.siblings());

            // Create a selector for the label based on the id
            selector = "label[for='" + $.escapeSelector(id) + "']";

            labels = labels.add(ancestors.find(selector).addBack(selector));

        }

        // Return whatever we have found for labels
        return this.pushStack(labels);
    };

});


/*!
 * jQuery UI Support for jQuery core 1.8.x and newer 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 */

//>>label: jQuery 1.8+ Support
//>>group: Core
//>>description: Support version 1.8.x and newer of jQuery core

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    // Support: jQuery 1.9.x or older
    // $.expr[ ":" ] is deprecated.
    if (!$.expr.pseudos) {
        $.expr.pseudos = $.expr[":"];
    }

    // Support: jQuery 1.11.x or older
    // $.unique has been renamed to $.uniqueSort
    if (!$.uniqueSort) {
        $.uniqueSort = $.unique;
    }

    // Support: jQuery 2.2.x or older.
    // This method has been defined in jQuery 3.0.0.
    // Code from https://github.com/jquery/jquery/blob/e539bac79e666bba95bba86d690b4e609dca2286/src/selector/escapeSelector.js
    if (!$.escapeSelector) {

        // CSS string/identifier serialization
        // https://drafts.csswg.org/cssom/#common-serializing-idioms
        var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;

        var fcssescape = function(ch, asCodePoint) {
            if (asCodePoint) {

                // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                if (ch === "\0") {
                    return "\uFFFD";
                }

                // Control characters and (dependent upon position) numbers get escaped as code points
                return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
            }

            // Other potentially-special ASCII characters get backslash-escaped
            return "\\" + ch;
        };

        $.escapeSelector = function(sel) {
            return (sel + "").replace(rcssescape, fcssescape);
        };
    }

    // Support: jQuery 3.4.x or older
    // These methods have been defined in jQuery 3.5.0.
    if (!$.fn.even || !$.fn.odd) {
        $.fn.extend({
            even: function() {
                return this.filter(function(i) {
                    return i % 2 === 0;
                });
            },
            odd: function() {
                return this.filter(function(i) {
                    return i % 2 === 1;
                });
            }
        });
    }

});

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    // $.ui.plugin is deprecated. Use $.widget() extensions instead.
    return $.ui.plugin = {
        add: function(module, option, set) {
            var i,
                proto = $.ui[module].prototype;
            for (i in set) {
                proto.plugins[i] = proto.plugins[i] || [];
                proto.plugins[i].push([option, set[i]]);
            }
        },
        call: function(instance, name, args, allowDisconnected) {
            var i,
                set = instance.plugins[name];

            if (!set) {
                return;
            }

            if (!allowDisconnected && (!instance.element[0].parentNode ||
                    instance.element[0].parentNode.nodeType === 11)) {
                return;
            }

            for (i = 0; i < set.length; i++) {
                if (instance.options[set[i][0]]) {
                    set[i][1].apply(instance.element, args);
                }
            }
        }
    };

});

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.ui.safeActiveElement = function(document) {
        var activeElement;

        // Support: IE 9 only
        // IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
        try {
            activeElement = document.activeElement;
        } catch (error) {
            activeElement = document.body;
        }

        // Support: IE 9 - 11 only
        // IE may return null instead of an element
        // Interestingly, this only seems to occur when NOT in an iframe
        if (!activeElement) {
            activeElement = document.body;
        }

        // Support: IE 11 only
        // IE11 returns a seemingly empty object in some cases when accessing
        // document.activeElement from an <iframe>
        if (!activeElement.nodeName) {
            activeElement = document.body;
        }

        return activeElement;
    };

});

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.ui.safeBlur = function(element) {

        // Support: IE9 - 10 only
        // If the <body> is blurred, IE will switch windows, see #9420
        if (element && element.nodeName.toLowerCase() !== "body") {
            $(element).trigger("blur");
        }
    };

});


/*!
 * jQuery UI Scroll Parent 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: scrollParent
//>>group: Core
//>>description: Get the closest ancestor element that is scrollable.
//>>docs: http://api.jqueryui.com/scrollParent/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.fn.scrollParent = function(includeHidden) {
        var position = this.css("position"),
            excludeStaticParent = position === "absolute",
            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
            scrollParent = this.parents().filter(function() {
                var parent = $(this);
                if (excludeStaticParent && parent.css("position") === "static") {
                    return false;
                }
                return overflowRegex.test(parent.css("overflow") + parent.css("overflow-y") +
                    parent.css("overflow-x"));
            }).eq(0);

        return position === "fixed" || !scrollParent.length ?
            $(this[0].ownerDocument || document) :
            scrollParent;
    };

});



/*!
 * jQuery UI Tabbable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: :tabbable Selector
//>>group: Core
//>>description: Selects elements which can be tabbed to.
//>>docs: http://api.jqueryui.com/tabbable-selector/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version", "./focusable"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.extend($.expr.pseudos, {
        tabbable: function(element) {
            var tabIndex = $.attr(element, "tabindex"),
                hasTabindex = tabIndex != null;
            return (!hasTabindex || tabIndex >= 0) && $.ui.focusable(element, hasTabindex);
        }
    });

});


/*!
 * jQuery UI Unique ID 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: uniqueId
//>>group: Core
//>>description: Functions to generate and remove uniqueId's
//>>docs: http://api.jqueryui.com/uniqueId/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.fn.extend({
        uniqueId: (function() {
            var uuid = 0;

            return function() {
                return this.each(function() {
                    if (!this.id) {
                        this.id = "ui-id-" + (++uuid);
                    }
                });
            };
        })(),

        removeUniqueId: function() {
            return this.each(function() {
                if (/^ui-id-\d+$/.test(this.id)) {
                    $(this).removeAttr("id");
                }
            });
        }
    });

});
















(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    // Create a local jQuery because jQuery Color relies on it and the
    // global may not exist with AMD and a custom build (#10199).
    // This module is a noop if used as a regular AMD module.
    // eslint-disable-next-line no-unused-vars
    var jQuery = $;

});
/*!
 * jQuery Color Animations v2.2.0
 * https://github.com/jquery/jquery-color
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Sun May 10 09:02:36 2020 +0200
 */

(function(root, factory) {
    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery"], factory);
    } else if (typeof exports === "object") {
        module.exports = factory(require("jquery"));
    } else {
        factory(root.jQuery);
    }
})(this, function(jQuery, undefined) {

    var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor " +
        "borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",

        class2type = {},
        toString = class2type.toString,

        // plusequals test for += 100 -= 100
        rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,

        // a set of RE's that can match strings and generate color tuples.
        stringParsers = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function(execResult) {
                return [
                    execResult[1],
                    execResult[2],
                    execResult[3],
                    execResult[4]
                ];
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function(execResult) {
                return [
                    execResult[1] * 2.55,
                    execResult[2] * 2.55,
                    execResult[3] * 2.55,
                    execResult[4]
                ];
            }
        }, {

            // this regex ignores A-F because it's compared against an already lowercased string
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,
            parse: function(execResult) {
                return [
                    parseInt(execResult[1], 16),
                    parseInt(execResult[2], 16),
                    parseInt(execResult[3], 16),
                    execResult[4] ?
                    (parseInt(execResult[4], 16) / 255).toFixed(2) :
                    1
                ];
            }
        }, {

            // this regex ignores A-F because it's compared against an already lowercased string
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,
            parse: function(execResult) {
                return [
                    parseInt(execResult[1] + execResult[1], 16),
                    parseInt(execResult[2] + execResult[2], 16),
                    parseInt(execResult[3] + execResult[3], 16),
                    execResult[4] ?
                    (parseInt(execResult[4] + execResult[4], 16) / 255)
                    .toFixed(2) :
                    1
                ];
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function(execResult) {
                return [
                    execResult[1],
                    execResult[2] / 100,
                    execResult[3] / 100,
                    execResult[4]
                ];
            }
        }],

        // jQuery.Color( )
        color = jQuery.Color = function(color, green, blue, alpha) {
            return new jQuery.Color.fn.parse(color, green, blue, alpha);
        },
        spaces = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },

            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        },
        propTypes = {
            "byte": {
                floor: true,
                max: 255
            },
            "percent": {
                max: 1
            },
            "degrees": {
                mod: 360,
                floor: true
            }
        },
        support = color.support = {},

        // element for support tests
        supportElem = jQuery("<p>")[0],

        // colors = jQuery.Color.names
        colors,

        // local aliases of functions called often
        each = jQuery.each;

    // determine rgba support immediately
    supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
    support.rgba = supportElem.style.backgroundColor.indexOf("rgba") > -1;

    // define cache name and alpha properties
    // for rgba and hsla spaces
    each(spaces, function(spaceName, space) {
        space.cache = "_" + spaceName;
        space.props.alpha = {
            idx: 3,
            type: "percent",
            def: 1
        };
    });

    // Populate the class2type map
    jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
        function(_i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase();
        });

    function getType(obj) {
        if (obj == null) {
            return obj + "";
        }

        return typeof obj === "object" ?
            class2type[toString.call(obj)] || "object" :
            typeof obj;
    }

    function clamp(value, prop, allowEmpty) {
        var type = propTypes[prop.type] || {};

        if (value == null) {
            return (allowEmpty || !prop.def) ? null : prop.def;
        }

        // ~~ is an short way of doing floor for positive numbers
        value = type.floor ? ~~value : parseFloat(value);

        // IE will pass in empty strings as value for alpha,
        // which will hit this case
        if (isNaN(value)) {
            return prop.def;
        }

        if (type.mod) {

            // we add mod before modding to make sure that negatives values
            // get converted properly: -10 -> 350
            return (value + type.mod) % type.mod;
        }

        // for now all property types without mod have min and max
        return Math.min(type.max, Math.max(0, value));
    }

    function stringParse(string) {
        var inst = color(),
            rgba = inst._rgba = [];

        string = string.toLowerCase();

        each(stringParsers, function(_i, parser) {
            var parsed,
                match = parser.re.exec(string),
                values = match && parser.parse(match),
                spaceName = parser.space || "rgba";

            if (values) {
                parsed = inst[spaceName](values);

                // if this was an rgba parse the assignment might happen twice
                // oh well....
                inst[spaces[spaceName].cache] = parsed[spaces[spaceName].cache];
                rgba = inst._rgba = parsed._rgba;

                // exit each( stringParsers ) here because we matched
                return false;
            }
        });

        // Found a stringParser that handled it
        if (rgba.length) {

            // if this came from a parsed string, force "transparent" when alpha is 0
            // chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
            if (rgba.join() === "0,0,0,0") {
                jQuery.extend(rgba, colors.transparent);
            }
            return inst;
        }

        // named colors
        return colors[string];
    }

    color.fn = jQuery.extend(color.prototype, {
        parse: function(red, green, blue, alpha) {
            if (red === undefined) {
                this._rgba = [null, null, null, null];
                return this;
            }
            if (red.jquery || red.nodeType) {
                red = jQuery(red).css(green);
                green = undefined;
            }

            var inst = this,
                type = getType(red),
                rgba = this._rgba = [];

            // more than 1 argument specified - assume ( red, green, blue, alpha )
            if (green !== undefined) {
                red = [red, green, blue, alpha];
                type = "array";
            }

            if (type === "string") {
                return this.parse(stringParse(red) || colors._default);
            }

            if (type === "array") {
                each(spaces.rgba.props, function(_key, prop) {
                    rgba[prop.idx] = clamp(red[prop.idx], prop);
                });
                return this;
            }

            if (type === "object") {
                if (red instanceof color) {
                    each(spaces, function(_spaceName, space) {
                        if (red[space.cache]) {
                            inst[space.cache] = red[space.cache].slice();
                        }
                    });
                } else {
                    each(spaces, function(_spaceName, space) {
                        var cache = space.cache;
                        each(space.props, function(key, prop) {

                            // if the cache doesn't exist, and we know how to convert
                            if (!inst[cache] && space.to) {

                                // if the value was null, we don't need to copy it
                                // if the key was alpha, we don't need to copy it either
                                if (key === "alpha" || red[key] == null) {
                                    return;
                                }
                                inst[cache] = space.to(inst._rgba);
                            }

                            // this is the only case where we allow nulls for ALL properties.
                            // call clamp with alwaysAllowEmpty
                            inst[cache][prop.idx] = clamp(red[key], prop, true);
                        });

                        // everything defined but alpha?
                        if (inst[cache] && jQuery.inArray(null, inst[cache].slice(0, 3)) < 0) {

                            // use the default of 1
                            if (inst[cache][3] == null) {
                                inst[cache][3] = 1;
                            }

                            if (space.from) {
                                inst._rgba = space.from(inst[cache]);
                            }
                        }
                    });
                }
                return this;
            }
        },
        is: function(compare) {
            var is = color(compare),
                same = true,
                inst = this;

            each(spaces, function(_, space) {
                var localCache,
                    isCache = is[space.cache];
                if (isCache) {
                    localCache = inst[space.cache] || space.to && space.to(inst._rgba) || [];
                    each(space.props, function(_, prop) {
                        if (isCache[prop.idx] != null) {
                            same = (isCache[prop.idx] === localCache[prop.idx]);
                            return same;
                        }
                    });
                }
                return same;
            });
            return same;
        },
        _space: function() {
            var used = [],
                inst = this;
            each(spaces, function(spaceName, space) {
                if (inst[space.cache]) {
                    used.push(spaceName);
                }
            });
            return used.pop();
        },
        transition: function(other, distance) {
            var end = color(other),
                spaceName = end._space(),
                space = spaces[spaceName],
                startColor = this.alpha() === 0 ? color("transparent") : this,
                start = startColor[space.cache] || space.to(startColor._rgba),
                result = start.slice();

            end = end[space.cache];
            each(space.props, function(_key, prop) {
                var index = prop.idx,
                    startValue = start[index],
                    endValue = end[index],
                    type = propTypes[prop.type] || {};

                // if null, don't override start value
                if (endValue === null) {
                    return;
                }

                // if null - use end
                if (startValue === null) {
                    result[index] = endValue;
                } else {
                    if (type.mod) {
                        if (endValue - startValue > type.mod / 2) {
                            startValue += type.mod;
                        } else if (startValue - endValue > type.mod / 2) {
                            startValue -= type.mod;
                        }
                    }
                    result[index] = clamp((endValue - startValue) * distance + startValue, prop);
                }
            });
            return this[spaceName](result);
        },
        blend: function(opaque) {

            // if we are already opaque - return ourself
            if (this._rgba[3] === 1) {
                return this;
            }

            var rgb = this._rgba.slice(),
                a = rgb.pop(),
                blend = color(opaque)._rgba;

            return color(jQuery.map(rgb, function(v, i) {
                return (1 - a) * blend[i] + a * v;
            }));
        },
        toRgbaString: function() {
            var prefix = "rgba(",
                rgba = jQuery.map(this._rgba, function(v, i) {
                    if (v != null) {
                        return v;
                    }
                    return i > 2 ? 1 : 0;
                });

            if (rgba[3] === 1) {
                rgba.pop();
                prefix = "rgb(";
            }

            return prefix + rgba.join() + ")";
        },
        toHslaString: function() {
            var prefix = "hsla(",
                hsla = jQuery.map(this.hsla(), function(v, i) {
                    if (v == null) {
                        v = i > 2 ? 1 : 0;
                    }

                    // catch 1 and 2
                    if (i && i < 3) {
                        v = Math.round(v * 100) + "%";
                    }
                    return v;
                });

            if (hsla[3] === 1) {
                hsla.pop();
                prefix = "hsl(";
            }
            return prefix + hsla.join() + ")";
        },
        toHexString: function(includeAlpha) {
            var rgba = this._rgba.slice(),
                alpha = rgba.pop();

            if (includeAlpha) {
                rgba.push(~~(alpha * 255));
            }

            return "#" + jQuery.map(rgba, function(v) {

                // default to 0 when nulls exist
                v = (v || 0).toString(16);
                return v.length === 1 ? "0" + v : v;
            }).join("");
        },
        toString: function() {
            return this._rgba[3] === 0 ? "transparent" : this.toRgbaString();
        }
    });
    color.fn.parse.prototype = color.fn;

    // hsla conversions adapted from:
    // https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

    function hue2rgb(p, q, h) {
        h = (h + 1) % 1;
        if (h * 6 < 1) {
            return p + (q - p) * h * 6;
        }
        if (h * 2 < 1) {
            return q;
        }
        if (h * 3 < 2) {
            return p + (q - p) * ((2 / 3) - h) * 6;
        }
        return p;
    }

    spaces.hsla.to = function(rgba) {
        if (rgba[0] == null || rgba[1] == null || rgba[2] == null) {
            return [null, null, null, rgba[3]];
        }
        var r = rgba[0] / 255,
            g = rgba[1] / 255,
            b = rgba[2] / 255,
            a = rgba[3],
            max = Math.max(r, g, b),
            min = Math.min(r, g, b),
            diff = max - min,
            add = max + min,
            l = add * 0.5,
            h, s;

        if (min === max) {
            h = 0;
        } else if (r === max) {
            h = (60 * (g - b) / diff) + 360;
        } else if (g === max) {
            h = (60 * (b - r) / diff) + 120;
        } else {
            h = (60 * (r - g) / diff) + 240;
        }

        // chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
        // otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
        if (diff === 0) {
            s = 0;
        } else if (l <= 0.5) {
            s = diff / add;
        } else {
            s = diff / (2 - add);
        }
        return [Math.round(h) % 360, s, l, a == null ? 1 : a];
    };

    spaces.hsla.from = function(hsla) {
        if (hsla[0] == null || hsla[1] == null || hsla[2] == null) {
            return [null, null, null, hsla[3]];
        }
        var h = hsla[0] / 360,
            s = hsla[1],
            l = hsla[2],
            a = hsla[3],
            q = l <= 0.5 ? l * (1 + s) : l + s - l * s,
            p = 2 * l - q;

        return [
            Math.round(hue2rgb(p, q, h + (1 / 3)) * 255),
            Math.round(hue2rgb(p, q, h) * 255),
            Math.round(hue2rgb(p, q, h - (1 / 3)) * 255),
            a
        ];
    };


    each(spaces, function(spaceName, space) {
        var props = space.props,
            cache = space.cache,
            to = space.to,
            from = space.from;

        // makes rgba() and hsla()
        color.fn[spaceName] = function(value) {

            // generate a cache for this space if it doesn't exist
            if (to && !this[cache]) {
                this[cache] = to(this._rgba);
            }
            if (value === undefined) {
                return this[cache].slice();
            }

            var ret,
                type = getType(value),
                arr = (type === "array" || type === "object") ? value : arguments,
                local = this[cache].slice();

            each(props, function(key, prop) {
                var val = arr[type === "object" ? key : prop.idx];
                if (val == null) {
                    val = local[prop.idx];
                }
                local[prop.idx] = clamp(val, prop);
            });

            if (from) {
                ret = color(from(local));
                ret[cache] = local;
                return ret;
            } else {
                return color(local);
            }
        };

        // makes red() green() blue() alpha() hue() saturation() lightness()
        each(props, function(key, prop) {

            // alpha is included in more than one space
            if (color.fn[key]) {
                return;
            }
            color.fn[key] = function(value) {
                var local, cur, match, fn,
                    vtype = getType(value);

                if (key === "alpha") {
                    fn = this._hsla ? "hsla" : "rgba";
                } else {
                    fn = spaceName;
                }
                local = this[fn]();
                cur = local[prop.idx];

                if (vtype === "undefined") {
                    return cur;
                }

                if (vtype === "function") {
                    value = value.call(this, cur);
                    vtype = getType(value);
                }
                if (value == null && prop.empty) {
                    return this;
                }
                if (vtype === "string") {
                    match = rplusequals.exec(value);
                    if (match) {
                        value = cur + parseFloat(match[2]) * (match[1] === "+" ? 1 : -1);
                    }
                }
                local[prop.idx] = value;
                return this[fn](local);
            };
        });
    });

    // add cssHook and .fx.step function for each named hook.
    // accept a space separated string of properties
    color.hook = function(hook) {
        var hooks = hook.split(" ");
        each(hooks, function(_i, hook) {
            jQuery.cssHooks[hook] = {
                set: function(elem, value) {
                    var parsed, curElem,
                        backgroundColor = "";

                    if (value !== "transparent" && (getType(value) !== "string" || (parsed = stringParse(value)))) {
                        value = color(parsed || value);
                        if (!support.rgba && value._rgba[3] !== 1) {
                            curElem = hook === "backgroundColor" ? elem.parentNode : elem;
                            while (
                                (backgroundColor === "" || backgroundColor === "transparent") &&
                                curElem && curElem.style
                            ) {
                                try {
                                    backgroundColor = jQuery.css(curElem, "backgroundColor");
                                    curElem = curElem.parentNode;
                                } catch (e) {}
                            }

                            value = value.blend(backgroundColor && backgroundColor !== "transparent" ?
                                backgroundColor :
                                "_default");
                        }

                        value = value.toRgbaString();
                    }
                    try {
                        elem.style[hook] = value;
                    } catch (e) {

                        // wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
                    }
                }
            };
            jQuery.fx.step[hook] = function(fx) {
                if (!fx.colorInit) {
                    fx.start = color(fx.elem, hook);
                    fx.end = color(fx.end);
                    fx.colorInit = true;
                }
                jQuery.cssHooks[hook].set(fx.elem, fx.start.transition(fx.end, fx.pos));
            };
        });

    };

    color.hook(stepHooks);

    jQuery.cssHooks.borderColor = {
        expand: function(value) {
            var expanded = {};

            each(["Top", "Right", "Bottom", "Left"], function(_i, part) {
                expanded["border" + part + "Color"] = value;
            });
            return expanded;
        }
    };

    // Basic color names only.
    // Usage of any of the other color names requires adding yourself or including
    // jquery.color.svg-names.js.
    colors = jQuery.Color.names = {

        // 4.1. Basic color keywords
        aqua: "#00ffff",
        black: "#000000",
        blue: "#0000ff",
        fuchsia: "#ff00ff",
        gray: "#808080",
        green: "#008000",
        lime: "#00ff00",
        maroon: "#800000",
        navy: "#000080",
        olive: "#808000",
        purple: "#800080",
        red: "#ff0000",
        silver: "#c0c0c0",
        teal: "#008080",
        white: "#ffffff",
        yellow: "#ffff00",

        // 4.2.3. "transparent" color keyword
        transparent: [null, null, null, 0],

        _default: "#ffffff"
    };

});




/*!
 * jQuery UI Effects 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Effects Core
//>>group: Effects
/* eslint-disable max-len */
//>>description: Extends the internal jQuery effects. Includes morphing and easing. Required by all other effects.
/* eslint-enable max-len */
//>>docs: http://api.jqueryui.com/category/effects-core/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./jquery-var-for-color",
            "./vendor/jquery-color/jquery.color",
            "./version"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    var dataSpace = "ui-effects-",
        dataSpaceStyle = "ui-effects-style",
        dataSpaceAnimated = "ui-effects-animated";

    $.effects = {
        effect: {}
    };

    /******************************************************************************/
    /****************************** CLASS ANIMATIONS ******************************/
    /******************************************************************************/
    (function() {

        var classAnimationActions = ["add", "remove", "toggle"],
            shorthandStyles = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1
            };

        $.each(
            ["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"],
            function(_, prop) {
                $.fx.step[prop] = function(fx) {
                    if (fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr) {
                        jQuery.style(fx.elem, prop, fx.end);
                        fx.setAttr = true;
                    }
                };
            }
        );

        function camelCase(string) {
            return string.replace(/-([\da-z])/gi, function(all, letter) {
                return letter.toUpperCase();
            });
        }

        function getElementStyles(elem) {
            var key, len,
                style = elem.ownerDocument.defaultView ?
                elem.ownerDocument.defaultView.getComputedStyle(elem, null) :
                elem.currentStyle,
                styles = {};

            if (style && style.length && style[0] && style[style[0]]) {
                len = style.length;
                while (len--) {
                    key = style[len];
                    if (typeof style[key] === "string") {
                        styles[camelCase(key)] = style[key];
                    }
                }

                // Support: Opera, IE <9
            } else {
                for (key in style) {
                    if (typeof style[key] === "string") {
                        styles[key] = style[key];
                    }
                }
            }

            return styles;
        }

        function styleDifference(oldStyle, newStyle) {
            var diff = {},
                name, value;

            for (name in newStyle) {
                value = newStyle[name];
                if (oldStyle[name] !== value) {
                    if (!shorthandStyles[name]) {
                        if ($.fx.step[name] || !isNaN(parseFloat(value))) {
                            diff[name] = value;
                        }
                    }
                }
            }

            return diff;
        }

        // Support: jQuery <1.8
        if (!$.fn.addBack) {
            $.fn.addBack = function(selector) {
                return this.add(selector == null ?
                    this.prevObject : this.prevObject.filter(selector)
                );
            };
        }

        $.effects.animateClass = function(value, duration, easing, callback) {
            var o = $.speed(duration, easing, callback);

            return this.queue(function() {
                var animated = $(this),
                    baseClass = animated.attr("class") || "",
                    applyClassChange,
                    allAnimations = o.children ? animated.find("*").addBack() : animated;

                // Map the animated objects to store the original styles.
                allAnimations = allAnimations.map(function() {
                    var el = $(this);
                    return {
                        el: el,
                        start: getElementStyles(this)
                    };
                });

                // Apply class change
                applyClassChange = function() {
                    $.each(classAnimationActions, function(i, action) {
                        if (value[action]) {
                            animated[action + "Class"](value[action]);
                        }
                    });
                };
                applyClassChange();

                // Map all animated objects again - calculate new styles and diff
                allAnimations = allAnimations.map(function() {
                    this.end = getElementStyles(this.el[0]);
                    this.diff = styleDifference(this.start, this.end);
                    return this;
                });

                // Apply original class
                animated.attr("class", baseClass);

                // Map all animated objects again - this time collecting a promise
                allAnimations = allAnimations.map(function() {
                    var styleInfo = this,
                        dfd = $.Deferred(),
                        opts = $.extend({}, o, {
                            queue: false,
                            complete: function() {
                                dfd.resolve(styleInfo);
                            }
                        });

                    this.el.animate(this.diff, opts);
                    return dfd.promise();
                });

                // Once all animations have completed:
                $.when.apply($, allAnimations.get()).done(function() {

                    // Set the final class
                    applyClassChange();

                    // For each animated element,
                    // clear all css properties that were animated
                    $.each(arguments, function() {
                        var el = this.el;
                        $.each(this.diff, function(key) {
                            el.css(key, "");
                        });
                    });

                    // This is guarnteed to be there if you use jQuery.speed()
                    // it also handles dequeuing the next anim...
                    o.complete.call(animated[0]);
                });
            });
        };

        $.fn.extend({
            addClass: (function(orig) {
                return function(classNames, speed, easing, callback) {
                    return speed ?
                        $.effects.animateClass.call(this, {
                            add: classNames
                        }, speed, easing, callback) :
                        orig.apply(this, arguments);
                };
            })($.fn.addClass),

            removeClass: (function(orig) {
                return function(classNames, speed, easing, callback) {
                    return arguments.length > 1 ?
                        $.effects.animateClass.call(this, {
                            remove: classNames
                        }, speed, easing, callback) :
                        orig.apply(this, arguments);
                };
            })($.fn.removeClass),

            toggleClass: (function(orig) {
                return function(classNames, force, speed, easing, callback) {
                    if (typeof force === "boolean" || force === undefined) {
                        if (!speed) {

                            // Without speed parameter
                            return orig.apply(this, arguments);
                        } else {
                            return $.effects.animateClass.call(this,
                                (force ? {
                                    add: classNames
                                } : {
                                    remove: classNames
                                }),
                                speed, easing, callback);
                        }
                    } else {

                        // Without force parameter
                        return $.effects.animateClass.call(this, {
                            toggle: classNames
                        }, force, speed, easing);
                    }
                };
            })($.fn.toggleClass),

            switchClass: function(remove, add, speed, easing, callback) {
                return $.effects.animateClass.call(this, {
                    add: add,
                    remove: remove
                }, speed, easing, callback);
            }
        });

    })();

    /******************************************************************************/
    /*********************************** EFFECTS **********************************/
    /******************************************************************************/

    (function() {

        if ($.expr && $.expr.pseudos && $.expr.pseudos.animated) {
            $.expr.pseudos.animated = (function(orig) {
                return function(elem) {
                    return !!$(elem).data(dataSpaceAnimated) || orig(elem);
                };
            })($.expr.pseudos.animated);
        }

        if ($.uiBackCompat !== false) {
            $.extend($.effects, {

                // Saves a set of properties in a data storage
                save: function(element, set) {
                    var i = 0,
                        length = set.length;
                    for (; i < length; i++) {
                        if (set[i] !== null) {
                            element.data(dataSpace + set[i], element[0].style[set[i]]);
                        }
                    }
                },

                // Restores a set of previously saved properties from a data storage
                restore: function(element, set) {
                    var val, i = 0,
                        length = set.length;
                    for (; i < length; i++) {
                        if (set[i] !== null) {
                            val = element.data(dataSpace + set[i]);
                            element.css(set[i], val);
                        }
                    }
                },

                setMode: function(el, mode) {
                    if (mode === "toggle") {
                        mode = el.is(":hidden") ? "show" : "hide";
                    }
                    return mode;
                },

                // Wraps the element around a wrapper that copies position properties
                createWrapper: function(element) {

                    // If the element is already wrapped, return it
                    if (element.parent().is(".ui-effects-wrapper")) {
                        return element.parent();
                    }

                    // Wrap the element
                    var props = {
                            width: element.outerWidth(true),
                            height: element.outerHeight(true),
                            "float": element.css("float")
                        },
                        wrapper = $("<div></div>")
                        .addClass("ui-effects-wrapper")
                        .css({
                            fontSize: "100%",
                            background: "transparent",
                            border: "none",
                            margin: 0,
                            padding: 0
                        }),

                        // Store the size in case width/height are defined in % - Fixes #5245
                        size = {
                            width: element.width(),
                            height: element.height()
                        },
                        active = document.activeElement;

                    // Support: Firefox
                    // Firefox incorrectly exposes anonymous content
                    // https://bugzilla.mozilla.org/show_bug.cgi?id=561664
                    try {
                        // eslint-disable-next-line no-unused-expressions
                        active.id;
                    } catch (e) {
                        active = document.body;
                    }

                    element.wrap(wrapper);

                    // Fixes #7595 - Elements lose focus when wrapped.
                    if (element[0] === active || $.contains(element[0], active)) {
                        $(active).trigger("focus");
                    }

                    // Hotfix for jQuery 1.4 since some change in wrap() seems to actually
                    // lose the reference to the wrapped element
                    wrapper = element.parent();

                    // Transfer positioning properties to the wrapper
                    if (element.css("position") === "static") {
                        wrapper.css({
                            position: "relative"
                        });
                        element.css({
                            position: "relative"
                        });
                    } else {
                        $.extend(props, {
                            position: element.css("position"),
                            zIndex: element.css("z-index")
                        });
                        $.each(["top", "left", "bottom", "right"], function(i, pos) {
                            props[pos] = element.css(pos);
                            if (isNaN(parseInt(props[pos], 10))) {
                                props[pos] = "auto";
                            }
                        });
                        element.css({
                            position: "relative",
                            top: 0,
                            left: 0,
                            right: "auto",
                            bottom: "auto"
                        });
                    }
                    element.css(size);

                    return wrapper.css(props).show();
                },

                removeWrapper: function(element) {
                    var active = document.activeElement;

                    if (element.parent().is(".ui-effects-wrapper")) {
                        element.parent().replaceWith(element);

                        // Fixes #7595 - Elements lose focus when wrapped.
                        if (element[0] === active || $.contains(element[0], active)) {
                            $(active).trigger("focus");
                        }
                    }

                    return element;
                }
            });
        }

        $.extend($.effects, {
            version: "1.13.0",

            define: function(name, mode, effect) {
                if (!effect) {
                    effect = mode;
                    mode = "effect";
                }

                $.effects.effect[name] = effect;
                $.effects.effect[name].mode = mode;

                return effect;
            },

            scaledDimensions: function(element, percent, direction) {
                if (percent === 0) {
                    return {
                        height: 0,
                        width: 0,
                        outerHeight: 0,
                        outerWidth: 0
                    };
                }

                var x = direction !== "horizontal" ? ((percent || 100) / 100) : 1,
                    y = direction !== "vertical" ? ((percent || 100) / 100) : 1;

                return {
                    height: element.height() * y,
                    width: element.width() * x,
                    outerHeight: element.outerHeight() * y,
                    outerWidth: element.outerWidth() * x
                };

            },

            clipToBox: function(animation) {
                return {
                    width: animation.clip.right - animation.clip.left,
                    height: animation.clip.bottom - animation.clip.top,
                    left: animation.clip.left,
                    top: animation.clip.top
                };
            },

            // Injects recently queued functions to be first in line (after "inprogress")
            unshift: function(element, queueLength, count) {
                var queue = element.queue();

                if (queueLength > 1) {
                    queue.splice.apply(queue, [1, 0].concat(queue.splice(queueLength, count)));
                }
                element.dequeue();
            },

            saveStyle: function(element) {
                element.data(dataSpaceStyle, element[0].style.cssText);
            },

            restoreStyle: function(element) {
                element[0].style.cssText = element.data(dataSpaceStyle) || "";
                element.removeData(dataSpaceStyle);
            },

            mode: function(element, mode) {
                var hidden = element.is(":hidden");

                if (mode === "toggle") {
                    mode = hidden ? "show" : "hide";
                }
                if (hidden ? mode === "hide" : mode === "show") {
                    mode = "none";
                }
                return mode;
            },

            // Translates a [top,left] array into a baseline value
            getBaseline: function(origin, original) {
                var y, x;

                switch (origin[0]) {
                    case "top":
                        y = 0;
                        break;
                    case "middle":
                        y = 0.5;
                        break;
                    case "bottom":
                        y = 1;
                        break;
                    default:
                        y = origin[0] / original.height;
                }

                switch (origin[1]) {
                    case "left":
                        x = 0;
                        break;
                    case "center":
                        x = 0.5;
                        break;
                    case "right":
                        x = 1;
                        break;
                    default:
                        x = origin[1] / original.width;
                }

                return {
                    x: x,
                    y: y
                };
            },

            // Creates a placeholder element so that the original element can be made absolute
            createPlaceholder: function(element) {
                var placeholder,
                    cssPosition = element.css("position"),
                    position = element.position();

                // Lock in margins first to account for form elements, which
                // will change margin if you explicitly set height
                // see: http://jsfiddle.net/JZSMt/3/ https://bugs.webkit.org/show_bug.cgi?id=107380
                // Support: Safari
                element.css({
                        marginTop: element.css("marginTop"),
                        marginBottom: element.css("marginBottom"),
                        marginLeft: element.css("marginLeft"),
                        marginRight: element.css("marginRight")
                    })
                    .outerWidth(element.outerWidth())
                    .outerHeight(element.outerHeight());

                if (/^(static|relative)/.test(cssPosition)) {
                    cssPosition = "absolute";

                    placeholder = $("<" + element[0].nodeName + ">").insertAfter(element).css({

                            // Convert inline to inline block to account for inline elements
                            // that turn to inline block based on content (like img)
                            display: /^(inline|ruby)/.test(element.css("display")) ?
                                "inline-block" : "block",
                            visibility: "hidden",

                            // Margins need to be set to account for margin collapse
                            marginTop: element.css("marginTop"),
                            marginBottom: element.css("marginBottom"),
                            marginLeft: element.css("marginLeft"),
                            marginRight: element.css("marginRight"),
                            "float": element.css("float")
                        })
                        .outerWidth(element.outerWidth())
                        .outerHeight(element.outerHeight())
                        .addClass("ui-effects-placeholder");

                    element.data(dataSpace + "placeholder", placeholder);
                }

                element.css({
                    position: cssPosition,
                    left: position.left,
                    top: position.top
                });

                return placeholder;
            },

            removePlaceholder: function(element) {
                var dataKey = dataSpace + "placeholder",
                    placeholder = element.data(dataKey);

                if (placeholder) {
                    placeholder.remove();
                    element.removeData(dataKey);
                }
            },

            // Removes a placeholder if it exists and restores
            // properties that were modified during placeholder creation
            cleanUp: function(element) {
                $.effects.restoreStyle(element);
                $.effects.removePlaceholder(element);
            },

            setTransition: function(element, list, factor, value) {
                value = value || {};
                $.each(list, function(i, x) {
                    var unit = element.cssUnit(x);
                    if (unit[0] > 0) {
                        value[x] = unit[0] * factor + unit[1];
                    }
                });
                return value;
            }
        });

        // Return an effect options object for the given parameters:
        function _normalizeArguments(effect, options, speed, callback) {

            // Allow passing all options as the first parameter
            if ($.isPlainObject(effect)) {
                options = effect;
                effect = effect.effect;
            }

            // Convert to an object
            effect = {
                effect: effect
            };

            // Catch (effect, null, ...)
            if (options == null) {
                options = {};
            }

            // Catch (effect, callback)
            if (typeof options === "function") {
                callback = options;
                speed = null;
                options = {};
            }

            // Catch (effect, speed, ?)
            if (typeof options === "number" || $.fx.speeds[options]) {
                callback = speed;
                speed = options;
                options = {};
            }

            // Catch (effect, options, callback)
            if (typeof speed === "function") {
                callback = speed;
                speed = null;
            }

            // Add options to effect
            if (options) {
                $.extend(effect, options);
            }

            speed = speed || options.duration;
            effect.duration = $.fx.off ? 0 :
                typeof speed === "number" ? speed :
                speed in $.fx.speeds ? $.fx.speeds[speed] :
                $.fx.speeds._default;

            effect.complete = callback || options.complete;

            return effect;
        }

        function standardAnimationOption(option) {

            // Valid standard speeds (nothing, number, named speed)
            if (!option || typeof option === "number" || $.fx.speeds[option]) {
                return true;
            }

            // Invalid strings - treat as "normal" speed
            if (typeof option === "string" && !$.effects.effect[option]) {
                return true;
            }

            // Complete callback
            if (typeof option === "function") {
                return true;
            }

            // Options hash (but not naming an effect)
            if (typeof option === "object" && !option.effect) {
                return true;
            }

            // Didn't match any standard API
            return false;
        }

        $.fn.extend({
            effect: function( /* effect, options, speed, callback */ ) {
                var args = _normalizeArguments.apply(this, arguments),
                    effectMethod = $.effects.effect[args.effect],
                    defaultMode = effectMethod.mode,
                    queue = args.queue,
                    queueName = queue || "fx",
                    complete = args.complete,
                    mode = args.mode,
                    modes = [],
                    prefilter = function(next) {
                        var el = $(this),
                            normalizedMode = $.effects.mode(el, mode) || defaultMode;

                        // Sentinel for duck-punching the :animated pseudo-selector
                        el.data(dataSpaceAnimated, true);

                        // Save effect mode for later use,
                        // we can't just call $.effects.mode again later,
                        // as the .show() below destroys the initial state
                        modes.push(normalizedMode);

                        // See $.uiBackCompat inside of run() for removal of defaultMode in 1.14
                        if (defaultMode && (normalizedMode === "show" ||
                                (normalizedMode === defaultMode && normalizedMode === "hide"))) {
                            el.show();
                        }

                        if (!defaultMode || normalizedMode !== "none") {
                            $.effects.saveStyle(el);
                        }

                        if (typeof next === "function") {
                            next();
                        }
                    };

                if ($.fx.off || !effectMethod) {

                    // Delegate to the original method (e.g., .show()) if possible
                    if (mode) {
                        return this[mode](args.duration, complete);
                    } else {
                        return this.each(function() {
                            if (complete) {
                                complete.call(this);
                            }
                        });
                    }
                }

                function run(next) {
                    var elem = $(this);

                    function cleanup() {
                        elem.removeData(dataSpaceAnimated);

                        $.effects.cleanUp(elem);

                        if (args.mode === "hide") {
                            elem.hide();
                        }

                        done();
                    }

                    function done() {
                        if (typeof complete === "function") {
                            complete.call(elem[0]);
                        }

                        if (typeof next === "function") {
                            next();
                        }
                    }

                    // Override mode option on a per element basis,
                    // as toggle can be either show or hide depending on element state
                    args.mode = modes.shift();

                    if ($.uiBackCompat !== false && !defaultMode) {
                        if (elem.is(":hidden") ? mode === "hide" : mode === "show") {

                            // Call the core method to track "olddisplay" properly
                            elem[mode]();
                            done();
                        } else {
                            effectMethod.call(elem[0], args, done);
                        }
                    } else {
                        if (args.mode === "none") {

                            // Call the core method to track "olddisplay" properly
                            elem[mode]();
                            done();
                        } else {
                            effectMethod.call(elem[0], args, cleanup);
                        }
                    }
                }

                // Run prefilter on all elements first to ensure that
                // any showing or hiding happens before placeholder creation,
                // which ensures that any layout changes are correctly captured.
                return queue === false ?
                    this.each(prefilter).each(run) :
                    this.queue(queueName, prefilter).queue(queueName, run);
            },

            show: (function(orig) {
                return function(option) {
                    if (standardAnimationOption(option)) {
                        return orig.apply(this, arguments);
                    } else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "show";
                        return this.effect.call(this, args);
                    }
                };
            })($.fn.show),

            hide: (function(orig) {
                return function(option) {
                    if (standardAnimationOption(option)) {
                        return orig.apply(this, arguments);
                    } else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "hide";
                        return this.effect.call(this, args);
                    }
                };
            })($.fn.hide),

            toggle: (function(orig) {
                return function(option) {
                    if (standardAnimationOption(option) || typeof option === "boolean") {
                        return orig.apply(this, arguments);
                    } else {
                        var args = _normalizeArguments.apply(this, arguments);
                        args.mode = "toggle";
                        return this.effect.call(this, args);
                    }
                };
            })($.fn.toggle),

            cssUnit: function(key) {
                var style = this.css(key),
                    val = [];

                $.each(["em", "px", "%", "pt"], function(i, unit) {
                    if (style.indexOf(unit) > 0) {
                        val = [parseFloat(style), unit];
                    }
                });
                return val;
            },

            cssClip: function(clipObj) {
                if (clipObj) {
                    return this.css("clip", "rect(" + clipObj.top + "px " + clipObj.right + "px " +
                        clipObj.bottom + "px " + clipObj.left + "px)");
                }
                return parseClip(this.css("clip"), this);
            },

            transfer: function(options, done) {
                var element = $(this),
                    target = $(options.to),
                    targetFixed = target.css("position") === "fixed",
                    body = $("body"),
                    fixTop = targetFixed ? body.scrollTop() : 0,
                    fixLeft = targetFixed ? body.scrollLeft() : 0,
                    endPosition = target.offset(),
                    animation = {
                        top: endPosition.top - fixTop,
                        left: endPosition.left - fixLeft,
                        height: target.innerHeight(),
                        width: target.innerWidth()
                    },
                    startPosition = element.offset(),
                    transfer = $("<div class='ui-effects-transfer'></div>");

                transfer
                    .appendTo("body")
                    .addClass(options.className)
                    .css({
                        top: startPosition.top - fixTop,
                        left: startPosition.left - fixLeft,
                        height: element.innerHeight(),
                        width: element.innerWidth(),
                        position: targetFixed ? "fixed" : "absolute"
                    })
                    .animate(animation, options.duration, options.easing, function() {
                        transfer.remove();
                        if (typeof done === "function") {
                            done();
                        }
                    });
            }
        });

        function parseClip(str, element) {
            var outerWidth = element.outerWidth(),
                outerHeight = element.outerHeight(),
                clipRegex = /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/,
                values = clipRegex.exec(str) || ["", 0, outerWidth, outerHeight, 0];

            return {
                top: parseFloat(values[1]) || 0,
                right: values[2] === "auto" ? outerWidth : parseFloat(values[2]),
                bottom: values[3] === "auto" ? outerHeight : parseFloat(values[3]),
                left: parseFloat(values[4]) || 0
            };
        }

        $.fx.step.clip = function(fx) {
            if (!fx.clipInit) {
                fx.start = $(fx.elem).cssClip();
                if (typeof fx.end === "string") {
                    fx.end = parseClip(fx.end, fx.elem);
                }
                fx.clipInit = true;
            }

            $(fx.elem).cssClip({
                top: fx.pos * (fx.end.top - fx.start.top) + fx.start.top,
                right: fx.pos * (fx.end.right - fx.start.right) + fx.start.right,
                bottom: fx.pos * (fx.end.bottom - fx.start.bottom) + fx.start.bottom,
                left: fx.pos * (fx.end.left - fx.start.left) + fx.start.left
            });
        };

    })();

    /******************************************************************************/
    /*********************************** EASING ***********************************/
    /******************************************************************************/

    (function() {

        // Based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

        var baseEasings = {};

        $.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(i, name) {
            baseEasings[name] = function(p) {
                return Math.pow(p, i + 2);
            };
        });

        $.extend(baseEasings, {
            Sine: function(p) {
                return 1 - Math.cos(p * Math.PI / 2);
            },
            Circ: function(p) {
                return 1 - Math.sqrt(1 - p * p);
            },
            Elastic: function(p) {
                return p === 0 || p === 1 ? p :
                    -Math.pow(2, 8 * (p - 1)) * Math.sin(((p - 1) * 80 - 7.5) * Math.PI / 15);
            },
            Back: function(p) {
                return p * p * (3 * p - 2);
            },
            Bounce: function(p) {
                var pow2,
                    bounce = 4;

                while (p < ((pow2 = Math.pow(2, --bounce)) - 1) / 11) {}
                return 1 / Math.pow(4, 3 - bounce) - 7.5625 * Math.pow((pow2 * 3 - 2) / 22 - p, 2);
            }
        });

        $.each(baseEasings, function(name, easeIn) {
            $.easing["easeIn" + name] = easeIn;
            $.easing["easeOut" + name] = function(p) {
                return 1 - easeIn(1 - p);
            };
            $.easing["easeInOut" + name] = function(p) {
                return p < 0.5 ?
                    easeIn(p * 2) / 2 :
                    1 - easeIn(p * -2 + 2) / 2;
            };
        });

    })();

    return $.effects;

});



/*!
 * jQuery UI Form Reset Mixin 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Form Reset Mixin
//>>group: Core
//>>description: Refresh input widgets when their form is reset
//>>docs: http://api.jqueryui.com/form-reset-mixin/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./form",
            "./version"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.ui.formResetMixin = {
        _formResetHandler: function() {
            var form = $(this);

            // Wait for the form reset to actually happen before refreshing
            setTimeout(function() {
                var instances = form.data("ui-form-reset-instances");
                $.each(instances, function() {
                    this.refresh();
                });
            });
        },

        _bindFormResetHandler: function() {
            this.form = this.element._form();
            if (!this.form.length) {
                return;
            }

            var instances = this.form.data("ui-form-reset-instances") || [];
            if (!instances.length) {

                // We don't use _on() here because we use a single event handler per form
                this.form.on("reset.ui-form-reset", this._formResetHandler);
            }
            instances.push(this);
            this.form.data("ui-form-reset-instances", instances);
        },

        _unbindFormResetHandler: function() {
            if (!this.form.length) {
                return;
            }

            var instances = this.form.data("ui-form-reset-instances");
            instances.splice($.inArray(this, instances), 1);
            if (instances.length) {
                this.form.data("ui-form-reset-instances", instances);
            } else {
                this.form
                    .removeData("ui-form-reset-instances")
                    .off("reset.ui-form-reset");
            }
        }
    };

});


/*!
 * jQuery UI Position 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/position/
 */

//>>label: Position
//>>group: Core
//>>description: Positions elements relative to other elements.
//>>docs: http://api.jqueryui.com/position/
//>>demos: http://jqueryui.com/position/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    (function() {
        var cachedScrollbarWidth,
            max = Math.max,
            abs = Math.abs,
            rhorizontal = /left|center|right/,
            rvertical = /top|center|bottom/,
            roffset = /[\+\-]\d+(\.[\d]+)?%?/,
            rposition = /^\w+/,
            rpercent = /%$/,
            _position = $.fn.position;

        function getOffsets(offsets, width, height) {
            return [
                parseFloat(offsets[0]) * (rpercent.test(offsets[0]) ? width / 100 : 1),
                parseFloat(offsets[1]) * (rpercent.test(offsets[1]) ? height / 100 : 1)
            ];
        }

        function parseCss(element, property) {
            return parseInt($.css(element, property), 10) || 0;
        }

        function isWindow(obj) {
            return obj != null && obj === obj.window;
        }

        function getDimensions(elem) {
            var raw = elem[0];
            if (raw.nodeType === 9) {
                return {
                    width: elem.width(),
                    height: elem.height(),
                    offset: {
                        top: 0,
                        left: 0
                    }
                };
            }
            if (isWindow(raw)) {
                return {
                    width: elem.width(),
                    height: elem.height(),
                    offset: {
                        top: elem.scrollTop(),
                        left: elem.scrollLeft()
                    }
                };
            }
            if (raw.preventDefault) {
                return {
                    width: 0,
                    height: 0,
                    offset: {
                        top: raw.pageY,
                        left: raw.pageX
                    }
                };
            }
            return {
                width: elem.outerWidth(),
                height: elem.outerHeight(),
                offset: elem.offset()
            };
        }

        $.position = {
            scrollbarWidth: function() {
                if (cachedScrollbarWidth !== undefined) {
                    return cachedScrollbarWidth;
                }
                var w1, w2,
                    div = $("<div style=" +
                        "'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>" +
                        "<div style='height:300px;width:auto;'></div></div>"),
                    innerDiv = div.children()[0];

                $("body").append(div);
                w1 = innerDiv.offsetWidth;
                div.css("overflow", "scroll");

                w2 = innerDiv.offsetWidth;

                if (w1 === w2) {
                    w2 = div[0].clientWidth;
                }

                div.remove();

                return (cachedScrollbarWidth = w1 - w2);
            },
            getScrollInfo: function(within) {
                var overflowX = within.isWindow || within.isDocument ? "" :
                    within.element.css("overflow-x"),
                    overflowY = within.isWindow || within.isDocument ? "" :
                    within.element.css("overflow-y"),
                    hasOverflowX = overflowX === "scroll" ||
                    (overflowX === "auto" && within.width < within.element[0].scrollWidth),
                    hasOverflowY = overflowY === "scroll" ||
                    (overflowY === "auto" && within.height < within.element[0].scrollHeight);
                return {
                    width: hasOverflowY ? $.position.scrollbarWidth() : 0,
                    height: hasOverflowX ? $.position.scrollbarWidth() : 0
                };
            },
            getWithinInfo: function(element) {
                var withinElement = $(element || window),
                    isElemWindow = isWindow(withinElement[0]),
                    isDocument = !!withinElement[0] && withinElement[0].nodeType === 9,
                    hasOffset = !isElemWindow && !isDocument;
                return {
                    element: withinElement,
                    isWindow: isElemWindow,
                    isDocument: isDocument,
                    offset: hasOffset ? $(element).offset() : {
                        left: 0,
                        top: 0
                    },
                    scrollLeft: withinElement.scrollLeft(),
                    scrollTop: withinElement.scrollTop(),
                    width: withinElement.outerWidth(),
                    height: withinElement.outerHeight()
                };
            }
        };

        $.fn.position = function(options) {
            if (!options || !options.of) {
                return _position.apply(this, arguments);
            }

            // Make a copy, we don't want to modify arguments
            options = $.extend({}, options);

            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,

                // Make sure string options are treated as CSS selectors
                target = typeof options.of === "string" ?
                $(document).find(options.of) :
                $(options.of),

                within = $.position.getWithinInfo(options.within),
                scrollInfo = $.position.getScrollInfo(within),
                collision = (options.collision || "flip").split(" "),
                offsets = {};

            dimensions = getDimensions(target);
            if (target[0].preventDefault) {

                // Force left top to allow flipping
                options.at = "left top";
            }
            targetWidth = dimensions.width;
            targetHeight = dimensions.height;
            targetOffset = dimensions.offset;

            // Clone to reuse original targetOffset later
            basePosition = $.extend({}, targetOffset);

            // Force my and at to have valid horizontal and vertical positions
            // if a value is missing or invalid, it will be converted to center
            $.each(["my", "at"], function() {
                var pos = (options[this] || "").split(" "),
                    horizontalOffset,
                    verticalOffset;

                if (pos.length === 1) {
                    pos = rhorizontal.test(pos[0]) ?
                        pos.concat(["center"]) :
                        rvertical.test(pos[0]) ? ["center"].concat(pos) : ["center", "center"];
                }
                pos[0] = rhorizontal.test(pos[0]) ? pos[0] : "center";
                pos[1] = rvertical.test(pos[1]) ? pos[1] : "center";

                // Calculate offsets
                horizontalOffset = roffset.exec(pos[0]);
                verticalOffset = roffset.exec(pos[1]);
                offsets[this] = [
                    horizontalOffset ? horizontalOffset[0] : 0,
                    verticalOffset ? verticalOffset[0] : 0
                ];

                // Reduce to just the positions without the offsets
                options[this] = [
                    rposition.exec(pos[0])[0],
                    rposition.exec(pos[1])[0]
                ];
            });

            // Normalize collision option
            if (collision.length === 1) {
                collision[1] = collision[0];
            }

            if (options.at[0] === "right") {
                basePosition.left += targetWidth;
            } else if (options.at[0] === "center") {
                basePosition.left += targetWidth / 2;
            }

            if (options.at[1] === "bottom") {
                basePosition.top += targetHeight;
            } else if (options.at[1] === "center") {
                basePosition.top += targetHeight / 2;
            }

            atOffset = getOffsets(offsets.at, targetWidth, targetHeight);
            basePosition.left += atOffset[0];
            basePosition.top += atOffset[1];

            return this.each(function() {
                var collisionPosition, using,
                    elem = $(this),
                    elemWidth = elem.outerWidth(),
                    elemHeight = elem.outerHeight(),
                    marginLeft = parseCss(this, "marginLeft"),
                    marginTop = parseCss(this, "marginTop"),
                    collisionWidth = elemWidth + marginLeft + parseCss(this, "marginRight") +
                    scrollInfo.width,
                    collisionHeight = elemHeight + marginTop + parseCss(this, "marginBottom") +
                    scrollInfo.height,
                    position = $.extend({}, basePosition),
                    myOffset = getOffsets(offsets.my, elem.outerWidth(), elem.outerHeight());

                if (options.my[0] === "right") {
                    position.left -= elemWidth;
                } else if (options.my[0] === "center") {
                    position.left -= elemWidth / 2;
                }

                if (options.my[1] === "bottom") {
                    position.top -= elemHeight;
                } else if (options.my[1] === "center") {
                    position.top -= elemHeight / 2;
                }

                position.left += myOffset[0];
                position.top += myOffset[1];

                collisionPosition = {
                    marginLeft: marginLeft,
                    marginTop: marginTop
                };

                $.each(["left", "top"], function(i, dir) {
                    if ($.ui.position[collision[i]]) {
                        $.ui.position[collision[i]][dir](position, {
                            targetWidth: targetWidth,
                            targetHeight: targetHeight,
                            elemWidth: elemWidth,
                            elemHeight: elemHeight,
                            collisionPosition: collisionPosition,
                            collisionWidth: collisionWidth,
                            collisionHeight: collisionHeight,
                            offset: [atOffset[0] + myOffset[0], atOffset[1] + myOffset[1]],
                            my: options.my,
                            at: options.at,
                            within: within,
                            elem: elem
                        });
                    }
                });

                if (options.using) {

                    // Adds feedback as second argument to using callback, if present
                    using = function(props) {
                        var left = targetOffset.left - position.left,
                            right = left + targetWidth - elemWidth,
                            top = targetOffset.top - position.top,
                            bottom = top + targetHeight - elemHeight,
                            feedback = {
                                target: {
                                    element: target,
                                    left: targetOffset.left,
                                    top: targetOffset.top,
                                    width: targetWidth,
                                    height: targetHeight
                                },
                                element: {
                                    element: elem,
                                    left: position.left,
                                    top: position.top,
                                    width: elemWidth,
                                    height: elemHeight
                                },
                                horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
                                vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
                            };
                        if (targetWidth < elemWidth && abs(left + right) < targetWidth) {
                            feedback.horizontal = "center";
                        }
                        if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) {
                            feedback.vertical = "middle";
                        }
                        if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) {
                            feedback.important = "horizontal";
                        } else {
                            feedback.important = "vertical";
                        }
                        options.using.call(this, props, feedback);
                    };
                }

                elem.offset($.extend(position, {
                    using: using
                }));
            });
        };

        $.ui.position = {
            fit: {
                left: function(position, data) {
                    var within = data.within,
                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
                        outerWidth = within.width,
                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,
                        overLeft = withinOffset - collisionPosLeft,
                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
                        newOverRight;

                    // Element is wider than within
                    if (data.collisionWidth > outerWidth) {

                        // Element is initially over the left side of within
                        if (overLeft > 0 && overRight <= 0) {
                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -
                                withinOffset;
                            position.left += overLeft - newOverRight;

                            // Element is initially over right side of within
                        } else if (overRight > 0 && overLeft <= 0) {
                            position.left = withinOffset;

                            // Element is initially over both left and right sides of within
                        } else {
                            if (overLeft > overRight) {
                                position.left = withinOffset + outerWidth - data.collisionWidth;
                            } else {
                                position.left = withinOffset;
                            }
                        }

                        // Too far left -> align with left edge
                    } else if (overLeft > 0) {
                        position.left += overLeft;

                        // Too far right -> align with right edge
                    } else if (overRight > 0) {
                        position.left -= overRight;

                        // Adjust based on position and margin
                    } else {
                        position.left = max(position.left - collisionPosLeft, position.left);
                    }
                },
                top: function(position, data) {
                    var within = data.within,
                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
                        outerHeight = data.within.height,
                        collisionPosTop = position.top - data.collisionPosition.marginTop,
                        overTop = withinOffset - collisionPosTop,
                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
                        newOverBottom;

                    // Element is taller than within
                    if (data.collisionHeight > outerHeight) {

                        // Element is initially over the top of within
                        if (overTop > 0 && overBottom <= 0) {
                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -
                                withinOffset;
                            position.top += overTop - newOverBottom;

                            // Element is initially over bottom of within
                        } else if (overBottom > 0 && overTop <= 0) {
                            position.top = withinOffset;

                            // Element is initially over both top and bottom of within
                        } else {
                            if (overTop > overBottom) {
                                position.top = withinOffset + outerHeight - data.collisionHeight;
                            } else {
                                position.top = withinOffset;
                            }
                        }

                        // Too far up -> align with top
                    } else if (overTop > 0) {
                        position.top += overTop;

                        // Too far down -> align with bottom edge
                    } else if (overBottom > 0) {
                        position.top -= overBottom;

                        // Adjust based on position and margin
                    } else {
                        position.top = max(position.top - collisionPosTop, position.top);
                    }
                }
            },
            flip: {
                left: function(position, data) {
                    var within = data.within,
                        withinOffset = within.offset.left + within.scrollLeft,
                        outerWidth = within.width,
                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,
                        overLeft = collisionPosLeft - offsetLeft,
                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
                        myOffset = data.my[0] === "left" ?
                        -data.elemWidth :
                        data.my[0] === "right" ?
                        data.elemWidth :
                        0,
                        atOffset = data.at[0] === "left" ?
                        data.targetWidth :
                        data.at[0] === "right" ?
                        -data.targetWidth :
                        0,
                        offset = -2 * data.offset[0],
                        newOverRight,
                        newOverLeft;

                    if (overLeft < 0) {
                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -
                            outerWidth - withinOffset;
                        if (newOverRight < 0 || newOverRight < abs(overLeft)) {
                            position.left += myOffset + atOffset + offset;
                        }
                    } else if (overRight > 0) {
                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +
                            atOffset + offset - offsetLeft;
                        if (newOverLeft > 0 || abs(newOverLeft) < overRight) {
                            position.left += myOffset + atOffset + offset;
                        }
                    }
                },
                top: function(position, data) {
                    var within = data.within,
                        withinOffset = within.offset.top + within.scrollTop,
                        outerHeight = within.height,
                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
                        collisionPosTop = position.top - data.collisionPosition.marginTop,
                        overTop = collisionPosTop - offsetTop,
                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
                        top = data.my[1] === "top",
                        myOffset = top ?
                        -data.elemHeight :
                        data.my[1] === "bottom" ?
                        data.elemHeight :
                        0,
                        atOffset = data.at[1] === "top" ?
                        data.targetHeight :
                        data.at[1] === "bottom" ?
                        -data.targetHeight :
                        0,
                        offset = -2 * data.offset[1],
                        newOverTop,
                        newOverBottom;
                    if (overTop < 0) {
                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -
                            outerHeight - withinOffset;
                        if (newOverBottom < 0 || newOverBottom < abs(overTop)) {
                            position.top += myOffset + atOffset + offset;
                        }
                    } else if (overBottom > 0) {
                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +
                            offset - offsetTop;
                        if (newOverTop > 0 || abs(newOverTop) < overBottom) {
                            position.top += myOffset + atOffset + offset;
                        }
                    }
                }
            },
            flipfit: {
                left: function() {
                    $.ui.position.flip.left.apply(this, arguments);
                    $.ui.position.fit.left.apply(this, arguments);
                },
                top: function() {
                    $.ui.position.flip.top.apply(this, arguments);
                    $.ui.position.fit.top.apply(this, arguments);
                }
            }
        };

    })();

    return $.ui.position;

});


/*!
 * jQuery UI Widget 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Widget
//>>group: Core
//>>description: Provides a factory for creating stateful widgets with a common API.
//>>docs: http://api.jqueryui.com/jQuery.widget/
//>>demos: http://jqueryui.com/widget/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery", "./version"], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    var widgetUuid = 0;
    var widgetHasOwnProperty = Array.prototype.hasOwnProperty;
    var widgetSlice = Array.prototype.slice;

    $.cleanData = (function(orig) {
        return function(elems) {
            var events, elem, i;
            for (i = 0;
                (elem = elems[i]) != null; i++) {

                // Only trigger remove when necessary to save time
                events = $._data(elem, "events");
                if (events && events.remove) {
                    $(elem).triggerHandler("remove");
                }
            }
            orig(elems);
        };
    })($.cleanData);

    $.widget = function(name, base, prototype) {
        var existingConstructor, constructor, basePrototype;

        // ProxiedPrototype allows the provided prototype to remain unmodified
        // so that it can be used as a mixin for multiple widgets (#8876)
        var proxiedPrototype = {};

        var namespace = name.split(".")[0];
        name = name.split(".")[1];
        var fullName = namespace + "-" + name;

        if (!prototype) {
            prototype = base;
            base = $.Widget;
        }

        if (Array.isArray(prototype)) {
            prototype = $.extend.apply(null, [{}].concat(prototype));
        }

        // Create selector for plugin
        $.expr.pseudos[fullName.toLowerCase()] = function(elem) {
            return !!$.data(elem, fullName);
        };

        $[namespace] = $[namespace] || {};
        existingConstructor = $[namespace][name];
        constructor = $[namespace][name] = function(options, element) {

            // Allow instantiation without "new" keyword
            if (!this._createWidget) {
                return new constructor(options, element);
            }

            // Allow instantiation without initializing for simple inheritance
            // must use "new" keyword (the code above always passes args)
            if (arguments.length) {
                this._createWidget(options, element);
            }
        };

        // Extend with the existing constructor to carry over any static properties
        $.extend(constructor, existingConstructor, {
            version: prototype.version,

            // Copy the object used to create the prototype in case we need to
            // redefine the widget later
            _proto: $.extend({}, prototype),

            // Track widgets that inherit from this widget in case this widget is
            // redefined after a widget inherits from it
            _childConstructors: []
        });

        basePrototype = new base();

        // We need to make the options hash a property directly on the new instance
        // otherwise we'll modify the options hash on the prototype that we're
        // inheriting from
        basePrototype.options = $.widget.extend({}, basePrototype.options);
        $.each(prototype, function(prop, value) {
            if (typeof value !== "function") {
                proxiedPrototype[prop] = value;
                return;
            }
            proxiedPrototype[prop] = (function() {
                function _super() {
                    return base.prototype[prop].apply(this, arguments);
                }

                function _superApply(args) {
                    return base.prototype[prop].apply(this, args);
                }

                return function() {
                    var __super = this._super;
                    var __superApply = this._superApply;
                    var returnValue;

                    this._super = _super;
                    this._superApply = _superApply;

                    returnValue = value.apply(this, arguments);

                    this._super = __super;
                    this._superApply = __superApply;

                    return returnValue;
                };
            })();
        });
        constructor.prototype = $.widget.extend(basePrototype, {

            // TODO: remove support for widgetEventPrefix
            // always use the name + a colon as the prefix, e.g., draggable:start
            // don't prefix for widgets that aren't DOM-based
            widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name
        }, proxiedPrototype, {
            constructor: constructor,
            namespace: namespace,
            widgetName: name,
            widgetFullName: fullName
        });

        // If this widget is being redefined then we need to find all widgets that
        // are inheriting from it and redefine all of them so that they inherit from
        // the new version of this widget. We're essentially trying to replace one
        // level in the prototype chain.
        if (existingConstructor) {
            $.each(existingConstructor._childConstructors, function(i, child) {
                var childPrototype = child.prototype;

                // Redefine the child widget using the same prototype that was
                // originally used, but inherit from the new version of the base
                $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor,
                    child._proto);
            });

            // Remove the list of existing child constructors from the old constructor
            // so the old child constructors can be garbage collected
            delete existingConstructor._childConstructors;
        } else {
            base._childConstructors.push(constructor);
        }

        $.widget.bridge(name, constructor);

        return constructor;
    };

    $.widget.extend = function(target) {
        var input = widgetSlice.call(arguments, 1);
        var inputIndex = 0;
        var inputLength = input.length;
        var key;
        var value;

        for (; inputIndex < inputLength; inputIndex++) {
            for (key in input[inputIndex]) {
                value = input[inputIndex][key];
                if (widgetHasOwnProperty.call(input[inputIndex], key) && value !== undefined) {

                    // Clone objects
                    if ($.isPlainObject(value)) {
                        target[key] = $.isPlainObject(target[key]) ?
                            $.widget.extend({}, target[key], value) :

                            // Don't extend strings, arrays, etc. with objects
                            $.widget.extend({}, value);

                        // Copy everything else by reference
                    } else {
                        target[key] = value;
                    }
                }
            }
        }
        return target;
    };

    $.widget.bridge = function(name, object) {
        var fullName = object.prototype.widgetFullName || name;
        $.fn[name] = function(options) {
            var isMethodCall = typeof options === "string";
            var args = widgetSlice.call(arguments, 1);
            var returnValue = this;

            if (isMethodCall) {

                // If this is an empty collection, we need to have the instance method
                // return undefined instead of the jQuery instance
                if (!this.length && options === "instance") {
                    returnValue = undefined;
                } else {
                    this.each(function() {
                        var methodValue;
                        var instance = $.data(this, fullName);

                        if (options === "instance") {
                            returnValue = instance;
                            return false;
                        }

                        if (!instance) {
                            return $.error("cannot call methods on " + name +
                                " prior to initialization; " +
                                "attempted to call method '" + options + "'");
                        }

                        if (typeof instance[options] !== "function" ||
                            options.charAt(0) === "_") {
                            return $.error("no such method '" + options + "' for " + name +
                                " widget instance");
                        }

                        methodValue = instance[options].apply(instance, args);

                        if (methodValue !== instance && methodValue !== undefined) {
                            returnValue = methodValue && methodValue.jquery ?
                                returnValue.pushStack(methodValue.get()) :
                                methodValue;
                            return false;
                        }
                    });
                }
            } else {

                // Allow multiple hashes to be passed on init
                if (args.length) {
                    options = $.widget.extend.apply(null, [options].concat(args));
                }

                this.each(function() {
                    var instance = $.data(this, fullName);
                    if (instance) {
                        instance.option(options || {});
                        if (instance._init) {
                            instance._init();
                        }
                    } else {
                        $.data(this, fullName, new object(options, this));
                    }
                });
            }

            return returnValue;
        };
    };

    $.Widget = function( /* options, element */ ) {};
    $.Widget._childConstructors = [];

    $.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",

        options: {
            classes: {},
            disabled: false,

            // Callbacks
            create: null
        },

        _createWidget: function(options, element) {
            element = $(element || this.defaultElement || this)[0];
            this.element = $(element);
            this.uuid = widgetUuid++;
            this.eventNamespace = "." + this.widgetName + this.uuid;

            this.bindings = $();
            this.hoverable = $();
            this.focusable = $();
            this.classesElementLookup = {};

            if (element !== this) {
                $.data(element, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function(event) {
                        if (event.target === element) {
                            this.destroy();
                        }
                    }
                });
                this.document = $(element.style ?

                    // Element within the document
                    element.ownerDocument :

                    // Element is window or document
                    element.document || element);
                this.window = $(this.document[0].defaultView || this.document[0].parentWindow);
            }

            this.options = $.widget.extend({},
                this.options,
                this._getCreateOptions(),
                options);

            this._create();

            if (this.options.disabled) {
                this._setOptionDisabled(this.options.disabled);
            }

            this._trigger("create", null, this._getCreateEventData());
            this._init();
        },

        _getCreateOptions: function() {
            return {};
        },

        _getCreateEventData: $.noop,

        _create: $.noop,

        _init: $.noop,

        destroy: function() {
            var that = this;

            this._destroy();
            $.each(this.classesElementLookup, function(key, value) {
                that._removeClass(value, key);
            });

            // We can probably remove the unbind calls in 2.0
            // all event bindings should go through this._on()
            this.element
                .off(this.eventNamespace)
                .removeData(this.widgetFullName);
            this.widget()
                .off(this.eventNamespace)
                .removeAttr("aria-disabled");

            // Clean up events and states
            this.bindings.off(this.eventNamespace);
        },

        _destroy: $.noop,

        widget: function() {
            return this.element;
        },

        option: function(key, value) {
            var options = key;
            var parts;
            var curOption;
            var i;

            if (arguments.length === 0) {

                // Don't return a reference to the internal hash
                return $.widget.extend({}, this.options);
            }

            if (typeof key === "string") {

                // Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
                options = {};
                parts = key.split(".");
                key = parts.shift();
                if (parts.length) {
                    curOption = options[key] = $.widget.extend({}, this.options[key]);
                    for (i = 0; i < parts.length - 1; i++) {
                        curOption[parts[i]] = curOption[parts[i]] || {};
                        curOption = curOption[parts[i]];
                    }
                    key = parts.pop();
                    if (arguments.length === 1) {
                        return curOption[key] === undefined ? null : curOption[key];
                    }
                    curOption[key] = value;
                } else {
                    if (arguments.length === 1) {
                        return this.options[key] === undefined ? null : this.options[key];
                    }
                    options[key] = value;
                }
            }

            this._setOptions(options);

            return this;
        },

        _setOptions: function(options) {
            var key;

            for (key in options) {
                this._setOption(key, options[key]);
            }

            return this;
        },

        _setOption: function(key, value) {
            if (key === "classes") {
                this._setOptionClasses(value);
            }

            this.options[key] = value;

            if (key === "disabled") {
                this._setOptionDisabled(value);
            }

            return this;
        },

        _setOptionClasses: function(value) {
            var classKey, elements, currentElements;

            for (classKey in value) {
                currentElements = this.classesElementLookup[classKey];
                if (value[classKey] === this.options.classes[classKey] ||
                    !currentElements ||
                    !currentElements.length) {
                    continue;
                }

                // We are doing this to create a new jQuery object because the _removeClass() call
                // on the next line is going to destroy the reference to the current elements being
                // tracked. We need to save a copy of this collection so that we can add the new classes
                // below.
                elements = $(currentElements.get());
                this._removeClass(currentElements, classKey);

                // We don't use _addClass() here, because that uses this.options.classes
                // for generating the string of classes. We want to use the value passed in from
                // _setOption(), this is the new value of the classes option which was passed to
                // _setOption(). We pass this value directly to _classes().
                elements.addClass(this._classes({
                    element: elements,
                    keys: classKey,
                    classes: value,
                    add: true
                }));
            }
        },

        _setOptionDisabled: function(value) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!value);

            // If the widget is becoming disabled, then nothing is interactive
            if (value) {
                this._removeClass(this.hoverable, null, "ui-state-hover");
                this._removeClass(this.focusable, null, "ui-state-focus");
            }
        },

        enable: function() {
            return this._setOptions({
                disabled: false
            });
        },

        disable: function() {
            return this._setOptions({
                disabled: true
            });
        },

        _classes: function(options) {
            var full = [];
            var that = this;

            options = $.extend({
                element: this.element,
                classes: this.options.classes || {}
            }, options);

            function bindRemoveEvent() {
                options.element.each(function(_, element) {
                    var isTracked = $.map(that.classesElementLookup, function(elements) {
                            return elements;
                        })
                        .some(function(elements) {
                            return elements.is(element);
                        });

                    if (!isTracked) {
                        that._on($(element), {
                            remove: "_untrackClassesElement"
                        });
                    }
                });
            }

            function processClassString(classes, checkOption) {
                var current, i;
                for (i = 0; i < classes.length; i++) {
                    current = that.classesElementLookup[classes[i]] || $();
                    if (options.add) {
                        bindRemoveEvent();
                        current = $($.uniqueSort(current.get().concat(options.element.get())));
                    } else {
                        current = $(current.not(options.element).get());
                    }
                    that.classesElementLookup[classes[i]] = current;
                    full.push(classes[i]);
                    if (checkOption && options.classes[classes[i]]) {
                        full.push(options.classes[classes[i]]);
                    }
                }
            }

            if (options.keys) {
                processClassString(options.keys.match(/\S+/g) || [], true);
            }
            if (options.extra) {
                processClassString(options.extra.match(/\S+/g) || []);
            }

            return full.join(" ");
        },

        _untrackClassesElement: function(event) {
            var that = this;
            $.each(that.classesElementLookup, function(key, value) {
                if ($.inArray(event.target, value) !== -1) {
                    that.classesElementLookup[key] = $(value.not(event.target).get());
                }
            });

            this._off($(event.target));
        },

        _removeClass: function(element, keys, extra) {
            return this._toggleClass(element, keys, extra, false);
        },

        _addClass: function(element, keys, extra) {
            return this._toggleClass(element, keys, extra, true);
        },

        _toggleClass: function(element, keys, extra, add) {
            add = (typeof add === "boolean") ? add : extra;
            var shift = (typeof element === "string" || element === null),
                options = {
                    extra: shift ? keys : extra,
                    keys: shift ? element : keys,
                    element: shift ? this.element : element,
                    add: add
                };
            options.element.toggleClass(this._classes(options), add);
            return this;
        },

        _on: function(suppressDisabledCheck, element, handlers) {
            var delegateElement;
            var instance = this;

            // No suppressDisabledCheck flag, shuffle arguments
            if (typeof suppressDisabledCheck !== "boolean") {
                handlers = element;
                element = suppressDisabledCheck;
                suppressDisabledCheck = false;
            }

            // No element argument, shuffle and use this.element
            if (!handlers) {
                handlers = element;
                element = this.element;
                delegateElement = this.widget();
            } else {
                element = delegateElement = $(element);
                this.bindings = this.bindings.add(element);
            }

            $.each(handlers, function(event, handler) {
                function handlerProxy() {

                    // Allow widgets to customize the disabled handling
                    // - disabled as an array instead of boolean
                    // - disabled class as method for disabling individual parts
                    if (!suppressDisabledCheck &&
                        (instance.options.disabled === true ||
                            $(this).hasClass("ui-state-disabled"))) {
                        return;
                    }
                    return (typeof handler === "string" ? instance[handler] : handler)
                        .apply(instance, arguments);
                }

                // Copy the guid so direct unbinding works
                if (typeof handler !== "string") {
                    handlerProxy.guid = handler.guid =
                        handler.guid || handlerProxy.guid || $.guid++;
                }

                var match = event.match(/^([\w:-]*)\s*(.*)$/);
                var eventName = match[1] + instance.eventNamespace;
                var selector = match[2];

                if (selector) {
                    delegateElement.on(eventName, selector, handlerProxy);
                } else {
                    element.on(eventName, handlerProxy);
                }
            });
        },

        _off: function(element, eventName) {
            eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") +
                this.eventNamespace;
            element.off(eventName);

            // Clear the stack to avoid memory leaks (#10056)
            this.bindings = $(this.bindings.not(element).get());
            this.focusable = $(this.focusable.not(element).get());
            this.hoverable = $(this.hoverable.not(element).get());
        },

        _delay: function(handler, delay) {
            function handlerProxy() {
                return (typeof handler === "string" ? instance[handler] : handler)
                    .apply(instance, arguments);
            }
            var instance = this;
            return setTimeout(handlerProxy, delay || 0);
        },

        _hoverable: function(element) {
            this.hoverable = this.hoverable.add(element);
            this._on(element, {
                mouseenter: function(event) {
                    this._addClass($(event.currentTarget), null, "ui-state-hover");
                },
                mouseleave: function(event) {
                    this._removeClass($(event.currentTarget), null, "ui-state-hover");
                }
            });
        },

        _focusable: function(element) {
            this.focusable = this.focusable.add(element);
            this._on(element, {
                focusin: function(event) {
                    this._addClass($(event.currentTarget), null, "ui-state-focus");
                },
                focusout: function(event) {
                    this._removeClass($(event.currentTarget), null, "ui-state-focus");
                }
            });
        },

        _trigger: function(type, event, data) {
            var prop, orig;
            var callback = this.options[type];

            data = data || {};
            event = $.Event(event);
            event.type = (type === this.widgetEventPrefix ?
                type :
                this.widgetEventPrefix + type).toLowerCase();

            // The original event may come from any element
            // so we need to reset the target on the new event
            event.target = this.element[0];

            // Copy original event properties over to the new event
            orig = event.originalEvent;
            if (orig) {
                for (prop in orig) {
                    if (!(prop in event)) {
                        event[prop] = orig[prop];
                    }
                }
            }

            this.element.trigger(event, data);
            return !(typeof callback === "function" &&
                callback.apply(this.element[0], [event].concat(data)) === false ||
                event.isDefaultPrevented());
        }
    };

    $.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(method, defaultEffect) {
        $.Widget.prototype["_" + method] = function(element, options, callback) {
            if (typeof options === "string") {
                options = {
                    effect: options
                };
            }

            var hasOptions;
            var effectName = !options ?
                method :
                options === true || typeof options === "number" ?
                defaultEffect :
                options.effect || defaultEffect;

            options = options || {};
            if (typeof options === "number") {
                options = {
                    duration: options
                };
            } else if (options === true) {
                options = {};
            }

            hasOptions = !$.isEmptyObject(options);
            options.complete = callback;

            if (options.delay) {
                element.delay(options.delay);
            }

            if (hasOptions && $.effects && $.effects.effect[effectName]) {
                element[method](options);
            } else if (effectName !== method && element[effectName]) {
                element[effectName](options.duration, options.easing, callback);
            } else {
                element.queue(function(next) {
                    $(this)[method]();
                    if (callback) {
                        callback.call(element[0]);
                    }
                    next();
                });
            }
        };
    });

    return $.widget;

});



/*!
 * jQuery UI Effects Blind 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Blind Effect
//>>group: Effects
//>>description: Blinds the element.
//>>docs: http://api.jqueryui.com/blind-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("blind", "hide", function(options, done) {
        var map = {
                up: ["bottom", "top"],
                vertical: ["bottom", "top"],
                down: ["top", "bottom"],
                left: ["right", "left"],
                horizontal: ["right", "left"],
                right: ["left", "right"]
            },
            element = $(this),
            direction = options.direction || "up",
            start = element.cssClip(),
            animate = {
                clip: $.extend({}, start)
            },
            placeholder = $.effects.createPlaceholder(element);

        animate.clip[map[direction][0]] = animate.clip[map[direction][1]];

        if (options.mode === "show") {
            element.cssClip(animate.clip);
            if (placeholder) {
                placeholder.css($.effects.clipToBox(animate));
            }

            animate.clip = start;
        }

        if (placeholder) {
            placeholder.animate($.effects.clipToBox(animate), options.duration, options.easing);
        }

        element.animate(animate, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });

});



/*!
 * jQuery UI Effects Bounce 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Bounce Effect
//>>group: Effects
//>>description: Bounces an element horizontally or vertically n times.
//>>docs: http://api.jqueryui.com/bounce-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("bounce", function(options, done) {
        var upAnim, downAnim, refValue,
            element = $(this),

            // Defaults:
            mode = options.mode,
            hide = mode === "hide",
            show = mode === "show",
            direction = options.direction || "up",
            distance = options.distance,
            times = options.times || 5,

            // Number of internal animations
            anims = times * 2 + (show || hide ? 1 : 0),
            speed = options.duration / anims,
            easing = options.easing,

            // Utility:
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            motion = (direction === "up" || direction === "left"),
            i = 0,

            queuelen = element.queue().length;

        $.effects.createPlaceholder(element);

        refValue = element.css(ref);

        // Default distance for the BIGGEST bounce is the outer Distance / 3
        if (!distance) {
            distance = element[ref === "top" ? "outerHeight" : "outerWidth"]() / 3;
        }

        if (show) {
            downAnim = {
                opacity: 1
            };
            downAnim[ref] = refValue;

            // If we are showing, force opacity 0 and set the initial position
            // then do the "first" animation
            element
                .css("opacity", 0)
                .css(ref, motion ? -distance * 2 : distance * 2)
                .animate(downAnim, speed, easing);
        }

        // Start at the smallest distance if we are hiding
        if (hide) {
            distance = distance / Math.pow(2, times - 1);
        }

        downAnim = {};
        downAnim[ref] = refValue;

        // Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
        for (; i < times; i++) {
            upAnim = {};
            upAnim[ref] = (motion ? "-=" : "+=") + distance;

            element
                .animate(upAnim, speed, easing)
                .animate(downAnim, speed, easing);

            distance = hide ? distance * 2 : distance / 2;
        }

        // Last Bounce when Hiding
        if (hide) {
            upAnim = {
                opacity: 0
            };
            upAnim[ref] = (motion ? "-=" : "+=") + distance;

            element.animate(upAnim, speed, easing);
        }

        element.queue(done);

        $.effects.unshift(element, queuelen, anims + 1);
    });

});



/*!
 * jQuery UI Effects Clip 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Clip Effect
//>>group: Effects
//>>description: Clips the element on and off like an old TV.
//>>docs: http://api.jqueryui.com/clip-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("clip", "hide", function(options, done) {
        var start,
            animate = {},
            element = $(this),
            direction = options.direction || "vertical",
            both = direction === "both",
            horizontal = both || direction === "horizontal",
            vertical = both || direction === "vertical";

        start = element.cssClip();
        animate.clip = {
            top: vertical ? (start.bottom - start.top) / 2 : start.top,
            right: horizontal ? (start.right - start.left) / 2 : start.right,
            bottom: vertical ? (start.bottom - start.top) / 2 : start.bottom,
            left: horizontal ? (start.right - start.left) / 2 : start.left
        };

        $.effects.createPlaceholder(element);

        if (options.mode === "show") {
            element.cssClip(animate.clip);
            animate.clip = start;
        }

        element.animate(animate, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });

    });

});



/*!
 * jQuery UI Effects Drop 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Drop Effect
//>>group: Effects
//>>description: Moves an element in one direction and hides it at the same time.
//>>docs: http://api.jqueryui.com/drop-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("drop", "hide", function(options, done) {

        var distance,
            element = $(this),
            mode = options.mode,
            show = mode === "show",
            direction = options.direction || "left",
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            motion = (direction === "up" || direction === "left") ? "-=" : "+=",
            oppositeMotion = (motion === "+=") ? "-=" : "+=",
            animation = {
                opacity: 0
            };

        $.effects.createPlaceholder(element);

        distance = options.distance ||
            element[ref === "top" ? "outerHeight" : "outerWidth"](true) / 2;

        animation[ref] = motion + distance;

        if (show) {
            element.css(animation);

            animation[ref] = oppositeMotion + distance;
            animation.opacity = 1;
        }

        // Animate
        element.animate(animation, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });

});



/*!
 * jQuery UI Effects Explode 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Explode Effect
//>>group: Effects
/* eslint-disable max-len */
//>>description: Explodes an element in all directions into n pieces. Implodes an element to its original wholeness.
/* eslint-enable max-len */
//>>docs: http://api.jqueryui.com/explode-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("explode", "hide", function(options, done) {

        var i, j, left, top, mx, my,
            rows = options.pieces ? Math.round(Math.sqrt(options.pieces)) : 3,
            cells = rows,
            element = $(this),
            mode = options.mode,
            show = mode === "show",

            // Show and then visibility:hidden the element before calculating offset
            offset = element.show().css("visibility", "hidden").offset(),

            // Width and height of a piece
            width = Math.ceil(element.outerWidth() / cells),
            height = Math.ceil(element.outerHeight() / rows),
            pieces = [];

        // Children animate complete:
        function childComplete() {
            pieces.push(this);
            if (pieces.length === rows * cells) {
                animComplete();
            }
        }

        // Clone the element for each row and cell.
        for (i = 0; i < rows; i++) { // ===>
            top = offset.top + i * height;
            my = i - (rows - 1) / 2;

            for (j = 0; j < cells; j++) { // |||
                left = offset.left + j * width;
                mx = j - (cells - 1) / 2;

                // Create a clone of the now hidden main element that will be absolute positioned
                // within a wrapper div off the -left and -top equal to size of our pieces
                element
                    .clone()
                    .appendTo("body")
                    .wrap("<div></div>")
                    .css({
                        position: "absolute",
                        visibility: "visible",
                        left: -j * width,
                        top: -i * height
                    })

                    // Select the wrapper - make it overflow: hidden and absolute positioned based on
                    // where the original was located +left and +top equal to the size of pieces
                    .parent()
                    .addClass("ui-effects-explode")
                    .css({
                        position: "absolute",
                        overflow: "hidden",
                        width: width,
                        height: height,
                        left: left + (show ? mx * width : 0),
                        top: top + (show ? my * height : 0),
                        opacity: show ? 0 : 1
                    })
                    .animate({
                        left: left + (show ? 0 : mx * width),
                        top: top + (show ? 0 : my * height),
                        opacity: show ? 1 : 0
                    }, options.duration || 500, options.easing, childComplete);
            }
        }

        function animComplete() {
            element.css({
                visibility: "visible"
            });
            $(pieces).remove();
            done();
        }
    });

});



/*!
 * jQuery UI Effects Fade 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Fade Effect
//>>group: Effects
//>>description: Fades the element.
//>>docs: http://api.jqueryui.com/fade-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("fade", "toggle", function(options, done) {
        var show = options.mode === "show";

        $(this)
            .css("opacity", show ? 0 : 1)
            .animate({
                opacity: show ? 1 : 0
            }, {
                queue: false,
                duration: options.duration,
                easing: options.easing,
                complete: done
            });
    });

});



/*!
 * jQuery UI Effects Fold 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Fold Effect
//>>group: Effects
//>>description: Folds an element first horizontally and then vertically.
//>>docs: http://api.jqueryui.com/fold-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("fold", "hide", function(options, done) {

        // Create element
        var element = $(this),
            mode = options.mode,
            show = mode === "show",
            hide = mode === "hide",
            size = options.size || 15,
            percent = /([0-9]+)%/.exec(size),
            horizFirst = !!options.horizFirst,
            ref = horizFirst ? ["right", "bottom"] : ["bottom", "right"],
            duration = options.duration / 2,

            placeholder = $.effects.createPlaceholder(element),

            start = element.cssClip(),
            animation1 = {
                clip: $.extend({}, start)
            },
            animation2 = {
                clip: $.extend({}, start)
            },

            distance = [start[ref[0]], start[ref[1]]],

            queuelen = element.queue().length;

        if (percent) {
            size = parseInt(percent[1], 10) / 100 * distance[hide ? 0 : 1];
        }
        animation1.clip[ref[0]] = size;
        animation2.clip[ref[0]] = size;
        animation2.clip[ref[1]] = 0;

        if (show) {
            element.cssClip(animation2.clip);
            if (placeholder) {
                placeholder.css($.effects.clipToBox(animation2));
            }

            animation2.clip = start;
        }

        // Animate
        element
            .queue(function(next) {
                if (placeholder) {
                    placeholder
                        .animate($.effects.clipToBox(animation1), duration, options.easing)
                        .animate($.effects.clipToBox(animation2), duration, options.easing);
                }

                next();
            })
            .animate(animation1, duration, options.easing)
            .animate(animation2, duration, options.easing)
            .queue(done);

        $.effects.unshift(element, queuelen, 4);
    });

});



/*!
 * jQuery UI Effects Highlight 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Highlight Effect
//>>group: Effects
//>>description: Highlights the background of an element in a defined color for a custom duration.
//>>docs: http://api.jqueryui.com/highlight-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("highlight", "show", function(options, done) {
        var element = $(this),
            animation = {
                backgroundColor: element.css("backgroundColor")
            };

        if (options.mode === "hide") {
            animation.opacity = 0;
        }

        $.effects.saveStyle(element);

        element
            .css({
                backgroundImage: "none",
                backgroundColor: options.color || "#ffff99"
            })
            .animate(animation, {
                queue: false,
                duration: options.duration,
                easing: options.easing,
                complete: done
            });
    });

});



/*!
 * jQuery UI Effects Size 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Size Effect
//>>group: Effects
//>>description: Resize an element to a specified width and height.
//>>docs: http://api.jqueryui.com/size-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("size", function(options, done) {

        // Create element
        var baseline, factor, temp,
            element = $(this),

            // Copy for children
            cProps = ["fontSize"],
            vProps = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            hProps = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],

            // Set options
            mode = options.mode,
            restore = mode !== "effect",
            scale = options.scale || "both",
            origin = options.origin || ["middle", "center"],
            position = element.css("position"),
            pos = element.position(),
            original = $.effects.scaledDimensions(element),
            from = options.from || original,
            to = options.to || $.effects.scaledDimensions(element, 0);

        $.effects.createPlaceholder(element);

        if (mode === "show") {
            temp = from;
            from = to;
            to = temp;
        }

        // Set scaling factor
        factor = {
            from: {
                y: from.height / original.height,
                x: from.width / original.width
            },
            to: {
                y: to.height / original.height,
                x: to.width / original.width
            }
        };

        // Scale the css box
        if (scale === "box" || scale === "both") {

            // Vertical props scaling
            if (factor.from.y !== factor.to.y) {
                from = $.effects.setTransition(element, vProps, factor.from.y, from);
                to = $.effects.setTransition(element, vProps, factor.to.y, to);
            }

            // Horizontal props scaling
            if (factor.from.x !== factor.to.x) {
                from = $.effects.setTransition(element, hProps, factor.from.x, from);
                to = $.effects.setTransition(element, hProps, factor.to.x, to);
            }
        }

        // Scale the content
        if (scale === "content" || scale === "both") {

            // Vertical props scaling
            if (factor.from.y !== factor.to.y) {
                from = $.effects.setTransition(element, cProps, factor.from.y, from);
                to = $.effects.setTransition(element, cProps, factor.to.y, to);
            }
        }

        // Adjust the position properties based on the provided origin points
        if (origin) {
            baseline = $.effects.getBaseline(origin, original);
            from.top = (original.outerHeight - from.outerHeight) * baseline.y + pos.top;
            from.left = (original.outerWidth - from.outerWidth) * baseline.x + pos.left;
            to.top = (original.outerHeight - to.outerHeight) * baseline.y + pos.top;
            to.left = (original.outerWidth - to.outerWidth) * baseline.x + pos.left;
        }
        delete from.outerHeight;
        delete from.outerWidth;
        element.css(from);

        // Animate the children if desired
        if (scale === "content" || scale === "both") {

            vProps = vProps.concat(["marginTop", "marginBottom"]).concat(cProps);
            hProps = hProps.concat(["marginLeft", "marginRight"]);

            // Only animate children with width attributes specified
            // TODO: is this right? should we include anything with css width specified as well
            element.find("*[width]").each(function() {
                var child = $(this),
                    childOriginal = $.effects.scaledDimensions(child),
                    childFrom = {
                        height: childOriginal.height * factor.from.y,
                        width: childOriginal.width * factor.from.x,
                        outerHeight: childOriginal.outerHeight * factor.from.y,
                        outerWidth: childOriginal.outerWidth * factor.from.x
                    },
                    childTo = {
                        height: childOriginal.height * factor.to.y,
                        width: childOriginal.width * factor.to.x,
                        outerHeight: childOriginal.height * factor.to.y,
                        outerWidth: childOriginal.width * factor.to.x
                    };

                // Vertical props scaling
                if (factor.from.y !== factor.to.y) {
                    childFrom = $.effects.setTransition(child, vProps, factor.from.y, childFrom);
                    childTo = $.effects.setTransition(child, vProps, factor.to.y, childTo);
                }

                // Horizontal props scaling
                if (factor.from.x !== factor.to.x) {
                    childFrom = $.effects.setTransition(child, hProps, factor.from.x, childFrom);
                    childTo = $.effects.setTransition(child, hProps, factor.to.x, childTo);
                }

                if (restore) {
                    $.effects.saveStyle(child);
                }

                // Animate children
                child.css(childFrom);
                child.animate(childTo, options.duration, options.easing, function() {

                    // Restore children
                    if (restore) {
                        $.effects.restoreStyle(child);
                    }
                });
            });
        }

        // Animate
        element.animate(to, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: function() {

                var offset = element.offset();

                if (to.opacity === 0) {
                    element.css("opacity", from.opacity);
                }

                if (!restore) {
                    element
                        .css("position", position === "static" ? "relative" : position)
                        .offset(offset);

                    // Need to save style here so that automatic style restoration
                    // doesn't restore to the original styles from before the animation.
                    $.effects.saveStyle(element);
                }

                done();
            }
        });

    });

});




/*!
 * jQuery UI Effects Scale 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Scale Effect
//>>group: Effects
//>>description: Grows or shrinks an element and its content.
//>>docs: http://api.jqueryui.com/scale-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect",
            "./effect-size"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("scale", function(options, done) {

        // Create element
        var el = $(this),
            mode = options.mode,
            percent = parseInt(options.percent, 10) ||
            (parseInt(options.percent, 10) === 0 ? 0 : (mode !== "effect" ? 0 : 100)),

            newOptions = $.extend(true, {
                from: $.effects.scaledDimensions(el),
                to: $.effects.scaledDimensions(el, percent, options.direction || "both"),
                origin: options.origin || ["middle", "center"]
            }, options);

        // Fade option to support puff
        if (options.fade) {
            newOptions.from.opacity = 1;
            newOptions.to.opacity = 0;
        }

        $.effects.effect.size.call(this, newOptions, done);
    });

});




/*!
 * jQuery UI Effects Puff 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Puff Effect
//>>group: Effects
//>>description: Creates a puff effect by scaling the element up and hiding it at the same time.
//>>docs: http://api.jqueryui.com/puff-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect",
            "./effect-scale"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("puff", "hide", function(options, done) {
        var newOptions = $.extend(true, {}, options, {
            fade: true,
            percent: parseInt(options.percent, 10) || 150
        });

        $.effects.effect.scale.call(this, newOptions, done);
    });

});



/*!
 * jQuery UI Effects Pulsate 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Pulsate Effect
//>>group: Effects
//>>description: Pulsates an element n times by changing the opacity to zero and back.
//>>docs: http://api.jqueryui.com/pulsate-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("pulsate", "show", function(options, done) {
        var element = $(this),
            mode = options.mode,
            show = mode === "show",
            hide = mode === "hide",
            showhide = show || hide,

            // Showing or hiding leaves off the "last" animation
            anims = ((options.times || 5) * 2) + (showhide ? 1 : 0),
            duration = options.duration / anims,
            animateTo = 0,
            i = 1,
            queuelen = element.queue().length;

        if (show || !element.is(":visible")) {
            element.css("opacity", 0).show();
            animateTo = 1;
        }

        // Anims - 1 opacity "toggles"
        for (; i < anims; i++) {
            element.animate({
                opacity: animateTo
            }, duration, options.easing);
            animateTo = 1 - animateTo;
        }

        element.animate({
            opacity: animateTo
        }, duration, options.easing);

        element.queue(done);

        $.effects.unshift(element, queuelen, anims + 1);
    });

});



/*!
 * jQuery UI Effects Shake 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Shake Effect
//>>group: Effects
//>>description: Shakes an element horizontally or vertically n times.
//>>docs: http://api.jqueryui.com/shake-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("shake", function(options, done) {

        var i = 1,
            element = $(this),
            direction = options.direction || "left",
            distance = options.distance || 20,
            times = options.times || 3,
            anims = times * 2 + 1,
            speed = Math.round(options.duration / anims),
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            positiveMotion = (direction === "up" || direction === "left"),
            animation = {},
            animation1 = {},
            animation2 = {},

            queuelen = element.queue().length;

        $.effects.createPlaceholder(element);

        // Animation
        animation[ref] = (positiveMotion ? "-=" : "+=") + distance;
        animation1[ref] = (positiveMotion ? "+=" : "-=") + distance * 2;
        animation2[ref] = (positiveMotion ? "-=" : "+=") + distance * 2;

        // Animate
        element.animate(animation, speed, options.easing);

        // Shakes
        for (; i < times; i++) {
            element
                .animate(animation1, speed, options.easing)
                .animate(animation2, speed, options.easing);
        }

        element
            .animate(animation1, speed, options.easing)
            .animate(animation, speed / 2, options.easing)
            .queue(done);

        $.effects.unshift(element, queuelen, anims + 1);
    });

});



/*!
 * jQuery UI Effects Slide 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Slide Effect
//>>group: Effects
//>>description: Slides an element in and out of the viewport.
//>>docs: http://api.jqueryui.com/slide-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.effects.define("slide", "show", function(options, done) {
        var startClip, startRef,
            element = $(this),
            map = {
                up: ["bottom", "top"],
                down: ["top", "bottom"],
                left: ["right", "left"],
                right: ["left", "right"]
            },
            mode = options.mode,
            direction = options.direction || "left",
            ref = (direction === "up" || direction === "down") ? "top" : "left",
            positiveMotion = (direction === "up" || direction === "left"),
            distance = options.distance ||
            element[ref === "top" ? "outerHeight" : "outerWidth"](true),
            animation = {};

        $.effects.createPlaceholder(element);

        startClip = element.cssClip();
        startRef = element.position()[ref];

        // Define hide animation
        animation[ref] = (positiveMotion ? -1 : 1) * distance + startRef;
        animation.clip = element.cssClip();
        animation.clip[map[direction][1]] = animation.clip[map[direction][0]];

        // Reverse the animation if we're showing
        if (mode === "show") {
            element.cssClip(animation.clip);
            element.css(ref, animation[ref]);
            animation.clip = startClip;
            animation[ref] = startRef;
        }

        // Actually animate
        element.animate(animation, {
            queue: false,
            duration: options.duration,
            easing: options.easing,
            complete: done
        });
    });

});



/*!
 * jQuery UI Effects Transfer 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Transfer Effect
//>>group: Effects
//>>description: Displays a transfer effect from one element to another.
//>>docs: http://api.jqueryui.com/transfer-effect/
//>>demos: http://jqueryui.com/effect/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../effect"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    var effect;
    if ($.uiBackCompat !== false) {
        effect = $.effects.define("transfer", function(options, done) {
            $(this).transfer(options, done);
        });
    }
    return effect;

});





/*!
 * jQuery UI Accordion 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Accordion
//>>group: Widgets
/* eslint-disable max-len */
//>>description: Displays collapsible content panels for presenting information in a limited amount of space.
/* eslint-enable max-len */
//>>docs: http://api.jqueryui.com/accordion/
//>>demos: http://jqueryui.com/accordion/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/accordion.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../keycode",
            "../unique-id",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.accordion", {
        version: "1.13.0",
        options: {
            active: 0,
            animate: {},
            classes: {
                "ui-accordion-header": "ui-corner-top",
                "ui-accordion-header-collapsed": "ui-corner-all",
                "ui-accordion-content": "ui-corner-bottom"
            },
            collapsible: false,
            event: "click",
            header: function(elem) {
                return elem.find("> li > :first-child").add(elem.find("> :not(li)").even());
            },
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },

            // Callbacks
            activate: null,
            beforeActivate: null
        },

        hideProps: {
            borderTopWidth: "hide",
            borderBottomWidth: "hide",
            paddingTop: "hide",
            paddingBottom: "hide",
            height: "hide"
        },

        showProps: {
            borderTopWidth: "show",
            borderBottomWidth: "show",
            paddingTop: "show",
            paddingBottom: "show",
            height: "show"
        },

        _create: function() {
            var options = this.options;

            this.prevShow = this.prevHide = $();
            this._addClass("ui-accordion", "ui-widget ui-helper-reset");
            this.element.attr("role", "tablist");

            // Don't allow collapsible: false and active: false / null
            if (!options.collapsible && (options.active === false || options.active == null)) {
                options.active = 0;
            }

            this._processPanels();

            // handle negative values
            if (options.active < 0) {
                options.active += this.headers.length;
            }
            this._refresh();
        },

        _getCreateEventData: function() {
            return {
                header: this.active,
                panel: !this.active.length ? $() : this.active.next()
            };
        },

        _createIcons: function() {
            var icon, children,
                icons = this.options.icons;

            if (icons) {
                icon = $("<span>");
                this._addClass(icon, "ui-accordion-header-icon", "ui-icon " + icons.header);
                icon.prependTo(this.headers);
                children = this.active.children(".ui-accordion-header-icon");
                this._removeClass(children, icons.header)
                    ._addClass(children, null, icons.activeHeader)
                    ._addClass(this.headers, "ui-accordion-icons");
            }
        },

        _destroyIcons: function() {
            this._removeClass(this.headers, "ui-accordion-icons");
            this.headers.children(".ui-accordion-header-icon").remove();
        },

        _destroy: function() {
            var contents;

            // Clean up main element
            this.element.removeAttr("role");

            // Clean up headers
            this.headers
                .removeAttr("role aria-expanded aria-selected aria-controls tabIndex")
                .removeUniqueId();

            this._destroyIcons();

            // Clean up content panels
            contents = this.headers.next()
                .css("display", "")
                .removeAttr("role aria-hidden aria-labelledby")
                .removeUniqueId();

            if (this.options.heightStyle !== "content") {
                contents.css("height", "");
            }
        },

        _setOption: function(key, value) {
            if (key === "active") {

                // _activate() will handle invalid values and update this.options
                this._activate(value);
                return;
            }

            if (key === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event);
                }
                this._setupEvents(value);
            }

            this._super(key, value);

            // Setting collapsible: false while collapsed; open first panel
            if (key === "collapsible" && !value && this.options.active === false) {
                this._activate(0);
            }

            if (key === "icons") {
                this._destroyIcons();
                if (value) {
                    this._createIcons();
                }
            }
        },

        _setOptionDisabled: function(value) {
            this._super(value);

            this.element.attr("aria-disabled", value);

            // Support: IE8 Only
            // #5332 / #6059 - opacity doesn't cascade to positioned elements in IE
            // so we need to add the disabled class to the headers and panels
            this._toggleClass(null, "ui-state-disabled", !!value);
            this._toggleClass(this.headers.add(this.headers.next()), null, "ui-state-disabled", !!value);
        },

        _keydown: function(event) {
            if (event.altKey || event.ctrlKey) {
                return;
            }

            var keyCode = $.ui.keyCode,
                length = this.headers.length,
                currentIndex = this.headers.index(event.target),
                toFocus = false;

            switch (event.keyCode) {
                case keyCode.RIGHT:
                case keyCode.DOWN:
                    toFocus = this.headers[(currentIndex + 1) % length];
                    break;
                case keyCode.LEFT:
                case keyCode.UP:
                    toFocus = this.headers[(currentIndex - 1 + length) % length];
                    break;
                case keyCode.SPACE:
                case keyCode.ENTER:
                    this._eventHandler(event);
                    break;
                case keyCode.HOME:
                    toFocus = this.headers[0];
                    break;
                case keyCode.END:
                    toFocus = this.headers[length - 1];
                    break;
            }

            if (toFocus) {
                $(event.target).attr("tabIndex", -1);
                $(toFocus).attr("tabIndex", 0);
                $(toFocus).trigger("focus");
                event.preventDefault();
            }
        },

        _panelKeyDown: function(event) {
            if (event.keyCode === $.ui.keyCode.UP && event.ctrlKey) {
                $(event.currentTarget).prev().trigger("focus");
            }
        },

        refresh: function() {
            var options = this.options;
            this._processPanels();

            // Was collapsed or no panel
            if ((options.active === false && options.collapsible === true) ||
                !this.headers.length) {
                options.active = false;
                this.active = $();

                // active false only when collapsible is true
            } else if (options.active === false) {
                this._activate(0);

                // was active, but active panel is gone
            } else if (this.active.length && !$.contains(this.element[0], this.active[0])) {

                // all remaining panel are disabled
                if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
                    options.active = false;
                    this.active = $();

                    // activate previous panel
                } else {
                    this._activate(Math.max(0, options.active - 1));
                }

                // was active, active panel still exists
            } else {

                // make sure active index is correct
                options.active = this.headers.index(this.active);
            }

            this._destroyIcons();

            this._refresh();
        },

        _processPanels: function() {
            var prevHeaders = this.headers,
                prevPanels = this.panels;

            if (typeof this.options.header === "function") {
                this.headers = this.options.header(this.element);
            } else {
                this.headers = this.element.find(this.options.header);
            }
            this._addClass(this.headers, "ui-accordion-header ui-accordion-header-collapsed",
                "ui-state-default");

            this.panels = this.headers.next().filter(":not(.ui-accordion-content-active)").hide();
            this._addClass(this.panels, "ui-accordion-content", "ui-helper-reset ui-widget-content");

            // Avoid memory leaks (#10056)
            if (prevPanels) {
                this._off(prevHeaders.not(this.headers));
                this._off(prevPanels.not(this.panels));
            }
        },

        _refresh: function() {
            var maxHeight,
                options = this.options,
                heightStyle = options.heightStyle,
                parent = this.element.parent();

            this.active = this._findActive(options.active);
            this._addClass(this.active, "ui-accordion-header-active", "ui-state-active")
                ._removeClass(this.active, "ui-accordion-header-collapsed");
            this._addClass(this.active.next(), "ui-accordion-content-active");
            this.active.next().show();

            this.headers
                .attr("role", "tab")
                .each(function() {
                    var header = $(this),
                        headerId = header.uniqueId().attr("id"),
                        panel = header.next(),
                        panelId = panel.uniqueId().attr("id");
                    header.attr("aria-controls", panelId);
                    panel.attr("aria-labelledby", headerId);
                })
                .next()
                .attr("role", "tabpanel");

            this.headers
                .not(this.active)
                .attr({
                    "aria-selected": "false",
                    "aria-expanded": "false",
                    tabIndex: -1
                })
                .next()
                .attr({
                    "aria-hidden": "true"
                })
                .hide();

            // Make sure at least one header is in the tab order
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0);
            } else {
                this.active.attr({
                        "aria-selected": "true",
                        "aria-expanded": "true",
                        tabIndex: 0
                    })
                    .next()
                    .attr({
                        "aria-hidden": "false"
                    });
            }

            this._createIcons();

            this._setupEvents(options.event);

            if (heightStyle === "fill") {
                maxHeight = parent.height();
                this.element.siblings(":visible").each(function() {
                    var elem = $(this),
                        position = elem.css("position");

                    if (position === "absolute" || position === "fixed") {
                        return;
                    }
                    maxHeight -= elem.outerHeight(true);
                });

                this.headers.each(function() {
                    maxHeight -= $(this).outerHeight(true);
                });

                this.headers.next()
                    .each(function() {
                        $(this).height(Math.max(0, maxHeight -
                            $(this).innerHeight() + $(this).height()));
                    })
                    .css("overflow", "auto");
            } else if (heightStyle === "auto") {
                maxHeight = 0;
                this.headers.next()
                    .each(function() {
                        var isVisible = $(this).is(":visible");
                        if (!isVisible) {
                            $(this).show();
                        }
                        maxHeight = Math.max(maxHeight, $(this).css("height", "").height());
                        if (!isVisible) {
                            $(this).hide();
                        }
                    })
                    .height(maxHeight);
            }
        },

        _activate: function(index) {
            var active = this._findActive(index)[0];

            // Trying to activate the already active panel
            if (active === this.active[0]) {
                return;
            }

            // Trying to collapse, simulate a click on the currently active header
            active = active || this.active[0];

            this._eventHandler({
                target: active,
                currentTarget: active,
                preventDefault: $.noop
            });
        },

        _findActive: function(selector) {
            return typeof selector === "number" ? this.headers.eq(selector) : $();
        },

        _setupEvents: function(event) {
            var events = {
                keydown: "_keydown"
            };
            if (event) {
                $.each(event.split(" "), function(index, eventName) {
                    events[eventName] = "_eventHandler";
                });
            }

            this._off(this.headers.add(this.headers.next()));
            this._on(this.headers, events);
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            });
            this._hoverable(this.headers);
            this._focusable(this.headers);
        },

        _eventHandler: function(event) {
            var activeChildren, clickedChildren,
                options = this.options,
                active = this.active,
                clicked = $(event.currentTarget),
                clickedIsActive = clicked[0] === active[0],
                collapsing = clickedIsActive && options.collapsible,
                toShow = collapsing ? $() : clicked.next(),
                toHide = active.next(),
                eventData = {
                    oldHeader: active,
                    oldPanel: toHide,
                    newHeader: collapsing ? $() : clicked,
                    newPanel: toShow
                };

            event.preventDefault();

            if (

                // click on active header, but not collapsible
                (clickedIsActive && !options.collapsible) ||

                // allow canceling activation
                (this._trigger("beforeActivate", event, eventData) === false)) {
                return;
            }

            options.active = collapsing ? false : this.headers.index(clicked);

            // When the call to ._toggle() comes after the class changes
            // it causes a very odd bug in IE 8 (see #6720)
            this.active = clickedIsActive ? $() : clicked;
            this._toggle(eventData);

            // Switch classes
            // corner classes on the previously active header stay after the animation
            this._removeClass(active, "ui-accordion-header-active", "ui-state-active");
            if (options.icons) {
                activeChildren = active.children(".ui-accordion-header-icon");
                this._removeClass(activeChildren, null, options.icons.activeHeader)
                    ._addClass(activeChildren, null, options.icons.header);
            }

            if (!clickedIsActive) {
                this._removeClass(clicked, "ui-accordion-header-collapsed")
                    ._addClass(clicked, "ui-accordion-header-active", "ui-state-active");
                if (options.icons) {
                    clickedChildren = clicked.children(".ui-accordion-header-icon");
                    this._removeClass(clickedChildren, null, options.icons.header)
                        ._addClass(clickedChildren, null, options.icons.activeHeader);
                }

                this._addClass(clicked.next(), "ui-accordion-content-active");
            }
        },

        _toggle: function(data) {
            var toShow = data.newPanel,
                toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

            // Handle activating a panel during the animation for another activation
            this.prevShow.add(this.prevHide).stop(true, true);
            this.prevShow = toShow;
            this.prevHide = toHide;

            if (this.options.animate) {
                this._animate(toShow, toHide, data);
            } else {
                toHide.hide();
                toShow.show();
                this._toggleComplete(data);
            }

            toHide.attr({
                "aria-hidden": "true"
            });
            toHide.prev().attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            });

            // if we're switching panels, remove the old header from the tab order
            // if we're opening from collapsed state, remove the previous header from the tab order
            // if we're collapsing, then keep the collapsing header in the tab order
            if (toShow.length && toHide.length) {
                toHide.prev().attr({
                    "tabIndex": -1,
                    "aria-expanded": "false"
                });
            } else if (toShow.length) {
                this.headers.filter(function() {
                        return parseInt($(this).attr("tabIndex"), 10) === 0;
                    })
                    .attr("tabIndex", -1);
            }

            toShow
                .attr("aria-hidden", "false")
                .prev()
                .attr({
                    "aria-selected": "true",
                    "aria-expanded": "true",
                    tabIndex: 0
                });
        },

        _animate: function(toShow, toHide, data) {
            var total, easing, duration,
                that = this,
                adjust = 0,
                boxSizing = toShow.css("box-sizing"),
                down = toShow.length &&
                (!toHide.length || (toShow.index() < toHide.index())),
                animate = this.options.animate || {},
                options = down && animate.down || animate,
                complete = function() {
                    that._toggleComplete(data);
                };

            if (typeof options === "number") {
                duration = options;
            }
            if (typeof options === "string") {
                easing = options;
            }

            // fall back from options to animation in case of partial down settings
            easing = easing || options.easing || animate.easing;
            duration = duration || options.duration || animate.duration;

            if (!toHide.length) {
                return toShow.animate(this.showProps, duration, easing, complete);
            }
            if (!toShow.length) {
                return toHide.animate(this.hideProps, duration, easing, complete);
            }

            total = toShow.show().outerHeight();
            toHide.animate(this.hideProps, {
                duration: duration,
                easing: easing,
                step: function(now, fx) {
                    fx.now = Math.round(now);
                }
            });
            toShow
                .hide()
                .animate(this.showProps, {
                    duration: duration,
                    easing: easing,
                    complete: complete,
                    step: function(now, fx) {
                        fx.now = Math.round(now);
                        if (fx.prop !== "height") {
                            if (boxSizing === "content-box") {
                                adjust += fx.now;
                            }
                        } else if (that.options.heightStyle !== "content") {
                            fx.now = Math.round(total - toHide.outerHeight() - adjust);
                            adjust = 0;
                        }
                    }
                });
        },

        _toggleComplete: function(data) {
            var toHide = data.oldPanel,
                prev = toHide.prev();

            this._removeClass(toHide, "ui-accordion-content-active");
            this._removeClass(prev, "ui-accordion-header-active")
                ._addClass(prev, "ui-accordion-header-collapsed");

            // Work around for rendering bug in IE (#5421)
            if (toHide.length) {
                toHide.parent()[0].className = toHide.parent()[0].className;
            }
            this._trigger("activate", null, data);
        }
    });

});







/*!
 * jQuery UI Menu 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Menu
//>>group: Widgets
//>>description: Creates nestable menus.
//>>docs: http://api.jqueryui.com/menu/
//>>demos: http://jqueryui.com/menu/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/menu.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../keycode",
            "../position",
            "../safe-active-element",
            "../unique-id",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.menu", {
        version: "1.13.0",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-caret-1-e"
            },
            items: "> *",
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",

            // Callbacks
            blur: null,
            focus: null,
            select: null
        },

        _create: function() {
            this.activeMenu = this.element;

            // Flag used to prevent firing of the click handler
            // as the event bubbles up through nested menus
            this.mouseHandled = false;
            this.lastMousePosition = {
                x: null,
                y: null
            };
            this.element
                .uniqueId()
                .attr({
                    role: this.options.role,
                    tabIndex: 0
                });

            this._addClass("ui-menu", "ui-widget ui-widget-content");
            this._on({

                // Prevent focus from sticking to links inside menu after clicking
                // them (focus should always stay on UL during navigation).
                "mousedown .ui-menu-item": function(event) {
                    event.preventDefault();

                    this._activateItem(event);
                },
                "click .ui-menu-item": function(event) {
                    var target = $(event.target);
                    var active = $($.ui.safeActiveElement(this.document[0]));
                    if (!this.mouseHandled && target.not(".ui-state-disabled").length) {
                        this.select(event);

                        // Only set the mouseHandled flag if the event will bubble, see #9469.
                        if (!event.isPropagationStopped()) {
                            this.mouseHandled = true;
                        }

                        // Open submenu on click
                        if (target.has(".ui-menu").length) {
                            this.expand(event);
                        } else if (!this.element.is(":focus") &&
                            active.closest(".ui-menu").length) {

                            // Redirect focus to the menu
                            this.element.trigger("focus", [true]);

                            // If the active item is on the top level, let it stay active.
                            // Otherwise, blur the active item since it is no longer visible.
                            if (this.active && this.active.parents(".ui-menu").length === 1) {
                                clearTimeout(this.timer);
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": "_activateItem",
                "mousemove .ui-menu-item": "_activateItem",
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(event, keepActiveItem) {

                    // If there's already an active item, keep it active
                    // If not, activate the first item
                    var item = this.active || this._menuItems().first();

                    if (!keepActiveItem) {
                        this.focus(event, item);
                    }
                },
                blur: function(event) {
                    this._delay(function() {
                        var notContained = !$.contains(
                            this.element[0],
                            $.ui.safeActiveElement(this.document[0])
                        );
                        if (notContained) {
                            this.collapseAll(event);
                        }
                    });
                },
                keydown: "_keydown"
            });

            this.refresh();

            // Clicks outside of a menu collapse any open menus
            this._on(this.document, {
                click: function(event) {
                    if (this._closeOnDocumentClick(event)) {
                        this.collapseAll(event, true);
                    }

                    // Reset the mouseHandled flag
                    this.mouseHandled = false;
                }
            });
        },

        _activateItem: function(event) {

            // Ignore mouse events while typeahead is active, see #10458.
            // Prevents focusing the wrong item when typeahead causes a scroll while the mouse
            // is over an item in the menu
            if (this.previousFilter) {
                return;
            }

            // If the mouse didn't actually move, but the page was scrolled, ignore the event (#9356)
            if (event.clientX === this.lastMousePosition.x &&
                event.clientY === this.lastMousePosition.y) {
                return;
            }

            this.lastMousePosition = {
                x: event.clientX,
                y: event.clientY
            };

            var actualTarget = $(event.target).closest(".ui-menu-item"),
                target = $(event.currentTarget);

            // Ignore bubbled events on parent items, see #11641
            if (actualTarget[0] !== target[0]) {
                return;
            }

            // If the item is already active, there's nothing to do
            if (target.is(".ui-state-active")) {
                return;
            }

            // Remove ui-state-active class from siblings of the newly focused menu item
            // to avoid a jump caused by adjacent elements both having a class with a border
            this._removeClass(target.siblings().children(".ui-state-active"),
                null, "ui-state-active");
            this.focus(event, target);
        },

        _destroy: function() {
            var items = this.element.find(".ui-menu-item")
                .removeAttr("role aria-disabled"),
                submenus = items.children(".ui-menu-item-wrapper")
                .removeUniqueId()
                .removeAttr("tabIndex role aria-haspopup");

            // Destroy (sub)menus
            this.element
                .removeAttr("aria-activedescendant")
                .find(".ui-menu").addBack()
                .removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled " +
                    "tabIndex")
                .removeUniqueId()
                .show();

            submenus.children().each(function() {
                var elem = $(this);
                if (elem.data("ui-menu-submenu-caret")) {
                    elem.remove();
                }
            });
        },

        _keydown: function(event) {
            var match, prev, character, skip,
                preventDefault = true;

            switch (event.keyCode) {
                case $.ui.keyCode.PAGE_UP:
                    this.previousPage(event);
                    break;
                case $.ui.keyCode.PAGE_DOWN:
                    this.nextPage(event);
                    break;
                case $.ui.keyCode.HOME:
                    this._move("first", "first", event);
                    break;
                case $.ui.keyCode.END:
                    this._move("last", "last", event);
                    break;
                case $.ui.keyCode.UP:
                    this.previous(event);
                    break;
                case $.ui.keyCode.DOWN:
                    this.next(event);
                    break;
                case $.ui.keyCode.LEFT:
                    this.collapse(event);
                    break;
                case $.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) {
                        this.expand(event);
                    }
                    break;
                case $.ui.keyCode.ENTER:
                case $.ui.keyCode.SPACE:
                    this._activate(event);
                    break;
                case $.ui.keyCode.ESCAPE:
                    this.collapse(event);
                    break;
                default:
                    preventDefault = false;
                    prev = this.previousFilter || "";
                    skip = false;

                    // Support number pad values
                    character = event.keyCode >= 96 && event.keyCode <= 105 ?
                        (event.keyCode - 96).toString() : String.fromCharCode(event.keyCode);

                    clearTimeout(this.filterTimer);

                    if (character === prev) {
                        skip = true;
                    } else {
                        character = prev + character;
                    }

                    match = this._filterMenuItems(character);
                    match = skip && match.index(this.active.next()) !== -1 ?
                        this.active.nextAll(".ui-menu-item") :
                        match;

                    // If no matches on the current filter, reset to the last character pressed
                    // to move down the menu to the first item that starts with that character
                    if (!match.length) {
                        character = String.fromCharCode(event.keyCode);
                        match = this._filterMenuItems(character);
                    }

                    if (match.length) {
                        this.focus(event, match);
                        this.previousFilter = character;
                        this.filterTimer = this._delay(function() {
                            delete this.previousFilter;
                        }, 1000);
                    } else {
                        delete this.previousFilter;
                    }
            }

            if (preventDefault) {
                event.preventDefault();
            }
        },

        _activate: function(event) {
            if (this.active && !this.active.is(".ui-state-disabled")) {
                if (this.active.children("[aria-haspopup='true']").length) {
                    this.expand(event);
                } else {
                    this.select(event);
                }
            }
        },

        refresh: function() {
            var menus, items, newSubmenus, newItems, newWrappers,
                that = this,
                icon = this.options.icons.submenu,
                submenus = this.element.find(this.options.menus);

            this._toggleClass("ui-menu-icons", null, !!this.element.find(".ui-icon").length);

            // Initialize nested menus
            newSubmenus = submenus.filter(":not(.ui-menu)")
                .hide()
                .attr({
                    role: this.options.role,
                    "aria-hidden": "true",
                    "aria-expanded": "false"
                })
                .each(function() {
                    var menu = $(this),
                        item = menu.prev(),
                        submenuCaret = $("<span>").data("ui-menu-submenu-caret", true);

                    that._addClass(submenuCaret, "ui-menu-icon", "ui-icon " + icon);
                    item
                        .attr("aria-haspopup", "true")
                        .prepend(submenuCaret);
                    menu.attr("aria-labelledby", item.attr("id"));
                });

            this._addClass(newSubmenus, "ui-menu", "ui-widget ui-widget-content ui-front");

            menus = submenus.add(this.element);
            items = menus.find(this.options.items);

            // Initialize menu-items containing spaces and/or dashes only as dividers
            items.not(".ui-menu-item").each(function() {
                var item = $(this);
                if (that._isDivider(item)) {
                    that._addClass(item, "ui-menu-divider", "ui-widget-content");
                }
            });

            // Don't refresh list items that are already adapted
            newItems = items.not(".ui-menu-item, .ui-menu-divider");
            newWrappers = newItems.children()
                .not(".ui-menu")
                .uniqueId()
                .attr({
                    tabIndex: -1,
                    role: this._itemRole()
                });
            this._addClass(newItems, "ui-menu-item")
                ._addClass(newWrappers, "ui-menu-item-wrapper");

            // Add aria-disabled attribute to any disabled menu item
            items.filter(".ui-state-disabled").attr("aria-disabled", "true");

            // If the active item has been removed, blur the menu
            if (this.active && !$.contains(this.element[0], this.active[0])) {
                this.blur();
            }
        },

        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role];
        },

        _setOption: function(key, value) {
            if (key === "icons") {
                var icons = this.element.find(".ui-menu-icon");
                this._removeClass(icons, null, this.options.icons.submenu)
                    ._addClass(icons, null, value.submenu);
            }
            this._super(key, value);
        },

        _setOptionDisabled: function(value) {
            this._super(value);

            this.element.attr("aria-disabled", String(value));
            this._toggleClass(null, "ui-state-disabled", !!value);
        },

        focus: function(event, item) {
            var nested, focused, activeParent;
            this.blur(event, event && event.type === "focus");

            this._scrollIntoView(item);

            this.active = item.first();

            focused = this.active.children(".ui-menu-item-wrapper");
            this._addClass(focused, null, "ui-state-active");

            // Only update aria-activedescendant if there's a role
            // otherwise we assume focus is managed elsewhere
            if (this.options.role) {
                this.element.attr("aria-activedescendant", focused.attr("id"));
            }

            // Highlight active parent menu item, if any
            activeParent = this.active
                .parent()
                .closest(".ui-menu-item")
                .children(".ui-menu-item-wrapper");
            this._addClass(activeParent, null, "ui-state-active");

            if (event && event.type === "keydown") {
                this._close();
            } else {
                this.timer = this._delay(function() {
                    this._close();
                }, this.delay);
            }

            nested = item.children(".ui-menu");
            if (nested.length && event && (/^mouse/.test(event.type))) {
                this._startOpening(nested);
            }
            this.activeMenu = item.parent();

            this._trigger("focus", event, {
                item: item
            });
        },

        _scrollIntoView: function(item) {
            var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
            if (this._hasScroll()) {
                borderTop = parseFloat($.css(this.activeMenu[0], "borderTopWidth")) || 0;
                paddingTop = parseFloat($.css(this.activeMenu[0], "paddingTop")) || 0;
                offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
                scroll = this.activeMenu.scrollTop();
                elementHeight = this.activeMenu.height();
                itemHeight = item.outerHeight();

                if (offset < 0) {
                    this.activeMenu.scrollTop(scroll + offset);
                } else if (offset + itemHeight > elementHeight) {
                    this.activeMenu.scrollTop(scroll + offset - elementHeight + itemHeight);
                }
            }
        },

        blur: function(event, fromFocus) {
            if (!fromFocus) {
                clearTimeout(this.timer);
            }

            if (!this.active) {
                return;
            }

            this._removeClass(this.active.children(".ui-menu-item-wrapper"),
                null, "ui-state-active");

            this._trigger("blur", event, {
                item: this.active
            });
            this.active = null;
        },

        _startOpening: function(submenu) {
            clearTimeout(this.timer);

            // Don't open if already open fixes a Firefox bug that caused a .5 pixel
            // shift in the submenu position when mousing over the caret icon
            if (submenu.attr("aria-hidden") !== "true") {
                return;
            }

            this.timer = this._delay(function() {
                this._close();
                this._open(submenu);
            }, this.delay);
        },

        _open: function(submenu) {
            var position = $.extend({ of: this.active
            }, this.options.position);

            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(submenu.parents(".ui-menu"))
                .hide()
                .attr("aria-hidden", "true");

            submenu
                .show()
                .removeAttr("aria-hidden")
                .attr("aria-expanded", "true")
                .position(position);
        },

        collapseAll: function(event, all) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {

                // If we were passed an event, look for the submenu that contains the event
                var currentMenu = all ? this.element :
                    $(event && event.target).closest(this.element.find(".ui-menu"));

                // If we found no valid submenu ancestor, use the main menu to close all
                // sub menus anyway
                if (!currentMenu.length) {
                    currentMenu = this.element;
                }

                this._close(currentMenu);

                this.blur(event);

                // Work around active item staying active after menu is blurred
                this._removeClass(currentMenu.find(".ui-state-active"), null, "ui-state-active");

                this.activeMenu = currentMenu;
            }, all ? 0 : this.delay);
        },

        // With no arguments, closes the currently active menu - if nothing is active
        // it closes all menus.  If passed an argument, it will search for menus BELOW
        _close: function(startMenu) {
            if (!startMenu) {
                startMenu = this.active ? this.active.parent() : this.element;
            }

            startMenu.find(".ui-menu")
                .hide()
                .attr("aria-hidden", "true")
                .attr("aria-expanded", "false");
        },

        _closeOnDocumentClick: function(event) {
            return !$(event.target).closest(".ui-menu").length;
        },

        _isDivider: function(item) {

            // Match hyphen, em dash, en dash
            return !/[^\-\u2014\u2013\s]/.test(item.text());
        },

        collapse: function(event) {
            var newItem = this.active &&
                this.active.parent().closest(".ui-menu-item", this.element);
            if (newItem && newItem.length) {
                this._close();
                this.focus(event, newItem);
            }
        },

        expand: function(event) {
            var newItem = this.active && this._menuItems(this.active.children(".ui-menu")).first();

            if (newItem && newItem.length) {
                this._open(newItem.parent());

                // Delay so Firefox will not hide activedescendant change in expanding submenu from AT
                this._delay(function() {
                    this.focus(event, newItem);
                });
            }
        },

        next: function(event) {
            this._move("next", "first", event);
        },

        previous: function(event) {
            this._move("prev", "last", event);
        },

        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length;
        },

        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length;
        },

        _menuItems: function(menu) {
            return (menu || this.element)
                .find(this.options.items)
                .filter(".ui-menu-item");
        },

        _move: function(direction, filter, event) {
            var next;
            if (this.active) {
                if (direction === "first" || direction === "last") {
                    next = this.active[direction === "first" ? "prevAll" : "nextAll"](".ui-menu-item")
                        .last();
                } else {
                    next = this.active[direction + "All"](".ui-menu-item")
                        .first();
                }
            }
            if (!next || !next.length || !this.active) {
                next = this._menuItems(this.activeMenu)[filter]();
            }

            this.focus(event, next);
        },

        nextPage: function(event) {
            var item, base, height;

            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isLastItem()) {
                return;
            }
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.innerHeight();

                // jQuery 3.2 doesn't include scrollbars in innerHeight, add it back.
                if ($.fn.jquery.indexOf("3.2.") === 0) {
                    height += this.element[0].offsetHeight - this.element.outerHeight();
                }

                this.active.nextAll(".ui-menu-item").each(function() {
                    item = $(this);
                    return item.offset().top - base - height < 0;
                });

                this.focus(event, item);
            } else {
                this.focus(event, this._menuItems(this.activeMenu)[!this.active ? "first" : "last"]());
            }
        },

        previousPage: function(event) {
            var item, base, height;
            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isFirstItem()) {
                return;
            }
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.innerHeight();

                // jQuery 3.2 doesn't include scrollbars in innerHeight, add it back.
                if ($.fn.jquery.indexOf("3.2.") === 0) {
                    height += this.element[0].offsetHeight - this.element.outerHeight();
                }

                this.active.prevAll(".ui-menu-item").each(function() {
                    item = $(this);
                    return item.offset().top - base + height > 0;
                });

                this.focus(event, item);
            } else {
                this.focus(event, this._menuItems(this.activeMenu).first());
            }
        },

        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight");
        },

        select: function(event) {

            // TODO: It should never be possible to not have an active item at this
            // point, but the tests don't trigger mouseenter before click.
            this.active = this.active || $(event.target).closest(".ui-menu-item");
            var ui = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(event, true);
            }
            this._trigger("select", event, ui);
        },

        _filterMenuItems: function(character) {
            var escapedCharacter = character.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"),
                regex = new RegExp("^" + escapedCharacter, "i");

            return this.activeMenu
                .find(this.options.items)

                // Only match on items, not dividers or other content (#10571)
                .filter(".ui-menu-item")
                .filter(function() {
                    return regex.test(
                        String.prototype.trim.call(
                            $(this).children(".ui-menu-item-wrapper").text()));
                });
        }
    });

});







/*!
 * jQuery UI Autocomplete 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Autocomplete
//>>group: Widgets
//>>description: Lists suggested words as the user is typing.
//>>docs: http://api.jqueryui.com/autocomplete/
//>>demos: http://jqueryui.com/autocomplete/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/autocomplete.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./menu",
            "../keycode",
            "../position",
            "../safe-active-element",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.autocomplete", {
        version: "1.13.0",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,

            // Callbacks
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },

        requestIndex: 0,
        pending: 0,

        _create: function() {

            // Some browsers only repeat keydown events, not keypress events,
            // so we use the suppressKeyPress flag to determine if we've already
            // handled the keydown event. #7269
            // Unfortunately the code for & in keypress is the same as the up arrow,
            // so we use the suppressKeyPressRepeat flag to avoid handling keypress
            // events when we know the keydown event was used to modify the
            // search term. #7799
            var suppressKeyPress, suppressKeyPressRepeat, suppressInput,
                nodeName = this.element[0].nodeName.toLowerCase(),
                isTextarea = nodeName === "textarea",
                isInput = nodeName === "input";

            // Textareas are always multi-line
            // Inputs are always single-line, even if inside a contentEditable element
            // IE also treats inputs as contentEditable
            // All other element types are determined by whether or not they're contentEditable
            this.isMultiLine = isTextarea || !isInput && this._isContentEditable(this.element);

            this.valueMethod = this.element[isTextarea || isInput ? "val" : "text"];
            this.isNewMenu = true;

            this._addClass("ui-autocomplete-input");
            this.element.attr("autocomplete", "off");

            this._on(this.element, {
                keydown: function(event) {
                    if (this.element.prop("readOnly")) {
                        suppressKeyPress = true;
                        suppressInput = true;
                        suppressKeyPressRepeat = true;
                        return;
                    }

                    suppressKeyPress = false;
                    suppressInput = false;
                    suppressKeyPressRepeat = false;
                    var keyCode = $.ui.keyCode;
                    switch (event.keyCode) {
                        case keyCode.PAGE_UP:
                            suppressKeyPress = true;
                            this._move("previousPage", event);
                            break;
                        case keyCode.PAGE_DOWN:
                            suppressKeyPress = true;
                            this._move("nextPage", event);
                            break;
                        case keyCode.UP:
                            suppressKeyPress = true;
                            this._keyEvent("previous", event);
                            break;
                        case keyCode.DOWN:
                            suppressKeyPress = true;
                            this._keyEvent("next", event);
                            break;
                        case keyCode.ENTER:

                            // when menu is open and has focus
                            if (this.menu.active) {

                                // #6055 - Opera still allows the keypress to occur
                                // which causes forms to submit
                                suppressKeyPress = true;
                                event.preventDefault();
                                this.menu.select(event);
                            }
                            break;
                        case keyCode.TAB:
                            if (this.menu.active) {
                                this.menu.select(event);
                            }
                            break;
                        case keyCode.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                if (!this.isMultiLine) {
                                    this._value(this.term);
                                }
                                this.close(event);

                                // Different browsers have different default behavior for escape
                                // Single press can mean undo or clear
                                // Double press in IE means clear the whole form
                                event.preventDefault();
                            }
                            break;
                        default:
                            suppressKeyPressRepeat = true;

                            // search timeout should be triggered before the input value is changed
                            this._searchTimeout(event);
                            break;
                    }
                },
                keypress: function(event) {
                    if (suppressKeyPress) {
                        suppressKeyPress = false;
                        if (!this.isMultiLine || this.menu.element.is(":visible")) {
                            event.preventDefault();
                        }
                        return;
                    }
                    if (suppressKeyPressRepeat) {
                        return;
                    }

                    // Replicate some key handlers to allow them to repeat in Firefox and Opera
                    var keyCode = $.ui.keyCode;
                    switch (event.keyCode) {
                        case keyCode.PAGE_UP:
                            this._move("previousPage", event);
                            break;
                        case keyCode.PAGE_DOWN:
                            this._move("nextPage", event);
                            break;
                        case keyCode.UP:
                            this._keyEvent("previous", event);
                            break;
                        case keyCode.DOWN:
                            this._keyEvent("next", event);
                            break;
                    }
                },
                input: function(event) {
                    if (suppressInput) {
                        suppressInput = false;
                        event.preventDefault();
                        return;
                    }
                    this._searchTimeout(event);
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value();
                },
                blur: function(event) {
                    clearTimeout(this.searching);
                    this.close(event);
                    this._change(event);
                }
            });

            this._initSource();
            this.menu = $("<ul>")
                .appendTo(this._appendTo())
                .menu({

                    // disable ARIA support, the live region takes care of that
                    role: null
                })
                .hide()

                // Support: IE 11 only, Edge <= 14
                // For other browsers, we preventDefault() on the mousedown event
                // to keep the dropdown from taking focus from the input. This doesn't
                // work for IE/Edge, causing problems with selection and scrolling (#9638)
                // Happily, IE and Edge support an "unselectable" attribute that
                // prevents an element from receiving focus, exactly what we want here.
                .attr({
                    "unselectable": "on"
                })
                .menu("instance");

            this._addClass(this.menu.element, "ui-autocomplete", "ui-front");
            this._on(this.menu.element, {
                mousedown: function(event) {

                    // Prevent moving focus out of the text field
                    event.preventDefault();
                },
                menufocus: function(event, ui) {
                    var label, item;

                    // support: Firefox
                    // Prevent accidental activation of menu items in Firefox (#7024 #9118)
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (event.originalEvent && /^mouse/.test(event.originalEvent.type)) {
                            this.menu.blur();

                            this.document.one("mousemove", function() {
                                $(event.target).trigger(event.originalEvent);
                            });

                            return;
                        }
                    }

                    item = ui.item.data("ui-autocomplete-item");
                    if (false !== this._trigger("focus", event, {
                            item: item
                        })) {

                        // use value to match what will end up in the input, if it was a key event
                        if (event.originalEvent && /^key/.test(event.originalEvent.type)) {
                            this._value(item.value);
                        }
                    }

                    // Announce the value in the liveRegion
                    label = ui.item.attr("aria-label") || item.value;
                    if (label && String.prototype.trim.call(label).length) {
                        this.liveRegion.children().hide();
                        $("<div>").text(label).appendTo(this.liveRegion);
                    }
                },
                menuselect: function(event, ui) {
                    var item = ui.item.data("ui-autocomplete-item"),
                        previous = this.previous;

                    // Only trigger when focus was lost (click on menu)
                    if (this.element[0] !== $.ui.safeActiveElement(this.document[0])) {
                        this.element.trigger("focus");
                        this.previous = previous;

                        // #6109 - IE triggers two focus events and the second
                        // is asynchronous, so we need to reset the previous
                        // term synchronously and asynchronously :-(
                        this._delay(function() {
                            this.previous = previous;
                            this.selectedItem = item;
                        });
                    }

                    if (false !== this._trigger("select", event, {
                            item: item
                        })) {
                        this._value(item.value);
                    }

                    // reset the term after the select event
                    // this allows custom select handling to work properly
                    this.term = this._value();

                    this.close(event);
                    this.selectedItem = item;
                }
            });

            this.liveRegion = $("<div>", {
                    role: "status",
                    "aria-live": "assertive",
                    "aria-relevant": "additions"
                })
                .appendTo(this.document[0].body);

            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible");

            // Turning off autocomplete prevents the browser from remembering the
            // value when navigating through history, so we re-enable autocomplete
            // if the page is unloaded before the widget is destroyed. #7790
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },

        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove();
        },

        _setOption: function(key, value) {
            this._super(key, value);
            if (key === "source") {
                this._initSource();
            }
            if (key === "appendTo") {
                this.menu.element.appendTo(this._appendTo());
            }
            if (key === "disabled" && value && this.xhr) {
                this.xhr.abort();
            }
        },

        _isEventTargetInWidget: function(event) {
            var menuElement = this.menu.element[0];

            return event.target === this.element[0] ||
                event.target === menuElement ||
                $.contains(menuElement, event.target);
        },

        _closeOnClickOutside: function(event) {
            if (!this._isEventTargetInWidget(event)) {
                this.close();
            }
        },

        _appendTo: function() {
            var element = this.options.appendTo;

            if (element) {
                element = element.jquery || element.nodeType ?
                    $(element) :
                    this.document.find(element).eq(0);
            }

            if (!element || !element[0]) {
                element = this.element.closest(".ui-front, dialog");
            }

            if (!element.length) {
                element = this.document[0].body;
            }

            return element;
        },

        _initSource: function() {
            var array, url,
                that = this;
            if (Array.isArray(this.options.source)) {
                array = this.options.source;
                this.source = function(request, response) {
                    response($.ui.autocomplete.filter(array, request.term));
                };
            } else if (typeof this.options.source === "string") {
                url = this.options.source;
                this.source = function(request, response) {
                    if (that.xhr) {
                        that.xhr.abort();
                    }
                    that.xhr = $.ajax({
                        url: url,
                        data: request,
                        dataType: "json",
                        success: function(data) {
                            response(data);
                        },
                        error: function() {
                            response([]);
                        }
                    });
                };
            } else {
                this.source = this.options.source;
            }
        },

        _searchTimeout: function(event) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {

                // Search if the value has changed, or if the user retypes the same value (see #7434)
                var equalValues = this.term === this._value(),
                    menuVisible = this.menu.element.is(":visible"),
                    modifierKey = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;

                if (!equalValues || (equalValues && !menuVisible && !modifierKey)) {
                    this.selectedItem = null;
                    this.search(null, event);
                }
            }, this.options.delay);
        },

        search: function(value, event) {
            value = value != null ? value : this._value();

            // Always save the actual value, not the one passed as an argument
            this.term = this._value();

            if (value.length < this.options.minLength) {
                return this.close(event);
            }

            if (this._trigger("search", event) === false) {
                return;
            }

            return this._search(value);
        },

        _search: function(value) {
            this.pending++;
            this._addClass("ui-autocomplete-loading");
            this.cancelSearch = false;

            this.source({
                term: value
            }, this._response());
        },

        _response: function() {
            var index = ++this.requestIndex;

            return function(content) {
                if (index === this.requestIndex) {
                    this.__response(content);
                }

                this.pending--;
                if (!this.pending) {
                    this._removeClass("ui-autocomplete-loading");
                }
            }.bind(this);
        },

        __response: function(content) {
            if (content) {
                content = this._normalize(content);
            }
            this._trigger("response", null, {
                content: content
            });
            if (!this.options.disabled && content && content.length && !this.cancelSearch) {
                this._suggest(content);
                this._trigger("open");
            } else {

                // use ._close() instead of .close() so we don't cancel future searches
                this._close();
            }
        },

        close: function(event) {
            this.cancelSearch = true;
            this._close(event);
        },

        _close: function(event) {

            // Remove the handler that closes the menu on outside clicks
            this._off(this.document, "mousedown");

            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", event);
            }
        },

        _change: function(event) {
            if (this.previous !== this._value()) {
                this._trigger("change", event, {
                    item: this.selectedItem
                });
            }
        },

        _normalize: function(items) {

            // assume all items have the right format when the first item is complete
            if (items.length && items[0].label && items[0].value) {
                return items;
            }
            return $.map(items, function(item) {
                if (typeof item === "string") {
                    return {
                        label: item,
                        value: item
                    };
                }
                return $.extend({}, item, {
                    label: item.label || item.value,
                    value: item.value || item.label
                });
            });
        },

        _suggest: function(items) {
            var ul = this.menu.element.empty();
            this._renderMenu(ul, items);
            this.isNewMenu = true;
            this.menu.refresh();

            // Size and position menu
            ul.show();
            this._resizeMenu();
            ul.position($.extend({ of: this.element
            }, this.options.position));

            if (this.options.autoFocus) {
                this.menu.next();
            }

            // Listen for interactions outside of the widget (#6642)
            this._on(this.document, {
                mousedown: "_closeOnClickOutside"
            });
        },

        _resizeMenu: function() {
            var ul = this.menu.element;
            ul.outerWidth(Math.max(

                // Firefox wraps long text (possibly a rounding bug)
                // so we add 1px to avoid the wrapping (#7513)
                ul.width("").outerWidth() + 1,
                this.element.outerWidth()
            ));
        },

        _renderMenu: function(ul, items) {
            var that = this;
            $.each(items, function(index, item) {
                that._renderItemData(ul, item);
            });
        },

        _renderItemData: function(ul, item) {
            return this._renderItem(ul, item).data("ui-autocomplete-item", item);
        },

        _renderItem: function(ul, item) {
            return $("<li>")
                .append($("<div>").text(item.label))
                .appendTo(ul);
        },

        _move: function(direction, event) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, event);
                return;
            }
            if (this.menu.isFirstItem() && /^previous/.test(direction) ||
                this.menu.isLastItem() && /^next/.test(direction)) {

                if (!this.isMultiLine) {
                    this._value(this.term);
                }

                this.menu.blur();
                return;
            }
            this.menu[direction](event);
        },

        widget: function() {
            return this.menu.element;
        },

        _value: function() {
            return this.valueMethod.apply(this.element, arguments);
        },

        _keyEvent: function(keyEvent, event) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(keyEvent, event);

                // Prevents moving cursor to beginning/end of the text field in some browsers
                event.preventDefault();
            }
        },

        // Support: Chrome <=50
        // We should be able to just use this.element.prop( "isContentEditable" )
        // but hidden elements always report false in Chrome.
        // https://code.google.com/p/chromium/issues/detail?id=313082
        _isContentEditable: function(element) {
            if (!element.length) {
                return false;
            }

            var editable = element.prop("contentEditable");

            if (editable === "inherit") {
                return this._isContentEditable(element.parent());
            }

            return editable === "true";
        }
    });

    $.extend($.ui.autocomplete, {
        escapeRegex: function(value) {
            return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        },
        filter: function(array, term) {
            var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), "i");
            return $.grep(array, function(value) {
                return matcher.test(value.label || value.value || value);
            });
        }
    });

    // Live region extension, adding a `messages` option
    // NOTE: This is an experimental API. We are still investigating
    // a full solution for string manipulation and internationalization.
    $.widget("ui.autocomplete", $.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(amount) {
                    return amount + (amount > 1 ? " results are" : " result is") +
                        " available, use up and down arrow keys to navigate.";
                }
            }
        },

        __response: function(content) {
            var message;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return;
            }
            if (content && content.length) {
                message = this.options.messages.results(content.length);
            } else {
                message = this.options.messages.noResults;
            }
            this.liveRegion.children().hide();
            $("<div>").text(message).appendTo(this.liveRegion);
        }
    });

    return $.ui.autocomplete;

});


/*!
 * jQuery UI Controlgroup 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Controlgroup
//>>group: Widgets
//>>description: Visually groups form control widgets
//>>docs: http://api.jqueryui.com/controlgroup/
//>>demos: http://jqueryui.com/controlgroup/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/controlgroup.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    var controlgroupCornerRegex = /ui-corner-([a-z]){2,6}/g;

    return $.widget("ui.controlgroup", {
        version: "1.13.0",
        defaultElement: "<div>",
        options: {
            direction: "horizontal",
            disabled: null,
            onlyVisible: true,
            items: {
                "button": "input[type=button], input[type=submit], input[type=reset], button, a",
                "controlgroupLabel": ".ui-controlgroup-label",
                "checkboxradio": "input[type='checkbox'], input[type='radio']",
                "selectmenu": "select",
                "spinner": ".ui-spinner-input"
            }
        },

        _create: function() {
            this._enhance();
        },

        // To support the enhanced option in jQuery Mobile, we isolate DOM manipulation
        _enhance: function() {
            this.element.attr("role", "toolbar");
            this.refresh();
        },

        _destroy: function() {
            this._callChildMethod("destroy");
            this.childWidgets.removeData("ui-controlgroup-data");
            this.element.removeAttr("role");
            if (this.options.items.controlgroupLabel) {
                this.element
                    .find(this.options.items.controlgroupLabel)
                    .find(".ui-controlgroup-label-contents")
                    .contents().unwrap();
            }
        },

        _initWidgets: function() {
            var that = this,
                childWidgets = [];

            // First we iterate over each of the items options
            $.each(this.options.items, function(widget, selector) {
                var labels;
                var options = {};

                // Make sure the widget has a selector set
                if (!selector) {
                    return;
                }

                if (widget === "controlgroupLabel") {
                    labels = that.element.find(selector);
                    labels.each(function() {
                        var element = $(this);

                        if (element.children(".ui-controlgroup-label-contents").length) {
                            return;
                        }
                        element.contents()
                            .wrapAll("<span class='ui-controlgroup-label-contents'></span>");
                    });
                    that._addClass(labels, null, "ui-widget ui-widget-content ui-state-default");
                    childWidgets = childWidgets.concat(labels.get());
                    return;
                }

                // Make sure the widget actually exists
                if (!$.fn[widget]) {
                    return;
                }

                // We assume everything is in the middle to start because we can't determine
                // first / last elements until all enhancments are done.
                if (that["_" + widget + "Options"]) {
                    options = that["_" + widget + "Options"]("middle");
                } else {
                    options = {
                        classes: {}
                    };
                }

                // Find instances of this widget inside controlgroup and init them
                that.element
                    .find(selector)
                    .each(function() {
                        var element = $(this);
                        var instance = element[widget]("instance");

                        // We need to clone the default options for this type of widget to avoid
                        // polluting the variable options which has a wider scope than a single widget.
                        var instanceOptions = $.widget.extend({}, options);

                        // If the button is the child of a spinner ignore it
                        // TODO: Find a more generic solution
                        if (widget === "button" && element.parent(".ui-spinner").length) {
                            return;
                        }

                        // Create the widget if it doesn't exist
                        if (!instance) {
                            instance = element[widget]()[widget]("instance");
                        }
                        if (instance) {
                            instanceOptions.classes =
                                that._resolveClassesValues(instanceOptions.classes, instance);
                        }
                        element[widget](instanceOptions);

                        // Store an instance of the controlgroup to be able to reference
                        // from the outermost element for changing options and refresh
                        var widgetElement = element[widget]("widget");
                        $.data(widgetElement[0], "ui-controlgroup-data",
                            instance ? instance : element[widget]("instance"));

                        childWidgets.push(widgetElement[0]);
                    });
            });

            this.childWidgets = $($.uniqueSort(childWidgets));
            this._addClass(this.childWidgets, "ui-controlgroup-item");
        },

        _callChildMethod: function(method) {
            this.childWidgets.each(function() {
                var element = $(this),
                    data = element.data("ui-controlgroup-data");
                if (data && data[method]) {
                    data[method]();
                }
            });
        },

        _updateCornerClass: function(element, position) {
            var remove = "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all";
            var add = this._buildSimpleOptions(position, "label").classes.label;

            this._removeClass(element, null, remove);
            this._addClass(element, null, add);
        },

        _buildSimpleOptions: function(position, key) {
            var direction = this.options.direction === "vertical";
            var result = {
                classes: {}
            };
            result.classes[key] = {
                "middle": "",
                "first": "ui-corner-" + (direction ? "top" : "left"),
                "last": "ui-corner-" + (direction ? "bottom" : "right"),
                "only": "ui-corner-all"
            }[position];

            return result;
        },

        _spinnerOptions: function(position) {
            var options = this._buildSimpleOptions(position, "ui-spinner");

            options.classes["ui-spinner-up"] = "";
            options.classes["ui-spinner-down"] = "";

            return options;
        },

        _buttonOptions: function(position) {
            return this._buildSimpleOptions(position, "ui-button");
        },

        _checkboxradioOptions: function(position) {
            return this._buildSimpleOptions(position, "ui-checkboxradio-label");
        },

        _selectmenuOptions: function(position) {
            var direction = this.options.direction === "vertical";
            return {
                width: direction ? "auto" : false,
                classes: {
                    middle: {
                        "ui-selectmenu-button-open": "",
                        "ui-selectmenu-button-closed": ""
                    },
                    first: {
                        "ui-selectmenu-button-open": "ui-corner-" + (direction ? "top" : "tl"),
                        "ui-selectmenu-button-closed": "ui-corner-" + (direction ? "top" : "left")
                    },
                    last: {
                        "ui-selectmenu-button-open": direction ? "" : "ui-corner-tr",
                        "ui-selectmenu-button-closed": "ui-corner-" + (direction ? "bottom" : "right")
                    },
                    only: {
                        "ui-selectmenu-button-open": "ui-corner-top",
                        "ui-selectmenu-button-closed": "ui-corner-all"
                    }

                }[position]
            };
        },

        _resolveClassesValues: function(classes, instance) {
            var result = {};
            $.each(classes, function(key) {
                var current = instance.options.classes[key] || "";
                current = String.prototype.trim.call(current.replace(controlgroupCornerRegex, ""));
                result[key] = (current + " " + classes[key]).replace(/\s+/g, " ");
            });
            return result;
        },

        _setOption: function(key, value) {
            if (key === "direction") {
                this._removeClass("ui-controlgroup-" + this.options.direction);
            }

            this._super(key, value);
            if (key === "disabled") {
                this._callChildMethod(value ? "disable" : "enable");
                return;
            }

            this.refresh();
        },

        refresh: function() {
            var children,
                that = this;

            this._addClass("ui-controlgroup ui-controlgroup-" + this.options.direction);

            if (this.options.direction === "horizontal") {
                this._addClass(null, "ui-helper-clearfix");
            }
            this._initWidgets();

            children = this.childWidgets;

            // We filter here because we need to track all childWidgets not just the visible ones
            if (this.options.onlyVisible) {
                children = children.filter(":visible");
            }

            if (children.length) {

                // We do this last because we need to make sure all enhancment is done
                // before determining first and last
                $.each(["first", "last"], function(index, value) {
                    var instance = children[value]().data("ui-controlgroup-data");

                    if (instance && that["_" + instance.widgetName + "Options"]) {
                        var options = that["_" + instance.widgetName + "Options"](
                            children.length === 1 ? "only" : value
                        );
                        options.classes = that._resolveClassesValues(options.classes, instance);
                        instance.element[instance.widgetName](options);
                    } else {
                        that._updateCornerClass(children[value](), value);
                    }
                });

                // Finally call the refresh method on each of the child widgets.
                this._callChildMethod("refresh");
            }
        }
    });
});




/*!
 * jQuery UI Checkboxradio 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Checkboxradio
//>>group: Widgets
//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.
//>>docs: http://api.jqueryui.com/checkboxradio/
//>>demos: http://jqueryui.com/checkboxradio/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/button.css
//>>css.structure: ../../themes/base/checkboxradio.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../form-reset-mixin",
            "../labels",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.checkboxradio", [$.ui.formResetMixin, {
        version: "1.13.0",
        options: {
            disabled: null,
            label: null,
            icon: true,
            classes: {
                "ui-checkboxradio-label": "ui-corner-all",
                "ui-checkboxradio-icon": "ui-corner-all"
            }
        },

        _getCreateOptions: function() {
            var disabled, labels;
            var that = this;
            var options = this._super() || {};

            // We read the type here, because it makes more sense to throw a element type error first,
            // rather then the error for lack of a label. Often if its the wrong type, it
            // won't have a label (e.g. calling on a div, btn, etc)
            this._readType();

            labels = this.element.labels();

            // If there are multiple labels, use the last one
            this.label = $(labels[labels.length - 1]);
            if (!this.label.length) {
                $.error("No label found for checkboxradio widget");
            }

            this.originalLabel = "";

            // We need to get the label text but this may also need to make sure it does not contain the
            // input itself.
            this.label.contents().not(this.element[0]).each(function() {

                // The label contents could be text, html, or a mix. We concat each element to get a
                // string representation of the label, without the input as part of it.
                that.originalLabel += this.nodeType === 3 ? $(this).text() : this.outerHTML;
            });

            // Set the label option if we found label text
            if (this.originalLabel) {
                options.label = this.originalLabel;
            }

            disabled = this.element[0].disabled;
            if (disabled != null) {
                options.disabled = disabled;
            }
            return options;
        },

        _create: function() {
            var checked = this.element[0].checked;

            this._bindFormResetHandler();

            if (this.options.disabled == null) {
                this.options.disabled = this.element[0].disabled;
            }

            this._setOption("disabled", this.options.disabled);
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible");
            this._addClass(this.label, "ui-checkboxradio-label", "ui-button ui-widget");

            if (this.type === "radio") {
                this._addClass(this.label, "ui-checkboxradio-radio-label");
            }

            if (this.options.label && this.options.label !== this.originalLabel) {
                this._updateLabel();
            } else if (this.originalLabel) {
                this.options.label = this.originalLabel;
            }

            this._enhance();

            if (checked) {
                this._addClass(this.label, "ui-checkboxradio-checked", "ui-state-active");
            }

            this._on({
                change: "_toggleClasses",
                focus: function() {
                    this._addClass(this.label, null, "ui-state-focus ui-visual-focus");
                },
                blur: function() {
                    this._removeClass(this.label, null, "ui-state-focus ui-visual-focus");
                }
            });
        },

        _readType: function() {
            var nodeName = this.element[0].nodeName.toLowerCase();
            this.type = this.element[0].type;
            if (nodeName !== "input" || !/radio|checkbox/.test(this.type)) {
                $.error("Can't create checkboxradio on element.nodeName=" + nodeName +
                    " and element.type=" + this.type);
            }
        },

        // Support jQuery Mobile enhanced option
        _enhance: function() {
            this._updateIcon(this.element[0].checked);
        },

        widget: function() {
            return this.label;
        },

        _getRadioGroup: function() {
            var group;
            var name = this.element[0].name;
            var nameSelector = "input[name='" + $.escapeSelector(name) + "']";

            if (!name) {
                return $([]);
            }

            if (this.form.length) {
                group = $(this.form[0].elements).filter(nameSelector);
            } else {

                // Not inside a form, check all inputs that also are not inside a form
                group = $(nameSelector).filter(function() {
                    return $(this)._form().length === 0;
                });
            }

            return group.not(this.element);
        },

        _toggleClasses: function() {
            var checked = this.element[0].checked;
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", checked);

            if (this.options.icon && this.type === "checkbox") {
                this._toggleClass(this.icon, null, "ui-icon-check ui-state-checked", checked)
                    ._toggleClass(this.icon, null, "ui-icon-blank", !checked);
            }

            if (this.type === "radio") {
                this._getRadioGroup()
                    .each(function() {
                        var instance = $(this).checkboxradio("instance");

                        if (instance) {
                            instance._removeClass(instance.label,
                                "ui-checkboxradio-checked", "ui-state-active");
                        }
                    });
            }
        },

        _destroy: function() {
            this._unbindFormResetHandler();

            if (this.icon) {
                this.icon.remove();
                this.iconSpace.remove();
            }
        },

        _setOption: function(key, value) {

            // We don't allow the value to be set to nothing
            if (key === "label" && !value) {
                return;
            }

            this._super(key, value);

            if (key === "disabled") {
                this._toggleClass(this.label, null, "ui-state-disabled", value);
                this.element[0].disabled = value;

                // Don't refresh when setting disabled
                return;
            }
            this.refresh();
        },

        _updateIcon: function(checked) {
            var toAdd = "ui-icon ui-icon-background ";

            if (this.options.icon) {
                if (!this.icon) {
                    this.icon = $("<span>");
                    this.iconSpace = $("<span> </span>");
                    this._addClass(this.iconSpace, "ui-checkboxradio-icon-space");
                }

                if (this.type === "checkbox") {
                    toAdd += checked ? "ui-icon-check ui-state-checked" : "ui-icon-blank";
                    this._removeClass(this.icon, null, checked ? "ui-icon-blank" : "ui-icon-check");
                } else {
                    toAdd += "ui-icon-blank";
                }
                this._addClass(this.icon, "ui-checkboxradio-icon", toAdd);
                if (!checked) {
                    this._removeClass(this.icon, null, "ui-icon-check ui-state-checked");
                }
                this.icon.prependTo(this.label).after(this.iconSpace);
            } else if (this.icon !== undefined) {
                this.icon.remove();
                this.iconSpace.remove();
                delete this.icon;
            }
        },

        _updateLabel: function() {

            // Remove the contents of the label ( minus the icon, icon space, and input )
            var contents = this.label.contents().not(this.element[0]);
            if (this.icon) {
                contents = contents.not(this.icon[0]);
            }
            if (this.iconSpace) {
                contents = contents.not(this.iconSpace[0]);
            }
            contents.remove();

            this.label.append(this.options.label);
        },

        refresh: function() {
            var checked = this.element[0].checked,
                isDisabled = this.element[0].disabled;

            this._updateIcon(checked);
            this._toggleClass(this.label, "ui-checkboxradio-checked", "ui-state-active", checked);
            if (this.options.label !== null) {
                this._updateLabel();
            }

            if (isDisabled !== this.options.disabled) {
                this._setOptions({
                    "disabled": isDisabled
                });
            }
        }

    }]);

    return $.ui.checkboxradio;

});





/*!
 * jQuery UI Button 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Button
//>>group: Widgets
//>>description: Enhances a form with themeable buttons.
//>>docs: http://api.jqueryui.com/button/
//>>demos: http://jqueryui.com/button/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/button.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",

            // These are only for backcompat
            // TODO: Remove after 1.12
            "./controlgroup",
            "./checkboxradio",

            "../keycode",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.button", {
        version: "1.13.0",
        defaultElement: "<button>",
        options: {
            classes: {
                "ui-button": "ui-corner-all"
            },
            disabled: null,
            icon: null,
            iconPosition: "beginning",
            label: null,
            showLabel: true
        },

        _getCreateOptions: function() {
            var disabled,

                // This is to support cases like in jQuery Mobile where the base widget does have
                // an implementation of _getCreateOptions
                options = this._super() || {};

            this.isInput = this.element.is("input");

            disabled = this.element[0].disabled;
            if (disabled != null) {
                options.disabled = disabled;
            }

            this.originalLabel = this.isInput ? this.element.val() : this.element.html();
            if (this.originalLabel) {
                options.label = this.originalLabel;
            }

            return options;
        },

        _create: function() {
            if (!this.option.showLabel & !this.options.icon) {
                this.options.showLabel = true;
            }

            // We have to check the option again here even though we did in _getCreateOptions,
            // because null may have been passed on init which would override what was set in
            // _getCreateOptions
            if (this.options.disabled == null) {
                this.options.disabled = this.element[0].disabled || false;
            }

            this.hasTitle = !!this.element.attr("title");

            // Check to see if the label needs to be set or if its already correct
            if (this.options.label && this.options.label !== this.originalLabel) {
                if (this.isInput) {
                    this.element.val(this.options.label);
                } else {
                    this.element.html(this.options.label);
                }
            }
            this._addClass("ui-button", "ui-widget");
            this._setOption("disabled", this.options.disabled);
            this._enhance();

            if (this.element.is("a")) {
                this._on({
                    "keyup": function(event) {
                        if (event.keyCode === $.ui.keyCode.SPACE) {
                            event.preventDefault();

                            // Support: PhantomJS <= 1.9, IE 8 Only
                            // If a native click is available use it so we actually cause navigation
                            // otherwise just trigger a click event
                            if (this.element[0].click) {
                                this.element[0].click();
                            } else {
                                this.element.trigger("click");
                            }
                        }
                    }
                });
            }
        },

        _enhance: function() {
            if (!this.element.is("button")) {
                this.element.attr("role", "button");
            }

            if (this.options.icon) {
                this._updateIcon("icon", this.options.icon);
                this._updateTooltip();
            }
        },

        _updateTooltip: function() {
            this.title = this.element.attr("title");

            if (!this.options.showLabel && !this.title) {
                this.element.attr("title", this.options.label);
            }
        },

        _updateIcon: function(option, value) {
            var icon = option !== "iconPosition",
                position = icon ? this.options.iconPosition : value,
                displayBlock = position === "top" || position === "bottom";

            // Create icon
            if (!this.icon) {
                this.icon = $("<span>");

                this._addClass(this.icon, "ui-button-icon", "ui-icon");

                if (!this.options.showLabel) {
                    this._addClass("ui-button-icon-only");
                }
            } else if (icon) {

                // If we are updating the icon remove the old icon class
                this._removeClass(this.icon, null, this.options.icon);
            }

            // If we are updating the icon add the new icon class
            if (icon) {
                this._addClass(this.icon, null, value);
            }

            this._attachIcon(position);

            // If the icon is on top or bottom we need to add the ui-widget-icon-block class and remove
            // the iconSpace if there is one.
            if (displayBlock) {
                this._addClass(this.icon, null, "ui-widget-icon-block");
                if (this.iconSpace) {
                    this.iconSpace.remove();
                }
            } else {

                // Position is beginning or end so remove the ui-widget-icon-block class and add the
                // space if it does not exist
                if (!this.iconSpace) {
                    this.iconSpace = $("<span> </span>");
                    this._addClass(this.iconSpace, "ui-button-icon-space");
                }
                this._removeClass(this.icon, null, "ui-wiget-icon-block");
                this._attachIconSpace(position);
            }
        },

        _destroy: function() {
            this.element.removeAttr("role");

            if (this.icon) {
                this.icon.remove();
            }
            if (this.iconSpace) {
                this.iconSpace.remove();
            }
            if (!this.hasTitle) {
                this.element.removeAttr("title");
            }
        },

        _attachIconSpace: function(iconPosition) {
            this.icon[/^(?:end|bottom)/.test(iconPosition) ? "before" : "after"](this.iconSpace);
        },

        _attachIcon: function(iconPosition) {
            this.element[/^(?:end|bottom)/.test(iconPosition) ? "append" : "prepend"](this.icon);
        },

        _setOptions: function(options) {
            var newShowLabel = options.showLabel === undefined ?
                this.options.showLabel :
                options.showLabel,
                newIcon = options.icon === undefined ? this.options.icon : options.icon;

            if (!newShowLabel && !newIcon) {
                options.showLabel = true;
            }
            this._super(options);
        },

        _setOption: function(key, value) {
            if (key === "icon") {
                if (value) {
                    this._updateIcon(key, value);
                } else if (this.icon) {
                    this.icon.remove();
                    if (this.iconSpace) {
                        this.iconSpace.remove();
                    }
                }
            }

            if (key === "iconPosition") {
                this._updateIcon(key, value);
            }

            // Make sure we can't end up with a button that has neither text nor icon
            if (key === "showLabel") {
                this._toggleClass("ui-button-icon-only", null, !value);
                this._updateTooltip();
            }

            if (key === "label") {
                if (this.isInput) {
                    this.element.val(value);
                } else {

                    // If there is an icon, append it, else nothing then append the value
                    // this avoids removal of the icon when setting label text
                    this.element.html(value);
                    if (this.icon) {
                        this._attachIcon(this.options.iconPosition);
                        this._attachIconSpace(this.options.iconPosition);
                    }
                }
            }

            this._super(key, value);

            if (key === "disabled") {
                this._toggleClass(null, "ui-state-disabled", value);
                this.element[0].disabled = value;
                if (value) {
                    this.element.trigger("blur");
                }
            }
        },

        refresh: function() {

            // Make sure to only check disabled if its an element that supports this otherwise
            // check for the disabled class to determine state
            var isDisabled = this.element.is("input, button") ?
                this.element[0].disabled : this.element.hasClass("ui-button-disabled");

            if (isDisabled !== this.options.disabled) {
                this._setOptions({
                    disabled: isDisabled
                });
            }

            this._updateTooltip();
        }
    });

    // DEPRECATED
    if ($.uiBackCompat !== false) {

        // Text and Icons options
        $.widget("ui.button", $.ui.button, {
            options: {
                text: true,
                icons: {
                    primary: null,
                    secondary: null
                }
            },

            _create: function() {
                if (this.options.showLabel && !this.options.text) {
                    this.options.showLabel = this.options.text;
                }
                if (!this.options.showLabel && this.options.text) {
                    this.options.text = this.options.showLabel;
                }
                if (!this.options.icon && (this.options.icons.primary ||
                        this.options.icons.secondary)) {
                    if (this.options.icons.primary) {
                        this.options.icon = this.options.icons.primary;
                    } else {
                        this.options.icon = this.options.icons.secondary;
                        this.options.iconPosition = "end";
                    }
                } else if (this.options.icon) {
                    this.options.icons.primary = this.options.icon;
                }
                this._super();
            },

            _setOption: function(key, value) {
                if (key === "text") {
                    this._super("showLabel", value);
                    return;
                }
                if (key === "showLabel") {
                    this.options.text = value;
                }
                if (key === "icon") {
                    this.options.icons.primary = value;
                }
                if (key === "icons") {
                    if (value.primary) {
                        this._super("icon", value.primary);
                        this._super("iconPosition", "beginning");
                    } else if (value.secondary) {
                        this._super("icon", value.secondary);
                        this._super("iconPosition", "end");
                    }
                }
                this._superApply(arguments);
            }
        });

        $.fn.button = (function(orig) {
            return function(options) {
                var isMethodCall = typeof options === "string";
                var args = Array.prototype.slice.call(arguments, 1);
                var returnValue = this;

                if (isMethodCall) {

                    // If this is an empty collection, we need to have the instance method
                    // return undefined instead of the jQuery instance
                    if (!this.length && options === "instance") {
                        returnValue = undefined;
                    } else {
                        this.each(function() {
                            var methodValue;
                            var type = $(this).attr("type");
                            var name = type !== "checkbox" && type !== "radio" ?
                                "button" :
                                "checkboxradio";
                            var instance = $.data(this, "ui-" + name);

                            if (options === "instance") {
                                returnValue = instance;
                                return false;
                            }

                            if (!instance) {
                                return $.error("cannot call methods on button" +
                                    " prior to initialization; " +
                                    "attempted to call method '" + options + "'");
                            }

                            if (typeof instance[options] !== "function" ||
                                options.charAt(0) === "_") {
                                return $.error("no such method '" + options + "' for button" +
                                    " widget instance");
                            }

                            methodValue = instance[options].apply(instance, args);

                            if (methodValue !== instance && methodValue !== undefined) {
                                returnValue = methodValue && methodValue.jquery ?
                                    returnValue.pushStack(methodValue.get()) :
                                    methodValue;
                                return false;
                            }
                        });
                    }
                } else {

                    // Allow multiple hashes to be passed on init
                    if (args.length) {
                        options = $.widget.extend.apply(null, [options].concat(args));
                    }

                    this.each(function() {
                        var type = $(this).attr("type");
                        var name = type !== "checkbox" && type !== "radio" ? "button" : "checkboxradio";
                        var instance = $.data(this, "ui-" + name);

                        if (instance) {
                            instance.option(options || {});
                            if (instance._init) {
                                instance._init();
                            }
                        } else {
                            if (name === "button") {
                                orig.call($(this), options);
                                return;
                            }

                            $(this).checkboxradio($.extend({
                                icon: false
                            }, options));
                        }
                    });
                }

                return returnValue;
            };
        })($.fn.button);

        $.fn.buttonset = function() {
            if (!$.ui.controlgroup) {
                $.error("Controlgroup widget missing");
            }
            if (arguments[0] === "option" && arguments[1] === "items" && arguments[2]) {
                return this.controlgroup.apply(this, [arguments[0], "items.button", arguments[2]]);
            }
            if (arguments[0] === "option" && arguments[1] === "items") {
                return this.controlgroup.apply(this, [arguments[0], "items.button"]);
            }
            if (typeof arguments[0] === "object" && arguments[0].items) {
                arguments[0].items = {
                    button: arguments[0].items
                };
            }
            return this.controlgroup.apply(this, arguments);
        };
    }

    return $.ui.button;

});



/* eslint-disable max-len, camelcase */
/*!
 * jQuery UI Datepicker 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Datepicker
//>>group: Widgets
//>>description: Displays a calendar from an input or inline for selecting dates.
//>>docs: http://api.jqueryui.com/datepicker/
//>>demos: http://jqueryui.com/datepicker/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/datepicker.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../keycode"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.extend($.ui, {
        datepicker: {
            version: "1.13.0"
        }
    });

    var datepicker_instActive;

    function datepicker_getZindex(elem) {
        var position, value;
        while (elem.length && elem[0] !== document) {

            // Ignore z-index if position is set to a value where z-index is ignored by the browser
            // This makes behavior of this function consistent across browsers
            // WebKit always returns auto if the element is positioned
            position = elem.css("position");
            if (position === "absolute" || position === "relative" || position === "fixed") {

                // IE returns 0 when zIndex is not specified
                // other browsers return a string
                // we ignore the case of nested elements with an explicit value of 0
                // <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
                value = parseInt(elem.css("zIndex"), 10);
                if (!isNaN(value) && value !== 0) {
                    return value;
                }
            }
            elem = elem.parent();
        }

        return 0;
    }

    /* Date picker manager.
       Use the singleton instance of this class, $.datepicker, to interact with the date picker.
       Settings for (groups of) date pickers are maintained in an instance object,
       allowing multiple different settings on the same page. */

    function Datepicker() {
        this._curInst = null; // The current instance in use
        this._keyEvent = false; // If the last event was a key event
        this._disabledInputs = []; // List of date picker inputs that have been disabled
        this._datepickerShowing = false; // True if the popup picker is showing , false if not
        this._inDialog = false; // True if showing within a "dialog", false if not
        this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
        this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
        this._appendClass = "ui-datepicker-append"; // The name of the append marker class
        this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
        this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
        this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
        this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
        this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
        this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
        this.regional = []; // Available regional settings, indexed by language code
        this.regional[""] = { // Default regional settings
            closeText: "Done", // Display text for close link
            prevText: "Prev", // Display text for previous month link
            nextText: "Next", // Display text for next month link
            currentText: "Today", // Display text for current month link
            monthNames: ["January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ], // Names of months for drop-down and formatting
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], // Column headings for days starting at Sunday
            weekHeader: "Wk", // Column header for week of the year
            dateFormat: "mm/dd/yy", // See format options on parseDate
            firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
            isRTL: false, // True if right-to-left language, false if left-to-right
            showMonthAfterYear: false, // True if the year select precedes month, false for month then year
            yearSuffix: "", // Additional text to append to the year in the month headers,
            selectMonthLabel: "Select month", // Invisible label for month selector
            selectYearLabel: "Select year" // Invisible label for year selector
        };
        this._defaults = { // Global defaults for all the date picker instances
            showOn: "focus", // "focus" for popup on focus,
            // "button" for trigger button, or "both" for either
            showAnim: "fadeIn", // Name of jQuery animation for popup
            showOptions: {}, // Options for enhanced animations
            defaultDate: null, // Used when field is blank: actual date,
            // +/-number for offset from today, null for today
            appendText: "", // Display text following the input box, e.g. showing the format
            buttonText: "...", // Text for trigger button
            buttonImage: "", // URL for trigger button image
            buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
            hideIfNoPrevNext: false, // True to hide next/previous month links
            // if not applicable, false to just disable them
            navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
            gotoCurrent: false, // True if today link goes back to current selection instead
            changeMonth: false, // True if month can be selected directly, false if only prev/next
            changeYear: false, // True if year can be selected directly, false if only prev/next
            yearRange: "c-10:c+10", // Range of years to display in drop-down,
            // either relative to today's year (-nn:+nn), relative to currently displayed year
            // (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
            showOtherMonths: false, // True to show dates in other months, false to leave blank
            selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
            showWeek: false, // True to show week of the year, false to not show it
            calculateWeek: this.iso8601Week, // How to calculate the week of the year,
            // takes a Date and returns the number of the week for it
            shortYearCutoff: "+10", // Short year values < this are in the current century,
            // > this are in the previous century,
            // string value starting with "+" for current year + value
            minDate: null, // The earliest selectable date, or null for no limit
            maxDate: null, // The latest selectable date, or null for no limit
            duration: "fast", // Duration of display/closure
            beforeShowDay: null, // Function that takes a date and returns an array with
            // [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
            // [2] = cell title (optional), e.g. $.datepicker.noWeekends
            beforeShow: null, // Function that takes an input field and
            // returns a set of custom settings for the date picker
            onSelect: null, // Define a callback function when a date is selected
            onChangeMonthYear: null, // Define a callback function when the month or year is changed
            onClose: null, // Define a callback function when the datepicker is closed
            onUpdateDatepicker: null, // Define a callback function when the datepicker is updated
            numberOfMonths: 1, // Number of months to show at a time
            showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
            stepMonths: 1, // Number of months to step back/forward
            stepBigMonths: 12, // Number of months to step back/forward for the big links
            altField: "", // Selector for an alternate field to store selected dates into
            altFormat: "", // The date format to use for the alternate field
            constrainInput: true, // The input is constrained by the current date format
            showButtonPanel: false, // True to show button panel, false to not show it
            autoSize: false, // True to size the input for the date format, false to leave as is
            disabled: false // The initial disabled state
        };
        $.extend(this._defaults, this.regional[""]);
        this.regional.en = $.extend(true, {}, this.regional[""]);
        this.regional["en-US"] = $.extend(true, {}, this.regional.en);
        this.dpDiv = datepicker_bindHover($("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
    }

    $.extend(Datepicker.prototype, {

        /* Class name added to elements to indicate already configured with a date picker. */
        markerClassName: "hasDatepicker",

        //Keep track of the maximum number of rows displayed (see #7043)
        maxRows: 4,

        // TODO rename to "widget" when switching to widget factory
        _widgetDatepicker: function() {
            return this.dpDiv;
        },

        /* Override the default settings for all instances of the date picker.
         * @param  settings  object - the new settings to use as defaults (anonymous object)
         * @return the manager object
         */
        setDefaults: function(settings) {
            datepicker_extendRemove(this._defaults, settings || {});
            return this;
        },

        /* Attach the date picker to a jQuery selection.
         * @param  target	element - the target input field or division or span
         * @param  settings  object - the new settings to use for this date picker instance (anonymous)
         */
        _attachDatepicker: function(target, settings) {
            var nodeName, inline, inst;
            nodeName = target.nodeName.toLowerCase();
            inline = (nodeName === "div" || nodeName === "span");
            if (!target.id) {
                this.uuid += 1;
                target.id = "dp" + this.uuid;
            }
            inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {});
            if (nodeName === "input") {
                this._connectDatepicker(target, inst);
            } else if (inline) {
                this._inlineDatepicker(target, inst);
            }
        },

        /* Create a new instance object. */
        _newInst: function(target, inline) {
            var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars
            return {
                id: id,
                input: target, // associated target
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0, // current selection
                drawMonth: 0,
                drawYear: 0, // month being drawn
                inline: inline, // is datepicker inline or not
                dpDiv: (!inline ? this.dpDiv : // presentation div
                    datepicker_bindHover($("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))
            };
        },

        /* Attach the date picker to an input field. */
        _connectDatepicker: function(target, inst) {
            var input = $(target);
            inst.append = $([]);
            inst.trigger = $([]);
            if (input.hasClass(this.markerClassName)) {
                return;
            }
            this._attachments(input, inst);
            input.addClass(this.markerClassName).on("keydown", this._doKeyDown).
            on("keypress", this._doKeyPress).on("keyup", this._doKeyUp);
            this._autoSize(inst);
            $.data(target, "datepicker", inst);

            //If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
            if (inst.settings.disabled) {
                this._disableDatepicker(target);
            }
        },

        /* Make attachments based on settings. */
        _attachments: function(input, inst) {
            var showOn, buttonText, buttonImage,
                appendText = this._get(inst, "appendText"),
                isRTL = this._get(inst, "isRTL");

            if (inst.append) {
                inst.append.remove();
            }
            if (appendText) {
                inst.append = $("<span>")
                    .addClass(this._appendClass)
                    .text(appendText);
                input[isRTL ? "before" : "after"](inst.append);
            }

            input.off("focus", this._showDatepicker);

            if (inst.trigger) {
                inst.trigger.remove();
            }

            showOn = this._get(inst, "showOn");
            if (showOn === "focus" || showOn === "both") { // pop-up date picker when in the marked field
                input.on("focus", this._showDatepicker);
            }
            if (showOn === "button" || showOn === "both") { // pop-up date picker when button clicked
                buttonText = this._get(inst, "buttonText");
                buttonImage = this._get(inst, "buttonImage");

                if (this._get(inst, "buttonImageOnly")) {
                    inst.trigger = $("<img>")
                        .addClass(this._triggerClass)
                        .attr({
                            src: buttonImage,
                            alt: buttonText,
                            title: buttonText
                        });
                } else {
                    inst.trigger = $("<button type='button'>")
                        .addClass(this._triggerClass);
                    if (buttonImage) {
                        inst.trigger.html(
                            $("<img>")
                            .attr({
                                src: buttonImage,
                                alt: buttonText,
                                title: buttonText
                            })
                        );
                    } else {
                        inst.trigger.text(buttonText);
                    }
                }

                input[isRTL ? "before" : "after"](inst.trigger);
                inst.trigger.on("click", function() {
                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {
                        $.datepicker._hideDatepicker();
                    } else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {
                        $.datepicker._hideDatepicker();
                        $.datepicker._showDatepicker(input[0]);
                    } else {
                        $.datepicker._showDatepicker(input[0]);
                    }
                    return false;
                });
            }
        },

        /* Apply the maximum length for the date format. */
        _autoSize: function(inst) {
            if (this._get(inst, "autoSize") && !inst.inline) {
                var findMax, max, maxI, i,
                    date = new Date(2009, 12 - 1, 20), // Ensure double digits
                    dateFormat = this._get(inst, "dateFormat");

                if (dateFormat.match(/[DM]/)) {
                    findMax = function(names) {
                        max = 0;
                        maxI = 0;
                        for (i = 0; i < names.length; i++) {
                            if (names[i].length > max) {
                                max = names[i].length;
                                maxI = i;
                            }
                        }
                        return maxI;
                    };
                    date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?
                        "monthNames" : "monthNamesShort"))));
                    date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?
                        "dayNames" : "dayNamesShort"))) + 20 - date.getDay());
                }
                inst.input.attr("size", this._formatDate(inst, date).length);
            }
        },

        /* Attach an inline date picker to a div. */
        _inlineDatepicker: function(target, inst) {
            var divSpan = $(target);
            if (divSpan.hasClass(this.markerClassName)) {
                return;
            }
            divSpan.addClass(this.markerClassName).append(inst.dpDiv);
            $.data(target, "datepicker", inst);
            this._setDate(inst, this._getDefaultDate(inst), true);
            this._updateDatepicker(inst);
            this._updateAlternate(inst);

            //If disabled option is true, disable the datepicker before showing it (see ticket #5665)
            if (inst.settings.disabled) {
                this._disableDatepicker(target);
            }

            // Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
            // http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
            inst.dpDiv.css("display", "block");
        },

        /* Pop-up the date picker in a "dialog" box.
         * @param  input element - ignored
         * @param  date	string or Date - the initial date to display
         * @param  onSelect  function - the function to call when a date is selected
         * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
         * @param  pos int[2] - coordinates for the dialog's position within the screen or
         *					event - with x/y coordinates or
         *					leave empty for default (screen centre)
         * @return the manager object
         */
        _dialogDatepicker: function(input, date, onSelect, settings, pos) {
            var id, browserWidth, browserHeight, scrollX, scrollY,
                inst = this._dialogInst; // internal instance

            if (!inst) {
                this.uuid += 1;
                id = "dp" + this.uuid;
                this._dialogInput = $("<input type='text' id='" + id +
                    "' style='position: absolute; top: -100px; width: 0px;'/>");
                this._dialogInput.on("keydown", this._doKeyDown);
                $("body").append(this._dialogInput);
                inst = this._dialogInst = this._newInst(this._dialogInput, false);
                inst.settings = {};
                $.data(this._dialogInput[0], "datepicker", inst);
            }
            datepicker_extendRemove(inst.settings, settings || {});
            date = (date && date.constructor === Date ? this._formatDate(inst, date) : date);
            this._dialogInput.val(date);

            this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
            if (!this._pos) {
                browserWidth = document.documentElement.clientWidth;
                browserHeight = document.documentElement.clientHeight;
                scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
                scrollY = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = // should use actual width/height below
                    [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];
            }

            // Move input on screen for focus, but hidden behind dialog
            this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            inst.settings.onSelect = onSelect;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if ($.blockUI) {
                $.blockUI(this.dpDiv);
            }
            $.data(this._dialogInput[0], "datepicker", inst);
            return this;
        },

        /* Detach a datepicker from its control.
         * @param  target	element - the target input field or division or span
         */
        _destroyDatepicker: function(target) {
            var nodeName,
                $target = $(target),
                inst = $.data(target, "datepicker");

            if (!$target.hasClass(this.markerClassName)) {
                return;
            }

            nodeName = target.nodeName.toLowerCase();
            $.removeData(target, "datepicker");
            if (nodeName === "input") {
                inst.append.remove();
                inst.trigger.remove();
                $target.removeClass(this.markerClassName).
                off("focus", this._showDatepicker).
                off("keydown", this._doKeyDown).
                off("keypress", this._doKeyPress).
                off("keyup", this._doKeyUp);
            } else if (nodeName === "div" || nodeName === "span") {
                $target.removeClass(this.markerClassName).empty();
            }

            if (datepicker_instActive === inst) {
                datepicker_instActive = null;
                this._curInst = null;
            }
        },

        /* Enable the date picker to a jQuery selection.
         * @param  target	element - the target input field or division or span
         */
        _enableDatepicker: function(target) {
            var nodeName, inline,
                $target = $(target),
                inst = $.data(target, "datepicker");

            if (!$target.hasClass(this.markerClassName)) {
                return;
            }

            nodeName = target.nodeName.toLowerCase();
            if (nodeName === "input") {
                target.disabled = false;
                inst.trigger.filter("button").
                each(function() {
                    this.disabled = false;
                }).end().
                filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                });
            } else if (nodeName === "div" || nodeName === "span") {
                inline = $target.children("." + this._inlineClass);
                inline.children().removeClass("ui-state-disabled");
                inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
                prop("disabled", false);
            }
            this._disabledInputs = $.map(this._disabledInputs,

                // Delete entry
                function(value) {
                    return (value === target ? null : value);
                });
        },

        /* Disable the date picker to a jQuery selection.
         * @param  target	element - the target input field or division or span
         */
        _disableDatepicker: function(target) {
            var nodeName, inline,
                $target = $(target),
                inst = $.data(target, "datepicker");

            if (!$target.hasClass(this.markerClassName)) {
                return;
            }

            nodeName = target.nodeName.toLowerCase();
            if (nodeName === "input") {
                target.disabled = true;
                inst.trigger.filter("button").
                each(function() {
                    this.disabled = true;
                }).end().
                filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                });
            } else if (nodeName === "div" || nodeName === "span") {
                inline = $target.children("." + this._inlineClass);
                inline.children().addClass("ui-state-disabled");
                inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
                prop("disabled", true);
            }
            this._disabledInputs = $.map(this._disabledInputs,

                // Delete entry
                function(value) {
                    return (value === target ? null : value);
                });
            this._disabledInputs[this._disabledInputs.length] = target;
        },

        /* Is the first field in a jQuery collection disabled as a datepicker?
         * @param  target	element - the target input field or division or span
         * @return boolean - true if disabled, false if enabled
         */
        _isDisabledDatepicker: function(target) {
            if (!target) {
                return false;
            }
            for (var i = 0; i < this._disabledInputs.length; i++) {
                if (this._disabledInputs[i] === target) {
                    return true;
                }
            }
            return false;
        },

        /* Retrieve the instance data for the target control.
         * @param  target  element - the target input field or division or span
         * @return  object - the associated instance data
         * @throws  error if a jQuery problem getting data
         */
        _getInst: function(target) {
            try {
                return $.data(target, "datepicker");
            } catch (err) {
                throw "Missing instance data for this datepicker";
            }
        },

        /* Update or retrieve the settings for a date picker attached to an input field or division.
         * @param  target  element - the target input field or division or span
         * @param  name	object - the new settings to update or
         *				string - the name of the setting to change or retrieve,
         *				when retrieving also "all" for all instance settings or
         *				"defaults" for all global defaults
         * @param  value   any - the new value for the setting
         *				(omit if above is an object or to retrieve a value)
         */
        _optionDatepicker: function(target, name, value) {
            var settings, date, minDate, maxDate,
                inst = this._getInst(target);

            if (arguments.length === 2 && typeof name === "string") {
                return (name === "defaults" ? $.extend({}, $.datepicker._defaults) :
                    (inst ? (name === "all" ? $.extend({}, inst.settings) :
                        this._get(inst, name)) : null));
            }

            settings = name || {};
            if (typeof name === "string") {
                settings = {};
                settings[name] = value;
            }

            if (inst) {
                if (this._curInst === inst) {
                    this._hideDatepicker();
                }

                date = this._getDateDatepicker(target, true);
                minDate = this._getMinMaxDate(inst, "min");
                maxDate = this._getMinMaxDate(inst, "max");
                datepicker_extendRemove(inst.settings, settings);

                // reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
                if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {
                    inst.settings.minDate = this._formatDate(inst, minDate);
                }
                if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {
                    inst.settings.maxDate = this._formatDate(inst, maxDate);
                }
                if ("disabled" in settings) {
                    if (settings.disabled) {
                        this._disableDatepicker(target);
                    } else {
                        this._enableDatepicker(target);
                    }
                }
                this._attachments($(target), inst);
                this._autoSize(inst);
                this._setDate(inst, date);
                this._updateAlternate(inst);
                this._updateDatepicker(inst);
            }
        },

        // Change method deprecated
        _changeDatepicker: function(target, name, value) {
            this._optionDatepicker(target, name, value);
        },

        /* Redraw the date picker attached to an input field or division.
         * @param  target  element - the target input field or division or span
         */
        _refreshDatepicker: function(target) {
            var inst = this._getInst(target);
            if (inst) {
                this._updateDatepicker(inst);
            }
        },

        /* Set the dates for a jQuery selection.
         * @param  target element - the target input field or division or span
         * @param  date	Date - the new date
         */
        _setDateDatepicker: function(target, date) {
            var inst = this._getInst(target);
            if (inst) {
                this._setDate(inst, date);
                this._updateDatepicker(inst);
                this._updateAlternate(inst);
            }
        },

        /* Get the date(s) for the first entry in a jQuery selection.
         * @param  target element - the target input field or division or span
         * @param  noDefault boolean - true if no default date is to be used
         * @return Date - the current date
         */
        _getDateDatepicker: function(target, noDefault) {
            var inst = this._getInst(target);
            if (inst && !inst.inline) {
                this._setDateFromField(inst, noDefault);
            }
            return (inst ? this._getDate(inst) : null);
        },

        /* Handle keystrokes. */
        _doKeyDown: function(event) {
            var onSelect, dateStr, sel,
                inst = $.datepicker._getInst(event.target),
                handled = true,
                isRTL = inst.dpDiv.is(".ui-datepicker-rtl");

            inst._keyEvent = true;
            if ($.datepicker._datepickerShowing) {
                switch (event.keyCode) {
                    case 9:
                        $.datepicker._hideDatepicker();
                        handled = false;
                        break; // hide on tab out
                    case 13:
                        sel = $("td." + $.datepicker._dayOverClass + ":not(." +
                            $.datepicker._currentClass + ")", inst.dpDiv);
                        if (sel[0]) {
                            $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
                        }

                        onSelect = $.datepicker._get(inst, "onSelect");
                        if (onSelect) {
                            dateStr = $.datepicker._formatDate(inst);

                            // Trigger custom callback
                            onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);
                        } else {
                            $.datepicker._hideDatepicker();
                        }

                        return false; // don't submit the form
                    case 27:
                        $.datepicker._hideDatepicker();
                        break; // hide on escape
                    case 33:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                            -$.datepicker._get(inst, "stepBigMonths") :
                            -$.datepicker._get(inst, "stepMonths")), "M");
                        break; // previous month/year on page up/+ ctrl
                    case 34:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                            +$.datepicker._get(inst, "stepBigMonths") :
                            +$.datepicker._get(inst, "stepMonths")), "M");
                        break; // next month/year on page down/+ ctrl
                    case 35:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._clearDate(event.target);
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break; // clear on ctrl or command +end
                    case 36:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._gotoToday(event.target);
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break; // current on ctrl or command +home
                    case 37:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D");
                        }
                        handled = event.ctrlKey || event.metaKey;

                        // -1 day on ctrl or command +left
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                                -$.datepicker._get(inst, "stepBigMonths") :
                                -$.datepicker._get(inst, "stepMonths")), "M");
                        }

                        // next month/year on alt +left on Mac
                        break;
                    case 38:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, -7, "D");
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break; // -1 week on ctrl or command +up
                    case 39:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D");
                        }
                        handled = event.ctrlKey || event.metaKey;

                        // +1 day on ctrl or command +right
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ?
                                +$.datepicker._get(inst, "stepBigMonths") :
                                +$.datepicker._get(inst, "stepMonths")), "M");
                        }

                        // next month/year on alt +right
                        break;
                    case 40:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, +7, "D");
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break; // +1 week on ctrl or command +down
                    default:
                        handled = false;
                }
            } else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home
                $.datepicker._showDatepicker(this);
            } else {
                handled = false;
            }

            if (handled) {
                event.preventDefault();
                event.stopPropagation();
            }
        },

        /* Filter entered characters - based on date format. */
        _doKeyPress: function(event) {
            var chars, chr,
                inst = $.datepicker._getInst(event.target);

            if ($.datepicker._get(inst, "constrainInput")) {
                chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
                chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);
                return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1);
            }
        },

        /* Synchronise manual entry and field/alternate field. */
        _doKeyUp: function(event) {
            var date,
                inst = $.datepicker._getInst(event.target);

            if (inst.input.val() !== inst.lastVal) {
                try {
                    date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
                        (inst.input ? inst.input.val() : null),
                        $.datepicker._getFormatConfig(inst));

                    if (date) { // only if valid
                        $.datepicker._setDateFromField(inst);
                        $.datepicker._updateAlternate(inst);
                        $.datepicker._updateDatepicker(inst);
                    }
                } catch (err) {}
            }
            return true;
        },

        /* Pop-up the date picker for a given input field.
         * If false returned from beforeShow event handler do not show.
         * @param  input  element - the input field attached to the date picker or
         *					event - if triggered by focus
         */
        _showDatepicker: function(input) {
            input = input.target || input;
            if (input.nodeName.toLowerCase() !== "input") { // find from button/image trigger
                input = $("input", input.parentNode)[0];
            }

            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here
                return;
            }

            var inst, beforeShow, beforeShowSettings, isFixed,
                offset, showAnim, duration;

            inst = $.datepicker._getInst(input);
            if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
                $.datepicker._curInst.dpDiv.stop(true, true);
                if (inst && $.datepicker._datepickerShowing) {
                    $.datepicker._hideDatepicker($.datepicker._curInst.input[0]);
                }
            }

            beforeShow = $.datepicker._get(inst, "beforeShow");
            beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
            if (beforeShowSettings === false) {
                return;
            }
            datepicker_extendRemove(inst.settings, beforeShowSettings);

            inst.lastVal = null;
            $.datepicker._lastInput = input;
            $.datepicker._setDateFromField(inst);

            if ($.datepicker._inDialog) { // hide cursor
                input.value = "";
            }
            if (!$.datepicker._pos) { // position below input
                $.datepicker._pos = $.datepicker._findPos(input);
                $.datepicker._pos[1] += input.offsetHeight; // add the height
            }

            isFixed = false;
            $(input).parents().each(function() {
                isFixed |= $(this).css("position") === "fixed";
                return !isFixed;
            });

            offset = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null;

            //to avoid flashes on Firefox
            inst.dpDiv.empty();

            // determine sizing offscreen
            inst.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            $.datepicker._updateDatepicker(inst);

            // fix width for dynamic number of date pickers
            // and adjust position before showing
            offset = $.datepicker._checkOffset(inst, offset, isFixed);
            inst.dpDiv.css({
                position: ($.datepicker._inDialog && $.blockUI ?
                    "static" : (isFixed ? "fixed" : "absolute")),
                display: "none",
                left: offset.left + "px",
                top: offset.top + "px"
            });

            if (!inst.inline) {
                showAnim = $.datepicker._get(inst, "showAnim");
                duration = $.datepicker._get(inst, "duration");
                inst.dpDiv.css("z-index", datepicker_getZindex($(input)) + 1);
                $.datepicker._datepickerShowing = true;

                if ($.effects && $.effects.effect[showAnim]) {
                    inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);
                } else {
                    inst.dpDiv[showAnim || "show"](showAnim ? duration : null);
                }

                if ($.datepicker._shouldFocusInput(inst)) {
                    inst.input.trigger("focus");
                }

                $.datepicker._curInst = inst;
            }
        },

        /* Generate the date picker content. */
        _updateDatepicker: function(inst) {
            this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
            datepicker_instActive = inst; // for delegate hover events
            inst.dpDiv.empty().append(this._generateHTML(inst));
            this._attachHandlers(inst);

            var origyearshtml,
                numMonths = this._getNumberOfMonths(inst),
                cols = numMonths[1],
                width = 17,
                activeCell = inst.dpDiv.find("." + this._dayOverClass + " a"),
                onUpdateDatepicker = $.datepicker._get(inst, "onUpdateDatepicker");

            if (activeCell.length > 0) {
                datepicker_handleMouseover.apply(activeCell.get(0));
            }

            inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (cols > 1) {
                inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em");
            }
            inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") +
                "Class"]("ui-datepicker-multi");
            inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") +
                "Class"]("ui-datepicker-rtl");

            if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput(inst)) {
                inst.input.trigger("focus");
            }

            // Deffered render of the years select (to avoid flashes on Firefox)
            if (inst.yearshtml) {
                origyearshtml = inst.yearshtml;
                setTimeout(function() {

                    //assure that inst.yearshtml didn't change.
                    if (origyearshtml === inst.yearshtml && inst.yearshtml) {
                        inst.dpDiv.find("select.ui-datepicker-year").first().replaceWith(inst.yearshtml);
                    }
                    origyearshtml = inst.yearshtml = null;
                }, 0);
            }

            if (onUpdateDatepicker) {
                onUpdateDatepicker.apply((inst.input ? inst.input[0] : null), [inst]);
            }
        },

        // #6694 - don't focus the input if it's already focused
        // this breaks the change event in IE
        // Support: IE and jQuery <1.9
        _shouldFocusInput: function(inst) {
            return inst.input && inst.input.is(":visible") && !inst.input.is(":disabled") && !inst.input.is(":focus");
        },

        /* Check positioning to remain on screen. */
        _checkOffset: function(inst, offset, isFixed) {
            var dpWidth = inst.dpDiv.outerWidth(),
                dpHeight = inst.dpDiv.outerHeight(),
                inputWidth = inst.input ? inst.input.outerWidth() : 0,
                inputHeight = inst.input ? inst.input.outerHeight() : 0,
                viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),
                viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());

            offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
            offset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;
            offset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;

            // Now check if datepicker is showing outside window viewport - move to a better place if so.
            offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
                Math.abs(offset.left + dpWidth - viewWidth) : 0);
            offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
                Math.abs(dpHeight + inputHeight) : 0);

            return offset;
        },

        /* Find an object's position on the screen. */
        _findPos: function(obj) {
            var position,
                inst = this._getInst(obj),
                isRTL = this._get(inst, "isRTL");

            while (obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.pseudos.hidden(obj))) {
                obj = obj[isRTL ? "previousSibling" : "nextSibling"];
            }

            position = $(obj).offset();
            return [position.left, position.top];
        },

        /* Hide the date picker from view.
         * @param  input  element - the input field attached to the date picker
         */
        _hideDatepicker: function(input) {
            var showAnim, duration, postProcess, onClose,
                inst = this._curInst;

            if (!inst || (input && inst !== $.data(input, "datepicker"))) {
                return;
            }

            if (this._datepickerShowing) {
                showAnim = this._get(inst, "showAnim");
                duration = this._get(inst, "duration");
                postProcess = function() {
                    $.datepicker._tidyDialog(inst);
                };

                // DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
                    inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);
                } else {
                    inst.dpDiv[(showAnim === "slideDown" ? "slideUp" :
                        (showAnim === "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess);
                }

                if (!showAnim) {
                    postProcess();
                }
                this._datepickerShowing = false;

                onClose = this._get(inst, "onClose");
                if (onClose) {
                    onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]);
                }

                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if ($.blockUI) {
                        $.unblockUI();
                        $("body").append(this.dpDiv);
                    }
                }
                this._inDialog = false;
            }
        },

        /* Tidy up after a dialog display. */
        _tidyDialog: function(inst) {
            inst.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
        },

        /* Close date picker if clicked elsewhere. */
        _checkExternalClick: function(event) {
            if (!$.datepicker._curInst) {
                return;
            }

            var $target = $(event.target),
                inst = $.datepicker._getInst($target[0]);

            if ((($target[0].id !== $.datepicker._mainDivId &&
                    $target.parents("#" + $.datepicker._mainDivId).length === 0 &&
                    !$target.hasClass($.datepicker.markerClassName) &&
                    !$target.closest("." + $.datepicker._triggerClass).length &&
                    $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI))) ||
                ($target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst)) {
                $.datepicker._hideDatepicker();
            }
        },

        /* Adjust one of the date sub-fields. */
        _adjustDate: function(id, offset, period) {
            var target = $(id),
                inst = this._getInst(target[0]);

            if (this._isDisabledDatepicker(target[0])) {
                return;
            }
            this._adjustInstDate(inst, offset, period);
            this._updateDatepicker(inst);
        },

        /* Action for current link. */
        _gotoToday: function(id) {
            var date,
                target = $(id),
                inst = this._getInst(target[0]);

            if (this._get(inst, "gotoCurrent") && inst.currentDay) {
                inst.selectedDay = inst.currentDay;
                inst.drawMonth = inst.selectedMonth = inst.currentMonth;
                inst.drawYear = inst.selectedYear = inst.currentYear;
            } else {
                date = new Date();
                inst.selectedDay = date.getDate();
                inst.drawMonth = inst.selectedMonth = date.getMonth();
                inst.drawYear = inst.selectedYear = date.getFullYear();
            }
            this._notifyChange(inst);
            this._adjustDate(target);
        },

        /* Action for selecting a new month/year. */
        _selectMonthYear: function(id, select, period) {
            var target = $(id),
                inst = this._getInst(target[0]);

            inst["selected" + (period === "M" ? "Month" : "Year")] =
                inst["draw" + (period === "M" ? "Month" : "Year")] =
                parseInt(select.options[select.selectedIndex].value, 10);

            this._notifyChange(inst);
            this._adjustDate(target);
        },

        /* Action for selecting a day. */
        _selectDay: function(id, month, year, td) {
            var inst,
                target = $(id);

            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
                return;
            }

            inst = this._getInst(target[0]);
            inst.selectedDay = inst.currentDay = parseInt($("a", td).attr("data-date"));
            inst.selectedMonth = inst.currentMonth = month;
            inst.selectedYear = inst.currentYear = year;
            this._selectDate(id, this._formatDate(inst,
                inst.currentDay, inst.currentMonth, inst.currentYear));
        },

        /* Erase the input field and hide the date picker. */
        _clearDate: function(id) {
            var target = $(id);
            this._selectDate(target, "");
        },

        /* Update the input field with the selected date. */
        _selectDate: function(id, dateStr) {
            var onSelect,
                target = $(id),
                inst = this._getInst(target[0]);

            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
            if (inst.input) {
                inst.input.val(dateStr);
            }
            this._updateAlternate(inst);

            onSelect = this._get(inst, "onSelect");
            if (onSelect) {
                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]); // trigger custom callback
            } else if (inst.input) {
                inst.input.trigger("change"); // fire the change event
            }

            if (inst.inline) {
                this._updateDatepicker(inst);
            } else {
                this._hideDatepicker();
                this._lastInput = inst.input[0];
                if (typeof(inst.input[0]) !== "object") {
                    inst.input.trigger("focus"); // restore focus
                }
                this._lastInput = null;
            }
        },

        /* Update any alternate field to synchronise with the main field. */
        _updateAlternate: function(inst) {
            var altFormat, date, dateStr,
                altField = this._get(inst, "altField");

            if (altField) { // update alternate field too
                altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
                date = this._getDate(inst);
                dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
                $(document).find(altField).val(dateStr);
            }
        },

        /* Set as beforeShowDay function to prevent selection of weekends.
         * @param  date  Date - the date to customise
         * @return [boolean, string] - is this date selectable?, what is its CSS class?
         */
        noWeekends: function(date) {
            var day = date.getDay();
            return [(day > 0 && day < 6), ""];
        },

        /* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
         * @param  date  Date - the date to get the week for
         * @return  number - the number of the week within the year that contains this date
         */
        iso8601Week: function(date) {
            var time,
                checkDate = new Date(date.getTime());

            // Find Thursday of this week starting on Monday
            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));

            time = checkDate.getTime();
            checkDate.setMonth(0); // Compare with Jan 1
            checkDate.setDate(1);
            return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
        },

        /* Parse a string value into a date object.
         * See formatDate below for the possible formats.
         *
         * @param  format string - the expected format of the date
         * @param  value string - the date in the above format
         * @param  settings Object - attributes include:
         *					shortYearCutoff  number - the cutoff year for determining the century (optional)
         *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
         *					dayNames		string[7] - names of the days from Sunday (optional)
         *					monthNamesShort string[12] - abbreviated names of the months (optional)
         *					monthNames		string[12] - names of the months (optional)
         * @return  Date - the extracted date value or null if value is blank
         */
        parseDate: function(format, value, settings) {
            if (format == null || value == null) {
                throw "Invalid arguments";
            }

            value = (typeof value === "object" ? value.toString() : value + "");
            if (value === "") {
                return null;
            }

            var iFormat, dim, extra,
                iValue = 0,
                shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,
                shortYearCutoff = (typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :
                    new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),
                dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
                dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
                monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
                monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
                year = -1,
                month = -1,
                day = -1,
                doy = -1,
                literal = false,
                date,

                // Check whether a format character is doubled
                lookAhead = function(match) {
                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
                    if (matches) {
                        iFormat++;
                    }
                    return matches;
                },

                // Extract a number from the string value
                getNumber = function(match) {
                    var isDoubled = lookAhead(match),
                        size = (match === "@" ? 14 : (match === "!" ? 20 :
                            (match === "y" && isDoubled ? 4 : (match === "o" ? 3 : 2)))),
                        minSize = (match === "y" ? size : 1),
                        digits = new RegExp("^\\d{" + minSize + "," + size + "}"),
                        num = value.substring(iValue).match(digits);
                    if (!num) {
                        throw "Missing number at position " + iValue;
                    }
                    iValue += num[0].length;
                    return parseInt(num[0], 10);
                },

                // Extract a name from the string value and convert to an index
                getName = function(match, shortNames, longNames) {
                    var index = -1,
                        names = $.map(lookAhead(match) ? longNames : shortNames, function(v, k) {
                            return [
                                [k, v]
                            ];
                        }).sort(function(a, b) {
                            return -(a[1].length - b[1].length);
                        });

                    $.each(names, function(i, pair) {
                        var name = pair[1];
                        if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
                            index = pair[0];
                            iValue += name.length;
                            return false;
                        }
                    });
                    if (index !== -1) {
                        return index + 1;
                    } else {
                        throw "Unknown name at position " + iValue;
                    }
                },

                // Confirm that a literal character matches the string value
                checkLiteral = function() {
                    if (value.charAt(iValue) !== format.charAt(iFormat)) {
                        throw "Unexpected literal at position " + iValue;
                    }
                    iValue++;
                };

            for (iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                        literal = false;
                    } else {
                        checkLiteral();
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                            day = getNumber("d");
                            break;
                        case "D":
                            getName("D", dayNamesShort, dayNames);
                            break;
                        case "o":
                            doy = getNumber("o");
                            break;
                        case "m":
                            month = getNumber("m");
                            break;
                        case "M":
                            month = getName("M", monthNamesShort, monthNames);
                            break;
                        case "y":
                            year = getNumber("y");
                            break;
                        case "@":
                            date = new Date(getNumber("@"));
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "!":
                            date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "'":
                            if (lookAhead("'")) {
                                checkLiteral();
                            } else {
                                literal = true;
                            }
                            break;
                        default:
                            checkLiteral();
                    }
                }
            }

            if (iValue < value.length) {
                extra = value.substr(iValue);
                if (!/^\s+/.test(extra)) {
                    throw "Extra/unparsed characters found in date: " + extra;
                }
            }

            if (year === -1) {
                year = new Date().getFullYear();
            } else if (year < 100) {
                year += new Date().getFullYear() - new Date().getFullYear() % 100 +
                    (year <= shortYearCutoff ? 0 : -100);
            }

            if (doy > -1) {
                month = 1;
                day = doy;
                do {
                    dim = this._getDaysInMonth(year, month - 1);
                    if (day <= dim) {
                        break;
                    }
                    month++;
                    day -= dim;
                } while (true);
            }

            date = this._daylightSavingAdjust(new Date(year, month - 1, day));
            if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
                throw "Invalid date"; // E.g. 31/02/00
            }
            return date;
        },

        /* Standard date formats. */
        ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y", // RFC 822
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd", // ISO 8601

        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +
            Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),

        /* Format a date object into a string value.
         * The format can be combinations of the following:
         * d  - day of month (no leading zero)
         * dd - day of month (two digit)
         * o  - day of year (no leading zeros)
         * oo - day of year (three digit)
         * D  - day name short
         * DD - day name long
         * m  - month of year (no leading zero)
         * mm - month of year (two digit)
         * M  - month name short
         * MM - month name long
         * y  - year (two digit)
         * yy - year (four digit)
         * @ - Unix timestamp (ms since 01/01/1970)
         * ! - Windows ticks (100ns since 01/01/0001)
         * "..." - literal text
         * '' - single quote
         *
         * @param  format string - the desired format of the date
         * @param  date Date - the date value to format
         * @param  settings Object - attributes include:
         *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
         *					dayNames		string[7] - names of the days from Sunday (optional)
         *					monthNamesShort string[12] - abbreviated names of the months (optional)
         *					monthNames		string[12] - names of the months (optional)
         * @return  string - the date in the above format
         */
        formatDate: function(format, date, settings) {
            if (!date) {
                return "";
            }

            var iFormat,
                dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
                dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
                monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
                monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,

                // Check whether a format character is doubled
                lookAhead = function(match) {
                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
                    if (matches) {
                        iFormat++;
                    }
                    return matches;
                },

                // Format a number, with leading zero if necessary
                formatNumber = function(match, value, len) {
                    var num = "" + value;
                    if (lookAhead(match)) {
                        while (num.length < len) {
                            num = "0" + num;
                        }
                    }
                    return num;
                },

                // Format a name, short or long as requested
                formatName = function(match, value, shortNames, longNames) {
                    return (lookAhead(match) ? longNames[value] : shortNames[value]);
                },
                output = "",
                literal = false;

            if (date) {
                for (iFormat = 0; iFormat < format.length; iFormat++) {
                    if (literal) {
                        if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                            literal = false;
                        } else {
                            output += format.charAt(iFormat);
                        }
                    } else {
                        switch (format.charAt(iFormat)) {
                            case "d":
                                output += formatNumber("d", date.getDate(), 2);
                                break;
                            case "D":
                                output += formatName("D", date.getDay(), dayNamesShort, dayNames);
                                break;
                            case "o":
                                output += formatNumber("o",
                                    Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case "m":
                                output += formatNumber("m", date.getMonth() + 1, 2);
                                break;
                            case "M":
                                output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
                                break;
                            case "y":
                                output += (lookAhead("y") ? date.getFullYear() :
                                    (date.getFullYear() % 100 < 10 ? "0" : "") + date.getFullYear() % 100);
                                break;
                            case "@":
                                output += date.getTime();
                                break;
                            case "!":
                                output += date.getTime() * 10000 + this._ticksTo1970;
                                break;
                            case "'":
                                if (lookAhead("'")) {
                                    output += "'";
                                } else {
                                    literal = true;
                                }
                                break;
                            default:
                                output += format.charAt(iFormat);
                        }
                    }
                }
            }
            return output;
        },

        /* Extract all possible characters from the date format. */
        _possibleChars: function(format) {
            var iFormat,
                chars = "",
                literal = false,

                // Check whether a format character is doubled
                lookAhead = function(match) {
                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
                    if (matches) {
                        iFormat++;
                    }
                    return matches;
                };

            for (iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                        literal = false;
                    } else {
                        chars += format.charAt(iFormat);
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                        case "m":
                        case "y":
                        case "@":
                            chars += "0123456789";
                            break;
                        case "D":
                        case "M":
                            return null; // Accept anything
                        case "'":
                            if (lookAhead("'")) {
                                chars += "'";
                            } else {
                                literal = true;
                            }
                            break;
                        default:
                            chars += format.charAt(iFormat);
                    }
                }
            }
            return chars;
        },

        /* Get a setting value, defaulting if necessary. */
        _get: function(inst, name) {
            return inst.settings[name] !== undefined ?
                inst.settings[name] : this._defaults[name];
        },

        /* Parse existing date and initialise date picker. */
        _setDateFromField: function(inst, noDefault) {
            if (inst.input.val() === inst.lastVal) {
                return;
            }

            var dateFormat = this._get(inst, "dateFormat"),
                dates = inst.lastVal = inst.input ? inst.input.val() : null,
                defaultDate = this._getDefaultDate(inst),
                date = defaultDate,
                settings = this._getFormatConfig(inst);

            try {
                date = this.parseDate(dateFormat, dates, settings) || defaultDate;
            } catch (event) {
                dates = (noDefault ? "" : dates);
            }
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            inst.currentDay = (dates ? date.getDate() : 0);
            inst.currentMonth = (dates ? date.getMonth() : 0);
            inst.currentYear = (dates ? date.getFullYear() : 0);
            this._adjustInstDate(inst);
        },

        /* Retrieve the default date shown on opening. */
        _getDefaultDate: function(inst) {
            return this._restrictMinMax(inst,
                this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));
        },

        /* A date may be specified as an exact value or a relative one. */
        _determineDate: function(inst, date, defaultDate) {
            var offsetNumeric = function(offset) {
                    var date = new Date();
                    date.setDate(date.getDate() + offset);
                    return date;
                },
                offsetString = function(offset) {
                    try {
                        return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
                            offset, $.datepicker._getFormatConfig(inst));
                    } catch (e) {

                        // Ignore
                    }

                    var date = (offset.toLowerCase().match(/^c/) ?
                            $.datepicker._getDate(inst) : null) || new Date(),
                        year = date.getFullYear(),
                        month = date.getMonth(),
                        day = date.getDate(),
                        pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                        matches = pattern.exec(offset);

                    while (matches) {
                        switch (matches[2] || "d") {
                            case "d":
                            case "D":
                                day += parseInt(matches[1], 10);
                                break;
                            case "w":
                            case "W":
                                day += parseInt(matches[1], 10) * 7;
                                break;
                            case "m":
                            case "M":
                                month += parseInt(matches[1], 10);
                                day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                                break;
                            case "y":
                            case "Y":
                                year += parseInt(matches[1], 10);
                                day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                                break;
                        }
                        matches = pattern.exec(offset);
                    }
                    return new Date(year, month, day);
                },
                newDate = (date == null || date === "" ? defaultDate : (typeof date === "string" ? offsetString(date) :
                    (typeof date === "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));

            newDate = (newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate);
            if (newDate) {
                newDate.setHours(0);
                newDate.setMinutes(0);
                newDate.setSeconds(0);
                newDate.setMilliseconds(0);
            }
            return this._daylightSavingAdjust(newDate);
        },

        /* Handle switch to/from daylight saving.
         * Hours may be non-zero on daylight saving cut-over:
         * > 12 when midnight changeover, but then cannot generate
         * midnight datetime, so jump to 1AM, otherwise reset.
         * @param  date  (Date) the date to check
         * @return  (Date) the corrected date
         */
        _daylightSavingAdjust: function(date) {
            if (!date) {
                return null;
            }
            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
            return date;
        },

        /* Set the date(s) directly. */
        _setDate: function(inst, date, noChange) {
            var clear = !date,
                origMonth = inst.selectedMonth,
                origYear = inst.selectedYear,
                newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));

            inst.selectedDay = inst.currentDay = newDate.getDate();
            inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
            inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
            if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {
                this._notifyChange(inst);
            }
            this._adjustInstDate(inst);
            if (inst.input) {
                inst.input.val(clear ? "" : this._formatDate(inst));
            }
        },

        /* Retrieve the date(s) directly. */
        _getDate: function(inst) {
            var startDate = (!inst.currentYear || (inst.input && inst.input.val() === "") ? null :
                this._daylightSavingAdjust(new Date(
                    inst.currentYear, inst.currentMonth, inst.currentDay)));
            return startDate;
        },

        /* Attach the onxxx handlers.  These are declared statically so
         * they work with static code transformers like Caja.
         */
        _attachHandlers: function(inst) {
            var stepMonths = this._get(inst, "stepMonths"),
                id = "#" + inst.id.replace(/\\\\/g, "\\");
            inst.dpDiv.find("[data-handler]").map(function() {
                var handler = {
                    prev: function() {
                        $.datepicker._adjustDate(id, -stepMonths, "M");
                    },
                    next: function() {
                        $.datepicker._adjustDate(id, +stepMonths, "M");
                    },
                    hide: function() {
                        $.datepicker._hideDatepicker();
                    },
                    today: function() {
                        $.datepicker._gotoToday(id);
                    },
                    selectDay: function() {
                        $.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return false;
                    },
                    selectMonth: function() {
                        $.datepicker._selectMonthYear(id, this, "M");
                        return false;
                    },
                    selectYear: function() {
                        $.datepicker._selectMonthYear(id, this, "Y");
                        return false;
                    }
                };
                $(this).on(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);
            });
        },

        /* Generate the HTML for the current state of the date picker. */
        _generateHTML: function(inst) {
            var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,
                controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,
                monthNames, monthNamesShort, beforeShowDay, showOtherMonths,
                selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,
                cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,
                printDate, dRow, tbody, daySettings, otherMonth, unselectable,
                tempDate = new Date(),
                today = this._daylightSavingAdjust(
                    new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time
                isRTL = this._get(inst, "isRTL"),
                showButtonPanel = this._get(inst, "showButtonPanel"),
                hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),
                navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),
                numMonths = this._getNumberOfMonths(inst),
                showCurrentAtPos = this._get(inst, "showCurrentAtPos"),
                stepMonths = this._get(inst, "stepMonths"),
                isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),
                currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :
                    new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),
                minDate = this._getMinMaxDate(inst, "min"),
                maxDate = this._getMinMaxDate(inst, "max"),
                drawMonth = inst.drawMonth - showCurrentAtPos,
                drawYear = inst.drawYear;

            if (drawMonth < 0) {
                drawMonth += 12;
                drawYear--;
            }
            if (maxDate) {
                maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),
                    maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
                maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
                while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
                    drawMonth--;
                    if (drawMonth < 0) {
                        drawMonth = 11;
                        drawYear--;
                    }
                }
            }
            inst.drawMonth = drawMonth;
            inst.drawYear = drawYear;

            prevText = this._get(inst, "prevText");
            prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,
                this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),
                this._getFormatConfig(inst)));

            if (this._canAdjustMonth(inst, -1, drawYear, drawMonth)) {
                prev = $("<a>")
                    .attr({
                        "class": "ui-datepicker-prev ui-corner-all",
                        "data-handler": "prev",
                        "data-event": "click",
                        title: prevText
                    })
                    .append(
                        $("<span>")
                        .addClass("ui-icon ui-icon-circle-triangle-" +
                            (isRTL ? "e" : "w"))
                        .text(prevText)
                    )[0].outerHTML;
            } else if (hideIfNoPrevNext) {
                prev = "";
            } else {
                prev = $("<a>")
                    .attr({
                        "class": "ui-datepicker-prev ui-corner-all ui-state-disabled",
                        title: prevText
                    })
                    .append(
                        $("<span>")
                        .addClass("ui-icon ui-icon-circle-triangle-" +
                            (isRTL ? "e" : "w"))
                        .text(prevText)
                    )[0].outerHTML;
            }

            nextText = this._get(inst, "nextText");
            nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,
                this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),
                this._getFormatConfig(inst)));

            if (this._canAdjustMonth(inst, +1, drawYear, drawMonth)) {
                next = $("<a>")
                    .attr({
                        "class": "ui-datepicker-next ui-corner-all",
                        "data-handler": "next",
                        "data-event": "click",
                        title: nextText
                    })
                    .append(
                        $("<span>")
                        .addClass("ui-icon ui-icon-circle-triangle-" +
                            (isRTL ? "w" : "e"))
                        .text(nextText)
                    )[0].outerHTML;
            } else if (hideIfNoPrevNext) {
                next = "";
            } else {
                next = $("<a>")
                    .attr({
                        "class": "ui-datepicker-next ui-corner-all ui-state-disabled",
                        title: nextText
                    })
                    .append(
                        $("<span>")
                        .attr("class", "ui-icon ui-icon-circle-triangle-" +
                            (isRTL ? "w" : "e"))
                        .text(nextText)
                    )[0].outerHTML;
            }

            currentText = this._get(inst, "currentText");
            gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
            currentText = (!navigationAsDateFormat ? currentText :
                this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));

            controls = "";
            if (!inst.inline) {
                controls = $("<button>")
                    .attr({
                        type: "button",
                        "class": "ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all",
                        "data-handler": "hide",
                        "data-event": "click"
                    })
                    .text(this._get(inst, "closeText"))[0].outerHTML;
            }

            buttonPanel = "";
            if (showButtonPanel) {
                buttonPanel = $("<div class='ui-datepicker-buttonpane ui-widget-content'>")
                    .append(isRTL ? controls : "")
                    .append(this._isInRange(inst, gotoDate) ?
                        $("<button>")
                        .attr({
                            type: "button",
                            "class": "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all",
                            "data-handler": "today",
                            "data-event": "click"
                        })
                        .text(currentText) :
                        "")
                    .append(isRTL ? "" : controls)[0].outerHTML;
            }

            firstDay = parseInt(this._get(inst, "firstDay"), 10);
            firstDay = (isNaN(firstDay) ? 0 : firstDay);

            showWeek = this._get(inst, "showWeek");
            dayNames = this._get(inst, "dayNames");
            dayNamesMin = this._get(inst, "dayNamesMin");
            monthNames = this._get(inst, "monthNames");
            monthNamesShort = this._get(inst, "monthNamesShort");
            beforeShowDay = this._get(inst, "beforeShowDay");
            showOtherMonths = this._get(inst, "showOtherMonths");
            selectOtherMonths = this._get(inst, "selectOtherMonths");
            defaultDate = this._getDefaultDate(inst);
            html = "";

            for (row = 0; row < numMonths[0]; row++) {
                group = "";
                this.maxRows = 4;
                for (col = 0; col < numMonths[1]; col++) {
                    selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
                    cornerClass = " ui-corner-all";
                    calender = "";
                    if (isMultiMonth) {
                        calender += "<div class='ui-datepicker-group";
                        if (numMonths[1] > 1) {
                            switch (col) {
                                case 0:
                                    calender += " ui-datepicker-group-first";
                                    cornerClass = " ui-corner-" + (isRTL ? "right" : "left");
                                    break;
                                case numMonths[1] - 1:
                                    calender += " ui-datepicker-group-last";
                                    cornerClass = " ui-corner-" + (isRTL ? "left" : "right");
                                    break;
                                default:
                                    calender += " ui-datepicker-group-middle";
                                    cornerClass = "";
                                    break;
                            }
                        }
                        calender += "'>";
                    }
                    calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" +
                        (/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : "") +
                        (/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : "") +
                        this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,
                            row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
                        "</div><table class='ui-datepicker-calendar'><thead>" +
                        "<tr>";
                    thead = (showWeek ? "<th class='ui-datepicker-week-col'>" + this._get(inst, "weekHeader") + "</th>" : "");
                    for (dow = 0; dow < 7; dow++) { // days of the week
                        day = (dow + firstDay) % 7;
                        thead += "<th scope='col'" + ((dow + firstDay + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" +
                            "<span title='" + dayNames[day] + "'>" + dayNamesMin[day] + "</span></th>";
                    }
                    calender += thead + "</tr></thead><tbody>";
                    daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
                    if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {
                        inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
                    }
                    leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
                    curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
                    numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
                    this.maxRows = numRows;
                    printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
                    for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows
                        calender += "<tr>";
                        tbody = (!showWeek ? "" : "<td class='ui-datepicker-week-col'>" +
                            this._get(inst, "calculateWeek")(printDate) + "</td>");
                        for (dow = 0; dow < 7; dow++) { // create date picker days
                            daySettings = (beforeShowDay ?
                                beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
                            otherMonth = (printDate.getMonth() !== drawMonth);
                            unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||
                                (minDate && printDate < minDate) || (maxDate && printDate > maxDate);
                            tbody += "<td class='" +
                                ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + // highlight weekends
                                (otherMonth ? " ui-datepicker-other-month" : "") + // highlight days from other months
                                ((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key
                                    (defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?

                                    // or defaultDate is current printedDate and defaultDate is selectedDate
                                    " " + this._dayOverClass : "") + // highlight selected day
                                (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + // highlight unselectable days
                                (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + // highlight custom dates
                                    (printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + // highlight selected day
                                    (printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "'" + // highlight today (if different)
                                ((!otherMonth || showOtherMonths) && daySettings[2] ? " title='" + daySettings[2].replace(/'/g, "&#39;") + "'" : "") + // cell title
                                (unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'") + ">" + // actions
                                (otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
                                    (unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" +
                                        (printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") +
                                        (printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + // highlight selected day
                                        (otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months
                                        "' href='#' aria-current='" + (printDate.getTime() === currentDate.getTime() ? "true" : "false") + // mark date as selected for screen reader
                                        "' data-date='" + printDate.getDate() + // store date as data
                                        "'>" + printDate.getDate() + "</a>")) + "</td>"; // display selectable date
                            printDate.setDate(printDate.getDate() + 1);
                            printDate = this._daylightSavingAdjust(printDate);
                        }
                        calender += tbody + "</tr>";
                    }
                    drawMonth++;
                    if (drawMonth > 11) {
                        drawMonth = 0;
                        drawYear++;
                    }
                    calender += "</tbody></table>" + (isMultiMonth ? "</div>" +
                        ((numMonths[0] > 0 && col === numMonths[1] - 1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
                    group += calender;
                }
                html += group;
            }
            html += buttonPanel;
            inst._keyEvent = false;
            return html;
        },

        /* Generate the month and year header. */
        _generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,
            secondary, monthNames, monthNamesShort) {

            var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,
                changeMonth = this._get(inst, "changeMonth"),
                changeYear = this._get(inst, "changeYear"),
                showMonthAfterYear = this._get(inst, "showMonthAfterYear"),
                selectMonthLabel = this._get(inst, "selectMonthLabel"),
                selectYearLabel = this._get(inst, "selectYearLabel"),
                html = "<div class='ui-datepicker-title'>",
                monthHtml = "";

            // Month selection
            if (secondary || !changeMonth) {
                monthHtml += "<span class='ui-datepicker-month'>" + monthNames[drawMonth] + "</span>";
            } else {
                inMinYear = (minDate && minDate.getFullYear() === drawYear);
                inMaxYear = (maxDate && maxDate.getFullYear() === drawYear);
                monthHtml += "<select class='ui-datepicker-month' aria-label='" + selectMonthLabel + "' data-handler='selectMonth' data-event='change'>";
                for (month = 0; month < 12; month++) {
                    if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
                        monthHtml += "<option value='" + month + "'" +
                            (month === drawMonth ? " selected='selected'" : "") +
                            ">" + monthNamesShort[month] + "</option>";
                    }
                }
                monthHtml += "</select>";
            }

            if (!showMonthAfterYear) {
                html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");
            }

            // Year selection
            if (!inst.yearshtml) {
                inst.yearshtml = "";
                if (secondary || !changeYear) {
                    html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
                } else {

                    // determine range of years to display
                    years = this._get(inst, "yearRange").split(":");
                    thisYear = new Date().getFullYear();
                    determineYear = function(value) {
                        var year = (value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) :
                            (value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) :
                                parseInt(value, 10)));
                        return (isNaN(year) ? thisYear : year);
                    };
                    year = determineYear(years[0]);
                    endYear = Math.max(year, determineYear(years[1] || ""));
                    year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
                    endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
                    inst.yearshtml += "<select class='ui-datepicker-year' aria-label='" + selectYearLabel + "' data-handler='selectYear' data-event='change'>";
                    for (; year <= endYear; year++) {
                        inst.yearshtml += "<option value='" + year + "'" +
                            (year === drawYear ? " selected='selected'" : "") +
                            ">" + year + "</option>";
                    }
                    inst.yearshtml += "</select>";

                    html += inst.yearshtml;
                    inst.yearshtml = null;
                }
            }

            html += this._get(inst, "yearSuffix");
            if (showMonthAfterYear) {
                html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;
            }
            html += "</div>"; // Close datepicker_header
            return html;
        },

        /* Adjust one of the date sub-fields. */
        _adjustInstDate: function(inst, offset, period) {
            var year = inst.selectedYear + (period === "Y" ? offset : 0),
                month = inst.selectedMonth + (period === "M" ? offset : 0),
                day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),
                date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));

            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            if (period === "M" || period === "Y") {
                this._notifyChange(inst);
            }
        },

        /* Ensure a date is within any min/max bounds. */
        _restrictMinMax: function(inst, date) {
            var minDate = this._getMinMaxDate(inst, "min"),
                maxDate = this._getMinMaxDate(inst, "max"),
                newDate = (minDate && date < minDate ? minDate : date);
            return (maxDate && newDate > maxDate ? maxDate : newDate);
        },

        /* Notify change of month/year. */
        _notifyChange: function(inst) {
            var onChange = this._get(inst, "onChangeMonthYear");
            if (onChange) {
                onChange.apply((inst.input ? inst.input[0] : null), [inst.selectedYear, inst.selectedMonth + 1, inst]);
            }
        },

        /* Determine the number of months to show. */
        _getNumberOfMonths: function(inst) {
            var numMonths = this._get(inst, "numberOfMonths");
            return (numMonths == null ? [1, 1] : (typeof numMonths === "number" ? [1, numMonths] : numMonths));
        },

        /* Determine the current maximum date - ensure no time components are set. */
        _getMinMaxDate: function(inst, minMax) {
            return this._determineDate(inst, this._get(inst, minMax + "Date"), null);
        },

        /* Find the number of days in a given month. */
        _getDaysInMonth: function(year, month) {
            return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
        },

        /* Find the day of the week of the first of a month. */
        _getFirstDayOfMonth: function(year, month) {
            return new Date(year, month, 1).getDay();
        },

        /* Determines if we should allow a "next/prev" month display change. */
        _canAdjustMonth: function(inst, offset, curYear, curMonth) {
            var numMonths = this._getNumberOfMonths(inst),
                date = this._daylightSavingAdjust(new Date(curYear,
                    curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));

            if (offset < 0) {
                date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
            }
            return this._isInRange(inst, date);
        },

        /* Is the given date in the accepted range? */
        _isInRange: function(inst, date) {
            var yearSplit, currentYear,
                minDate = this._getMinMaxDate(inst, "min"),
                maxDate = this._getMinMaxDate(inst, "max"),
                minYear = null,
                maxYear = null,
                years = this._get(inst, "yearRange");
            if (years) {
                yearSplit = years.split(":");
                currentYear = new Date().getFullYear();
                minYear = parseInt(yearSplit[0], 10);
                maxYear = parseInt(yearSplit[1], 10);
                if (yearSplit[0].match(/[+\-].*/)) {
                    minYear += currentYear;
                }
                if (yearSplit[1].match(/[+\-].*/)) {
                    maxYear += currentYear;
                }
            }

            return ((!minDate || date.getTime() >= minDate.getTime()) &&
                (!maxDate || date.getTime() <= maxDate.getTime()) &&
                (!minYear || date.getFullYear() >= minYear) &&
                (!maxYear || date.getFullYear() <= maxYear));
        },

        /* Provide the configuration settings for formatting/parsing. */
        _getFormatConfig: function(inst) {
            var shortYearCutoff = this._get(inst, "shortYearCutoff");
            shortYearCutoff = (typeof shortYearCutoff !== "string" ? shortYearCutoff :
                new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            return {
                shortYearCutoff: shortYearCutoff,
                dayNamesShort: this._get(inst, "dayNamesShort"),
                dayNames: this._get(inst, "dayNames"),
                monthNamesShort: this._get(inst, "monthNamesShort"),
                monthNames: this._get(inst, "monthNames")
            };
        },

        /* Format the given date for display. */
        _formatDate: function(inst, day, month, year) {
            if (!day) {
                inst.currentDay = inst.selectedDay;
                inst.currentMonth = inst.selectedMonth;
                inst.currentYear = inst.selectedYear;
            }
            var date = (day ? (typeof day === "object" ? day :
                    this._daylightSavingAdjust(new Date(year, month, day))) :
                this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));
        }
    });

    /*
     * Bind hover events for datepicker elements.
     * Done via delegate so the binding only occurs once in the lifetime of the parent div.
     * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
     */
    function datepicker_bindHover(dpDiv) {
        var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return dpDiv.on("mouseout", selector, function() {
                $(this).removeClass("ui-state-hover");
                if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                    $(this).removeClass("ui-datepicker-prev-hover");
                }
                if (this.className.indexOf("ui-datepicker-next") !== -1) {
                    $(this).removeClass("ui-datepicker-next-hover");
                }
            })
            .on("mouseover", selector, datepicker_handleMouseover);
    }

    function datepicker_handleMouseover() {
        if (!$.datepicker._isDisabledDatepicker(datepicker_instActive.inline ? datepicker_instActive.dpDiv.parent()[0] : datepicker_instActive.input[0])) {
            $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
            $(this).addClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") !== -1) {
                $(this).addClass("ui-datepicker-prev-hover");
            }
            if (this.className.indexOf("ui-datepicker-next") !== -1) {
                $(this).addClass("ui-datepicker-next-hover");
            }
        }
    }

    /* jQuery extend now ignores nulls! */
    function datepicker_extendRemove(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] == null) {
                target[name] = props[name];
            }
        }
        return target;
    }

    /* Invoke the datepicker functionality.
       @param  options  string - a command, optionally followed by additional parameters or
    					Object - settings for attaching new datepicker functionality
       @return  jQuery object */
    $.fn.datepicker = function(options) {

        /* Verify an empty collection wasn't passed - Fixes #6976 */
        if (!this.length) {
            return this;
        }

        /* Initialise the date picker. */
        if (!$.datepicker.initialized) {
            $(document).on("mousedown", $.datepicker._checkExternalClick);
            $.datepicker.initialized = true;
        }

        /* Append datepicker main container to body if not exist. */
        if ($("#" + $.datepicker._mainDivId).length === 0) {
            $("body").append($.datepicker.dpDiv);
        }

        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) {
            return $.datepicker["_" + options + "Datepicker"].
            apply($.datepicker, [this[0]].concat(otherArgs));
        }
        if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
            return $.datepicker["_" + options + "Datepicker"].
            apply($.datepicker, [this[0]].concat(otherArgs));
        }
        return this.each(function() {
            if (typeof options === "string") {
                $.datepicker["_" + options + "Datepicker"]
                    .apply($.datepicker, [this].concat(otherArgs));
            } else {
                $.datepicker._attachDatepicker(this, options);
            }
        });
    };

    $.datepicker = new Datepicker(); // singleton instance
    $.datepicker.initialized = false;
    $.datepicker.uuid = new Date().getTime();
    $.datepicker.version = "1.13.0";

    return $.datepicker;

});




/*!
 * jQuery UI Mouse 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Mouse
//>>group: Widgets
//>>description: Abstracts mouse-based interactions to assist in creating certain widgets.
//>>docs: http://api.jqueryui.com/mouse/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../ie",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    var mouseHandled = false;
    $(document).on("mouseup", function() {
        mouseHandled = false;
    });

    return $.widget("ui.mouse", {
        version: "1.13.0",
        options: {
            cancel: "input, textarea, button, select, option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var that = this;

            this.element
                .on("mousedown." + this.widgetName, function(event) {
                    return that._mouseDown(event);
                })
                .on("click." + this.widgetName, function(event) {
                    if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
                        $.removeData(event.target, that.widgetName + ".preventClickEvent");
                        event.stopImmediatePropagation();
                        return false;
                    }
                });

            this.started = false;
        },

        // TODO: make sure destroying one instance of mouse doesn't mess with
        // other instances of mouse
        _mouseDestroy: function() {
            this.element.off("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                this.document
                    .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
                    .off("mouseup." + this.widgetName, this._mouseUpDelegate);
            }
        },

        _mouseDown: function(event) {

            // don't let more than one widget handle mouseStart
            if (mouseHandled) {
                return;
            }

            this._mouseMoved = false;

            // We may have missed mouseup (out of window)
            if (this._mouseStarted) {
                this._mouseUp(event);
            }

            this._mouseDownEvent = event;

            var that = this,
                btnIsLeft = (event.which === 1),

                // event.target.nodeName works around a bug in IE 8 with
                // disabled inputs (#7620)
                elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ?
                    $(event.target).closest(this.options.cancel).length : false);
            if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
                return true;
            }

            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function() {
                    that.mouseDelayMet = true;
                }, this.options.delay);
            }

            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                this._mouseStarted = (this._mouseStart(event) !== false);
                if (!this._mouseStarted) {
                    event.preventDefault();
                    return true;
                }
            }

            // Click event may never have fired (Gecko & Opera)
            if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {
                $.removeData(event.target, this.widgetName + ".preventClickEvent");
            }

            // These delegates are required to keep context
            this._mouseMoveDelegate = function(event) {
                return that._mouseMove(event);
            };
            this._mouseUpDelegate = function(event) {
                return that._mouseUp(event);
            };

            this.document
                .on("mousemove." + this.widgetName, this._mouseMoveDelegate)
                .on("mouseup." + this.widgetName, this._mouseUpDelegate);

            event.preventDefault();

            mouseHandled = true;
            return true;
        },

        _mouseMove: function(event) {

            // Only check for mouseups outside the document if you've moved inside the document
            // at least once. This prevents the firing of mouseup in the case of IE<9, which will
            // fire a mousemove event if content is placed under the cursor. See #7778
            // Support: IE <9
            if (this._mouseMoved) {

                // IE mouseup check - mouseup happened when mouse was out of window
                if ($.ui.ie && (!document.documentMode || document.documentMode < 9) &&
                    !event.button) {
                    return this._mouseUp(event);

                    // Iframe mouseup check - mouseup occurred in another document
                } else if (!event.which) {

                    // Support: Safari <=8 - 9
                    // Safari sets which to 0 if you press any of the following keys
                    // during a drag (#14461)
                    if (event.originalEvent.altKey || event.originalEvent.ctrlKey ||
                        event.originalEvent.metaKey || event.originalEvent.shiftKey) {
                        this.ignoreMissingWhich = true;
                    } else if (!this.ignoreMissingWhich) {
                        return this._mouseUp(event);
                    }
                }
            }

            if (event.which || event.button) {
                this._mouseMoved = true;
            }

            if (this._mouseStarted) {
                this._mouseDrag(event);
                return event.preventDefault();
            }

            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
                this._mouseStarted =
                    (this._mouseStart(this._mouseDownEvent, event) !== false);
                if (this._mouseStarted) {
                    this._mouseDrag(event);
                } else {
                    this._mouseUp(event);
                }
            }

            return !this._mouseStarted;
        },

        _mouseUp: function(event) {
            this.document
                .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
                .off("mouseup." + this.widgetName, this._mouseUpDelegate);

            if (this._mouseStarted) {
                this._mouseStarted = false;

                if (event.target === this._mouseDownEvent.target) {
                    $.data(event.target, this.widgetName + ".preventClickEvent", true);
                }

                this._mouseStop(event);
            }

            if (this._mouseDelayTimer) {
                clearTimeout(this._mouseDelayTimer);
                delete this._mouseDelayTimer;
            }

            this.ignoreMissingWhich = false;
            mouseHandled = false;
            event.preventDefault();
        },

        _mouseDistanceMet: function(event) {
            return (Math.max(
                Math.abs(this._mouseDownEvent.pageX - event.pageX),
                Math.abs(this._mouseDownEvent.pageY - event.pageY)
            ) >= this.options.distance);
        },

        _mouseDelayMet: function( /* event */ ) {
            return this.mouseDelayMet;
        },

        // These are placeholder methods, to be overriden by extending plugin
        _mouseStart: function( /* event */ ) {},
        _mouseDrag: function( /* event */ ) {},
        _mouseStop: function( /* event */ ) {},
        _mouseCapture: function( /* event */ ) {
            return true;
        }
    });

});









/*!
 * jQuery UI Draggable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Draggable
//>>group: Interactions
//>>description: Enables dragging functionality for any element.
//>>docs: http://api.jqueryui.com/draggable/
//>>demos: http://jqueryui.com/draggable/
//>>css.structure: ../../themes/base/draggable.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./mouse",
            "../data",
            "../plugin",
            "../safe-active-element",
            "../safe-blur",
            "../scroll-parent",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.draggable", $.ui.mouse, {
        version: "1.13.0",
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false,

            // Callbacks
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {

            if (this.options.helper === "original") {
                this._setPositionRelative();
            }
            if (this.options.addClasses) {
                this._addClass("ui-draggable");
            }
            this._setHandleClassName();

            this._mouseInit();
        },

        _setOption: function(key, value) {
            this._super(key, value);
            if (key === "handle") {
                this._removeHandleClassName();
                this._setHandleClassName();
            }
        },

        _destroy: function() {
            if ((this.helper || this.element).is(".ui-draggable-dragging")) {
                this.destroyOnClear = true;
                return;
            }
            this._removeHandleClassName();
            this._mouseDestroy();
        },

        _mouseCapture: function(event) {
            var o = this.options;

            // Among others, prevent a drag on a resizable-handle
            if (this.helper || o.disabled ||
                $(event.target).closest(".ui-resizable-handle").length > 0) {
                return false;
            }

            //Quit if we're not on a valid handle
            this.handle = this._getHandle(event);
            if (!this.handle) {
                return false;
            }

            this._blurActiveElement(event);

            this._blockFrames(o.iframeFix === true ? "iframe" : o.iframeFix);

            return true;

        },

        _blockFrames: function(selector) {
            this.iframeBlocks = this.document.find(selector).map(function() {
                var iframe = $(this);

                return $("<div>")
                    .css("position", "absolute")
                    .appendTo(iframe.parent())
                    .outerWidth(iframe.outerWidth())
                    .outerHeight(iframe.outerHeight())
                    .offset(iframe.offset())[0];
            });
        },

        _unblockFrames: function() {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks;
            }
        },

        _blurActiveElement: function(event) {
            var activeElement = $.ui.safeActiveElement(this.document[0]),
                target = $(event.target);

            // Don't blur if the event occurred on an element that is within
            // the currently focused element
            // See #10527, #12472
            if (target.closest(activeElement).length) {
                return;
            }

            // Blur any element that currently has focus, see #4261
            $.ui.safeBlur(activeElement);
        },

        _mouseStart: function(event) {

            var o = this.options;

            //Create and append the visible helper
            this.helper = this._createHelper(event);

            this._addClass(this.helper, "ui-draggable-dragging");

            //Cache the helper size
            this._cacheHelperProportions();

            //If ddmanager is used for droppables, set the global draggable
            if ($.ui.ddmanager) {
                $.ui.ddmanager.current = this;
            }

            /*
             * - Position generation -
             * This block generates everything position related - it's the core of draggables.
             */

            //Cache the margins of the original element
            this._cacheMargins();

            //Store the helper's css position
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent(true);
            this.offsetParent = this.helper.offsetParent();
            this.hasFixedAncestor = this.helper.parents().filter(function() {
                return $(this).css("position") === "fixed";
            }).length > 0;

            //The element's absolute position on the page minus margins
            this.positionAbs = this.element.offset();
            this._refreshOffsets(event);

            //Generate the original position
            this.originalPosition = this.position = this._generatePosition(event, false);
            this.originalPageX = event.pageX;
            this.originalPageY = event.pageY;

            //Adjust the mouse offset relative to the helper if "cursorAt" is supplied
            if (o.cursorAt) {
                this._adjustOffsetFromHelper(o.cursorAt);
            }

            //Set a containment if given in the options
            this._setContainment();

            //Trigger event + callbacks
            if (this._trigger("start", event) === false) {
                this._clear();
                return false;
            }

            //Recache the helper size
            this._cacheHelperProportions();

            //Prepare the droppable offsets
            if ($.ui.ddmanager && !o.dropBehaviour) {
                $.ui.ddmanager.prepareOffsets(this, event);
            }

            // Execute the drag once - this causes the helper not to be visible before getting its
            // correct position
            this._mouseDrag(event, true);

            // If the ddmanager is used for droppables, inform the manager that dragging has started
            // (see #5003)
            if ($.ui.ddmanager) {
                $.ui.ddmanager.dragStart(this, event);
            }

            return true;
        },

        _refreshOffsets: function(event) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: false,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            };

            this.offset.click = {
                left: event.pageX - this.offset.left,
                top: event.pageY - this.offset.top
            };
        },

        _mouseDrag: function(event, noPropagation) {

            // reset any necessary cached properties (see #5009)
            if (this.hasFixedAncestor) {
                this.offset.parent = this._getParentOffset();
            }

            //Compute the helpers position
            this.position = this._generatePosition(event, true);
            this.positionAbs = this._convertPositionTo("absolute");

            //Call plugins and callbacks and use the resulting position if something is returned
            if (!noPropagation) {
                var ui = this._uiHash();
                if (this._trigger("drag", event, ui) === false) {
                    this._mouseUp(new $.Event("mouseup", event));
                    return false;
                }
                this.position = ui.position;
            }

            this.helper[0].style.left = this.position.left + "px";
            this.helper[0].style.top = this.position.top + "px";

            if ($.ui.ddmanager) {
                $.ui.ddmanager.drag(this, event);
            }

            return false;
        },

        _mouseStop: function(event) {

            //If we are using droppables, inform the manager about the drop
            var that = this,
                dropped = false;
            if ($.ui.ddmanager && !this.options.dropBehaviour) {
                dropped = $.ui.ddmanager.drop(this, event);
            }

            //if a drop comes from outside (a sortable)
            if (this.dropped) {
                dropped = this.dropped;
                this.dropped = false;
            }

            if ((this.options.revert === "invalid" && !dropped) ||
                (this.options.revert === "valid" && dropped) ||
                this.options.revert === true || (typeof this.options.revert === "function" &&
                    this.options.revert.call(this.element, dropped))
            ) {
                $(this.helper).animate(
                    this.originalPosition,
                    parseInt(this.options.revertDuration, 10),
                    function() {
                        if (that._trigger("stop", event) !== false) {
                            that._clear();
                        }
                    }
                );
            } else {
                if (this._trigger("stop", event) !== false) {
                    this._clear();
                }
            }

            return false;
        },

        _mouseUp: function(event) {
            this._unblockFrames();

            // If the ddmanager is used for droppables, inform the manager that dragging has stopped
            // (see #5003)
            if ($.ui.ddmanager) {
                $.ui.ddmanager.dragStop(this, event);
            }

            // Only need to focus if the event occurred on the draggable itself, see #10527
            if (this.handleElement.is(event.target)) {

                // The interaction is over; whether or not the click resulted in a drag,
                // focus the element
                this.element.trigger("focus");
            }

            return $.ui.mouse.prototype._mouseUp.call(this, event);
        },

        cancel: function() {

            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp(new $.Event("mouseup", {
                    target: this.element[0]
                }));
            } else {
                this._clear();
            }

            return this;

        },

        _getHandle: function(event) {
            return this.options.handle ?
                !!$(event.target).closest(this.element.find(this.options.handle)).length :
                true;
        },

        _setHandleClassName: function() {
            this.handleElement = this.options.handle ?
                this.element.find(this.options.handle) : this.element;
            this._addClass(this.handleElement, "ui-draggable-handle");
        },

        _removeHandleClassName: function() {
            this._removeClass(this.handleElement, "ui-draggable-handle");
        },

        _createHelper: function(event) {

            var o = this.options,
                helperIsFunction = typeof o.helper === "function",
                helper = helperIsFunction ?
                $(o.helper.apply(this.element[0], [event])) :
                (o.helper === "clone" ?
                    this.element.clone().removeAttr("id") :
                    this.element);

            if (!helper.parents("body").length) {
                helper.appendTo((o.appendTo === "parent" ?
                    this.element[0].parentNode :
                    o.appendTo));
            }

            // Http://bugs.jqueryui.com/ticket/9446
            // a helper function can return the original element
            // which wouldn't have been set to relative in _create
            if (helperIsFunction && helper[0] === this.element[0]) {
                this._setPositionRelative();
            }

            if (helper[0] !== this.element[0] &&
                !(/(fixed|absolute)/).test(helper.css("position"))) {
                helper.css("position", "absolute");
            }

            return helper;

        },

        _setPositionRelative: function() {
            if (!(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative";
            }
        },

        _adjustOffsetFromHelper: function(obj) {
            if (typeof obj === "string") {
                obj = obj.split(" ");
            }
            if (Array.isArray(obj)) {
                obj = {
                    left: +obj[0],
                    top: +obj[1] || 0
                };
            }
            if ("left" in obj) {
                this.offset.click.left = obj.left + this.margins.left;
            }
            if ("right" in obj) {
                this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
            }
            if ("top" in obj) {
                this.offset.click.top = obj.top + this.margins.top;
            }
            if ("bottom" in obj) {
                this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
            }
        },

        _isRootNode: function(element) {
            return (/(html|body)/i).test(element.tagName) || element === this.document[0];
        },

        _getParentOffset: function() {

            //Get the offsetParent and cache its position
            var po = this.offsetParent.offset(),
                document = this.document[0];

            // This is a special case where we need to modify a offset calculated on start, since the
            // following happened:
            // 1. The position of the helper is absolute, so it's position is calculated based on the
            // next positioned parent
            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
            // the document, which means that the scroll is included in the initial calculation of the
            // offset of the parent, and never recalculated upon drag
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== document &&
                $.contains(this.scrollParent[0], this.offsetParent[0])) {
                po.left += this.scrollParent.scrollLeft();
                po.top += this.scrollParent.scrollTop();
            }

            if (this._isRootNode(this.offsetParent[0])) {
                po = {
                    top: 0,
                    left: 0
                };
            }

            return {
                top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };

        },

        _getRelativeOffset: function() {
            if (this.cssPosition !== "relative") {
                return {
                    top: 0,
                    left: 0
                };
            }

            var p = this.element.position(),
                scrollIsRootNode = this._isRootNode(this.scrollParent[0]);

            return {
                top: p.top - (parseInt(this.helper.css("top"), 10) || 0) +
                    (!scrollIsRootNode ? this.scrollParent.scrollTop() : 0),
                left: p.left - (parseInt(this.helper.css("left"), 10) || 0) +
                    (!scrollIsRootNode ? this.scrollParent.scrollLeft() : 0)
            };

        },

        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0),
                right: (parseInt(this.element.css("marginRight"), 10) || 0),
                bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
            };
        },

        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },

        _setContainment: function() {

            var isUserScrollable, c, ce,
                o = this.options,
                document = this.document[0];

            this.relativeContainer = null;

            if (!o.containment) {
                this.containment = null;
                return;
            }

            if (o.containment === "window") {
                this.containment = [
                    $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
                    $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top,
                    $(window).scrollLeft() + $(window).width() -
                    this.helperProportions.width - this.margins.left,
                    $(window).scrollTop() +
                    ($(window).height() || document.body.parentNode.scrollHeight) -
                    this.helperProportions.height - this.margins.top
                ];
                return;
            }

            if (o.containment === "document") {
                this.containment = [
                    0,
                    0,
                    $(document).width() - this.helperProportions.width - this.margins.left,
                    ($(document).height() || document.body.parentNode.scrollHeight) -
                    this.helperProportions.height - this.margins.top
                ];
                return;
            }

            if (o.containment.constructor === Array) {
                this.containment = o.containment;
                return;
            }

            if (o.containment === "parent") {
                o.containment = this.helper[0].parentNode;
            }

            c = $(o.containment);
            ce = c[0];

            if (!ce) {
                return;
            }

            isUserScrollable = /(scroll|auto)/.test(c.css("overflow"));

            this.containment = [
                (parseInt(c.css("borderLeftWidth"), 10) || 0) +
                (parseInt(c.css("paddingLeft"), 10) || 0),
                (parseInt(c.css("borderTopWidth"), 10) || 0) +
                (parseInt(c.css("paddingTop"), 10) || 0),
                (isUserScrollable ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) -
                (parseInt(c.css("borderRightWidth"), 10) || 0) -
                (parseInt(c.css("paddingRight"), 10) || 0) -
                this.helperProportions.width -
                this.margins.left -
                this.margins.right,
                (isUserScrollable ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) -
                (parseInt(c.css("borderBottomWidth"), 10) || 0) -
                (parseInt(c.css("paddingBottom"), 10) || 0) -
                this.helperProportions.height -
                this.margins.top -
                this.margins.bottom
            ];
            this.relativeContainer = c;
        },

        _convertPositionTo: function(d, pos) {

            if (!pos) {
                pos = this.position;
            }

            var mod = d === "absolute" ? 1 : -1,
                scrollIsRootNode = this._isRootNode(this.scrollParent[0]);

            return {
                top: (

                    // The absolute mouse position
                    pos.top +

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.top * mod +

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.top * mod -
                    ((this.cssPosition === "fixed" ?
                        -this.offset.scroll.top :
                        (scrollIsRootNode ? 0 : this.offset.scroll.top)) * mod)
                ),
                left: (

                    // The absolute mouse position
                    pos.left +

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.left * mod +

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.left * mod -
                    ((this.cssPosition === "fixed" ?
                        -this.offset.scroll.left :
                        (scrollIsRootNode ? 0 : this.offset.scroll.left)) * mod)
                )
            };

        },

        _generatePosition: function(event, constrainPosition) {

            var containment, co, top, left,
                o = this.options,
                scrollIsRootNode = this._isRootNode(this.scrollParent[0]),
                pageX = event.pageX,
                pageY = event.pageY;

            // Cache the scroll
            if (!scrollIsRootNode || !this.offset.scroll) {
                this.offset.scroll = {
                    top: this.scrollParent.scrollTop(),
                    left: this.scrollParent.scrollLeft()
                };
            }

            /*
             * - Position constraining -
             * Constrain the position to a mix of grid, containment.
             */

            // If we are not dragging yet, we won't check for options
            if (constrainPosition) {
                if (this.containment) {
                    if (this.relativeContainer) {
                        co = this.relativeContainer.offset();
                        containment = [
                            this.containment[0] + co.left,
                            this.containment[1] + co.top,
                            this.containment[2] + co.left,
                            this.containment[3] + co.top
                        ];
                    } else {
                        containment = this.containment;
                    }

                    if (event.pageX - this.offset.click.left < containment[0]) {
                        pageX = containment[0] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top < containment[1]) {
                        pageY = containment[1] + this.offset.click.top;
                    }
                    if (event.pageX - this.offset.click.left > containment[2]) {
                        pageX = containment[2] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top > containment[3]) {
                        pageY = containment[3] + this.offset.click.top;
                    }
                }

                if (o.grid) {

                    //Check for grid elements set to 0 to prevent divide by 0 error causing invalid
                    // argument errors in IE (see ticket #6950)
                    top = o.grid[1] ? this.originalPageY + Math.round((pageY -
                        this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
                    pageY = containment ? ((top - this.offset.click.top >= containment[1] ||
                            top - this.offset.click.top > containment[3]) ?
                        top :
                        ((top - this.offset.click.top >= containment[1]) ?
                            top - o.grid[1] : top + o.grid[1])) : top;

                    left = o.grid[0] ? this.originalPageX +
                        Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] :
                        this.originalPageX;
                    pageX = containment ? ((left - this.offset.click.left >= containment[0] ||
                            left - this.offset.click.left > containment[2]) ?
                        left :
                        ((left - this.offset.click.left >= containment[0]) ?
                            left - o.grid[0] : left + o.grid[0])) : left;
                }

                if (o.axis === "y") {
                    pageX = this.originalPageX;
                }

                if (o.axis === "x") {
                    pageY = this.originalPageY;
                }
            }

            return {
                top: (

                    // The absolute mouse position
                    pageY -

                    // Click offset (relative to the element)
                    this.offset.click.top -

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.top -

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.top +
                    (this.cssPosition === "fixed" ?
                        -this.offset.scroll.top :
                        (scrollIsRootNode ? 0 : this.offset.scroll.top))
                ),
                left: (

                    // The absolute mouse position
                    pageX -

                    // Click offset (relative to the element)
                    this.offset.click.left -

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.left -

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.left +
                    (this.cssPosition === "fixed" ?
                        -this.offset.scroll.left :
                        (scrollIsRootNode ? 0 : this.offset.scroll.left))
                )
            };

        },

        _clear: function() {
            this._removeClass(this.helper, "ui-draggable-dragging");
            if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove();
            }
            this.helper = null;
            this.cancelHelperRemoval = false;
            if (this.destroyOnClear) {
                this.destroy();
            }
        },

        // From now on bulk stuff - mainly helpers

        _trigger: function(type, event, ui) {
            ui = ui || this._uiHash();
            $.ui.plugin.call(this, type, [event, ui, this], true);

            // Absolute position and offset (see #6884 ) have to be recalculated after plugins
            if (/^(drag|start|stop)/.test(type)) {
                this.positionAbs = this._convertPositionTo("absolute");
                ui.offset = this.positionAbs;
            }
            return $.Widget.prototype._trigger.call(this, type, event, ui);
        },

        plugins: {},

        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            };
        }

    });

    $.ui.plugin.add("draggable", "connectToSortable", {
        start: function(event, ui, draggable) {
            var uiSortable = $.extend({}, ui, {
                item: draggable.element
            });

            draggable.sortables = [];
            $(draggable.options.connectToSortable).each(function() {
                var sortable = $(this).sortable("instance");

                if (sortable && !sortable.options.disabled) {
                    draggable.sortables.push(sortable);

                    // RefreshPositions is called at drag start to refresh the containerCache
                    // which is used in drag. This ensures it's initialized and synchronized
                    // with any changes that might have happened on the page since initialization.
                    sortable.refreshPositions();
                    sortable._trigger("activate", event, uiSortable);
                }
            });
        },
        stop: function(event, ui, draggable) {
            var uiSortable = $.extend({}, ui, {
                item: draggable.element
            });

            draggable.cancelHelperRemoval = false;

            $.each(draggable.sortables, function() {
                var sortable = this;

                if (sortable.isOver) {
                    sortable.isOver = 0;

                    // Allow this sortable to handle removing the helper
                    draggable.cancelHelperRemoval = true;
                    sortable.cancelHelperRemoval = false;

                    // Use _storedCSS To restore properties in the sortable,
                    // as this also handles revert (#9675) since the draggable
                    // may have modified them in unexpected ways (#8809)
                    sortable._storedCSS = {
                        position: sortable.placeholder.css("position"),
                        top: sortable.placeholder.css("top"),
                        left: sortable.placeholder.css("left")
                    };

                    sortable._mouseStop(event);

                    // Once drag has ended, the sortable should return to using
                    // its original helper, not the shared helper from draggable
                    sortable.options.helper = sortable.options._helper;
                } else {

                    // Prevent this Sortable from removing the helper.
                    // However, don't set the draggable to remove the helper
                    // either as another connected Sortable may yet handle the removal.
                    sortable.cancelHelperRemoval = true;

                    sortable._trigger("deactivate", event, uiSortable);
                }
            });
        },
        drag: function(event, ui, draggable) {
            $.each(draggable.sortables, function() {
                var innermostIntersecting = false,
                    sortable = this;

                // Copy over variables that sortable's _intersectsWith uses
                sortable.positionAbs = draggable.positionAbs;
                sortable.helperProportions = draggable.helperProportions;
                sortable.offset.click = draggable.offset.click;

                if (sortable._intersectsWith(sortable.containerCache)) {
                    innermostIntersecting = true;

                    $.each(draggable.sortables, function() {

                        // Copy over variables that sortable's _intersectsWith uses
                        this.positionAbs = draggable.positionAbs;
                        this.helperProportions = draggable.helperProportions;
                        this.offset.click = draggable.offset.click;

                        if (this !== sortable &&
                            this._intersectsWith(this.containerCache) &&
                            $.contains(sortable.element[0], this.element[0])) {
                            innermostIntersecting = false;
                        }

                        return innermostIntersecting;
                    });
                }

                if (innermostIntersecting) {

                    // If it intersects, we use a little isOver variable and set it once,
                    // so that the move-in stuff gets fired only once.
                    if (!sortable.isOver) {
                        sortable.isOver = 1;

                        // Store draggable's parent in case we need to reappend to it later.
                        draggable._parent = ui.helper.parent();

                        sortable.currentItem = ui.helper
                            .appendTo(sortable.element)
                            .data("ui-sortable-item", true);

                        // Store helper option to later restore it
                        sortable.options._helper = sortable.options.helper;

                        sortable.options.helper = function() {
                            return ui.helper[0];
                        };

                        // Fire the start events of the sortable with our passed browser event,
                        // and our own helper (so it doesn't create a new one)
                        event.target = sortable.currentItem[0];
                        sortable._mouseCapture(event, true);
                        sortable._mouseStart(event, true, true);

                        // Because the browser event is way off the new appended portlet,
                        // modify necessary variables to reflect the changes
                        sortable.offset.click.top = draggable.offset.click.top;
                        sortable.offset.click.left = draggable.offset.click.left;
                        sortable.offset.parent.left -= draggable.offset.parent.left -
                            sortable.offset.parent.left;
                        sortable.offset.parent.top -= draggable.offset.parent.top -
                            sortable.offset.parent.top;

                        draggable._trigger("toSortable", event);

                        // Inform draggable that the helper is in a valid drop zone,
                        // used solely in the revert option to handle "valid/invalid".
                        draggable.dropped = sortable.element;

                        // Need to refreshPositions of all sortables in the case that
                        // adding to one sortable changes the location of the other sortables (#9675)
                        $.each(draggable.sortables, function() {
                            this.refreshPositions();
                        });

                        // Hack so receive/update callbacks work (mostly)
                        draggable.currentItem = draggable.element;
                        sortable.fromOutside = draggable;
                    }

                    if (sortable.currentItem) {
                        sortable._mouseDrag(event);

                        // Copy the sortable's position because the draggable's can potentially reflect
                        // a relative position, while sortable is always absolute, which the dragged
                        // element has now become. (#8809)
                        ui.position = sortable.position;
                    }
                } else {

                    // If it doesn't intersect with the sortable, and it intersected before,
                    // we fake the drag stop of the sortable, but make sure it doesn't remove
                    // the helper by using cancelHelperRemoval.
                    if (sortable.isOver) {

                        sortable.isOver = 0;
                        sortable.cancelHelperRemoval = true;

                        // Calling sortable's mouseStop would trigger a revert,
                        // so revert must be temporarily false until after mouseStop is called.
                        sortable.options._revert = sortable.options.revert;
                        sortable.options.revert = false;

                        sortable._trigger("out", event, sortable._uiHash(sortable));
                        sortable._mouseStop(event, true);

                        // Restore sortable behaviors that were modfied
                        // when the draggable entered the sortable area (#9481)
                        sortable.options.revert = sortable.options._revert;
                        sortable.options.helper = sortable.options._helper;

                        if (sortable.placeholder) {
                            sortable.placeholder.remove();
                        }

                        // Restore and recalculate the draggable's offset considering the sortable
                        // may have modified them in unexpected ways. (#8809, #10669)
                        ui.helper.appendTo(draggable._parent);
                        draggable._refreshOffsets(event);
                        ui.position = draggable._generatePosition(event, true);

                        draggable._trigger("fromSortable", event);

                        // Inform draggable that the helper is no longer in a valid drop zone
                        draggable.dropped = false;

                        // Need to refreshPositions of all sortables just in case removing
                        // from one sortable changes the location of other sortables (#9675)
                        $.each(draggable.sortables, function() {
                            this.refreshPositions();
                        });
                    }
                }
            });
        }
    });

    $.ui.plugin.add("draggable", "cursor", {
        start: function(event, ui, instance) {
            var t = $("body"),
                o = instance.options;

            if (t.css("cursor")) {
                o._cursor = t.css("cursor");
            }
            t.css("cursor", o.cursor);
        },
        stop: function(event, ui, instance) {
            var o = instance.options;
            if (o._cursor) {
                $("body").css("cursor", o._cursor);
            }
        }
    });

    $.ui.plugin.add("draggable", "opacity", {
        start: function(event, ui, instance) {
            var t = $(ui.helper),
                o = instance.options;
            if (t.css("opacity")) {
                o._opacity = t.css("opacity");
            }
            t.css("opacity", o.opacity);
        },
        stop: function(event, ui, instance) {
            var o = instance.options;
            if (o._opacity) {
                $(ui.helper).css("opacity", o._opacity);
            }
        }
    });

    $.ui.plugin.add("draggable", "scroll", {
        start: function(event, ui, i) {
            if (!i.scrollParentNotHidden) {
                i.scrollParentNotHidden = i.helper.scrollParent(false);
            }

            if (i.scrollParentNotHidden[0] !== i.document[0] &&
                i.scrollParentNotHidden[0].tagName !== "HTML") {
                i.overflowOffset = i.scrollParentNotHidden.offset();
            }
        },
        drag: function(event, ui, i) {

            var o = i.options,
                scrolled = false,
                scrollParent = i.scrollParentNotHidden[0],
                document = i.document[0];

            if (scrollParent !== document && scrollParent.tagName !== "HTML") {
                if (!o.axis || o.axis !== "x") {
                    if ((i.overflowOffset.top + scrollParent.offsetHeight) - event.pageY <
                        o.scrollSensitivity) {
                        scrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;
                    } else if (event.pageY - i.overflowOffset.top < o.scrollSensitivity) {
                        scrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;
                    }
                }

                if (!o.axis || o.axis !== "y") {
                    if ((i.overflowOffset.left + scrollParent.offsetWidth) - event.pageX <
                        o.scrollSensitivity) {
                        scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;
                    } else if (event.pageX - i.overflowOffset.left < o.scrollSensitivity) {
                        scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;
                    }
                }

            } else {

                if (!o.axis || o.axis !== "x") {
                    if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
                        scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
                    } else if ($(window).height() - (event.pageY - $(document).scrollTop()) <
                        o.scrollSensitivity) {
                        scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
                    }
                }

                if (!o.axis || o.axis !== "y") {
                    if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
                        scrolled = $(document).scrollLeft(
                            $(document).scrollLeft() - o.scrollSpeed
                        );
                    } else if ($(window).width() - (event.pageX - $(document).scrollLeft()) <
                        o.scrollSensitivity) {
                        scrolled = $(document).scrollLeft(
                            $(document).scrollLeft() + o.scrollSpeed
                        );
                    }
                }

            }

            if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
                $.ui.ddmanager.prepareOffsets(i, event);
            }

        }
    });

    $.ui.plugin.add("draggable", "snap", {
        start: function(event, ui, i) {

            var o = i.options;

            i.snapElements = [];

            $(o.snap.constructor !== String ? (o.snap.items || ":data(ui-draggable)") : o.snap)
                .each(function() {
                    var $t = $(this),
                        $o = $t.offset();
                    if (this !== i.element[0]) {
                        i.snapElements.push({
                            item: this,
                            width: $t.outerWidth(),
                            height: $t.outerHeight(),
                            top: $o.top,
                            left: $o.left
                        });
                    }
                });

        },
        drag: function(event, ui, inst) {

            var ts, bs, ls, rs, l, r, t, b, i, first,
                o = inst.options,
                d = o.snapTolerance,
                x1 = ui.offset.left,
                x2 = x1 + inst.helperProportions.width,
                y1 = ui.offset.top,
                y2 = y1 + inst.helperProportions.height;

            for (i = inst.snapElements.length - 1; i >= 0; i--) {

                l = inst.snapElements[i].left - inst.margins.left;
                r = l + inst.snapElements[i].width;
                t = inst.snapElements[i].top - inst.margins.top;
                b = t + inst.snapElements[i].height;

                if (x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d ||
                    !$.contains(inst.snapElements[i].item.ownerDocument,
                        inst.snapElements[i].item)) {
                    if (inst.snapElements[i].snapping) {
                        if (inst.options.snap.release) {
                            inst.options.snap.release.call(
                                inst.element,
                                event,
                                $.extend(inst._uiHash(), {
                                    snapItem: inst.snapElements[i].item
                                })
                            );
                        }
                    }
                    inst.snapElements[i].snapping = false;
                    continue;
                }

                if (o.snapMode !== "inner") {
                    ts = Math.abs(t - y2) <= d;
                    bs = Math.abs(b - y1) <= d;
                    ls = Math.abs(l - x2) <= d;
                    rs = Math.abs(r - x1) <= d;
                    if (ts) {
                        ui.position.top = inst._convertPositionTo("relative", {
                            top: t - inst.helperProportions.height,
                            left: 0
                        }).top;
                    }
                    if (bs) {
                        ui.position.top = inst._convertPositionTo("relative", {
                            top: b,
                            left: 0
                        }).top;
                    }
                    if (ls) {
                        ui.position.left = inst._convertPositionTo("relative", {
                            top: 0,
                            left: l - inst.helperProportions.width
                        }).left;
                    }
                    if (rs) {
                        ui.position.left = inst._convertPositionTo("relative", {
                            top: 0,
                            left: r
                        }).left;
                    }
                }

                first = (ts || bs || ls || rs);

                if (o.snapMode !== "outer") {
                    ts = Math.abs(t - y1) <= d;
                    bs = Math.abs(b - y2) <= d;
                    ls = Math.abs(l - x1) <= d;
                    rs = Math.abs(r - x2) <= d;
                    if (ts) {
                        ui.position.top = inst._convertPositionTo("relative", {
                            top: t,
                            left: 0
                        }).top;
                    }
                    if (bs) {
                        ui.position.top = inst._convertPositionTo("relative", {
                            top: b - inst.helperProportions.height,
                            left: 0
                        }).top;
                    }
                    if (ls) {
                        ui.position.left = inst._convertPositionTo("relative", {
                            top: 0,
                            left: l
                        }).left;
                    }
                    if (rs) {
                        ui.position.left = inst._convertPositionTo("relative", {
                            top: 0,
                            left: r - inst.helperProportions.width
                        }).left;
                    }
                }

                if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {
                    if (inst.options.snap.snap) {
                        inst.options.snap.snap.call(
                            inst.element,
                            event,
                            $.extend(inst._uiHash(), {
                                snapItem: inst.snapElements[i].item
                            }));
                    }
                }
                inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

            }

        }
    });

    $.ui.plugin.add("draggable", "stack", {
        start: function(event, ui, instance) {
            var min,
                o = instance.options,
                group = $.makeArray($(o.stack)).sort(function(a, b) {
                    return (parseInt($(a).css("zIndex"), 10) || 0) -
                        (parseInt($(b).css("zIndex"), 10) || 0);
                });

            if (!group.length) {
                return;
            }

            min = parseInt($(group[0]).css("zIndex"), 10) || 0;
            $(group).each(function(i) {
                $(this).css("zIndex", min + i);
            });
            this.css("zIndex", (min + group.length));
        }
    });

    $.ui.plugin.add("draggable", "zIndex", {
        start: function(event, ui, instance) {
            var t = $(ui.helper),
                o = instance.options;

            if (t.css("zIndex")) {
                o._zIndex = t.css("zIndex");
            }
            t.css("zIndex", o.zIndex);
        },
        stop: function(event, ui, instance) {
            var o = instance.options;

            if (o._zIndex) {
                $(ui.helper).css("zIndex", o._zIndex);
            }
        }
    });

    return $.ui.draggable;

});






/*!
 * jQuery UI Resizable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Resizable
//>>group: Interactions
//>>description: Enables resize functionality for any element.
//>>docs: http://api.jqueryui.com/resizable/
//>>demos: http://jqueryui.com/resizable/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/resizable.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./mouse",
            "../disable-selection",
            "../plugin",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.resizable", $.ui.mouse, {
        version: "1.13.0",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            classes: {
                "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se"
            },
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,

            // See #7960
            zIndex: 90,

            // Callbacks
            resize: null,
            start: null,
            stop: null
        },

        _num: function(value) {
            return parseFloat(value) || 0;
        },

        _isNumber: function(value) {
            return !isNaN(parseFloat(value));
        },

        _hasScroll: function(el, a) {

            if ($(el).css("overflow") === "hidden") {
                return false;
            }

            var scroll = (a && a === "left") ? "scrollLeft" : "scrollTop",
                has = false;

            if (el[scroll] > 0) {
                return true;
            }

            // TODO: determine which cases actually cause this to happen
            // if the element doesn't have the scroll set, see if it's possible to
            // set the scroll
            try {
                el[scroll] = 1;
                has = (el[scroll] > 0);
                el[scroll] = 0;
            } catch (e) {

                // `el` might be a string, then setting `scroll` will throw
                // an error in strict mode; ignore it.
            }
            return has;
        },

        _create: function() {

            var margins,
                o = this.options,
                that = this;
            this._addClass("ui-resizable");

            $.extend(this, {
                _aspectRatio: !!(o.aspectRatio),
                aspectRatio: o.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null
            });

            // Wrap the element if it cannot hold child nodes
            if (this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)) {

                this.element.wrap(
                    $("<div class='ui-wrapper'></div>").css({
                        overflow: "hidden",
                        position: this.element.css("position"),
                        width: this.element.outerWidth(),
                        height: this.element.outerHeight(),
                        top: this.element.css("top"),
                        left: this.element.css("left")
                    })
                );

                this.element = this.element.parent().data(
                    "ui-resizable", this.element.resizable("instance")
                );

                this.elementIsWrapper = true;

                margins = {
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom"),
                    marginLeft: this.originalElement.css("marginLeft")
                };

                this.element.css(margins);
                this.originalElement.css("margin", 0);

                // support: Safari
                // Prevent Safari textarea resize
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");

                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));

                // Support: IE9
                // avoid IE jump (hard set the margin)
                this.originalElement.css(margins);

                this._proportionallyResize();
            }

            this._setupHandles();

            if (o.autoHide) {
                $(this.element)
                    .on("mouseenter", function() {
                        if (o.disabled) {
                            return;
                        }
                        that._removeClass("ui-resizable-autohide");
                        that._handles.show();
                    })
                    .on("mouseleave", function() {
                        if (o.disabled) {
                            return;
                        }
                        if (!that.resizing) {
                            that._addClass("ui-resizable-autohide");
                            that._handles.hide();
                        }
                    });
            }

            this._mouseInit();
        },

        _destroy: function() {

            this._mouseDestroy();
            this._addedHandles.remove();

            var wrapper,
                _destroy = function(exp) {
                    $(exp)
                        .removeData("resizable")
                        .removeData("ui-resizable")
                        .off(".resizable");
                };

            // TODO: Unwrap at same DOM position
            if (this.elementIsWrapper) {
                _destroy(this.element);
                wrapper = this.element;
                this.originalElement.css({
                    position: wrapper.css("position"),
                    width: wrapper.outerWidth(),
                    height: wrapper.outerHeight(),
                    top: wrapper.css("top"),
                    left: wrapper.css("left")
                }).insertAfter(wrapper);
                wrapper.remove();
            }

            this.originalElement.css("resize", this.originalResizeStyle);
            _destroy(this.originalElement);

            return this;
        },

        _setOption: function(key, value) {
            this._super(key, value);

            switch (key) {
                case "handles":
                    this._removeHandles();
                    this._setupHandles();
                    break;
                case "aspectRatio":
                    this._aspectRatio = !!value;
                    break;
                default:
                    break;
            }
        },

        _setupHandles: function() {
            var o = this.options,
                handle, i, n, hname, axis, that = this;
            this.handles = o.handles ||
                (!$(".ui-resizable-handle", this.element).length ?
                    "e,s,se" : {
                        n: ".ui-resizable-n",
                        e: ".ui-resizable-e",
                        s: ".ui-resizable-s",
                        w: ".ui-resizable-w",
                        se: ".ui-resizable-se",
                        sw: ".ui-resizable-sw",
                        ne: ".ui-resizable-ne",
                        nw: ".ui-resizable-nw"
                    });

            this._handles = $();
            this._addedHandles = $();
            if (this.handles.constructor === String) {

                if (this.handles === "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw";
                }

                n = this.handles.split(",");
                this.handles = {};

                for (i = 0; i < n.length; i++) {

                    handle = String.prototype.trim.call(n[i]);
                    hname = "ui-resizable-" + handle;
                    axis = $("<div>");
                    this._addClass(axis, "ui-resizable-handle " + hname);

                    axis.css({
                        zIndex: o.zIndex
                    });

                    this.handles[handle] = ".ui-resizable-" + handle;
                    if (!this.element.children(this.handles[handle]).length) {
                        this.element.append(axis);
                        this._addedHandles = this._addedHandles.add(axis);
                    }
                }

            }

            this._renderAxis = function(target) {

                var i, axis, padPos, padWrapper;

                target = target || this.element;

                for (i in this.handles) {

                    if (this.handles[i].constructor === String) {
                        this.handles[i] = this.element.children(this.handles[i]).first().show();
                    } else if (this.handles[i].jquery || this.handles[i].nodeType) {
                        this.handles[i] = $(this.handles[i]);
                        this._on(this.handles[i], {
                            "mousedown": that._mouseDown
                        });
                    }

                    if (this.elementIsWrapper &&
                        this.originalElement[0]
                        .nodeName
                        .match(/^(textarea|input|select|button)$/i)) {
                        axis = $(this.handles[i], this.element);

                        padWrapper = /sw|ne|nw|se|n|s/.test(i) ?
                            axis.outerHeight() :
                            axis.outerWidth();

                        padPos = ["padding",
                            /ne|nw|n/.test(i) ? "Top" :
                            /se|sw|s/.test(i) ? "Bottom" :
                            /^e$/.test(i) ? "Right" : "Left"
                        ].join("");

                        target.css(padPos, padWrapper);

                        this._proportionallyResize();
                    }

                    this._handles = this._handles.add(this.handles[i]);
                }
            };

            // TODO: make renderAxis a prototype function
            this._renderAxis(this.element);

            this._handles = this._handles.add(this.element.find(".ui-resizable-handle"));
            this._handles.disableSelection();

            this._handles.on("mouseover", function() {
                if (!that.resizing) {
                    if (this.className) {
                        axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
                    }
                    that.axis = axis && axis[1] ? axis[1] : "se";
                }
            });

            if (o.autoHide) {
                this._handles.hide();
                this._addClass("ui-resizable-autohide");
            }
        },

        _removeHandles: function() {
            this._addedHandles.remove();
        },

        _mouseCapture: function(event) {
            var i, handle,
                capture = false;

            for (i in this.handles) {
                handle = $(this.handles[i])[0];
                if (handle === event.target || $.contains(handle, event.target)) {
                    capture = true;
                }
            }

            return !this.options.disabled && capture;
        },

        _mouseStart: function(event) {

            var curleft, curtop, cursor,
                o = this.options,
                el = this.element;

            this.resizing = true;

            this._renderProxy();

            curleft = this._num(this.helper.css("left"));
            curtop = this._num(this.helper.css("top"));

            if (o.containment) {
                curleft += $(o.containment).scrollLeft() || 0;
                curtop += $(o.containment).scrollTop() || 0;
            }

            this.offset = this.helper.offset();
            this.position = {
                left: curleft,
                top: curtop
            };

            this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: el.width(),
                height: el.height()
            };

            this.originalSize = this._helper ? {
                width: el.outerWidth(),
                height: el.outerHeight()
            } : {
                width: el.width(),
                height: el.height()
            };

            this.sizeDiff = {
                width: el.outerWidth() - el.width(),
                height: el.outerHeight() - el.height()
            };

            this.originalPosition = {
                left: curleft,
                top: curtop
            };
            this.originalMousePosition = {
                left: event.pageX,
                top: event.pageY
            };

            this.aspectRatio = (typeof o.aspectRatio === "number") ?
                o.aspectRatio :
                ((this.originalSize.width / this.originalSize.height) || 1);

            cursor = $(".ui-resizable-" + this.axis).css("cursor");
            $("body").css("cursor", cursor === "auto" ? this.axis + "-resize" : cursor);

            this._addClass("ui-resizable-resizing");
            this._propagate("start", event);
            return true;
        },

        _mouseDrag: function(event) {

            var data, props,
                smp = this.originalMousePosition,
                a = this.axis,
                dx = (event.pageX - smp.left) || 0,
                dy = (event.pageY - smp.top) || 0,
                trigger = this._change[a];

            this._updatePrevProperties();

            if (!trigger) {
                return false;
            }

            data = trigger.apply(this, [event, dx, dy]);

            this._updateVirtualBoundaries(event.shiftKey);
            if (this._aspectRatio || event.shiftKey) {
                data = this._updateRatio(data, event);
            }

            data = this._respectSize(data, event);

            this._updateCache(data);

            this._propagate("resize", event);

            props = this._applyChanges();

            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize();
            }

            if (!$.isEmptyObject(props)) {
                this._updatePrevProperties();
                this._trigger("resize", event, this.ui());
                this._applyChanges();
            }

            return false;
        },

        _mouseStop: function(event) {

            this.resizing = false;
            var pr, ista, soffseth, soffsetw, s, left, top,
                o = this.options,
                that = this;

            if (this._helper) {

                pr = this._proportionallyResizeElements;
                ista = pr.length && (/textarea/i).test(pr[0].nodeName);
                soffseth = ista && this._hasScroll(pr[0], "left") ? 0 : that.sizeDiff.height;
                soffsetw = ista ? 0 : that.sizeDiff.width;

                s = {
                    width: (that.helper.width() - soffsetw),
                    height: (that.helper.height() - soffseth)
                };
                left = (parseFloat(that.element.css("left")) +
                    (that.position.left - that.originalPosition.left)) || null;
                top = (parseFloat(that.element.css("top")) +
                    (that.position.top - that.originalPosition.top)) || null;

                if (!o.animate) {
                    this.element.css($.extend(s, {
                        top: top,
                        left: left
                    }));
                }

                that.helper.height(that.size.height);
                that.helper.width(that.size.width);

                if (this._helper && !o.animate) {
                    this._proportionallyResize();
                }
            }

            $("body").css("cursor", "auto");

            this._removeClass("ui-resizable-resizing");

            this._propagate("stop", event);

            if (this._helper) {
                this.helper.remove();
            }

            return false;

        },

        _updatePrevProperties: function() {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            };
            this.prevSize = {
                width: this.size.width,
                height: this.size.height
            };
        },

        _applyChanges: function() {
            var props = {};

            if (this.position.top !== this.prevPosition.top) {
                props.top = this.position.top + "px";
            }
            if (this.position.left !== this.prevPosition.left) {
                props.left = this.position.left + "px";
            }
            if (this.size.width !== this.prevSize.width) {
                props.width = this.size.width + "px";
            }
            if (this.size.height !== this.prevSize.height) {
                props.height = this.size.height + "px";
            }

            this.helper.css(props);

            return props;
        },

        _updateVirtualBoundaries: function(forceAspectRatio) {
            var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,
                o = this.options;

            b = {
                minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,
                maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : Infinity,
                minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,
                maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : Infinity
            };

            if (this._aspectRatio || forceAspectRatio) {
                pMinWidth = b.minHeight * this.aspectRatio;
                pMinHeight = b.minWidth / this.aspectRatio;
                pMaxWidth = b.maxHeight * this.aspectRatio;
                pMaxHeight = b.maxWidth / this.aspectRatio;

                if (pMinWidth > b.minWidth) {
                    b.minWidth = pMinWidth;
                }
                if (pMinHeight > b.minHeight) {
                    b.minHeight = pMinHeight;
                }
                if (pMaxWidth < b.maxWidth) {
                    b.maxWidth = pMaxWidth;
                }
                if (pMaxHeight < b.maxHeight) {
                    b.maxHeight = pMaxHeight;
                }
            }
            this._vBoundaries = b;
        },

        _updateCache: function(data) {
            this.offset = this.helper.offset();
            if (this._isNumber(data.left)) {
                this.position.left = data.left;
            }
            if (this._isNumber(data.top)) {
                this.position.top = data.top;
            }
            if (this._isNumber(data.height)) {
                this.size.height = data.height;
            }
            if (this._isNumber(data.width)) {
                this.size.width = data.width;
            }
        },

        _updateRatio: function(data) {

            var cpos = this.position,
                csize = this.size,
                a = this.axis;

            if (this._isNumber(data.height)) {
                data.width = (data.height * this.aspectRatio);
            } else if (this._isNumber(data.width)) {
                data.height = (data.width / this.aspectRatio);
            }

            if (a === "sw") {
                data.left = cpos.left + (csize.width - data.width);
                data.top = null;
            }
            if (a === "nw") {
                data.top = cpos.top + (csize.height - data.height);
                data.left = cpos.left + (csize.width - data.width);
            }

            return data;
        },

        _respectSize: function(data) {

            var o = this._vBoundaries,
                a = this.axis,
                ismaxw = this._isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width),
                ismaxh = this._isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),
                isminw = this._isNumber(data.width) && o.minWidth && (o.minWidth > data.width),
                isminh = this._isNumber(data.height) && o.minHeight && (o.minHeight > data.height),
                dw = this.originalPosition.left + this.originalSize.width,
                dh = this.originalPosition.top + this.originalSize.height,
                cw = /sw|nw|w/.test(a),
                ch = /nw|ne|n/.test(a);
            if (isminw) {
                data.width = o.minWidth;
            }
            if (isminh) {
                data.height = o.minHeight;
            }
            if (ismaxw) {
                data.width = o.maxWidth;
            }
            if (ismaxh) {
                data.height = o.maxHeight;
            }

            if (isminw && cw) {
                data.left = dw - o.minWidth;
            }
            if (ismaxw && cw) {
                data.left = dw - o.maxWidth;
            }
            if (isminh && ch) {
                data.top = dh - o.minHeight;
            }
            if (ismaxh && ch) {
                data.top = dh - o.maxHeight;
            }

            // Fixing jump error on top/left - bug #2330
            if (!data.width && !data.height && !data.left && data.top) {
                data.top = null;
            } else if (!data.width && !data.height && !data.top && data.left) {
                data.left = null;
            }

            return data;
        },

        _getPaddingPlusBorderDimensions: function(element) {
            var i = 0,
                widths = [],
                borders = [
                    element.css("borderTopWidth"),
                    element.css("borderRightWidth"),
                    element.css("borderBottomWidth"),
                    element.css("borderLeftWidth")
                ],
                paddings = [
                    element.css("paddingTop"),
                    element.css("paddingRight"),
                    element.css("paddingBottom"),
                    element.css("paddingLeft")
                ];

            for (; i < 4; i++) {
                widths[i] = (parseFloat(borders[i]) || 0);
                widths[i] += (parseFloat(paddings[i]) || 0);
            }

            return {
                height: widths[0] + widths[2],
                width: widths[1] + widths[3]
            };
        },

        _proportionallyResize: function() {

            if (!this._proportionallyResizeElements.length) {
                return;
            }

            var prel,
                i = 0,
                element = this.helper || this.element;

            for (; i < this._proportionallyResizeElements.length; i++) {

                prel = this._proportionallyResizeElements[i];

                // TODO: Seems like a bug to cache this.outerDimensions
                // considering that we are in a loop.
                if (!this.outerDimensions) {
                    this.outerDimensions = this._getPaddingPlusBorderDimensions(prel);
                }

                prel.css({
                    height: (element.height() - this.outerDimensions.height) || 0,
                    width: (element.width() - this.outerDimensions.width) || 0
                });

            }

        },

        _renderProxy: function() {

            var el = this.element,
                o = this.options;
            this.elementOffset = el.offset();

            if (this._helper) {

                this.helper = this.helper || $("<div></div>").css({
                    overflow: "hidden"
                });

                this._addClass(this.helper, this._helper);
                this.helper.css({
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    position: "absolute",
                    left: this.elementOffset.left + "px",
                    top: this.elementOffset.top + "px",
                    zIndex: ++o.zIndex //TODO: Don't modify option
                });

                this.helper
                    .appendTo("body")
                    .disableSelection();

            } else {
                this.helper = this.element;
            }

        },

        _change: {
            e: function(event, dx) {
                return {
                    width: this.originalSize.width + dx
                };
            },
            w: function(event, dx) {
                var cs = this.originalSize,
                    sp = this.originalPosition;
                return {
                    left: sp.left + dx,
                    width: cs.width - dx
                };
            },
            n: function(event, dx, dy) {
                var cs = this.originalSize,
                    sp = this.originalPosition;
                return {
                    top: sp.top + dy,
                    height: cs.height - dy
                };
            },
            s: function(event, dx, dy) {
                return {
                    height: this.originalSize.height + dy
                };
            },
            se: function(event, dx, dy) {
                return $.extend(this._change.s.apply(this, arguments),
                    this._change.e.apply(this, [event, dx, dy]));
            },
            sw: function(event, dx, dy) {
                return $.extend(this._change.s.apply(this, arguments),
                    this._change.w.apply(this, [event, dx, dy]));
            },
            ne: function(event, dx, dy) {
                return $.extend(this._change.n.apply(this, arguments),
                    this._change.e.apply(this, [event, dx, dy]));
            },
            nw: function(event, dx, dy) {
                return $.extend(this._change.n.apply(this, arguments),
                    this._change.w.apply(this, [event, dx, dy]));
            }
        },

        _propagate: function(n, event) {
            $.ui.plugin.call(this, n, [event, this.ui()]);
            if (n !== "resize") {
                this._trigger(n, event, this.ui());
            }
        },

        plugins: {},

        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            };
        }

    });

    /*
     * Resizable Extensions
     */

    $.ui.plugin.add("resizable", "animate", {

        stop: function(event) {
            var that = $(this).resizable("instance"),
                o = that.options,
                pr = that._proportionallyResizeElements,
                ista = pr.length && (/textarea/i).test(pr[0].nodeName),
                soffseth = ista && that._hasScroll(pr[0], "left") ? 0 : that.sizeDiff.height,
                soffsetw = ista ? 0 : that.sizeDiff.width,
                style = {
                    width: (that.size.width - soffsetw),
                    height: (that.size.height - soffseth)
                },
                left = (parseFloat(that.element.css("left")) +
                    (that.position.left - that.originalPosition.left)) || null,
                top = (parseFloat(that.element.css("top")) +
                    (that.position.top - that.originalPosition.top)) || null;

            that.element.animate(
                $.extend(style, top && left ? {
                    top: top,
                    left: left
                } : {}), {
                    duration: o.animateDuration,
                    easing: o.animateEasing,
                    step: function() {

                        var data = {
                            width: parseFloat(that.element.css("width")),
                            height: parseFloat(that.element.css("height")),
                            top: parseFloat(that.element.css("top")),
                            left: parseFloat(that.element.css("left"))
                        };

                        if (pr && pr.length) {
                            $(pr[0]).css({
                                width: data.width,
                                height: data.height
                            });
                        }

                        // Propagating resize, and updating values for each animation step
                        that._updateCache(data);
                        that._propagate("resize", event);

                    }
                }
            );
        }

    });

    $.ui.plugin.add("resizable", "containment", {

        start: function() {
            var element, p, co, ch, cw, width, height,
                that = $(this).resizable("instance"),
                o = that.options,
                el = that.element,
                oc = o.containment,
                ce = (oc instanceof $) ?
                oc.get(0) :
                (/parent/.test(oc)) ? el.parent().get(0) : oc;

            if (!ce) {
                return;
            }

            that.containerElement = $(ce);

            if (/document/.test(oc) || oc === document) {
                that.containerOffset = {
                    left: 0,
                    top: 0
                };
                that.containerPosition = {
                    left: 0,
                    top: 0
                };

                that.parentData = {
                    element: $(document),
                    left: 0,
                    top: 0,
                    width: $(document).width(),
                    height: $(document).height() || document.body.parentNode.scrollHeight
                };
            } else {
                element = $(ce);
                p = [];
                $(["Top", "Right", "Left", "Bottom"]).each(function(i, name) {
                    p[i] = that._num(element.css("padding" + name));
                });

                that.containerOffset = element.offset();
                that.containerPosition = element.position();
                that.containerSize = {
                    height: (element.innerHeight() - p[3]),
                    width: (element.innerWidth() - p[1])
                };

                co = that.containerOffset;
                ch = that.containerSize.height;
                cw = that.containerSize.width;
                width = (that._hasScroll(ce, "left") ? ce.scrollWidth : cw);
                height = (that._hasScroll(ce) ? ce.scrollHeight : ch);

                that.parentData = {
                    element: ce,
                    left: co.left,
                    top: co.top,
                    width: width,
                    height: height
                };
            }
        },

        resize: function(event) {
            var woset, hoset, isParent, isOffsetRelative,
                that = $(this).resizable("instance"),
                o = that.options,
                co = that.containerOffset,
                cp = that.position,
                pRatio = that._aspectRatio || event.shiftKey,
                cop = {
                    top: 0,
                    left: 0
                },
                ce = that.containerElement,
                continueResize = true;

            if (ce[0] !== document && (/static/).test(ce.css("position"))) {
                cop = co;
            }

            if (cp.left < (that._helper ? co.left : 0)) {
                that.size.width = that.size.width +
                    (that._helper ?
                        (that.position.left - co.left) :
                        (that.position.left - cop.left));

                if (pRatio) {
                    that.size.height = that.size.width / that.aspectRatio;
                    continueResize = false;
                }
                that.position.left = o.helper ? co.left : 0;
            }

            if (cp.top < (that._helper ? co.top : 0)) {
                that.size.height = that.size.height +
                    (that._helper ?
                        (that.position.top - co.top) :
                        that.position.top);

                if (pRatio) {
                    that.size.width = that.size.height * that.aspectRatio;
                    continueResize = false;
                }
                that.position.top = that._helper ? co.top : 0;
            }

            isParent = that.containerElement.get(0) === that.element.parent().get(0);
            isOffsetRelative = /relative|absolute/.test(that.containerElement.css("position"));

            if (isParent && isOffsetRelative) {
                that.offset.left = that.parentData.left + that.position.left;
                that.offset.top = that.parentData.top + that.position.top;
            } else {
                that.offset.left = that.element.offset().left;
                that.offset.top = that.element.offset().top;
            }

            woset = Math.abs(that.sizeDiff.width +
                (that._helper ?
                    that.offset.left - cop.left :
                    (that.offset.left - co.left)));

            hoset = Math.abs(that.sizeDiff.height +
                (that._helper ?
                    that.offset.top - cop.top :
                    (that.offset.top - co.top)));

            if (woset + that.size.width >= that.parentData.width) {
                that.size.width = that.parentData.width - woset;
                if (pRatio) {
                    that.size.height = that.size.width / that.aspectRatio;
                    continueResize = false;
                }
            }

            if (hoset + that.size.height >= that.parentData.height) {
                that.size.height = that.parentData.height - hoset;
                if (pRatio) {
                    that.size.width = that.size.height * that.aspectRatio;
                    continueResize = false;
                }
            }

            if (!continueResize) {
                that.position.left = that.prevPosition.left;
                that.position.top = that.prevPosition.top;
                that.size.width = that.prevSize.width;
                that.size.height = that.prevSize.height;
            }
        },

        stop: function() {
            var that = $(this).resizable("instance"),
                o = that.options,
                co = that.containerOffset,
                cop = that.containerPosition,
                ce = that.containerElement,
                helper = $(that.helper),
                ho = helper.offset(),
                w = helper.outerWidth() - that.sizeDiff.width,
                h = helper.outerHeight() - that.sizeDiff.height;

            if (that._helper && !o.animate && (/relative/).test(ce.css("position"))) {
                $(this).css({
                    left: ho.left - cop.left - co.left,
                    width: w,
                    height: h
                });
            }

            if (that._helper && !o.animate && (/static/).test(ce.css("position"))) {
                $(this).css({
                    left: ho.left - cop.left - co.left,
                    width: w,
                    height: h
                });
            }
        }
    });

    $.ui.plugin.add("resizable", "alsoResize", {

        start: function() {
            var that = $(this).resizable("instance"),
                o = that.options;

            $(o.alsoResize).each(function() {
                var el = $(this);
                el.data("ui-resizable-alsoresize", {
                    width: parseFloat(el.width()),
                    height: parseFloat(el.height()),
                    left: parseFloat(el.css("left")),
                    top: parseFloat(el.css("top"))
                });
            });
        },

        resize: function(event, ui) {
            var that = $(this).resizable("instance"),
                o = that.options,
                os = that.originalSize,
                op = that.originalPosition,
                delta = {
                    height: (that.size.height - os.height) || 0,
                    width: (that.size.width - os.width) || 0,
                    top: (that.position.top - op.top) || 0,
                    left: (that.position.left - op.left) || 0
                };

            $(o.alsoResize).each(function() {
                var el = $(this),
                    start = $(this).data("ui-resizable-alsoresize"),
                    style = {},
                    css = el.parents(ui.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];

                $.each(css, function(i, prop) {
                    var sum = (start[prop] || 0) + (delta[prop] || 0);
                    if (sum && sum >= 0) {
                        style[prop] = sum || null;
                    }
                });

                el.css(style);
            });
        },

        stop: function() {
            $(this).removeData("ui-resizable-alsoresize");
        }
    });

    $.ui.plugin.add("resizable", "ghost", {

        start: function() {

            var that = $(this).resizable("instance"),
                cs = that.size;

            that.ghost = that.originalElement.clone();
            that.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: cs.height,
                width: cs.width,
                margin: 0,
                left: 0,
                top: 0
            });

            that._addClass(that.ghost, "ui-resizable-ghost");

            // DEPRECATED
            // TODO: remove after 1.12
            if ($.uiBackCompat !== false && typeof that.options.ghost === "string") {

                // Ghost option
                that.ghost.addClass(this.options.ghost);
            }

            that.ghost.appendTo(that.helper);

        },

        resize: function() {
            var that = $(this).resizable("instance");
            if (that.ghost) {
                that.ghost.css({
                    position: "relative",
                    height: that.size.height,
                    width: that.size.width
                });
            }
        },

        stop: function() {
            var that = $(this).resizable("instance");
            if (that.ghost && that.helper) {
                that.helper.get(0).removeChild(that.ghost.get(0));
            }
        }

    });

    $.ui.plugin.add("resizable", "grid", {

        resize: function() {
            var outerDimensions,
                that = $(this).resizable("instance"),
                o = that.options,
                cs = that.size,
                os = that.originalSize,
                op = that.originalPosition,
                a = that.axis,
                grid = typeof o.grid === "number" ? [o.grid, o.grid] : o.grid,
                gridX = (grid[0] || 1),
                gridY = (grid[1] || 1),
                ox = Math.round((cs.width - os.width) / gridX) * gridX,
                oy = Math.round((cs.height - os.height) / gridY) * gridY,
                newWidth = os.width + ox,
                newHeight = os.height + oy,
                isMaxWidth = o.maxWidth && (o.maxWidth < newWidth),
                isMaxHeight = o.maxHeight && (o.maxHeight < newHeight),
                isMinWidth = o.minWidth && (o.minWidth > newWidth),
                isMinHeight = o.minHeight && (o.minHeight > newHeight);

            o.grid = grid;

            if (isMinWidth) {
                newWidth += gridX;
            }
            if (isMinHeight) {
                newHeight += gridY;
            }
            if (isMaxWidth) {
                newWidth -= gridX;
            }
            if (isMaxHeight) {
                newHeight -= gridY;
            }

            if (/^(se|s|e)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
            } else if (/^(ne)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
                that.position.top = op.top - oy;
            } else if (/^(sw)$/.test(a)) {
                that.size.width = newWidth;
                that.size.height = newHeight;
                that.position.left = op.left - ox;
            } else {
                if (newHeight - gridY <= 0 || newWidth - gridX <= 0) {
                    outerDimensions = that._getPaddingPlusBorderDimensions(this);
                }

                if (newHeight - gridY > 0) {
                    that.size.height = newHeight;
                    that.position.top = op.top - oy;
                } else {
                    newHeight = gridY - outerDimensions.height;
                    that.size.height = newHeight;
                    that.position.top = op.top + os.height - newHeight;
                }
                if (newWidth - gridX > 0) {
                    that.size.width = newWidth;
                    that.position.left = op.left - ox;
                } else {
                    newWidth = gridX - outerDimensions.width;
                    that.size.width = newWidth;
                    that.position.left = op.left + os.width - newWidth;
                }
            }
        }

    });

    return $.ui.resizable;

});














/*!
 * jQuery UI Dialog 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Dialog
//>>group: Widgets
//>>description: Displays customizable dialog windows.
//>>docs: http://api.jqueryui.com/dialog/
//>>demos: http://jqueryui.com/dialog/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/dialog.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./button",
            "./draggable",
            "./mouse",
            "./resizable",
            "../focusable",
            "../keycode",
            "../position",
            "../safe-active-element",
            "../safe-blur",
            "../tabbable",
            "../unique-id",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.dialog", {
        version: "1.13.0",
        options: {
            appendTo: "body",
            autoOpen: true,
            buttons: [],
            classes: {
                "ui-dialog": "ui-corner-all",
                "ui-dialog-titlebar": "ui-corner-all"
            },
            closeOnEscape: true,
            closeText: "Close",
            draggable: true,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: false,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",

                // Ensure the titlebar is always visible
                using: function(pos) {
                    var topOffset = $(this).css(pos).offset().top;
                    if (topOffset < 0) {
                        $(this).css("top", pos.top - topOffset);
                    }
                }
            },
            resizable: true,
            show: null,
            title: null,
            width: 300,

            // Callbacks
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },

        sizeRelatedOptions: {
            buttons: true,
            height: true,
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true,
            width: true
        },

        resizableRelatedOptions: {
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true
        },

        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            };
            this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.originalTitle = this.element.attr("title");
            if (this.options.title == null && this.originalTitle != null) {
                this.options.title = this.originalTitle;
            }

            // Dialogs can't be disabled
            if (this.options.disabled) {
                this.options.disabled = false;
            }

            this._createWrapper();

            this.element
                .show()
                .removeAttr("title")
                .appendTo(this.uiDialog);

            this._addClass("ui-dialog-content", "ui-widget-content");

            this._createTitlebar();
            this._createButtonPane();

            if (this.options.draggable && $.fn.draggable) {
                this._makeDraggable();
            }
            if (this.options.resizable && $.fn.resizable) {
                this._makeResizable();
            }

            this._isOpen = false;

            this._trackFocus();
        },

        _init: function() {
            if (this.options.autoOpen) {
                this.open();
            }
        },

        _appendTo: function() {
            var element = this.options.appendTo;
            if (element && (element.jquery || element.nodeType)) {
                return $(element);
            }
            return this.document.find(element || "body").eq(0);
        },

        _destroy: function() {
            var next,
                originalPosition = this.originalPosition;

            this._untrackInstance();
            this._destroyOverlay();

            this.element
                .removeUniqueId()
                .css(this.originalCss)

                // Without detaching first, the following becomes really slow
                .detach();

            this.uiDialog.remove();

            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle);
            }

            next = originalPosition.parent.children().eq(originalPosition.index);

            // Don't try to place the dialog next to itself (#8613)
            if (next.length && next[0] !== this.element[0]) {
                next.before(this.element);
            } else {
                originalPosition.parent.append(this.element);
            }
        },

        widget: function() {
            return this.uiDialog;
        },

        disable: $.noop,
        enable: $.noop,

        close: function(event) {
            var that = this;

            if (!this._isOpen || this._trigger("beforeClose", event) === false) {
                return;
            }

            this._isOpen = false;
            this._focusedElement = null;
            this._destroyOverlay();
            this._untrackInstance();

            if (!this.opener.filter(":focusable").trigger("focus").length) {

                // Hiding a focused element doesn't trigger blur in WebKit
                // so in case we have nothing to focus on, explicitly blur the active element
                // https://bugs.webkit.org/show_bug.cgi?id=47182
                $.ui.safeBlur($.ui.safeActiveElement(this.document[0]));
            }

            this._hide(this.uiDialog, this.options.hide, function() {
                that._trigger("close", event);
            });
        },

        isOpen: function() {
            return this._isOpen;
        },

        moveToTop: function() {
            this._moveToTop();
        },

        _moveToTop: function(event, silent) {
            var moved = false,
                zIndices = this.uiDialog.siblings(".ui-front:visible").map(function() {
                    return +$(this).css("z-index");
                }).get(),
                zIndexMax = Math.max.apply(null, zIndices);

            if (zIndexMax >= +this.uiDialog.css("z-index")) {
                this.uiDialog.css("z-index", zIndexMax + 1);
                moved = true;
            }

            if (moved && !silent) {
                this._trigger("focus", event);
            }
            return moved;
        },

        open: function() {
            var that = this;
            if (this._isOpen) {
                if (this._moveToTop()) {
                    this._focusTabbable();
                }
                return;
            }

            this._isOpen = true;
            this.opener = $($.ui.safeActiveElement(this.document[0]));

            this._size();
            this._position();
            this._createOverlay();
            this._moveToTop(null, true);

            // Ensure the overlay is moved to the top with the dialog, but only when
            // opening. The overlay shouldn't move after the dialog is open so that
            // modeless dialogs opened after the modal dialog stack properly.
            if (this.overlay) {
                this.overlay.css("z-index", this.uiDialog.css("z-index") - 1);
            }

            this._show(this.uiDialog, this.options.show, function() {
                that._focusTabbable();
                that._trigger("focus");
            });

            // Track the dialog immediately upon opening in case a focus event
            // somehow occurs outside of the dialog before an element inside the
            // dialog is focused (#10152)
            this._makeFocusTarget();

            this._trigger("open");
        },

        _focusTabbable: function() {

            // Set focus to the first match:
            // 1. An element that was focused previously
            // 2. First element inside the dialog matching [autofocus]
            // 3. Tabbable element inside the content element
            // 4. Tabbable element inside the buttonpane
            // 5. The close button
            // 6. The dialog itself
            var hasFocus = this._focusedElement;
            if (!hasFocus) {
                hasFocus = this.element.find("[autofocus]");
            }
            if (!hasFocus.length) {
                hasFocus = this.element.find(":tabbable");
            }
            if (!hasFocus.length) {
                hasFocus = this.uiDialogButtonPane.find(":tabbable");
            }
            if (!hasFocus.length) {
                hasFocus = this.uiDialogTitlebarClose.filter(":tabbable");
            }
            if (!hasFocus.length) {
                hasFocus = this.uiDialog;
            }
            hasFocus.eq(0).trigger("focus");
        },

        _restoreTabbableFocus: function() {
            var activeElement = $.ui.safeActiveElement(this.document[0]),
                isActive = this.uiDialog[0] === activeElement ||
                $.contains(this.uiDialog[0], activeElement);
            if (!isActive) {
                this._focusTabbable();
            }
        },

        _keepFocus: function(event) {
            event.preventDefault();
            this._restoreTabbableFocus();

            // support: IE
            // IE <= 8 doesn't prevent moving focus even with event.preventDefault()
            // so we check again later
            this._delay(this._restoreTabbableFocus);
        },

        _createWrapper: function() {
            this.uiDialog = $("<div>")
                .hide()
                .attr({

                    // Setting tabIndex makes the div focusable
                    tabIndex: -1,
                    role: "dialog"
                })
                .appendTo(this._appendTo());

            this._addClass(this.uiDialog, "ui-dialog", "ui-widget ui-widget-content ui-front");
            this._on(this.uiDialog, {
                keydown: function(event) {
                    if (this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&
                        event.keyCode === $.ui.keyCode.ESCAPE) {
                        event.preventDefault();
                        this.close(event);
                        return;
                    }

                    // Prevent tabbing out of dialogs
                    if (event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented()) {
                        return;
                    }
                    var tabbables = this.uiDialog.find(":tabbable"),
                        first = tabbables.first(),
                        last = tabbables.last();

                    if ((event.target === last[0] || event.target === this.uiDialog[0]) &&
                        !event.shiftKey) {
                        this._delay(function() {
                            first.trigger("focus");
                        });
                        event.preventDefault();
                    } else if ((event.target === first[0] ||
                            event.target === this.uiDialog[0]) && event.shiftKey) {
                        this._delay(function() {
                            last.trigger("focus");
                        });
                        event.preventDefault();
                    }
                },
                mousedown: function(event) {
                    if (this._moveToTop(event)) {
                        this._focusTabbable();
                    }
                }
            });

            // We assume that any existing aria-describedby attribute means
            // that the dialog content is marked up properly
            // otherwise we brute force the content as the description
            if (!this.element.find("[aria-describedby]").length) {
                this.uiDialog.attr({
                    "aria-describedby": this.element.uniqueId().attr("id")
                });
            }
        },

        _createTitlebar: function() {
            var uiDialogTitle;

            this.uiDialogTitlebar = $("<div>");
            this._addClass(this.uiDialogTitlebar,
                "ui-dialog-titlebar", "ui-widget-header ui-helper-clearfix");
            this._on(this.uiDialogTitlebar, {
                mousedown: function(event) {

                    // Don't prevent click on close button (#8838)
                    // Focusing a dialog that is partially scrolled out of view
                    // causes the browser to scroll it into view, preventing the click event
                    if (!$(event.target).closest(".ui-dialog-titlebar-close")) {

                        // Dialog isn't getting focus when dragging (#8063)
                        this.uiDialog.trigger("focus");
                    }
                }
            });

            // Support: IE
            // Use type="button" to prevent enter keypresses in textboxes from closing the
            // dialog in IE (#9312)
            this.uiDialogTitlebarClose = $("<button type='button'></button>")
                .button({
                    label: $("<a>").text(this.options.closeText).html(),
                    icon: "ui-icon-closethick",
                    showLabel: false
                })
                .appendTo(this.uiDialogTitlebar);

            this._addClass(this.uiDialogTitlebarClose, "ui-dialog-titlebar-close");
            this._on(this.uiDialogTitlebarClose, {
                click: function(event) {
                    event.preventDefault();
                    this.close(event);
                }
            });

            uiDialogTitle = $("<span>").uniqueId().prependTo(this.uiDialogTitlebar);
            this._addClass(uiDialogTitle, "ui-dialog-title");
            this._title(uiDialogTitle);

            this.uiDialogTitlebar.prependTo(this.uiDialog);

            this.uiDialog.attr({
                "aria-labelledby": uiDialogTitle.attr("id")
            });
        },

        _title: function(title) {
            if (this.options.title) {
                title.text(this.options.title);
            } else {
                title.html("&#160;");
            }
        },

        _createButtonPane: function() {
            this.uiDialogButtonPane = $("<div>");
            this._addClass(this.uiDialogButtonPane, "ui-dialog-buttonpane",
                "ui-widget-content ui-helper-clearfix");

            this.uiButtonSet = $("<div>")
                .appendTo(this.uiDialogButtonPane);
            this._addClass(this.uiButtonSet, "ui-dialog-buttonset");

            this._createButtons();
        },

        _createButtons: function() {
            var that = this,
                buttons = this.options.buttons;

            // If we already have a button pane, remove it
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();

            if ($.isEmptyObject(buttons) || (Array.isArray(buttons) && !buttons.length)) {
                this._removeClass(this.uiDialog, "ui-dialog-buttons");
                return;
            }

            $.each(buttons, function(name, props) {
                var click, buttonOptions;
                props = typeof props === "function" ? {
                        click: props,
                        text: name
                    } :
                    props;

                // Default to a non-submitting button
                props = $.extend({
                    type: "button"
                }, props);

                // Change the context for the click callback to be the main element
                click = props.click;
                buttonOptions = {
                    icon: props.icon,
                    iconPosition: props.iconPosition,
                    showLabel: props.showLabel,

                    // Deprecated options
                    icons: props.icons,
                    text: props.text
                };

                delete props.click;
                delete props.icon;
                delete props.iconPosition;
                delete props.showLabel;

                // Deprecated options
                delete props.icons;
                if (typeof props.text === "boolean") {
                    delete props.text;
                }

                $("<button></button>", props)
                    .button(buttonOptions)
                    .appendTo(that.uiButtonSet)
                    .on("click", function() {
                        click.apply(that.element[0], arguments);
                    });
            });
            this._addClass(this.uiDialog, "ui-dialog-buttons");
            this.uiDialogButtonPane.appendTo(this.uiDialog);
        },

        _makeDraggable: function() {
            var that = this,
                options = this.options;

            function filteredUi(ui) {
                return {
                    position: ui.position,
                    offset: ui.offset
                };
            }

            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(event, ui) {
                    that._addClass($(this), "ui-dialog-dragging");
                    that._blockFrames();
                    that._trigger("dragStart", event, filteredUi(ui));
                },
                drag: function(event, ui) {
                    that._trigger("drag", event, filteredUi(ui));
                },
                stop: function(event, ui) {
                    var left = ui.offset.left - that.document.scrollLeft(),
                        top = ui.offset.top - that.document.scrollTop();

                    options.position = {
                        my: "left top",
                        at: "left" + (left >= 0 ? "+" : "") + left + " " +
                            "top" + (top >= 0 ? "+" : "") + top,
                        of: that.window
                    };
                    that._removeClass($(this), "ui-dialog-dragging");
                    that._unblockFrames();
                    that._trigger("dragStop", event, filteredUi(ui));
                }
            });
        },

        _makeResizable: function() {
            var that = this,
                options = this.options,
                handles = options.resizable,

                // .ui-resizable has position: relative defined in the stylesheet
                // but dialogs have to use absolute or fixed positioning
                position = this.uiDialog.css("position"),
                resizeHandles = typeof handles === "string" ?
                handles :
                "n,e,s,w,se,sw,ne,nw";

            function filteredUi(ui) {
                return {
                    originalPosition: ui.originalPosition,
                    originalSize: ui.originalSize,
                    position: ui.position,
                    size: ui.size
                };
            }

            this.uiDialog.resizable({
                    cancel: ".ui-dialog-content",
                    containment: "document",
                    alsoResize: this.element,
                    maxWidth: options.maxWidth,
                    maxHeight: options.maxHeight,
                    minWidth: options.minWidth,
                    minHeight: this._minHeight(),
                    handles: resizeHandles,
                    start: function(event, ui) {
                        that._addClass($(this), "ui-dialog-resizing");
                        that._blockFrames();
                        that._trigger("resizeStart", event, filteredUi(ui));
                    },
                    resize: function(event, ui) {
                        that._trigger("resize", event, filteredUi(ui));
                    },
                    stop: function(event, ui) {
                        var offset = that.uiDialog.offset(),
                            left = offset.left - that.document.scrollLeft(),
                            top = offset.top - that.document.scrollTop();

                        options.height = that.uiDialog.height();
                        options.width = that.uiDialog.width();
                        options.position = {
                            my: "left top",
                            at: "left" + (left >= 0 ? "+" : "") + left + " " +
                                "top" + (top >= 0 ? "+" : "") + top,
                            of: that.window
                        };
                        that._removeClass($(this), "ui-dialog-resizing");
                        that._unblockFrames();
                        that._trigger("resizeStop", event, filteredUi(ui));
                    }
                })
                .css("position", position);
        },

        _trackFocus: function() {
            this._on(this.widget(), {
                focusin: function(event) {
                    this._makeFocusTarget();
                    this._focusedElement = $(event.target);
                }
            });
        },

        _makeFocusTarget: function() {
            this._untrackInstance();
            this._trackingInstances().unshift(this);
        },

        _untrackInstance: function() {
            var instances = this._trackingInstances(),
                exists = $.inArray(this, instances);
            if (exists !== -1) {
                instances.splice(exists, 1);
            }
        },

        _trackingInstances: function() {
            var instances = this.document.data("ui-dialog-instances");
            if (!instances) {
                instances = [];
                this.document.data("ui-dialog-instances", instances);
            }
            return instances;
        },

        _minHeight: function() {
            var options = this.options;

            return options.height === "auto" ?
                options.minHeight :
                Math.min(options.minHeight, options.height);
        },

        _position: function() {

            // Need to show the dialog to get the actual offset in the position plugin
            var isVisible = this.uiDialog.is(":visible");
            if (!isVisible) {
                this.uiDialog.show();
            }
            this.uiDialog.position(this.options.position);
            if (!isVisible) {
                this.uiDialog.hide();
            }
        },

        _setOptions: function(options) {
            var that = this,
                resize = false,
                resizableOptions = {};

            $.each(options, function(key, value) {
                that._setOption(key, value);

                if (key in that.sizeRelatedOptions) {
                    resize = true;
                }
                if (key in that.resizableRelatedOptions) {
                    resizableOptions[key] = value;
                }
            });

            if (resize) {
                this._size();
                this._position();
            }
            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", resizableOptions);
            }
        },

        _setOption: function(key, value) {
            var isDraggable, isResizable,
                uiDialog = this.uiDialog;

            if (key === "disabled") {
                return;
            }

            this._super(key, value);

            if (key === "appendTo") {
                this.uiDialog.appendTo(this._appendTo());
            }

            if (key === "buttons") {
                this._createButtons();
            }

            if (key === "closeText") {
                this.uiDialogTitlebarClose.button({

                    // Ensure that we always pass a string
                    label: $("<a>").text("" + this.options.closeText).html()
                });
            }

            if (key === "draggable") {
                isDraggable = uiDialog.is(":data(ui-draggable)");
                if (isDraggable && !value) {
                    uiDialog.draggable("destroy");
                }

                if (!isDraggable && value) {
                    this._makeDraggable();
                }
            }

            if (key === "position") {
                this._position();
            }

            if (key === "resizable") {

                // currently resizable, becoming non-resizable
                isResizable = uiDialog.is(":data(ui-resizable)");
                if (isResizable && !value) {
                    uiDialog.resizable("destroy");
                }

                // Currently resizable, changing handles
                if (isResizable && typeof value === "string") {
                    uiDialog.resizable("option", "handles", value);
                }

                // Currently non-resizable, becoming resizable
                if (!isResizable && value !== false) {
                    this._makeResizable();
                }
            }

            if (key === "title") {
                this._title(this.uiDialogTitlebar.find(".ui-dialog-title"));
            }
        },

        _size: function() {

            // If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
            // divs will both have width and height set, so we need to reset them
            var nonContentHeight, minContentHeight, maxContentHeight,
                options = this.options;

            // Reset content sizing
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            });

            if (options.minWidth > options.width) {
                options.width = options.minWidth;
            }

            // Reset wrapper sizing
            // determine the height of all the non-content elements
            nonContentHeight = this.uiDialog.css({
                    height: "auto",
                    width: options.width
                })
                .outerHeight();
            minContentHeight = Math.max(0, options.minHeight - nonContentHeight);
            maxContentHeight = typeof options.maxHeight === "number" ?
                Math.max(0, options.maxHeight - nonContentHeight) :
                "none";

            if (options.height === "auto") {
                this.element.css({
                    minHeight: minContentHeight,
                    maxHeight: maxContentHeight,
                    height: "auto"
                });
            } else {
                this.element.height(Math.max(0, options.height - nonContentHeight));
            }

            if (this.uiDialog.is(":data(ui-resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight());
            }
        },

        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var iframe = $(this);

                return $("<div>")
                    .css({
                        position: "absolute",
                        width: iframe.outerWidth(),
                        height: iframe.outerHeight()
                    })
                    .appendTo(iframe.parent())
                    .offset(iframe.offset())[0];
            });
        },

        _unblockFrames: function() {
            if (this.iframeBlocks) {
                this.iframeBlocks.remove();
                delete this.iframeBlocks;
            }
        },

        _allowInteraction: function(event) {
            if ($(event.target).closest(".ui-dialog").length) {
                return true;
            }

            // TODO: Remove hack when datepicker implements
            // the .ui-front logic (#8989)
            return !!$(event.target).closest(".ui-datepicker").length;
        },

        _createOverlay: function() {
            if (!this.options.modal) {
                return;
            }

            var jqMinor = $.fn.jquery.substring(0, 4);

            // We use a delay in case the overlay is created from an
            // event that we're going to be cancelling (#2804)
            var isOpening = true;
            this._delay(function() {
                isOpening = false;
            });

            if (!this.document.data("ui-dialog-overlays")) {

                // Prevent use of anchors and inputs
                // This doesn't use `_on()` because it is a shared event handler
                // across all open modal dialogs.
                this.document.on("focusin.ui-dialog", function(event) {
                    if (isOpening) {
                        return;
                    }

                    var instance = this._trackingInstances()[0];
                    if (!instance._allowInteraction(event)) {
                        event.preventDefault();
                        instance._focusTabbable();

                        // Support: jQuery >=3.4 <3.6 only
                        // Focus re-triggering in jQuery 3.4/3.5 makes the original element
                        // have its focus event propagated last, breaking the re-targeting.
                        // Trigger focus in a delay in addition if needed to avoid the issue
                        // See https://github.com/jquery/jquery/issues/4382
                        if (jqMinor === "3.4." || jqMinor === "3.5.") {
                            instance._delay(instance._restoreTabbableFocus);
                        }
                    }
                }.bind(this));
            }

            this.overlay = $("<div>")
                .appendTo(this._appendTo());

            this._addClass(this.overlay, null, "ui-widget-overlay ui-front");
            this._on(this.overlay, {
                mousedown: "_keepFocus"
            });
            this.document.data("ui-dialog-overlays",
                (this.document.data("ui-dialog-overlays") || 0) + 1);
        },

        _destroyOverlay: function() {
            if (!this.options.modal) {
                return;
            }

            if (this.overlay) {
                var overlays = this.document.data("ui-dialog-overlays") - 1;

                if (!overlays) {
                    this.document.off("focusin.ui-dialog");
                    this.document.removeData("ui-dialog-overlays");
                } else {
                    this.document.data("ui-dialog-overlays", overlays);
                }

                this.overlay.remove();
                this.overlay = null;
            }
        }
    });

    // DEPRECATED
    // TODO: switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) {

        // Backcompat for dialogClass option
        $.widget("ui.dialog", $.ui.dialog, {
            options: {
                dialogClass: ""
            },
            _createWrapper: function() {
                this._super();
                this.uiDialog.addClass(this.options.dialogClass);
            },
            _setOption: function(key, value) {
                if (key === "dialogClass") {
                    this.uiDialog
                        .removeClass(this.options.dialogClass)
                        .addClass(value);
                }
                this._superApply(arguments);
            }
        });
    }

    return $.ui.dialog;

});





/*!
 * jQuery UI Droppable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Droppable
//>>group: Interactions
//>>description: Enables drop targets for draggable elements.
//>>docs: http://api.jqueryui.com/droppable/
//>>demos: http://jqueryui.com/droppable/

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./draggable",
            "./mouse",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.droppable", {
        version: "1.13.0",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            addClasses: true,
            greedy: false,
            scope: "default",
            tolerance: "intersect",

            // Callbacks
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function() {

            var proportions,
                o = this.options,
                accept = o.accept;

            this.isover = false;
            this.isout = true;

            this.accept = typeof accept === "function" ? accept : function(d) {
                return d.is(accept);
            };

            this.proportions = function( /* valueToWrite */ ) {
                if (arguments.length) {

                    // Store the droppable's proportions
                    proportions = arguments[0];
                } else {

                    // Retrieve or derive the droppable's proportions
                    return proportions ?
                        proportions :
                        proportions = {
                            width: this.element[0].offsetWidth,
                            height: this.element[0].offsetHeight
                        };
                }
            };

            this._addToManager(o.scope);

            if (o.addClasses) {
                this._addClass("ui-droppable");
            }

        },

        _addToManager: function(scope) {

            // Add the reference and positions to the manager
            $.ui.ddmanager.droppables[scope] = $.ui.ddmanager.droppables[scope] || [];
            $.ui.ddmanager.droppables[scope].push(this);
        },

        _splice: function(drop) {
            var i = 0;
            for (; i < drop.length; i++) {
                if (drop[i] === this) {
                    drop.splice(i, 1);
                }
            }
        },

        _destroy: function() {
            var drop = $.ui.ddmanager.droppables[this.options.scope];

            this._splice(drop);
        },

        _setOption: function(key, value) {

            if (key === "accept") {
                this.accept = typeof value === "function" ? value : function(d) {
                    return d.is(value);
                };
            } else if (key === "scope") {
                var drop = $.ui.ddmanager.droppables[this.options.scope];

                this._splice(drop);
                this._addToManager(value);
            }

            this._super(key, value);
        },

        _activate: function(event) {
            var draggable = $.ui.ddmanager.current;

            this._addActiveClass();
            if (draggable) {
                this._trigger("activate", event, this.ui(draggable));
            }
        },

        _deactivate: function(event) {
            var draggable = $.ui.ddmanager.current;

            this._removeActiveClass();
            if (draggable) {
                this._trigger("deactivate", event, this.ui(draggable));
            }
        },

        _over: function(event) {

            var draggable = $.ui.ddmanager.current;

            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem ||
                    draggable.element)[0] === this.element[0]) {
                return;
            }

            if (this.accept.call(this.element[0], (draggable.currentItem ||
                    draggable.element))) {
                this._addHoverClass();
                this._trigger("over", event, this.ui(draggable));
            }

        },

        _out: function(event) {

            var draggable = $.ui.ddmanager.current;

            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem ||
                    draggable.element)[0] === this.element[0]) {
                return;
            }

            if (this.accept.call(this.element[0], (draggable.currentItem ||
                    draggable.element))) {
                this._removeHoverClass();
                this._trigger("out", event, this.ui(draggable));
            }

        },

        _drop: function(event, custom) {

            var draggable = custom || $.ui.ddmanager.current,
                childrenIntersection = false;

            // Bail if draggable and droppable are same element
            if (!draggable || (draggable.currentItem ||
                    draggable.element)[0] === this.element[0]) {
                return false;
            }

            this.element
                .find(":data(ui-droppable)")
                .not(".ui-draggable-dragging")
                .each(function() {
                    var inst = $(this).droppable("instance");
                    if (
                        inst.options.greedy &&
                        !inst.options.disabled &&
                        inst.options.scope === draggable.options.scope &&
                        inst.accept.call(
                            inst.element[0], (draggable.currentItem || draggable.element)
                        ) &&
                        $.ui.intersect(
                            draggable,
                            $.extend(inst, {
                                offset: inst.element.offset()
                            }),
                            inst.options.tolerance, event
                        )
                    ) {
                        childrenIntersection = true;
                        return false;
                    }
                });
            if (childrenIntersection) {
                return false;
            }

            if (this.accept.call(this.element[0],
                    (draggable.currentItem || draggable.element))) {
                this._removeActiveClass();
                this._removeHoverClass();

                this._trigger("drop", event, this.ui(draggable));
                return this.element;
            }

            return false;

        },

        ui: function(c) {
            return {
                draggable: (c.currentItem || c.element),
                helper: c.helper,
                position: c.position,
                offset: c.positionAbs
            };
        },

        // Extension points just to make backcompat sane and avoid duplicating logic
        // TODO: Remove in 1.14 along with call to it below
        _addHoverClass: function() {
            this._addClass("ui-droppable-hover");
        },

        _removeHoverClass: function() {
            this._removeClass("ui-droppable-hover");
        },

        _addActiveClass: function() {
            this._addClass("ui-droppable-active");
        },

        _removeActiveClass: function() {
            this._removeClass("ui-droppable-active");
        }
    });

    $.ui.intersect = (function() {
        function isOverAxis(x, reference, size) {
            return (x >= reference) && (x < (reference + size));
        }

        return function(draggable, droppable, toleranceMode, event) {

            if (!droppable.offset) {
                return false;
            }

            var x1 = (draggable.positionAbs ||
                    draggable.position.absolute).left + draggable.margins.left,
                y1 = (draggable.positionAbs ||
                    draggable.position.absolute).top + draggable.margins.top,
                x2 = x1 + draggable.helperProportions.width,
                y2 = y1 + draggable.helperProportions.height,
                l = droppable.offset.left,
                t = droppable.offset.top,
                r = l + droppable.proportions().width,
                b = t + droppable.proportions().height;

            switch (toleranceMode) {
                case "fit":
                    return (l <= x1 && x2 <= r && t <= y1 && y2 <= b);
                case "intersect":
                    return (l < x1 + (draggable.helperProportions.width / 2) && // Right Half
                        x2 - (draggable.helperProportions.width / 2) < r && // Left Half
                        t < y1 + (draggable.helperProportions.height / 2) && // Bottom Half
                        y2 - (draggable.helperProportions.height / 2) < b); // Top Half
                case "pointer":
                    return isOverAxis(event.pageY, t, droppable.proportions().height) &&
                        isOverAxis(event.pageX, l, droppable.proportions().width);
                case "touch":
                    return (
                        (y1 >= t && y1 <= b) || // Top edge touching
                        (y2 >= t && y2 <= b) || // Bottom edge touching
                        (y1 < t && y2 > b) // Surrounded vertically
                    ) && (
                        (x1 >= l && x1 <= r) || // Left edge touching
                        (x2 >= l && x2 <= r) || // Right edge touching
                        (x1 < l && x2 > r) // Surrounded horizontally
                    );
                default:
                    return false;
            }
        };
    })();

    /*
    	This manager tracks offsets of draggables and droppables
    */
    $.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(t, event) {

            var i, j,
                m = $.ui.ddmanager.droppables[t.options.scope] || [],
                type = event ? event.type : null, // workaround for #2317
                list = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();

            droppablesLoop: for (i = 0; i < m.length; i++) {

                // No disabled and non-accepted
                if (m[i].options.disabled || (t && !m[i].accept.call(m[i].element[0],
                        (t.currentItem || t.element)))) {
                    continue;
                }

                // Filter out elements in the current dragged item
                for (j = 0; j < list.length; j++) {
                    if (list[j] === m[i].element[0]) {
                        m[i].proportions().height = 0;
                        continue droppablesLoop;
                    }
                }

                m[i].visible = m[i].element.css("display") !== "none";
                if (!m[i].visible) {
                    continue;
                }

                // Activate the droppable if used directly from draggables
                if (type === "mousedown") {
                    m[i]._activate.call(m[i], event);
                }

                m[i].offset = m[i].element.offset();
                m[i].proportions({
                    width: m[i].element[0].offsetWidth,
                    height: m[i].element[0].offsetHeight
                });

            }

        },
        drop: function(draggable, event) {

            var dropped = false;

            // Create a copy of the droppables in case the list changes during the drop (#9116)
            $.each(($.ui.ddmanager.droppables[draggable.options.scope] || []).slice(), function() {

                if (!this.options) {
                    return;
                }
                if (!this.options.disabled && this.visible &&
                    $.ui.intersect(draggable, this, this.options.tolerance, event)) {
                    dropped = this._drop.call(this, event) || dropped;
                }

                if (!this.options.disabled && this.visible && this.accept.call(this.element[0],
                        (draggable.currentItem || draggable.element))) {
                    this.isout = true;
                    this.isover = false;
                    this._deactivate.call(this, event);
                }

            });
            return dropped;

        },
        dragStart: function(draggable, event) {

            // Listen for scrolling so that if the dragging causes scrolling the position of the
            // droppables can be recalculated (see #5003)
            draggable.element.parentsUntil("body").on("scroll.droppable", function() {
                if (!draggable.options.refreshPositions) {
                    $.ui.ddmanager.prepareOffsets(draggable, event);
                }
            });
        },
        drag: function(draggable, event) {

            // If you have a highly dynamic page, you might try this option. It renders positions
            // every time you move the mouse.
            if (draggable.options.refreshPositions) {
                $.ui.ddmanager.prepareOffsets(draggable, event);
            }

            // Run through all droppables and check their positions based on specific tolerance options
            $.each($.ui.ddmanager.droppables[draggable.options.scope] || [], function() {

                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return;
                }

                var parentInstance, scope, parent,
                    intersects = $.ui.intersect(draggable, this, this.options.tolerance, event),
                    c = !intersects && this.isover ?
                    "isout" :
                    (intersects && !this.isover ? "isover" : null);
                if (!c) {
                    return;
                }

                if (this.options.greedy) {

                    // find droppable parents with same scope
                    scope = this.options.scope;
                    parent = this.element.parents(":data(ui-droppable)").filter(function() {
                        return $(this).droppable("instance").options.scope === scope;
                    });

                    if (parent.length) {
                        parentInstance = $(parent[0]).droppable("instance");
                        parentInstance.greedyChild = (c === "isover");
                    }
                }

                // We just moved into a greedy child
                if (parentInstance && c === "isover") {
                    parentInstance.isover = false;
                    parentInstance.isout = true;
                    parentInstance._out.call(parentInstance, event);
                }

                this[c] = true;
                this[c === "isout" ? "isover" : "isout"] = false;
                this[c === "isover" ? "_over" : "_out"].call(this, event);

                // We just moved out of a greedy child
                if (parentInstance && c === "isout") {
                    parentInstance.isout = false;
                    parentInstance.isover = true;
                    parentInstance._over.call(parentInstance, event);
                }
            });

        },
        dragStop: function(draggable, event) {
            draggable.element.parentsUntil("body").off("scroll.droppable");

            // Call prepareOffsets one final time since IE does not fire return scroll events when
            // overflow was caused by drag (see #5003)
            if (!draggable.options.refreshPositions) {
                $.ui.ddmanager.prepareOffsets(draggable, event);
            }
        }
    };

    // DEPRECATED
    // TODO: switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) {

        // Backcompat for activeClass and hoverClass options
        $.widget("ui.droppable", $.ui.droppable, {
            options: {
                hoverClass: false,
                activeClass: false
            },
            _addActiveClass: function() {
                this._super();
                if (this.options.activeClass) {
                    this.element.addClass(this.options.activeClass);
                }
            },
            _removeActiveClass: function() {
                this._super();
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass);
                }
            },
            _addHoverClass: function() {
                this._super();
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass);
                }
            },
            _removeHoverClass: function() {
                this._super();
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass);
                }
            }
        });
    }

    return $.ui.droppable;

});



/*!
 * jQuery UI Progressbar 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Progressbar
//>>group: Widgets
/* eslint-disable max-len */
//>>description: Displays a status indicator for loading state, standard percentage, and other progress indicators.
/* eslint-enable max-len */
//>>docs: http://api.jqueryui.com/progressbar/
//>>demos: http://jqueryui.com/progressbar/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/progressbar.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.progressbar", {
        version: "1.13.0",
        options: {
            classes: {
                "ui-progressbar": "ui-corner-all",
                "ui-progressbar-value": "ui-corner-left",
                "ui-progressbar-complete": "ui-corner-right"
            },
            max: 100,
            value: 0,

            change: null,
            complete: null
        },

        min: 0,

        _create: function() {

            // Constrain initial value
            this.oldValue = this.options.value = this._constrainedValue();

            this.element.attr({

                // Only set static values; aria-valuenow and aria-valuemax are
                // set inside _refreshValue()
                role: "progressbar",
                "aria-valuemin": this.min
            });
            this._addClass("ui-progressbar", "ui-widget ui-widget-content");

            this.valueDiv = $("<div>").appendTo(this.element);
            this._addClass(this.valueDiv, "ui-progressbar-value", "ui-widget-header");
            this._refreshValue();
        },

        _destroy: function() {
            this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow");

            this.valueDiv.remove();
        },

        value: function(newValue) {
            if (newValue === undefined) {
                return this.options.value;
            }

            this.options.value = this._constrainedValue(newValue);
            this._refreshValue();
        },

        _constrainedValue: function(newValue) {
            if (newValue === undefined) {
                newValue = this.options.value;
            }

            this.indeterminate = newValue === false;

            // Sanitize value
            if (typeof newValue !== "number") {
                newValue = 0;
            }

            return this.indeterminate ? false :
                Math.min(this.options.max, Math.max(this.min, newValue));
        },

        _setOptions: function(options) {

            // Ensure "value" option is set after other values (like max)
            var value = options.value;
            delete options.value;

            this._super(options);

            this.options.value = this._constrainedValue(value);
            this._refreshValue();
        },

        _setOption: function(key, value) {
            if (key === "max") {

                // Don't allow a max less than min
                value = Math.max(this.min, value);
            }
            this._super(key, value);
        },

        _setOptionDisabled: function(value) {
            this._super(value);

            this.element.attr("aria-disabled", value);
            this._toggleClass(null, "ui-state-disabled", !!value);
        },

        _percentage: function() {
            return this.indeterminate ?
                100 :
                100 * (this.options.value - this.min) / (this.options.max - this.min);
        },

        _refreshValue: function() {
            var value = this.options.value,
                percentage = this._percentage();

            this.valueDiv
                .toggle(this.indeterminate || value > this.min)
                .width(percentage.toFixed(0) + "%");

            this
                ._toggleClass(this.valueDiv, "ui-progressbar-complete", null,
                    value === this.options.max)
                ._toggleClass("ui-progressbar-indeterminate", null, this.indeterminate);

            if (this.indeterminate) {
                this.element.removeAttr("aria-valuenow");
                if (!this.overlayDiv) {
                    this.overlayDiv = $("<div>").appendTo(this.valueDiv);
                    this._addClass(this.overlayDiv, "ui-progressbar-overlay");
                }
            } else {
                this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": value
                });
                if (this.overlayDiv) {
                    this.overlayDiv.remove();
                    this.overlayDiv = null;
                }
            }

            if (this.oldValue !== value) {
                this.oldValue = value;
                this._trigger("change");
            }
            if (value === this.options.max) {
                this._trigger("complete");
            }
        }
    });

});




/*!
 * jQuery UI Selectable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Selectable
//>>group: Interactions
//>>description: Allows groups of elements to be selected with the mouse.
//>>docs: http://api.jqueryui.com/selectable/
//>>demos: http://jqueryui.com/selectable/
//>>css.structure: ../../themes/base/selectable.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./mouse",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.selectable", $.ui.mouse, {
        version: "1.13.0",
        options: {
            appendTo: "body",
            autoRefresh: true,
            distance: 0,
            filter: "*",
            tolerance: "touch",

            // Callbacks
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function() {
            var that = this;

            this._addClass("ui-selectable");

            this.dragged = false;

            // Cache selectee children based on filter
            this.refresh = function() {
                that.elementPos = $(that.element[0]).offset();
                that.selectees = $(that.options.filter, that.element[0]);
                that._addClass(that.selectees, "ui-selectee");
                that.selectees.each(function() {
                    var $this = $(this),
                        selecteeOffset = $this.offset(),
                        pos = {
                            left: selecteeOffset.left - that.elementPos.left,
                            top: selecteeOffset.top - that.elementPos.top
                        };
                    $.data(this, "selectable-item", {
                        element: this,
                        $element: $this,
                        left: pos.left,
                        top: pos.top,
                        right: pos.left + $this.outerWidth(),
                        bottom: pos.top + $this.outerHeight(),
                        startselected: false,
                        selected: $this.hasClass("ui-selected"),
                        selecting: $this.hasClass("ui-selecting"),
                        unselecting: $this.hasClass("ui-unselecting")
                    });
                });
            };
            this.refresh();

            this._mouseInit();

            this.helper = $("<div>");
            this._addClass(this.helper, "ui-selectable-helper");
        },

        _destroy: function() {
            this.selectees.removeData("selectable-item");
            this._mouseDestroy();
        },

        _mouseStart: function(event) {
            var that = this,
                options = this.options;

            this.opos = [event.pageX, event.pageY];
            this.elementPos = $(this.element[0]).offset();

            if (this.options.disabled) {
                return;
            }

            this.selectees = $(options.filter, this.element[0]);

            this._trigger("start", event);

            $(options.appendTo).append(this.helper);

            // position helper (lasso)
            this.helper.css({
                "left": event.pageX,
                "top": event.pageY,
                "width": 0,
                "height": 0
            });

            if (options.autoRefresh) {
                this.refresh();
            }

            this.selectees.filter(".ui-selected").each(function() {
                var selectee = $.data(this, "selectable-item");
                selectee.startselected = true;
                if (!event.metaKey && !event.ctrlKey) {
                    that._removeClass(selectee.$element, "ui-selected");
                    selectee.selected = false;
                    that._addClass(selectee.$element, "ui-unselecting");
                    selectee.unselecting = true;

                    // selectable UNSELECTING callback
                    that._trigger("unselecting", event, {
                        unselecting: selectee.element
                    });
                }
            });

            $(event.target).parents().addBack().each(function() {
                var doSelect,
                    selectee = $.data(this, "selectable-item");
                if (selectee) {
                    doSelect = (!event.metaKey && !event.ctrlKey) ||
                        !selectee.$element.hasClass("ui-selected");
                    that._removeClass(selectee.$element, doSelect ? "ui-unselecting" : "ui-selected")
                        ._addClass(selectee.$element, doSelect ? "ui-selecting" : "ui-unselecting");
                    selectee.unselecting = !doSelect;
                    selectee.selecting = doSelect;
                    selectee.selected = doSelect;

                    // selectable (UN)SELECTING callback
                    if (doSelect) {
                        that._trigger("selecting", event, {
                            selecting: selectee.element
                        });
                    } else {
                        that._trigger("unselecting", event, {
                            unselecting: selectee.element
                        });
                    }
                    return false;
                }
            });

        },

        _mouseDrag: function(event) {

            this.dragged = true;

            if (this.options.disabled) {
                return;
            }

            var tmp,
                that = this,
                options = this.options,
                x1 = this.opos[0],
                y1 = this.opos[1],
                x2 = event.pageX,
                y2 = event.pageY;

            if (x1 > x2) {
                tmp = x2;
                x2 = x1;
                x1 = tmp;
            }
            if (y1 > y2) {
                tmp = y2;
                y2 = y1;
                y1 = tmp;
            }
            this.helper.css({
                left: x1,
                top: y1,
                width: x2 - x1,
                height: y2 - y1
            });

            this.selectees.each(function() {
                var selectee = $.data(this, "selectable-item"),
                    hit = false,
                    offset = {};

                //prevent helper from being selected if appendTo: selectable
                if (!selectee || selectee.element === that.element[0]) {
                    return;
                }

                offset.left = selectee.left + that.elementPos.left;
                offset.right = selectee.right + that.elementPos.left;
                offset.top = selectee.top + that.elementPos.top;
                offset.bottom = selectee.bottom + that.elementPos.top;

                if (options.tolerance === "touch") {
                    hit = (!(offset.left > x2 || offset.right < x1 || offset.top > y2 ||
                        offset.bottom < y1));
                } else if (options.tolerance === "fit") {
                    hit = (offset.left > x1 && offset.right < x2 && offset.top > y1 &&
                        offset.bottom < y2);
                }

                if (hit) {

                    // SELECT
                    if (selectee.selected) {
                        that._removeClass(selectee.$element, "ui-selected");
                        selectee.selected = false;
                    }
                    if (selectee.unselecting) {
                        that._removeClass(selectee.$element, "ui-unselecting");
                        selectee.unselecting = false;
                    }
                    if (!selectee.selecting) {
                        that._addClass(selectee.$element, "ui-selecting");
                        selectee.selecting = true;

                        // selectable SELECTING callback
                        that._trigger("selecting", event, {
                            selecting: selectee.element
                        });
                    }
                } else {

                    // UNSELECT
                    if (selectee.selecting) {
                        if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
                            that._removeClass(selectee.$element, "ui-selecting");
                            selectee.selecting = false;
                            that._addClass(selectee.$element, "ui-selected");
                            selectee.selected = true;
                        } else {
                            that._removeClass(selectee.$element, "ui-selecting");
                            selectee.selecting = false;
                            if (selectee.startselected) {
                                that._addClass(selectee.$element, "ui-unselecting");
                                selectee.unselecting = true;
                            }

                            // selectable UNSELECTING callback
                            that._trigger("unselecting", event, {
                                unselecting: selectee.element
                            });
                        }
                    }
                    if (selectee.selected) {
                        if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
                            that._removeClass(selectee.$element, "ui-selected");
                            selectee.selected = false;

                            that._addClass(selectee.$element, "ui-unselecting");
                            selectee.unselecting = true;

                            // selectable UNSELECTING callback
                            that._trigger("unselecting", event, {
                                unselecting: selectee.element
                            });
                        }
                    }
                }
            });

            return false;
        },

        _mouseStop: function(event) {
            var that = this;

            this.dragged = false;

            $(".ui-unselecting", this.element[0]).each(function() {
                var selectee = $.data(this, "selectable-item");
                that._removeClass(selectee.$element, "ui-unselecting");
                selectee.unselecting = false;
                selectee.startselected = false;
                that._trigger("unselected", event, {
                    unselected: selectee.element
                });
            });
            $(".ui-selecting", this.element[0]).each(function() {
                var selectee = $.data(this, "selectable-item");
                that._removeClass(selectee.$element, "ui-selecting")
                    ._addClass(selectee.$element, "ui-selected");
                selectee.selecting = false;
                selectee.selected = true;
                selectee.startselected = true;
                that._trigger("selected", event, {
                    selected: selectee.element
                });
            });
            this._trigger("stop", event);

            this.helper.remove();

            return false;
        }

    });

});









/*!
 * jQuery UI Selectmenu 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Selectmenu
//>>group: Widgets
/* eslint-disable max-len */
//>>description: Duplicates and extends the functionality of a native HTML select element, allowing it to be customizable in behavior and appearance far beyond the limitations of a native select.
/* eslint-enable max-len */
//>>docs: http://api.jqueryui.com/selectmenu/
//>>demos: http://jqueryui.com/selectmenu/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/selectmenu.css, ../../themes/base/button.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./menu",
            "../form-reset-mixin",
            "../keycode",
            "../labels",
            "../position",
            "../unique-id",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.selectmenu", [$.ui.formResetMixin, {
        version: "1.13.0",
        defaultElement: "<select>",
        options: {
            appendTo: null,
            classes: {
                "ui-selectmenu-button-open": "ui-corner-top",
                "ui-selectmenu-button-closed": "ui-corner-all"
            },
            disabled: null,
            icons: {
                button: "ui-icon-triangle-1-s"
            },
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            width: false,

            // Callbacks
            change: null,
            close: null,
            focus: null,
            open: null,
            select: null
        },

        _create: function() {
            var selectmenuId = this.element.uniqueId().attr("id");
            this.ids = {
                element: selectmenuId,
                button: selectmenuId + "-button",
                menu: selectmenuId + "-menu"
            };

            this._drawButton();
            this._drawMenu();
            this._bindFormResetHandler();

            this._rendered = false;
            this.menuItems = $();
        },

        _drawButton: function() {
            var icon,
                that = this,
                item = this._parseOption(
                    this.element.find("option:selected"),
                    this.element[0].selectedIndex
                );

            // Associate existing label with the new button
            this.labels = this.element.labels().attr("for", this.ids.button);
            this._on(this.labels, {
                click: function(event) {
                    this.button.trigger("focus");
                    event.preventDefault();
                }
            });

            // Hide original select element
            this.element.hide();

            // Create button
            this.button = $("<span>", {
                    tabindex: this.options.disabled ? -1 : 0,
                    id: this.ids.button,
                    role: "combobox",
                    "aria-expanded": "false",
                    "aria-autocomplete": "list",
                    "aria-owns": this.ids.menu,
                    "aria-haspopup": "true",
                    title: this.element.attr("title")
                })
                .insertAfter(this.element);

            this._addClass(this.button, "ui-selectmenu-button ui-selectmenu-button-closed",
                "ui-button ui-widget");

            icon = $("<span>").appendTo(this.button);
            this._addClass(icon, "ui-selectmenu-icon", "ui-icon " + this.options.icons.button);
            this.buttonItem = this._renderButtonItem(item)
                .appendTo(this.button);

            if (this.options.width !== false) {
                this._resizeButton();
            }

            this._on(this.button, this._buttonEvents);
            this.button.one("focusin", function() {

                // Delay rendering the menu items until the button receives focus.
                // The menu may have already been rendered via a programmatic open.
                if (!that._rendered) {
                    that._refreshMenu();
                }
            });
        },

        _drawMenu: function() {
            var that = this;

            // Create menu
            this.menu = $("<ul>", {
                "aria-hidden": "true",
                "aria-labelledby": this.ids.button,
                id: this.ids.menu
            });

            // Wrap menu
            this.menuWrap = $("<div>").append(this.menu);
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front");
            this.menuWrap.appendTo(this._appendTo());

            // Initialize menu widget
            this.menuInstance = this.menu
                .menu({
                    classes: {
                        "ui-menu": "ui-corner-bottom"
                    },
                    role: "listbox",
                    select: function(event, ui) {
                        event.preventDefault();

                        // Support: IE8
                        // If the item was selected via a click, the text selection
                        // will be destroyed in IE
                        that._setSelection();

                        that._select(ui.item.data("ui-selectmenu-item"), event);
                    },
                    focus: function(event, ui) {
                        var item = ui.item.data("ui-selectmenu-item");

                        // Prevent inital focus from firing and check if its a newly focused item
                        if (that.focusIndex != null && item.index !== that.focusIndex) {
                            that._trigger("focus", event, {
                                item: item
                            });
                            if (!that.isOpen) {
                                that._select(item, event);
                            }
                        }
                        that.focusIndex = item.index;

                        that.button.attr("aria-activedescendant",
                            that.menuItems.eq(item.index).attr("id"));
                    }
                })
                .menu("instance");

            // Don't close the menu on mouseleave
            this.menuInstance._off(this.menu, "mouseleave");

            // Cancel the menu's collapseAll on document click
            this.menuInstance._closeOnDocumentClick = function() {
                return false;
            };

            // Selects often contain empty items, but never contain dividers
            this.menuInstance._isDivider = function() {
                return false;
            };
        },

        refresh: function() {
            this._refreshMenu();
            this.buttonItem.replaceWith(
                this.buttonItem = this._renderButtonItem(

                    // Fall back to an empty object in case there are no options
                    this._getSelectedItem().data("ui-selectmenu-item") || {}
                )
            );
            if (this.options.width === null) {
                this._resizeButton();
            }
        },

        _refreshMenu: function() {
            var item,
                options = this.element.find("option");

            this.menu.empty();

            this._parseOptions(options);
            this._renderMenu(this.menu, this.items);

            this.menuInstance.refresh();
            this.menuItems = this.menu.find("li")
                .not(".ui-selectmenu-optgroup")
                .find(".ui-menu-item-wrapper");

            this._rendered = true;

            if (!options.length) {
                return;
            }

            item = this._getSelectedItem();

            // Update the menu to have the correct item focused
            this.menuInstance.focus(null, item);
            this._setAria(item.data("ui-selectmenu-item"));

            // Set disabled state
            this._setOption("disabled", this.element.prop("disabled"));
        },

        open: function(event) {
            if (this.options.disabled) {
                return;
            }

            // If this is the first time the menu is being opened, render the items
            if (!this._rendered) {
                this._refreshMenu();
            } else {

                // Menu clears focus on close, reset focus to selected item
                this._removeClass(this.menu.find(".ui-state-active"), null, "ui-state-active");
                this.menuInstance.focus(null, this._getSelectedItem());
            }

            // If there are no options, don't open the menu
            if (!this.menuItems.length) {
                return;
            }

            this.isOpen = true;
            this._toggleAttr();
            this._resizeMenu();
            this._position();

            this._on(this.document, this._documentClick);

            this._trigger("open", event);
        },

        _position: function() {
            this.menuWrap.position($.extend({ of: this.button
            }, this.options.position));
        },

        close: function(event) {
            if (!this.isOpen) {
                return;
            }

            this.isOpen = false;
            this._toggleAttr();

            this.range = null;
            this._off(this.document);

            this._trigger("close", event);
        },

        widget: function() {
            return this.button;
        },

        menuWidget: function() {
            return this.menu;
        },

        _renderButtonItem: function(item) {
            var buttonItem = $("<span>");

            this._setText(buttonItem, item.label);
            this._addClass(buttonItem, "ui-selectmenu-text");

            return buttonItem;
        },

        _renderMenu: function(ul, items) {
            var that = this,
                currentOptgroup = "";

            $.each(items, function(index, item) {
                var li;

                if (item.optgroup !== currentOptgroup) {
                    li = $("<li>", {
                        text: item.optgroup
                    });
                    that._addClass(li, "ui-selectmenu-optgroup", "ui-menu-divider" +
                        (item.element.parent("optgroup").prop("disabled") ?
                            " ui-state-disabled" :
                            ""));

                    li.appendTo(ul);

                    currentOptgroup = item.optgroup;
                }

                that._renderItemData(ul, item);
            });
        },

        _renderItemData: function(ul, item) {
            return this._renderItem(ul, item).data("ui-selectmenu-item", item);
        },

        _renderItem: function(ul, item) {
            var li = $("<li>"),
                wrapper = $("<div>", {
                    title: item.element.attr("title")
                });

            if (item.disabled) {
                this._addClass(li, null, "ui-state-disabled");
            }
            this._setText(wrapper, item.label);

            return li.append(wrapper).appendTo(ul);
        },

        _setText: function(element, value) {
            if (value) {
                element.text(value);
            } else {
                element.html("&#160;");
            }
        },

        _move: function(direction, event) {
            var item, next,
                filter = ".ui-menu-item";

            if (this.isOpen) {
                item = this.menuItems.eq(this.focusIndex).parent("li");
            } else {
                item = this.menuItems.eq(this.element[0].selectedIndex).parent("li");
                filter += ":not(.ui-state-disabled)";
            }

            if (direction === "first" || direction === "last") {
                next = item[direction === "first" ? "prevAll" : "nextAll"](filter).eq(-1);
            } else {
                next = item[direction + "All"](filter).eq(0);
            }

            if (next.length) {
                this.menuInstance.focus(event, next);
            }
        },

        _getSelectedItem: function() {
            return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        },

        _toggle: function(event) {
            this[this.isOpen ? "close" : "open"](event);
        },

        _setSelection: function() {
            var selection;

            if (!this.range) {
                return;
            }

            if (window.getSelection) {
                selection = window.getSelection();
                selection.removeAllRanges();
                selection.addRange(this.range);

                // Support: IE8
            } else {
                this.range.select();
            }

            // Support: IE
            // Setting the text selection kills the button focus in IE, but
            // restoring the focus doesn't kill the selection.
            this.button.focus();
        },

        _documentClick: {
            mousedown: function(event) {
                if (!this.isOpen) {
                    return;
                }

                if (!$(event.target).closest(".ui-selectmenu-menu, #" +
                        $.escapeSelector(this.ids.button)).length) {
                    this.close(event);
                }
            }
        },

        _buttonEvents: {

            // Prevent text selection from being reset when interacting with the selectmenu (#10144)
            mousedown: function() {
                var selection;

                if (window.getSelection) {
                    selection = window.getSelection();
                    if (selection.rangeCount) {
                        this.range = selection.getRangeAt(0);
                    }

                    // Support: IE8
                } else {
                    this.range = document.selection.createRange();
                }
            },

            click: function(event) {
                this._setSelection();
                this._toggle(event);
            },

            keydown: function(event) {
                var preventDefault = true;
                switch (event.keyCode) {
                    case $.ui.keyCode.TAB:
                    case $.ui.keyCode.ESCAPE:
                        this.close(event);
                        preventDefault = false;
                        break;
                    case $.ui.keyCode.ENTER:
                        if (this.isOpen) {
                            this._selectFocusedItem(event);
                        }
                        break;
                    case $.ui.keyCode.UP:
                        if (event.altKey) {
                            this._toggle(event);
                        } else {
                            this._move("prev", event);
                        }
                        break;
                    case $.ui.keyCode.DOWN:
                        if (event.altKey) {
                            this._toggle(event);
                        } else {
                            this._move("next", event);
                        }
                        break;
                    case $.ui.keyCode.SPACE:
                        if (this.isOpen) {
                            this._selectFocusedItem(event);
                        } else {
                            this._toggle(event);
                        }
                        break;
                    case $.ui.keyCode.LEFT:
                        this._move("prev", event);
                        break;
                    case $.ui.keyCode.RIGHT:
                        this._move("next", event);
                        break;
                    case $.ui.keyCode.HOME:
                    case $.ui.keyCode.PAGE_UP:
                        this._move("first", event);
                        break;
                    case $.ui.keyCode.END:
                    case $.ui.keyCode.PAGE_DOWN:
                        this._move("last", event);
                        break;
                    default:
                        this.menu.trigger(event);
                        preventDefault = false;
                }

                if (preventDefault) {
                    event.preventDefault();
                }
            }
        },

        _selectFocusedItem: function(event) {
            var item = this.menuItems.eq(this.focusIndex).parent("li");
            if (!item.hasClass("ui-state-disabled")) {
                this._select(item.data("ui-selectmenu-item"), event);
            }
        },

        _select: function(item, event) {
            var oldIndex = this.element[0].selectedIndex;

            // Change native select element
            this.element[0].selectedIndex = item.index;
            this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(item));
            this._setAria(item);
            this._trigger("select", event, {
                item: item
            });

            if (item.index !== oldIndex) {
                this._trigger("change", event, {
                    item: item
                });
            }

            this.close(event);
        },

        _setAria: function(item) {
            var id = this.menuItems.eq(item.index).attr("id");

            this.button.attr({
                "aria-labelledby": id,
                "aria-activedescendant": id
            });
            this.menu.attr("aria-activedescendant", id);
        },

        _setOption: function(key, value) {
            if (key === "icons") {
                var icon = this.button.find("span.ui-icon");
                this._removeClass(icon, null, this.options.icons.button)
                    ._addClass(icon, null, value.button);
            }

            this._super(key, value);

            if (key === "appendTo") {
                this.menuWrap.appendTo(this._appendTo());
            }

            if (key === "width") {
                this._resizeButton();
            }
        },

        _setOptionDisabled: function(value) {
            this._super(value);

            this.menuInstance.option("disabled", value);
            this.button.attr("aria-disabled", value);
            this._toggleClass(this.button, null, "ui-state-disabled", value);

            this.element.prop("disabled", value);
            if (value) {
                this.button.attr("tabindex", -1);
                this.close();
            } else {
                this.button.attr("tabindex", 0);
            }
        },

        _appendTo: function() {
            var element = this.options.appendTo;

            if (element) {
                element = element.jquery || element.nodeType ?
                    $(element) :
                    this.document.find(element).eq(0);
            }

            if (!element || !element[0]) {
                element = this.element.closest(".ui-front, dialog");
            }

            if (!element.length) {
                element = this.document[0].body;
            }

            return element;
        },

        _toggleAttr: function() {
            this.button.attr("aria-expanded", this.isOpen);

            // We can't use two _toggleClass() calls here, because we need to make sure
            // we always remove classes first and add them second, otherwise if both classes have the
            // same theme class, it will be removed after we add it.
            this._removeClass(this.button, "ui-selectmenu-button-" +
                    (this.isOpen ? "closed" : "open"))
                ._addClass(this.button, "ui-selectmenu-button-" +
                    (this.isOpen ? "open" : "closed"))
                ._toggleClass(this.menuWrap, "ui-selectmenu-open", null, this.isOpen);

            this.menu.attr("aria-hidden", !this.isOpen);
        },

        _resizeButton: function() {
            var width = this.options.width;

            // For `width: false`, just remove inline style and stop
            if (width === false) {
                this.button.css("width", "");
                return;
            }

            // For `width: null`, match the width of the original element
            if (width === null) {
                width = this.element.show().outerWidth();
                this.element.hide();
            }

            this.button.outerWidth(width);
        },

        _resizeMenu: function() {
            this.menu.outerWidth(Math.max(
                this.button.outerWidth(),

                // Support: IE10
                // IE10 wraps long text (possibly a rounding bug)
                // so we add 1px to avoid the wrapping
                this.menu.width("").outerWidth() + 1
            ));
        },

        _getCreateOptions: function() {
            var options = this._super();

            options.disabled = this.element.prop("disabled");

            return options;
        },

        _parseOptions: function(options) {
            var that = this,
                data = [];
            options.each(function(index, item) {
                if (item.hidden) {
                    return;
                }

                data.push(that._parseOption($(item), index));
            });
            this.items = data;
        },

        _parseOption: function(option, index) {
            var optgroup = option.parent("optgroup");

            return {
                element: option,
                index: index,
                value: option.val(),
                label: option.text(),
                optgroup: optgroup.attr("label") || "",
                disabled: optgroup.prop("disabled") || option.prop("disabled")
            };
        },

        _destroy: function() {
            this._unbindFormResetHandler();
            this.menuWrap.remove();
            this.button.remove();
            this.element.show();
            this.element.removeUniqueId();
            this.labels.attr("for", this.ids.element);
        }
    }]);

});





/*!
 * jQuery UI Slider 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Slider
//>>group: Widgets
//>>description: Displays a flexible slider with ranges and accessibility via keyboard.
//>>docs: http://api.jqueryui.com/slider/
//>>demos: http://jqueryui.com/slider/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/slider.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./mouse",
            "../keycode",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.slider", $.ui.mouse, {
        version: "1.13.0",
        widgetEventPrefix: "slide",

        options: {
            animate: false,
            classes: {
                "ui-slider": "ui-corner-all",
                "ui-slider-handle": "ui-corner-all",

                // Note: ui-widget-header isn't the most fittingly semantic framework class for this
                // element, but worked best visually with a variety of themes
                "ui-slider-range": "ui-corner-all ui-widget-header"
            },
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null,

            // Callbacks
            change: null,
            slide: null,
            start: null,
            stop: null
        },

        // Number of pages in a slider
        // (how many times can you page up/down to go through the whole range)
        numPages: 5,

        _create: function() {
            this._keySliding = false;
            this._mouseSliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this._calculateNewMax();

            this._addClass("ui-slider ui-slider-" + this.orientation,
                "ui-widget ui-widget-content");

            this._refresh();

            this._animateOff = false;
        },

        _refresh: function() {
            this._createRange();
            this._createHandles();
            this._setupEvents();
            this._refreshValue();
        },

        _createHandles: function() {
            var i, handleCount,
                options = this.options,
                existingHandles = this.element.find(".ui-slider-handle"),
                handle = "<span tabindex='0'></span>",
                handles = [];

            handleCount = (options.values && options.values.length) || 1;

            if (existingHandles.length > handleCount) {
                existingHandles.slice(handleCount).remove();
                existingHandles = existingHandles.slice(0, handleCount);
            }

            for (i = existingHandles.length; i < handleCount; i++) {
                handles.push(handle);
            }

            this.handles = existingHandles.add($(handles.join("")).appendTo(this.element));

            this._addClass(this.handles, "ui-slider-handle", "ui-state-default");

            this.handle = this.handles.eq(0);

            this.handles.each(function(i) {
                $(this)
                    .data("ui-slider-handle-index", i)
                    .attr("tabIndex", 0);
            });
        },

        _createRange: function() {
            var options = this.options;

            if (options.range) {
                if (options.range === true) {
                    if (!options.values) {
                        options.values = [this._valueMin(), this._valueMin()];
                    } else if (options.values.length && options.values.length !== 2) {
                        options.values = [options.values[0], options.values[0]];
                    } else if (Array.isArray(options.values)) {
                        options.values = options.values.slice(0);
                    }
                }

                if (!this.range || !this.range.length) {
                    this.range = $("<div>")
                        .appendTo(this.element);

                    this._addClass(this.range, "ui-slider-range");
                } else {
                    this._removeClass(this.range, "ui-slider-range-min ui-slider-range-max");

                    // Handle range switching from true to min/max
                    this.range.css({
                        "left": "",
                        "bottom": ""
                    });
                }
                if (options.range === "min" || options.range === "max") {
                    this._addClass(this.range, "ui-slider-range-" + options.range);
                }
            } else {
                if (this.range) {
                    this.range.remove();
                }
                this.range = null;
            }
        },

        _setupEvents: function() {
            this._off(this.handles);
            this._on(this.handles, this._handleEvents);
            this._hoverable(this.handles);
            this._focusable(this.handles);
        },

        _destroy: function() {
            this.handles.remove();
            if (this.range) {
                this.range.remove();
            }

            this._mouseDestroy();
        },

        _mouseCapture: function(event) {
            var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
                that = this,
                o = this.options;

            if (o.disabled) {
                return false;
            }

            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();

            position = {
                x: event.pageX,
                y: event.pageY
            };
            normValue = this._normValueFromMouse(position);
            distance = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function(i) {
                var thisDistance = Math.abs(normValue - that.values(i));
                if ((distance > thisDistance) ||
                    (distance === thisDistance &&
                        (i === that._lastChangedValue || that.values(i) === o.min))) {
                    distance = thisDistance;
                    closestHandle = $(this);
                    index = i;
                }
            });

            allowed = this._start(event, index);
            if (allowed === false) {
                return false;
            }
            this._mouseSliding = true;

            this._handleIndex = index;

            this._addClass(closestHandle, null, "ui-state-active");
            closestHandle.trigger("focus");

            offset = closestHandle.offset();
            mouseOverHandle = !$(event.target).parents().addBack().is(".ui-slider-handle");
            this._clickOffset = mouseOverHandle ? {
                left: 0,
                top: 0
            } : {
                left: event.pageX - offset.left - (closestHandle.width() / 2),
                top: event.pageY - offset.top -
                    (closestHandle.height() / 2) -
                    (parseInt(closestHandle.css("borderTopWidth"), 10) || 0) -
                    (parseInt(closestHandle.css("borderBottomWidth"), 10) || 0) +
                    (parseInt(closestHandle.css("marginTop"), 10) || 0)
            };

            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(event, index, normValue);
            }
            this._animateOff = true;
            return true;
        },

        _mouseStart: function() {
            return true;
        },

        _mouseDrag: function(event) {
            var position = {
                    x: event.pageX,
                    y: event.pageY
                },
                normValue = this._normValueFromMouse(position);

            this._slide(event, this._handleIndex, normValue);

            return false;
        },

        _mouseStop: function(event) {
            this._removeClass(this.handles, null, "ui-state-active");
            this._mouseSliding = false;

            this._stop(event, this._handleIndex);
            this._change(event, this._handleIndex);

            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = false;

            return false;
        },

        _detectOrientation: function() {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal";
        },

        _normValueFromMouse: function(position) {
            var pixelTotal,
                pixelMouse,
                percentMouse,
                valueTotal,
                valueMouse;

            if (this.orientation === "horizontal") {
                pixelTotal = this.elementSize.width;
                pixelMouse = position.x - this.elementOffset.left -
                    (this._clickOffset ? this._clickOffset.left : 0);
            } else {
                pixelTotal = this.elementSize.height;
                pixelMouse = position.y - this.elementOffset.top -
                    (this._clickOffset ? this._clickOffset.top : 0);
            }

            percentMouse = (pixelMouse / pixelTotal);
            if (percentMouse > 1) {
                percentMouse = 1;
            }
            if (percentMouse < 0) {
                percentMouse = 0;
            }
            if (this.orientation === "vertical") {
                percentMouse = 1 - percentMouse;
            }

            valueTotal = this._valueMax() - this._valueMin();
            valueMouse = this._valueMin() + percentMouse * valueTotal;

            return this._trimAlignValue(valueMouse);
        },

        _uiHash: function(index, value, values) {
            var uiHash = {
                handle: this.handles[index],
                handleIndex: index,
                value: value !== undefined ? value : this.value()
            };

            if (this._hasMultipleValues()) {
                uiHash.value = value !== undefined ? value : this.values(index);
                uiHash.values = values || this.values();
            }

            return uiHash;
        },

        _hasMultipleValues: function() {
            return this.options.values && this.options.values.length;
        },

        _start: function(event, index) {
            return this._trigger("start", event, this._uiHash(index));
        },

        _slide: function(event, index, newVal) {
            var allowed, otherVal,
                currentValue = this.value(),
                newValues = this.values();

            if (this._hasMultipleValues()) {
                otherVal = this.values(index ? 0 : 1);
                currentValue = this.values(index);

                if (this.options.values.length === 2 && this.options.range === true) {
                    newVal = index === 0 ? Math.min(otherVal, newVal) : Math.max(otherVal, newVal);
                }

                newValues[index] = newVal;
            }

            if (newVal === currentValue) {
                return;
            }

            allowed = this._trigger("slide", event, this._uiHash(index, newVal, newValues));

            // A slide can be canceled by returning false from the slide callback
            if (allowed === false) {
                return;
            }

            if (this._hasMultipleValues()) {
                this.values(index, newVal);
            } else {
                this.value(newVal);
            }
        },

        _stop: function(event, index) {
            this._trigger("stop", event, this._uiHash(index));
        },

        _change: function(event, index) {
            if (!this._keySliding && !this._mouseSliding) {

                //store the last changed value index for reference when handles overlap
                this._lastChangedValue = index;
                this._trigger("change", event, this._uiHash(index));
            }
        },

        value: function(newValue) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(newValue);
                this._refreshValue();
                this._change(null, 0);
                return;
            }

            return this._value();
        },

        values: function(index, newValue) {
            var vals,
                newValues,
                i;

            if (arguments.length > 1) {
                this.options.values[index] = this._trimAlignValue(newValue);
                this._refreshValue();
                this._change(null, index);
                return;
            }

            if (arguments.length) {
                if (Array.isArray(arguments[0])) {
                    vals = this.options.values;
                    newValues = arguments[0];
                    for (i = 0; i < vals.length; i += 1) {
                        vals[i] = this._trimAlignValue(newValues[i]);
                        this._change(null, i);
                    }
                    this._refreshValue();
                } else {
                    if (this._hasMultipleValues()) {
                        return this._values(index);
                    } else {
                        return this.value();
                    }
                }
            } else {
                return this._values();
            }
        },

        _setOption: function(key, value) {
            var i,
                valsLength = 0;

            if (key === "range" && this.options.range === true) {
                if (value === "min") {
                    this.options.value = this._values(0);
                    this.options.values = null;
                } else if (value === "max") {
                    this.options.value = this._values(this.options.values.length - 1);
                    this.options.values = null;
                }
            }

            if (Array.isArray(this.options.values)) {
                valsLength = this.options.values.length;
            }

            this._super(key, value);

            switch (key) {
                case "orientation":
                    this._detectOrientation();
                    this._removeClass("ui-slider-horizontal ui-slider-vertical")
                        ._addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    if (this.options.range) {
                        this._refreshRange(value);
                    }

                    // Reset positioning from previous orientation
                    this.handles.css(value === "horizontal" ? "bottom" : "left", "");
                    break;
                case "value":
                    this._animateOff = true;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = false;
                    break;
                case "values":
                    this._animateOff = true;
                    this._refreshValue();

                    // Start from the last handle to prevent unreachable handles (#9046)
                    for (i = valsLength - 1; i >= 0; i--) {
                        this._change(null, i);
                    }
                    this._animateOff = false;
                    break;
                case "step":
                case "min":
                case "max":
                    this._animateOff = true;
                    this._calculateNewMax();
                    this._refreshValue();
                    this._animateOff = false;
                    break;
                case "range":
                    this._animateOff = true;
                    this._refresh();
                    this._animateOff = false;
                    break;
            }
        },

        _setOptionDisabled: function(value) {
            this._super(value);

            this._toggleClass(null, "ui-state-disabled", !!value);
        },

        //internal value getter
        // _value() returns value trimmed by min and max, aligned by step
        _value: function() {
            var val = this.options.value;
            val = this._trimAlignValue(val);

            return val;
        },

        //internal values getter
        // _values() returns array of values trimmed by min and max, aligned by step
        // _values( index ) returns single value trimmed by min and max, aligned by step
        _values: function(index) {
            var val,
                vals,
                i;

            if (arguments.length) {
                val = this.options.values[index];
                val = this._trimAlignValue(val);

                return val;
            } else if (this._hasMultipleValues()) {

                // .slice() creates a copy of the array
                // this copy gets trimmed by min and max and then returned
                vals = this.options.values.slice();
                for (i = 0; i < vals.length; i += 1) {
                    vals[i] = this._trimAlignValue(vals[i]);
                }

                return vals;
            } else {
                return [];
            }
        },

        // Returns the step-aligned value that val is closest to, between (inclusive) min and max
        _trimAlignValue: function(val) {
            if (val <= this._valueMin()) {
                return this._valueMin();
            }
            if (val >= this._valueMax()) {
                return this._valueMax();
            }
            var step = (this.options.step > 0) ? this.options.step : 1,
                valModStep = (val - this._valueMin()) % step,
                alignValue = val - valModStep;

            if (Math.abs(valModStep) * 2 >= step) {
                alignValue += (valModStep > 0) ? step : (-step);
            }

            // Since JavaScript has problems with large floats, round
            // the final value to 5 digits after the decimal point (see #4124)
            return parseFloat(alignValue.toFixed(5));
        },

        _calculateNewMax: function() {
            var max = this.options.max,
                min = this._valueMin(),
                step = this.options.step,
                aboveMin = Math.round((max - min) / step) * step;
            max = aboveMin + min;
            if (max > this.options.max) {

                //If max is not divisible by step, rounding off may increase its value
                max -= step;
            }
            this.max = parseFloat(max.toFixed(this._precision()));
        },

        _precision: function() {
            var precision = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                precision = Math.max(precision, this._precisionOf(this.options.min));
            }
            return precision;
        },

        _precisionOf: function(num) {
            var str = num.toString(),
                decimal = str.indexOf(".");
            return decimal === -1 ? 0 : str.length - decimal - 1;
        },

        _valueMin: function() {
            return this.options.min;
        },

        _valueMax: function() {
            return this.max;
        },

        _refreshRange: function(orientation) {
            if (orientation === "vertical") {
                this.range.css({
                    "width": "",
                    "left": ""
                });
            }
            if (orientation === "horizontal") {
                this.range.css({
                    "height": "",
                    "bottom": ""
                });
            }
        },

        _refreshValue: function() {
            var lastValPercent, valPercent, value, valueMin, valueMax,
                oRange = this.options.range,
                o = this.options,
                that = this,
                animate = (!this._animateOff) ? o.animate : false,
                _set = {};

            if (this._hasMultipleValues()) {
                this.handles.each(function(i) {
                    valPercent = (that.values(i) - that._valueMin()) / (that._valueMax() -
                        that._valueMin()) * 100;
                    _set[that.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                    $(this).stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);
                    if (that.options.range === true) {
                        if (that.orientation === "horizontal") {
                            if (i === 0) {
                                that.range.stop(1, 1)[animate ? "animate" : "css"]({
                                    left: valPercent + "%"
                                }, o.animate);
                            }
                            if (i === 1) {
                                that.range[animate ? "animate" : "css"]({
                                    width: (valPercent - lastValPercent) + "%"
                                }, {
                                    queue: false,
                                    duration: o.animate
                                });
                            }
                        } else {
                            if (i === 0) {
                                that.range.stop(1, 1)[animate ? "animate" : "css"]({
                                    bottom: (valPercent) + "%"
                                }, o.animate);
                            }
                            if (i === 1) {
                                that.range[animate ? "animate" : "css"]({
                                    height: (valPercent - lastValPercent) + "%"
                                }, {
                                    queue: false,
                                    duration: o.animate
                                });
                            }
                        }
                    }
                    lastValPercent = valPercent;
                });
            } else {
                value = this.value();
                valueMin = this._valueMin();
                valueMax = this._valueMax();
                valPercent = (valueMax !== valueMin) ?
                    (value - valueMin) / (valueMax - valueMin) * 100 :
                    0;
                _set[this.orientation === "horizontal" ? "left" : "bottom"] = valPercent + "%";
                this.handle.stop(1, 1)[animate ? "animate" : "css"](_set, o.animate);

                if (oRange === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[animate ? "animate" : "css"]({
                        width: valPercent + "%"
                    }, o.animate);
                }
                if (oRange === "max" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[animate ? "animate" : "css"]({
                        width: (100 - valPercent) + "%"
                    }, o.animate);
                }
                if (oRange === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[animate ? "animate" : "css"]({
                        height: valPercent + "%"
                    }, o.animate);
                }
                if (oRange === "max" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[animate ? "animate" : "css"]({
                        height: (100 - valPercent) + "%"
                    }, o.animate);
                }
            }
        },

        _handleEvents: {
            keydown: function(event) {
                var allowed, curVal, newVal, step,
                    index = $(event.target).data("ui-slider-handle-index");

                switch (event.keyCode) {
                    case $.ui.keyCode.HOME:
                    case $.ui.keyCode.END:
                    case $.ui.keyCode.PAGE_UP:
                    case $.ui.keyCode.PAGE_DOWN:
                    case $.ui.keyCode.UP:
                    case $.ui.keyCode.RIGHT:
                    case $.ui.keyCode.DOWN:
                    case $.ui.keyCode.LEFT:
                        event.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = true;
                            this._addClass($(event.target), null, "ui-state-active");
                            allowed = this._start(event, index);
                            if (allowed === false) {
                                return;
                            }
                        }
                        break;
                }

                step = this.options.step;
                if (this._hasMultipleValues()) {
                    curVal = newVal = this.values(index);
                } else {
                    curVal = newVal = this.value();
                }

                switch (event.keyCode) {
                    case $.ui.keyCode.HOME:
                        newVal = this._valueMin();
                        break;
                    case $.ui.keyCode.END:
                        newVal = this._valueMax();
                        break;
                    case $.ui.keyCode.PAGE_UP:
                        newVal = this._trimAlignValue(
                            curVal + ((this._valueMax() - this._valueMin()) / this.numPages)
                        );
                        break;
                    case $.ui.keyCode.PAGE_DOWN:
                        newVal = this._trimAlignValue(
                            curVal - ((this._valueMax() - this._valueMin()) / this.numPages));
                        break;
                    case $.ui.keyCode.UP:
                    case $.ui.keyCode.RIGHT:
                        if (curVal === this._valueMax()) {
                            return;
                        }
                        newVal = this._trimAlignValue(curVal + step);
                        break;
                    case $.ui.keyCode.DOWN:
                    case $.ui.keyCode.LEFT:
                        if (curVal === this._valueMin()) {
                            return;
                        }
                        newVal = this._trimAlignValue(curVal - step);
                        break;
                }

                this._slide(event, index, newVal);
            },
            keyup: function(event) {
                var index = $(event.target).data("ui-slider-handle-index");

                if (this._keySliding) {
                    this._keySliding = false;
                    this._stop(event, index);
                    this._change(event, index);
                    this._removeClass($(event.target), null, "ui-state-active");
                }
            }
        }
    });

});







/*!
 * jQuery UI Sortable 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Sortable
//>>group: Interactions
//>>description: Enables items in a list to be sorted using the mouse.
//>>docs: http://api.jqueryui.com/sortable/
//>>demos: http://jqueryui.com/sortable/
//>>css.structure: ../../themes/base/sortable.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./mouse",
            "../data",
            "../ie",
            "../scroll-parent",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    return $.widget("ui.sortable", $.ui.mouse, {
        version: "1.13.0",
        widgetEventPrefix: "sort",
        ready: false,
        options: {
            appendTo: "parent",
            axis: false,
            connectWith: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            dropOnEmpty: true,
            forcePlaceholderSize: false,
            forceHelperSize: false,
            grid: false,
            handle: false,
            helper: "original",
            items: "> *",
            opacity: false,
            placeholder: false,
            revert: false,
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,

            // Callbacks
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },

        _isOverAxis: function(x, reference, size) {
            return (x >= reference) && (x < (reference + size));
        },

        _isFloating: function(item) {
            return (/left|right/).test(item.css("float")) ||
                (/inline|table-cell/).test(item.css("display"));
        },

        _create: function() {
            this.containerCache = {};
            this._addClass("ui-sortable");

            //Get the items
            this.refresh();

            //Let's determine the parent's offset
            this.offset = this.element.offset();

            //Initialize mouse events for interaction
            this._mouseInit();

            this._setHandleClassName();

            //We're ready to go
            this.ready = true;

        },

        _setOption: function(key, value) {
            this._super(key, value);

            if (key === "handle") {
                this._setHandleClassName();
            }
        },

        _setHandleClassName: function() {
            var that = this;
            this._removeClass(this.element.find(".ui-sortable-handle"), "ui-sortable-handle");
            $.each(this.items, function() {
                that._addClass(
                    this.instance.options.handle ?
                    this.item.find(this.instance.options.handle) :
                    this.item,
                    "ui-sortable-handle"
                );
            });
        },

        _destroy: function() {
            this._mouseDestroy();

            for (var i = this.items.length - 1; i >= 0; i--) {
                this.items[i].item.removeData(this.widgetName + "-item");
            }

            return this;
        },

        _mouseCapture: function(event, overrideHandle) {
            var currentItem = null,
                validHandle = false,
                that = this;

            if (this.reverting) {
                return false;
            }

            if (this.options.disabled || this.options.type === "static") {
                return false;
            }

            //We have to refresh the items data once first
            this._refreshItems(event);

            //Find out if the clicked node (or one of its parents) is a actual item in this.items
            $(event.target).parents().each(function() {
                if ($.data(this, that.widgetName + "-item") === that) {
                    currentItem = $(this);
                    return false;
                }
            });
            if ($.data(event.target, that.widgetName + "-item") === that) {
                currentItem = $(event.target);
            }

            if (!currentItem) {
                return false;
            }
            if (this.options.handle && !overrideHandle) {
                $(this.options.handle, currentItem).find("*").addBack().each(function() {
                    if (this === event.target) {
                        validHandle = true;
                    }
                });
                if (!validHandle) {
                    return false;
                }
            }

            this.currentItem = currentItem;
            this._removeCurrentsFromItems();
            return true;

        },

        _mouseStart: function(event, overrideHandle, noActivation) {

            var i, body,
                o = this.options;

            this.currentContainer = this;

            //We only need to call refreshPositions, because the refreshItems call has been moved to
            // mouseCapture
            this.refreshPositions();

            //Prepare the dragged items parent
            this.appendTo = $(o.appendTo !== "parent" ?
                o.appendTo :
                this.currentItem.parent());

            //Create and append the visible helper
            this.helper = this._createHelper(event);

            //Cache the helper size
            this._cacheHelperProportions();

            /*
             * - Position generation -
             * This block generates everything position related - it's the core of draggables.
             */

            //Cache the margins of the original element
            this._cacheMargins();

            //The element's absolute position on the page minus margins
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };

            $.extend(this.offset, {
                click: { //Where the click happened, relative to the element
                    left: event.pageX - this.offset.left,
                    top: event.pageY - this.offset.top
                },

                // This is a relative to absolute position minus the actual position calculation -
                // only used for relative positioned helper
                relative: this._getRelativeOffset()
            });

            // After we get the helper offset, but before we get the parent offset we can
            // change the helper's position to absolute
            // TODO: Still need to figure out a way to make relative sorting possible
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");

            //Adjust the mouse offset relative to the helper if "cursorAt" is supplied
            if (o.cursorAt) {
                this._adjustOffsetFromHelper(o.cursorAt);
            }

            //Cache the former DOM position
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };

            // If the helper is not the original, hide the original so it's not playing any role during
            // the drag, won't cause anything bad this way
            if (this.helper[0] !== this.currentItem[0]) {
                this.currentItem.hide();
            }

            //Create the placeholder
            this._createPlaceholder();

            //Get the next scrolling parent
            this.scrollParent = this.placeholder.scrollParent();

            $.extend(this.offset, {
                parent: this._getParentOffset()
            });

            //Set a containment if given in the options
            if (o.containment) {
                this._setContainment();
            }

            if (o.cursor && o.cursor !== "auto") { // cursor option
                body = this.document.find("body");

                // Support: IE
                this.storedCursor = body.css("cursor");
                body.css("cursor", o.cursor);

                this.storedStylesheet =
                    $("<style>*{ cursor: " + o.cursor + " !important; }</style>").appendTo(body);
            }

            // We need to make sure to grab the zIndex before setting the
            // opacity, because setting the opacity to anything lower than 1
            // causes the zIndex to change from "auto" to 0.
            if (o.zIndex) { // zIndex option
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex");
                }
                this.helper.css("zIndex", o.zIndex);
            }

            if (o.opacity) { // opacity option
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity");
                }
                this.helper.css("opacity", o.opacity);
            }

            //Prepare scrolling
            if (this.scrollParent[0] !== this.document[0] &&
                this.scrollParent[0].tagName !== "HTML") {
                this.overflowOffset = this.scrollParent.offset();
            }

            //Call callbacks
            this._trigger("start", event, this._uiHash());

            //Recache the helper size
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions();
            }

            //Post "activate" events to possible containers
            if (!noActivation) {
                for (i = this.containers.length - 1; i >= 0; i--) {
                    this.containers[i]._trigger("activate", event, this._uiHash(this));
                }
            }

            //Prepare possible droppables
            if ($.ui.ddmanager) {
                $.ui.ddmanager.current = this;
            }

            if ($.ui.ddmanager && !o.dropBehaviour) {
                $.ui.ddmanager.prepareOffsets(this, event);
            }

            this.dragging = true;

            this._addClass(this.helper, "ui-sortable-helper");

            //Move the helper, if needed
            if (!this.helper.parent().is(this.appendTo)) {
                this.helper.detach().appendTo(this.appendTo);

                //Update position
                this.offset.parent = this._getParentOffset();
            }

            //Generate the original position
            this.position = this.originalPosition = this._generatePosition(event);
            this.originalPageX = event.pageX;
            this.originalPageY = event.pageY;
            this.lastPositionAbs = this.positionAbs = this._convertPositionTo("absolute");

            this._mouseDrag(event);

            return true;

        },

        _scroll: function(event) {
            var o = this.options,
                scrolled = false;

            if (this.scrollParent[0] !== this.document[0] &&
                this.scrollParent[0].tagName !== "HTML") {

                if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) -
                    event.pageY < o.scrollSensitivity) {
                    this.scrollParent[0].scrollTop =
                        scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;
                } else if (event.pageY - this.overflowOffset.top < o.scrollSensitivity) {
                    this.scrollParent[0].scrollTop =
                        scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;
                }

                if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) -
                    event.pageX < o.scrollSensitivity) {
                    this.scrollParent[0].scrollLeft = scrolled =
                        this.scrollParent[0].scrollLeft + o.scrollSpeed;
                } else if (event.pageX - this.overflowOffset.left < o.scrollSensitivity) {
                    this.scrollParent[0].scrollLeft = scrolled =
                        this.scrollParent[0].scrollLeft - o.scrollSpeed;
                }

            } else {

                if (event.pageY - this.document.scrollTop() < o.scrollSensitivity) {
                    scrolled = this.document.scrollTop(this.document.scrollTop() - o.scrollSpeed);
                } else if (this.window.height() - (event.pageY - this.document.scrollTop()) <
                    o.scrollSensitivity) {
                    scrolled = this.document.scrollTop(this.document.scrollTop() + o.scrollSpeed);
                }

                if (event.pageX - this.document.scrollLeft() < o.scrollSensitivity) {
                    scrolled = this.document.scrollLeft(
                        this.document.scrollLeft() - o.scrollSpeed
                    );
                } else if (this.window.width() - (event.pageX - this.document.scrollLeft()) <
                    o.scrollSensitivity) {
                    scrolled = this.document.scrollLeft(
                        this.document.scrollLeft() + o.scrollSpeed
                    );
                }

            }

            return scrolled;
        },

        _mouseDrag: function(event) {
            var i, item, itemElement, intersection,
                o = this.options;

            //Compute the helpers position
            this.position = this._generatePosition(event);
            this.positionAbs = this._convertPositionTo("absolute");

            //Set the helper position
            if (!this.options.axis || this.options.axis !== "y") {
                this.helper[0].style.left = this.position.left + "px";
            }
            if (!this.options.axis || this.options.axis !== "x") {
                this.helper[0].style.top = this.position.top + "px";
            }

            //Post events to containers
            this._contactContainers(event);

            if (this.innermostContainer !== null) {

                //Do scrolling
                if (o.scroll) {
                    if (this._scroll(event) !== false) {

                        //Update item positions used in position checks
                        this._refreshItemPositions(true);

                        if ($.ui.ddmanager && !o.dropBehaviour) {
                            $.ui.ddmanager.prepareOffsets(this, event);
                        }
                    }
                }

                this.dragDirection = {
                    vertical: this._getDragVerticalDirection(),
                    horizontal: this._getDragHorizontalDirection()
                };

                //Rearrange
                for (i = this.items.length - 1; i >= 0; i--) {

                    //Cache variables and intersection, continue if no intersection
                    item = this.items[i];
                    itemElement = item.item[0];
                    intersection = this._intersectsWithPointer(item);
                    if (!intersection) {
                        continue;
                    }

                    // Only put the placeholder inside the current Container, skip all
                    // items from other containers. This works because when moving
                    // an item from one container to another the
                    // currentContainer is switched before the placeholder is moved.
                    //
                    // Without this, moving items in "sub-sortables" can cause
                    // the placeholder to jitter between the outer and inner container.
                    if (item.instance !== this.currentContainer) {
                        continue;
                    }

                    // Cannot intersect with itself
                    // no useless actions that have been done before
                    // no action if the item moved is the parent of the item checked
                    if (itemElement !== this.currentItem[0] &&
                        this.placeholder[intersection === 1 ?
                            "next" : "prev"]()[0] !== itemElement &&
                        !$.contains(this.placeholder[0], itemElement) &&
                        (this.options.type === "semi-dynamic" ?
                            !$.contains(this.element[0], itemElement) :
                            true
                        )
                    ) {

                        this.direction = intersection === 1 ? "down" : "up";

                        if (this.options.tolerance === "pointer" ||
                            this._intersectsWithSides(item)) {
                            this._rearrange(event, item);
                        } else {
                            break;
                        }

                        this._trigger("change", event, this._uiHash());
                        break;
                    }
                }
            }

            //Interconnect with droppables
            if ($.ui.ddmanager) {
                $.ui.ddmanager.drag(this, event);
            }

            //Call callbacks
            this._trigger("sort", event, this._uiHash());

            this.lastPositionAbs = this.positionAbs;
            return false;

        },

        _mouseStop: function(event, noPropagation) {

            if (!event) {
                return;
            }

            //If we are using droppables, inform the manager about the drop
            if ($.ui.ddmanager && !this.options.dropBehaviour) {
                $.ui.ddmanager.drop(this, event);
            }

            if (this.options.revert) {
                var that = this,
                    cur = this.placeholder.offset(),
                    axis = this.options.axis,
                    animation = {};

                if (!axis || axis === "x") {
                    animation.left = cur.left - this.offset.parent.left - this.margins.left +
                        (this.offsetParent[0] === this.document[0].body ?
                            0 :
                            this.offsetParent[0].scrollLeft
                        );
                }
                if (!axis || axis === "y") {
                    animation.top = cur.top - this.offset.parent.top - this.margins.top +
                        (this.offsetParent[0] === this.document[0].body ?
                            0 :
                            this.offsetParent[0].scrollTop
                        );
                }
                this.reverting = true;
                $(this.helper).animate(
                    animation,
                    parseInt(this.options.revert, 10) || 500,
                    function() {
                        that._clear(event);
                    }
                );
            } else {
                this._clear(event, noPropagation);
            }

            return false;

        },

        cancel: function() {

            if (this.dragging) {

                this._mouseUp(new $.Event("mouseup", {
                    target: null
                }));

                if (this.options.helper === "original") {
                    this.currentItem.css(this._storedCSS);
                    this._removeClass(this.currentItem, "ui-sortable-helper");
                } else {
                    this.currentItem.show();
                }

                //Post deactivating events to containers
                for (var i = this.containers.length - 1; i >= 0; i--) {
                    this.containers[i]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[i].containerCache.over) {
                        this.containers[i]._trigger("out", null, this._uiHash(this));
                        this.containers[i].containerCache.over = 0;
                    }
                }

            }

            if (this.placeholder) {

                //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
                // it unbinds ALL events from the original node!
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
                }
                if (this.options.helper !== "original" && this.helper &&
                    this.helper[0].parentNode) {
                    this.helper.remove();
                }

                $.extend(this, {
                    helper: null,
                    dragging: false,
                    reverting: false,
                    _noFinalSort: null
                });

                if (this.domPosition.prev) {
                    $(this.domPosition.prev).after(this.currentItem);
                } else {
                    $(this.domPosition.parent).prepend(this.currentItem);
                }
            }

            return this;

        },

        serialize: function(o) {

            var items = this._getItemsAsjQuery(o && o.connected),
                str = [];
            o = o || {};

            $(items).each(function() {
                var res = ($(o.item || this).attr(o.attribute || "id") || "")
                    .match(o.expression || (/(.+)[\-=_](.+)/));
                if (res) {
                    str.push(
                        (o.key || res[1] + "[]") +
                        "=" + (o.key && o.expression ? res[1] : res[2]));
                }
            });

            if (!str.length && o.key) {
                str.push(o.key + "=");
            }

            return str.join("&");

        },

        toArray: function(o) {

            var items = this._getItemsAsjQuery(o && o.connected),
                ret = [];

            o = o || {};

            items.each(function() {
                ret.push($(o.item || this).attr(o.attribute || "id") || "");
            });
            return ret;

        },

        /* Be careful with the following core functions */
        _intersectsWith: function(item) {

            var x1 = this.positionAbs.left,
                x2 = x1 + this.helperProportions.width,
                y1 = this.positionAbs.top,
                y2 = y1 + this.helperProportions.height,
                l = item.left,
                r = l + item.width,
                t = item.top,
                b = t + item.height,
                dyClick = this.offset.click.top,
                dxClick = this.offset.click.left,
                isOverElementHeight = (this.options.axis === "x") || ((y1 + dyClick) > t &&
                    (y1 + dyClick) < b),
                isOverElementWidth = (this.options.axis === "y") || ((x1 + dxClick) > l &&
                    (x1 + dxClick) < r),
                isOverElement = isOverElementHeight && isOverElementWidth;

            if (this.options.tolerance === "pointer" ||
                this.options.forcePointerForContainers ||
                (this.options.tolerance !== "pointer" &&
                    this.helperProportions[this.floating ? "width" : "height"] >
                    item[this.floating ? "width" : "height"])
            ) {
                return isOverElement;
            } else {

                return (l < x1 + (this.helperProportions.width / 2) && // Right Half
                    x2 - (this.helperProportions.width / 2) < r && // Left Half
                    t < y1 + (this.helperProportions.height / 2) && // Bottom Half
                    y2 - (this.helperProportions.height / 2) < b); // Top Half

            }
        },

        _intersectsWithPointer: function(item) {
            var verticalDirection, horizontalDirection,
                isOverElementHeight = (this.options.axis === "x") ||
                this._isOverAxis(
                    this.positionAbs.top + this.offset.click.top, item.top, item.height),
                isOverElementWidth = (this.options.axis === "y") ||
                this._isOverAxis(
                    this.positionAbs.left + this.offset.click.left, item.left, item.width),
                isOverElement = isOverElementHeight && isOverElementWidth;

            if (!isOverElement) {
                return false;
            }

            verticalDirection = this.dragDirection.vertical;
            horizontalDirection = this.dragDirection.horizontal;

            return this.floating ?
                ((horizontalDirection === "right" || verticalDirection === "down") ? 2 : 1) :
                (verticalDirection && (verticalDirection === "down" ? 2 : 1));

        },

        _intersectsWithSides: function(item) {

            var isOverBottomHalf = this._isOverAxis(this.positionAbs.top +
                    this.offset.click.top, item.top + (item.height / 2), item.height),
                isOverRightHalf = this._isOverAxis(this.positionAbs.left +
                    this.offset.click.left, item.left + (item.width / 2), item.width),
                verticalDirection = this.dragDirection.vertical,
                horizontalDirection = this.dragDirection.horizontal;

            if (this.floating && horizontalDirection) {
                return ((horizontalDirection === "right" && isOverRightHalf) ||
                    (horizontalDirection === "left" && !isOverRightHalf));
            } else {
                return verticalDirection && ((verticalDirection === "down" && isOverBottomHalf) ||
                    (verticalDirection === "up" && !isOverBottomHalf));
            }

        },

        _getDragVerticalDirection: function() {
            var delta = this.positionAbs.top - this.lastPositionAbs.top;
            return delta !== 0 && (delta > 0 ? "down" : "up");
        },

        _getDragHorizontalDirection: function() {
            var delta = this.positionAbs.left - this.lastPositionAbs.left;
            return delta !== 0 && (delta > 0 ? "right" : "left");
        },

        refresh: function(event) {
            this._refreshItems(event);
            this._setHandleClassName();
            this.refreshPositions();
            return this;
        },

        _connectWith: function() {
            var options = this.options;
            return options.connectWith.constructor === String ? [options.connectWith] :
                options.connectWith;
        },

        _getItemsAsjQuery: function(connected) {

            var i, j, cur, inst,
                items = [],
                queries = [],
                connectWith = this._connectWith();

            if (connectWith && connected) {
                for (i = connectWith.length - 1; i >= 0; i--) {
                    cur = $(connectWith[i], this.document[0]);
                    for (j = cur.length - 1; j >= 0; j--) {
                        inst = $.data(cur[j], this.widgetFullName);
                        if (inst && inst !== this && !inst.options.disabled) {
                            queries.push([typeof inst.options.items === "function" ?
                                inst.options.items.call(inst.element) :
                                $(inst.options.items, inst.element)
                                .not(".ui-sortable-helper")
                                .not(".ui-sortable-placeholder"), inst
                            ]);
                        }
                    }
                }
            }

            queries.push([typeof this.options.items === "function" ?
                this.options.items
                .call(this.element, null, {
                    options: this.options,
                    item: this.currentItem
                }) :
                $(this.options.items, this.element)
                .not(".ui-sortable-helper")
                .not(".ui-sortable-placeholder"), this
            ]);

            function addItems() {
                items.push(this);
            }
            for (i = queries.length - 1; i >= 0; i--) {
                queries[i][0].each(addItems);
            }

            return $(items);

        },

        _removeCurrentsFromItems: function() {

            var list = this.currentItem.find(":data(" + this.widgetName + "-item)");

            this.items = $.grep(this.items, function(item) {
                for (var j = 0; j < list.length; j++) {
                    if (list[j] === item.item[0]) {
                        return false;
                    }
                }
                return true;
            });

        },

        _refreshItems: function(event) {

            this.items = [];
            this.containers = [this];

            var i, j, cur, inst, targetData, _queries, item, queriesLength,
                items = this.items,
                queries = [
                    [typeof this.options.items === "function" ?
                        this.options.items.call(this.element[0], event, {
                            item: this.currentItem
                        }) :
                        $(this.options.items, this.element), this
                    ]
                ],
                connectWith = this._connectWith();

            //Shouldn't be run the first time through due to massive slow-down
            if (connectWith && this.ready) {
                for (i = connectWith.length - 1; i >= 0; i--) {
                    cur = $(connectWith[i], this.document[0]);
                    for (j = cur.length - 1; j >= 0; j--) {
                        inst = $.data(cur[j], this.widgetFullName);
                        if (inst && inst !== this && !inst.options.disabled) {
                            queries.push([typeof inst.options.items === "function" ?
                                inst.options.items
                                .call(inst.element[0], event, {
                                    item: this.currentItem
                                }) :
                                $(inst.options.items, inst.element), inst
                            ]);
                            this.containers.push(inst);
                        }
                    }
                }
            }

            for (i = queries.length - 1; i >= 0; i--) {
                targetData = queries[i][1];
                _queries = queries[i][0];

                for (j = 0, queriesLength = _queries.length; j < queriesLength; j++) {
                    item = $(_queries[j]);

                    // Data for target checking (mouse manager)
                    item.data(this.widgetName + "-item", targetData);

                    items.push({
                        item: item,
                        instance: targetData,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    });
                }
            }

        },

        _refreshItemPositions: function(fast) {
            var i, item, t, p;

            for (i = this.items.length - 1; i >= 0; i--) {
                item = this.items[i];

                //We ignore calculating positions of all connected containers when we're not over them
                if (this.currentContainer && item.instance !== this.currentContainer &&
                    item.item[0] !== this.currentItem[0]) {
                    continue;
                }

                t = this.options.toleranceElement ?
                    $(this.options.toleranceElement, item.item) :
                    item.item;

                if (!fast) {
                    item.width = t.outerWidth();
                    item.height = t.outerHeight();
                }

                p = t.offset();
                item.left = p.left;
                item.top = p.top;
            }
        },

        refreshPositions: function(fast) {

            // Determine whether items are being displayed horizontally
            this.floating = this.items.length ?
                this.options.axis === "x" || this._isFloating(this.items[0].item) :
                false;

            if (this.innermostContainer !== null) {
                this._refreshItemPositions(fast);
            }

            var i, p;

            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this);
            } else {
                for (i = this.containers.length - 1; i >= 0; i--) {
                    p = this.containers[i].element.offset();
                    this.containers[i].containerCache.left = p.left;
                    this.containers[i].containerCache.top = p.top;
                    this.containers[i].containerCache.width =
                        this.containers[i].element.outerWidth();
                    this.containers[i].containerCache.height =
                        this.containers[i].element.outerHeight();
                }
            }

            return this;
        },

        _createPlaceholder: function(that) {
            that = that || this;
            var className, nodeName,
                o = that.options;

            if (!o.placeholder || o.placeholder.constructor === String) {
                className = o.placeholder;
                nodeName = that.currentItem[0].nodeName.toLowerCase();
                o.placeholder = {
                    element: function() {

                        var element = $("<" + nodeName + ">", that.document[0]);

                        that._addClass(element, "ui-sortable-placeholder",
                                className || that.currentItem[0].className)
                            ._removeClass(element, "ui-sortable-helper");

                        if (nodeName === "tbody") {
                            that._createTrPlaceholder(
                                that.currentItem.find("tr").eq(0),
                                $("<tr>", that.document[0]).appendTo(element)
                            );
                        } else if (nodeName === "tr") {
                            that._createTrPlaceholder(that.currentItem, element);
                        } else if (nodeName === "img") {
                            element.attr("src", that.currentItem.attr("src"));
                        }

                        if (!className) {
                            element.css("visibility", "hidden");
                        }

                        return element;
                    },
                    update: function(container, p) {

                        // 1. If a className is set as 'placeholder option, we don't force sizes -
                        // the class is responsible for that
                        // 2. The option 'forcePlaceholderSize can be enabled to force it even if a
                        // class name is specified
                        if (className && !o.forcePlaceholderSize) {
                            return;
                        }

                        // If the element doesn't have a actual height or width by itself (without
                        // styles coming from a stylesheet), it receives the inline height and width
                        // from the dragged item. Or, if it's a tbody or tr, it's going to have a height
                        // anyway since we're populating them with <td>s above, but they're unlikely to
                        // be the correct height on their own if the row heights are dynamic, so we'll
                        // always assign the height of the dragged item given forcePlaceholderSize
                        // is true.
                        if (!p.height() || (o.forcePlaceholderSize &&
                                (nodeName === "tbody" || nodeName === "tr"))) {
                            p.height(
                                that.currentItem.innerHeight() -
                                parseInt(that.currentItem.css("paddingTop") || 0, 10) -
                                parseInt(that.currentItem.css("paddingBottom") || 0, 10));
                        }
                        if (!p.width()) {
                            p.width(
                                that.currentItem.innerWidth() -
                                parseInt(that.currentItem.css("paddingLeft") || 0, 10) -
                                parseInt(that.currentItem.css("paddingRight") || 0, 10));
                        }
                    }
                };
            }

            //Create the placeholder
            that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));

            //Append it after the actual current item
            that.currentItem.after(that.placeholder);

            //Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
            o.placeholder.update(that, that.placeholder);

        },

        _createTrPlaceholder: function(sourceTr, targetTr) {
            var that = this;

            sourceTr.children().each(function() {
                $("<td>&#160;</td>", that.document[0])
                    .attr("colspan", $(this).attr("colspan") || 1)
                    .appendTo(targetTr);
            });
        },

        _contactContainers: function(event) {
            var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, cur, nearBottom,
                floating, axis,
                innermostContainer = null,
                innermostIndex = null;

            // Get innermost container that intersects with item
            for (i = this.containers.length - 1; i >= 0; i--) {

                // Never consider a container that's located within the item itself
                if ($.contains(this.currentItem[0], this.containers[i].element[0])) {
                    continue;
                }

                if (this._intersectsWith(this.containers[i].containerCache)) {

                    // If we've already found a container and it's more "inner" than this, then continue
                    if (innermostContainer &&
                        $.contains(
                            this.containers[i].element[0],
                            innermostContainer.element[0])) {
                        continue;
                    }

                    innermostContainer = this.containers[i];
                    innermostIndex = i;

                } else {

                    // container doesn't intersect. trigger "out" event if necessary
                    if (this.containers[i].containerCache.over) {
                        this.containers[i]._trigger("out", event, this._uiHash(this));
                        this.containers[i].containerCache.over = 0;
                    }
                }

            }

            this.innermostContainer = innermostContainer;

            // If no intersecting containers found, return
            if (!innermostContainer) {
                return;
            }

            // Move the item into the container if it's not there already
            if (this.containers.length === 1) {
                if (!this.containers[innermostIndex].containerCache.over) {
                    this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
                    this.containers[innermostIndex].containerCache.over = 1;
                }
            } else {

                // When entering a new container, we will find the item with the least distance and
                // append our item near it
                dist = 10000;
                itemWithLeastDistance = null;
                floating = innermostContainer.floating || this._isFloating(this.currentItem);
                posProperty = floating ? "left" : "top";
                sizeProperty = floating ? "width" : "height";
                axis = floating ? "pageX" : "pageY";

                for (j = this.items.length - 1; j >= 0; j--) {
                    if (!$.contains(
                            this.containers[innermostIndex].element[0], this.items[j].item[0])) {
                        continue;
                    }
                    if (this.items[j].item[0] === this.currentItem[0]) {
                        continue;
                    }

                    cur = this.items[j].item.offset()[posProperty];
                    nearBottom = false;
                    if (event[axis] - cur > this.items[j][sizeProperty] / 2) {
                        nearBottom = true;
                    }

                    if (Math.abs(event[axis] - cur) < dist) {
                        dist = Math.abs(event[axis] - cur);
                        itemWithLeastDistance = this.items[j];
                        this.direction = nearBottom ? "up" : "down";
                    }
                }

                //Check if dropOnEmpty is enabled
                if (!itemWithLeastDistance && !this.options.dropOnEmpty) {
                    return;
                }

                if (this.currentContainer === this.containers[innermostIndex]) {
                    if (!this.currentContainer.containerCache.over) {
                        this.containers[innermostIndex]._trigger("over", event, this._uiHash());
                        this.currentContainer.containerCache.over = 1;
                    }
                    return;
                }

                if (itemWithLeastDistance) {
                    this._rearrange(event, itemWithLeastDistance, null, true);
                } else {
                    this._rearrange(event, null, this.containers[innermostIndex].element, true);
                }
                this._trigger("change", event, this._uiHash());
                this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));
                this.currentContainer = this.containers[innermostIndex];

                //Update the placeholder
                this.options.placeholder.update(this.currentContainer, this.placeholder);

                //Update scrollParent
                this.scrollParent = this.placeholder.scrollParent();

                //Update overflowOffset
                if (this.scrollParent[0] !== this.document[0] &&
                    this.scrollParent[0].tagName !== "HTML") {
                    this.overflowOffset = this.scrollParent.offset();
                }

                this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
                this.containers[innermostIndex].containerCache.over = 1;
            }

        },

        _createHelper: function(event) {

            var o = this.options,
                helper = typeof o.helper === "function" ?
                $(o.helper.apply(this.element[0], [event, this.currentItem])) :
                (o.helper === "clone" ? this.currentItem.clone() : this.currentItem);

            //Add the helper to the DOM if that didn't happen already
            if (!helper.parents("body").length) {
                this.appendTo[0].appendChild(helper[0]);
            }

            if (helper[0] === this.currentItem[0]) {
                this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                };
            }

            if (!helper[0].style.width || o.forceHelperSize) {
                helper.width(this.currentItem.width());
            }
            if (!helper[0].style.height || o.forceHelperSize) {
                helper.height(this.currentItem.height());
            }

            return helper;

        },

        _adjustOffsetFromHelper: function(obj) {
            if (typeof obj === "string") {
                obj = obj.split(" ");
            }
            if (Array.isArray(obj)) {
                obj = {
                    left: +obj[0],
                    top: +obj[1] || 0
                };
            }
            if ("left" in obj) {
                this.offset.click.left = obj.left + this.margins.left;
            }
            if ("right" in obj) {
                this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
            }
            if ("top" in obj) {
                this.offset.click.top = obj.top + this.margins.top;
            }
            if ("bottom" in obj) {
                this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
            }
        },

        _getParentOffset: function() {

            //Get the offsetParent and cache its position
            this.offsetParent = this.helper.offsetParent();
            var po = this.offsetParent.offset();

            // This is a special case where we need to modify a offset calculated on start, since the
            // following happened:
            // 1. The position of the helper is absolute, so it's position is calculated based on the
            // next positioned parent
            // 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't
            // the document, which means that the scroll is included in the initial calculation of the
            // offset of the parent, and never recalculated upon drag
            if (this.cssPosition === "absolute" && this.scrollParent[0] !== this.document[0] &&
                $.contains(this.scrollParent[0], this.offsetParent[0])) {
                po.left += this.scrollParent.scrollLeft();
                po.top += this.scrollParent.scrollTop();
            }

            // This needs to be actually done for all browsers, since pageX/pageY includes this
            // information with an ugly IE fix
            if (this.offsetParent[0] === this.document[0].body ||
                (this.offsetParent[0].tagName &&
                    this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {
                po = {
                    top: 0,
                    left: 0
                };
            }

            return {
                top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            };

        },

        _getRelativeOffset: function() {

            if (this.cssPosition === "relative") {
                var p = this.currentItem.position();
                return {
                    top: p.top - (parseInt(this.helper.css("top"), 10) || 0) +
                        this.scrollParent.scrollTop(),
                    left: p.left - (parseInt(this.helper.css("left"), 10) || 0) +
                        this.scrollParent.scrollLeft()
                };
            } else {
                return {
                    top: 0,
                    left: 0
                };
            }

        },

        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0),
                top: (parseInt(this.currentItem.css("marginTop"), 10) || 0)
            };
        },

        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            };
        },

        _setContainment: function() {

            var ce, co, over,
                o = this.options;
            if (o.containment === "parent") {
                o.containment = this.helper[0].parentNode;
            }
            if (o.containment === "document" || o.containment === "window") {
                this.containment = [
                    0 - this.offset.relative.left - this.offset.parent.left,
                    0 - this.offset.relative.top - this.offset.parent.top,
                    o.containment === "document" ?
                    this.document.width() :
                    this.window.width() - this.helperProportions.width - this.margins.left,
                    (o.containment === "document" ?
                        (this.document.height() || document.body.parentNode.scrollHeight) :
                        this.window.height() || this.document[0].body.parentNode.scrollHeight
                    ) - this.helperProportions.height - this.margins.top
                ];
            }

            if (!(/^(document|window|parent)$/).test(o.containment)) {
                ce = $(o.containment)[0];
                co = $(o.containment).offset();
                over = ($(ce).css("overflow") !== "hidden");

                this.containment = [
                    co.left + (parseInt($(ce).css("borderLeftWidth"), 10) || 0) +
                    (parseInt($(ce).css("paddingLeft"), 10) || 0) - this.margins.left,
                    co.top + (parseInt($(ce).css("borderTopWidth"), 10) || 0) +
                    (parseInt($(ce).css("paddingTop"), 10) || 0) - this.margins.top,
                    co.left + (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) -
                    (parseInt($(ce).css("borderLeftWidth"), 10) || 0) -
                    (parseInt($(ce).css("paddingRight"), 10) || 0) -
                    this.helperProportions.width - this.margins.left,
                    co.top + (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) -
                    (parseInt($(ce).css("borderTopWidth"), 10) || 0) -
                    (parseInt($(ce).css("paddingBottom"), 10) || 0) -
                    this.helperProportions.height - this.margins.top
                ];
            }

        },

        _convertPositionTo: function(d, pos) {

            if (!pos) {
                pos = this.position;
            }
            var mod = d === "absolute" ? 1 : -1,
                scroll = this.cssPosition === "absolute" &&
                !(this.scrollParent[0] !== this.document[0] &&
                    $.contains(this.scrollParent[0], this.offsetParent[0])) ?
                this.offsetParent :
                this.scrollParent,
                scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

            return {
                top: (

                    // The absolute mouse position
                    pos.top +

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.top * mod +

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.top * mod -
                    ((this.cssPosition === "fixed" ?
                        -this.scrollParent.scrollTop() :
                        (scrollIsRootNode ? 0 : scroll.scrollTop())) * mod)
                ),
                left: (

                    // The absolute mouse position
                    pos.left +

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.left * mod +

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.left * mod -
                    ((this.cssPosition === "fixed" ?
                        -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 :
                        scroll.scrollLeft()) * mod)
                )
            };

        },

        _generatePosition: function(event) {

            var top, left,
                o = this.options,
                pageX = event.pageX,
                pageY = event.pageY,
                scroll = this.cssPosition === "absolute" &&
                !(this.scrollParent[0] !== this.document[0] &&
                    $.contains(this.scrollParent[0], this.offsetParent[0])) ?
                this.offsetParent :
                this.scrollParent,
                scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

            // This is another very weird special case that only happens for relative elements:
            // 1. If the css position is relative
            // 2. and the scroll parent is the document or similar to the offset parent
            // we have to refresh the relative offset during the scroll so there are no jumps
            if (this.cssPosition === "relative" && !(this.scrollParent[0] !== this.document[0] &&
                    this.scrollParent[0] !== this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset();
            }

            /*
             * - Position constraining -
             * Constrain the position to a mix of grid, containment.
             */

            if (this.originalPosition) { //If we are not dragging yet, we won't check for options

                if (this.containment) {
                    if (event.pageX - this.offset.click.left < this.containment[0]) {
                        pageX = this.containment[0] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top < this.containment[1]) {
                        pageY = this.containment[1] + this.offset.click.top;
                    }
                    if (event.pageX - this.offset.click.left > this.containment[2]) {
                        pageX = this.containment[2] + this.offset.click.left;
                    }
                    if (event.pageY - this.offset.click.top > this.containment[3]) {
                        pageY = this.containment[3] + this.offset.click.top;
                    }
                }

                if (o.grid) {
                    top = this.originalPageY + Math.round((pageY - this.originalPageY) /
                        o.grid[1]) * o.grid[1];
                    pageY = this.containment ?
                        ((top - this.offset.click.top >= this.containment[1] &&
                                top - this.offset.click.top <= this.containment[3]) ?
                            top :
                            ((top - this.offset.click.top >= this.containment[1]) ?
                                top - o.grid[1] : top + o.grid[1])) :
                        top;

                    left = this.originalPageX + Math.round((pageX - this.originalPageX) /
                        o.grid[0]) * o.grid[0];
                    pageX = this.containment ?
                        ((left - this.offset.click.left >= this.containment[0] &&
                                left - this.offset.click.left <= this.containment[2]) ?
                            left :
                            ((left - this.offset.click.left >= this.containment[0]) ?
                                left - o.grid[0] : left + o.grid[0])) :
                        left;
                }

            }

            return {
                top: (

                    // The absolute mouse position
                    pageY -

                    // Click offset (relative to the element)
                    this.offset.click.top -

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.top -

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.top +
                    ((this.cssPosition === "fixed" ?
                        -this.scrollParent.scrollTop() :
                        (scrollIsRootNode ? 0 : scroll.scrollTop())))
                ),
                left: (

                    // The absolute mouse position
                    pageX -

                    // Click offset (relative to the element)
                    this.offset.click.left -

                    // Only for relative positioned nodes: Relative offset from element to offset parent
                    this.offset.relative.left -

                    // The offsetParent's offset without borders (offset + border)
                    this.offset.parent.left +
                    ((this.cssPosition === "fixed" ?
                        -this.scrollParent.scrollLeft() :
                        scrollIsRootNode ? 0 : scroll.scrollLeft()))
                )
            };

        },

        _rearrange: function(event, i, a, hardRefresh) {

            if (a) {
                a[0].appendChild(this.placeholder[0]);
            } else {
                i.item[0].parentNode.insertBefore(this.placeholder[0],
                    (this.direction === "down" ? i.item[0] : i.item[0].nextSibling));
            }

            //Various things done here to improve the performance:
            // 1. we create a setTimeout, that calls refreshPositions
            // 2. on the instance, we have a counter variable, that get's higher after every append
            // 3. on the local scope, we copy the counter variable, and check in the timeout,
            // if it's still the same
            // 4. this lets only the last addition to the timeout stack through
            this.counter = this.counter ? ++this.counter : 1;
            var counter = this.counter;

            this._delay(function() {
                if (counter === this.counter) {

                    //Precompute after each DOM insertion, NOT on mousemove
                    this.refreshPositions(!hardRefresh);
                }
            });

        },

        _clear: function(event, noPropagation) {

            this.reverting = false;

            // We delay all events that have to be triggered to after the point where the placeholder
            // has been removed and everything else normalized again
            var i,
                delayedTriggers = [];

            // We first have to update the dom position of the actual currentItem
            // Note: don't do it if the current item is already removed (by a user), or it gets
            // reappended (see #4088)
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem);
            }
            this._noFinalSort = null;

            if (this.helper[0] === this.currentItem[0]) {
                for (i in this._storedCSS) {
                    if (this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {
                        this._storedCSS[i] = "";
                    }
                }
                this.currentItem.css(this._storedCSS);
                this._removeClass(this.currentItem, "ui-sortable-helper");
            } else {
                this.currentItem.show();
            }

            if (this.fromOutside && !noPropagation) {
                delayedTriggers.push(function(event) {
                    this._trigger("receive", event, this._uiHash(this.fromOutside));
                });
            }
            if ((this.fromOutside ||
                    this.domPosition.prev !==
                    this.currentItem.prev().not(".ui-sortable-helper")[0] ||
                    this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {

                // Trigger update callback if the DOM position has changed
                delayedTriggers.push(function(event) {
                    this._trigger("update", event, this._uiHash());
                });
            }

            // Check if the items Container has Changed and trigger appropriate
            // events.
            if (this !== this.currentContainer) {
                if (!noPropagation) {
                    delayedTriggers.push(function(event) {
                        this._trigger("remove", event, this._uiHash());
                    });
                    delayedTriggers.push((function(c) {
                        return function(event) {
                            c._trigger("receive", event, this._uiHash(this));
                        };
                    }).call(this, this.currentContainer));
                    delayedTriggers.push((function(c) {
                        return function(event) {
                            c._trigger("update", event, this._uiHash(this));
                        };
                    }).call(this, this.currentContainer));
                }
            }

            //Post events to containers
            function delayEvent(type, instance, container) {
                return function(event) {
                    container._trigger(type, event, instance._uiHash(instance));
                };
            }
            for (i = this.containers.length - 1; i >= 0; i--) {
                if (!noPropagation) {
                    delayedTriggers.push(delayEvent("deactivate", this, this.containers[i]));
                }
                if (this.containers[i].containerCache.over) {
                    delayedTriggers.push(delayEvent("out", this, this.containers[i]));
                    this.containers[i].containerCache.over = 0;
                }
            }

            //Do what was originally in plugins
            if (this.storedCursor) {
                this.document.find("body").css("cursor", this.storedCursor);
                this.storedStylesheet.remove();
            }
            if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity);
            }
            if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex);
            }

            this.dragging = false;

            if (!noPropagation) {
                this._trigger("beforeStop", event, this._uiHash());
            }

            //$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately,
            // it unbinds ALL events from the original node!
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);

            if (!this.cancelHelperRemoval) {
                if (this.helper[0] !== this.currentItem[0]) {
                    this.helper.remove();
                }
                this.helper = null;
            }

            if (!noPropagation) {
                for (i = 0; i < delayedTriggers.length; i++) {

                    // Trigger all delayed events
                    delayedTriggers[i].call(this, event);
                }
                this._trigger("stop", event, this._uiHash());
            }

            this.fromOutside = false;
            return !this.cancelHelperRemoval;

        },

        _trigger: function() {
            if ($.Widget.prototype._trigger.apply(this, arguments) === false) {
                this.cancel();
            }
        },

        _uiHash: function(_inst) {
            var inst = _inst || this;
            return {
                helper: inst.helper,
                placeholder: inst.placeholder || $([]),
                position: inst.position,
                originalPosition: inst.originalPosition,
                offset: inst.positionAbs,
                item: inst.currentItem,
                sender: _inst ? _inst.element : null
            };
        }

    });

});






/*!
 * jQuery UI Spinner 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Spinner
//>>group: Widgets
//>>description: Displays buttons to easily input numbers via the keyboard or mouse.
//>>docs: http://api.jqueryui.com/spinner/
//>>demos: http://jqueryui.com/spinner/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/spinner.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "./button",
            "../version",
            "../keycode",
            "../safe-active-element",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    function spinnerModifier(fn) {
        return function() {
            var previous = this.element.val();
            fn.apply(this, arguments);
            this._refresh();
            if (previous !== this.element.val()) {
                this._trigger("change");
            }
        };
    }

    $.widget("ui.spinner", {
        version: "1.13.0",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            classes: {
                "ui-spinner": "ui-corner-all",
                "ui-spinner-down": "ui-corner-br",
                "ui-spinner-up": "ui-corner-tr"
            },
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: true,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,

            change: null,
            spin: null,
            start: null,
            stop: null
        },

        _create: function() {

            // handle string values that need to be parsed
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);

            // Only format if there is a value, prevents the field from being marked
            // as invalid in Firefox, see #9573.
            if (this.value() !== "") {

                // Format the value, but don't constrain.
                this._value(this.element.val(), true);
            }

            this._draw();
            this._on(this._events);
            this._refresh();

            // Turning off autocomplete prevents the browser from remembering the
            // value when navigating through history, so we re-enable autocomplete
            // if the page is unloaded before the widget is destroyed. #7790
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },

        _getCreateOptions: function() {
            var options = this._super();
            var element = this.element;

            $.each(["min", "max", "step"], function(i, option) {
                var value = element.attr(option);
                if (value != null && value.length) {
                    options[option] = value;
                }
            });

            return options;
        },

        _events: {
            keydown: function(event) {
                if (this._start(event) && this._keydown(event)) {
                    event.preventDefault();
                }
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val();
            },
            blur: function(event) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return;
                }

                this._stop();
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", event);
                }
            },
            mousewheel: function(event, delta) {
                var activeElement = $.ui.safeActiveElement(this.document[0]);
                var isActive = this.element[0] === activeElement;

                if (!isActive || !delta) {
                    return;
                }

                if (!this.spinning && !this._start(event)) {
                    return false;
                }

                this._spin((delta > 0 ? 1 : -1) * this.options.step, event);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function() {
                    if (this.spinning) {
                        this._stop(event);
                    }
                }, 100);
                event.preventDefault();
            },
            "mousedown .ui-spinner-button": function(event) {
                var previous;

                // We never want the buttons to have focus; whenever the user is
                // interacting with the spinner, the focus should be on the input.
                // If the input is focused then this.previous is properly set from
                // when the input first received focus. If the input is not focused
                // then we need to set this.previous based on the value before spinning.
                previous = this.element[0] === $.ui.safeActiveElement(this.document[0]) ?
                    this.previous : this.element.val();

                function checkFocus() {
                    var isActive = this.element[0] === $.ui.safeActiveElement(this.document[0]);
                    if (!isActive) {
                        this.element.trigger("focus");
                        this.previous = previous;

                        // support: IE
                        // IE sets focus asynchronously, so we need to check if focus
                        // moved off of the input because the user clicked on the button.
                        this._delay(function() {
                            this.previous = previous;
                        });
                    }
                }

                // Ensure focus is on (or stays on) the text field
                event.preventDefault();
                checkFocus.call(this);

                // Support: IE
                // IE doesn't prevent moving focus even with event.preventDefault()
                // so we set a flag to know when we should ignore the blur event
                // and check (again) if focus moved off of the input.
                this.cancelBlur = true;
                this._delay(function() {
                    delete this.cancelBlur;
                    checkFocus.call(this);
                });

                if (this._start(event) === false) {
                    return;
                }

                this._repeat(null, $(event.currentTarget)
                    .hasClass("ui-spinner-up") ? 1 : -1, event);
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(event) {

                // button will add ui-state-active if mouse was down while mouseleave and kept down
                if (!$(event.currentTarget).hasClass("ui-state-active")) {
                    return;
                }

                if (this._start(event) === false) {
                    return false;
                }
                this._repeat(null, $(event.currentTarget)
                    .hasClass("ui-spinner-up") ? 1 : -1, event);
            },

            // TODO: do we really want to consider this a stop?
            // shouldn't we just stop the repeater and wait until mouseup before
            // we trigger the stop event?
            "mouseleave .ui-spinner-button": "_stop"
        },

        // Support mobile enhanced option and make backcompat more sane
        _enhance: function() {
            this.uiSpinner = this.element
                .attr("autocomplete", "off")
                .wrap("<span>")
                .parent()

                // Add buttons
                .append(
                    "<a></a><a></a>"
                );
        },

        _draw: function() {
            this._enhance();

            this._addClass(this.uiSpinner, "ui-spinner", "ui-widget ui-widget-content");
            this._addClass("ui-spinner-input");

            this.element.attr("role", "spinbutton");

            // Button bindings
            this.buttons = this.uiSpinner.children("a")
                .attr("tabIndex", -1)
                .attr("aria-hidden", true)
                .button({
                    classes: {
                        "ui-button": ""
                    }
                });

            // TODO: Right now button does not support classes this is already updated in button PR
            this._removeClass(this.buttons, "ui-corner-all");

            this._addClass(this.buttons.first(), "ui-spinner-button ui-spinner-up");
            this._addClass(this.buttons.last(), "ui-spinner-button ui-spinner-down");
            this.buttons.first().button({
                "icon": this.options.icons.up,
                "showLabel": false
            });
            this.buttons.last().button({
                "icon": this.options.icons.down,
                "showLabel": false
            });

            // IE 6 doesn't understand height: 50% for the buttons
            // unless the wrapper has an explicit height
            if (this.buttons.height() > Math.ceil(this.uiSpinner.height() * 0.5) &&
                this.uiSpinner.height() > 0) {
                this.uiSpinner.height(this.uiSpinner.height());
            }
        },

        _keydown: function(event) {
            var options = this.options,
                keyCode = $.ui.keyCode;

            switch (event.keyCode) {
                case keyCode.UP:
                    this._repeat(null, 1, event);
                    return true;
                case keyCode.DOWN:
                    this._repeat(null, -1, event);
                    return true;
                case keyCode.PAGE_UP:
                    this._repeat(null, options.page, event);
                    return true;
                case keyCode.PAGE_DOWN:
                    this._repeat(null, -options.page, event);
                    return true;
            }

            return false;
        },

        _start: function(event) {
            if (!this.spinning && this._trigger("start", event) === false) {
                return false;
            }

            if (!this.counter) {
                this.counter = 1;
            }
            this.spinning = true;
            return true;
        },

        _repeat: function(i, steps, event) {
            i = i || 500;

            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                this._repeat(40, steps, event);
            }, i);

            this._spin(steps * this.options.step, event);
        },

        _spin: function(step, event) {
            var value = this.value() || 0;

            if (!this.counter) {
                this.counter = 1;
            }

            value = this._adjustValue(value + step * this._increment(this.counter));

            if (!this.spinning || this._trigger("spin", event, {
                    value: value
                }) !== false) {
                this._value(value);
                this.counter++;
            }
        },

        _increment: function(i) {
            var incremental = this.options.incremental;

            if (incremental) {
                return typeof incremental === "function" ?
                    incremental(i) :
                    Math.floor(i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1);
            }

            return 1;
        },

        _precision: function() {
            var precision = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                precision = Math.max(precision, this._precisionOf(this.options.min));
            }
            return precision;
        },

        _precisionOf: function(num) {
            var str = num.toString(),
                decimal = str.indexOf(".");
            return decimal === -1 ? 0 : str.length - decimal - 1;
        },

        _adjustValue: function(value) {
            var base, aboveMin,
                options = this.options;

            // Make sure we're at a valid step
            // - find out where we are relative to the base (min or 0)
            base = options.min !== null ? options.min : 0;
            aboveMin = value - base;

            // - round to the nearest step
            aboveMin = Math.round(aboveMin / options.step) * options.step;

            // - rounding is based on 0, so adjust back to our base
            value = base + aboveMin;

            // Fix precision from bad JS floating point math
            value = parseFloat(value.toFixed(this._precision()));

            // Clamp the value
            if (options.max !== null && value > options.max) {
                return options.max;
            }
            if (options.min !== null && value < options.min) {
                return options.min;
            }

            return value;
        },

        _stop: function(event) {
            if (!this.spinning) {
                return;
            }

            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = false;
            this._trigger("stop", event);
        },

        _setOption: function(key, value) {
            var prevValue, first, last;

            if (key === "culture" || key === "numberFormat") {
                prevValue = this._parse(this.element.val());
                this.options[key] = value;
                this.element.val(this._format(prevValue));
                return;
            }

            if (key === "max" || key === "min" || key === "step") {
                if (typeof value === "string") {
                    value = this._parse(value);
                }
            }
            if (key === "icons") {
                first = this.buttons.first().find(".ui-icon");
                this._removeClass(first, null, this.options.icons.up);
                this._addClass(first, null, value.up);
                last = this.buttons.last().find(".ui-icon");
                this._removeClass(last, null, this.options.icons.down);
                this._addClass(last, null, value.down);
            }

            this._super(key, value);
        },

        _setOptionDisabled: function(value) {
            this._super(value);

            this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!value);
            this.element.prop("disabled", !!value);
            this.buttons.button(value ? "disable" : "enable");
        },

        _setOptions: spinnerModifier(function(options) {
            this._super(options);
        }),

        _parse: function(val) {
            if (typeof val === "string" && val !== "") {
                val = window.Globalize && this.options.numberFormat ?
                    Globalize.parseFloat(val, 10, this.options.culture) : +val;
            }
            return val === "" || isNaN(val) ? null : val;
        },

        _format: function(value) {
            if (value === "") {
                return "";
            }
            return window.Globalize && this.options.numberFormat ?
                Globalize.format(value, this.options.numberFormat, this.options.culture) :
                value;
        },

        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,

                // TODO: what should we do with values that can't be parsed?
                "aria-valuenow": this._parse(this.element.val())
            });
        },

        isValid: function() {
            var value = this.value();

            // Null is invalid
            if (value === null) {
                return false;
            }

            // If value gets adjusted, it's invalid
            return value === this._adjustValue(value);
        },

        // Update the value without triggering change
        _value: function(value, allowAny) {
            var parsed;
            if (value !== "") {
                parsed = this._parse(value);
                if (parsed !== null) {
                    if (!allowAny) {
                        parsed = this._adjustValue(parsed);
                    }
                    value = this._format(parsed);
                }
            }
            this.element.val(value);
            this._refresh();
        },

        _destroy: function() {
            this.element
                .prop("disabled", false)
                .removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow");

            this.uiSpinner.replaceWith(this.element);
        },

        stepUp: spinnerModifier(function(steps) {
            this._stepUp(steps);
        }),
        _stepUp: function(steps) {
            if (this._start()) {
                this._spin((steps || 1) * this.options.step);
                this._stop();
            }
        },

        stepDown: spinnerModifier(function(steps) {
            this._stepDown(steps);
        }),
        _stepDown: function(steps) {
            if (this._start()) {
                this._spin((steps || 1) * -this.options.step);
                this._stop();
            }
        },

        pageUp: spinnerModifier(function(pages) {
            this._stepUp((pages || 1) * this.options.page);
        }),

        pageDown: spinnerModifier(function(pages) {
            this._stepDown((pages || 1) * this.options.page);
        }),

        value: function(newVal) {
            if (!arguments.length) {
                return this._parse(this.element.val());
            }
            spinnerModifier(this._value).call(this, newVal);
        },

        widget: function() {
            return this.uiSpinner;
        }
    });

    // DEPRECATED
    // TODO: switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) {

        // Backcompat for spinner html extension points
        $.widget("ui.spinner", $.ui.spinner, {
            _enhance: function() {
                this.uiSpinner = this.element
                    .attr("autocomplete", "off")
                    .wrap(this._uiSpinnerHtml())
                    .parent()

                    // Add buttons
                    .append(this._buttonHtml());
            },
            _uiSpinnerHtml: function() {
                return "<span>";
            },

            _buttonHtml: function() {
                return "<a></a><a></a>";
            }
        });
    }

    return $.ui.spinner;

});






/*!
 * jQuery UI Tabs 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Tabs
//>>group: Widgets
//>>description: Transforms a set of container elements into a tab structure.
//>>docs: http://api.jqueryui.com/tabs/
//>>demos: http://jqueryui.com/tabs/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/tabs.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../keycode",
            "../safe-active-element",
            "../unique-id",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.tabs", {
        version: "1.13.0",
        delay: 300,
        options: {
            active: null,
            classes: {
                "ui-tabs": "ui-corner-all",
                "ui-tabs-nav": "ui-corner-all",
                "ui-tabs-panel": "ui-corner-bottom",
                "ui-tabs-tab": "ui-corner-top"
            },
            collapsible: false,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,

            // Callbacks
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },

        _isLocal: (function() {
            var rhash = /#.*$/;

            return function(anchor) {
                var anchorUrl, locationUrl;

                anchorUrl = anchor.href.replace(rhash, "");
                locationUrl = location.href.replace(rhash, "");

                // Decoding may throw an error if the URL isn't UTF-8 (#9518)
                try {
                    anchorUrl = decodeURIComponent(anchorUrl);
                } catch (error) {}
                try {
                    locationUrl = decodeURIComponent(locationUrl);
                } catch (error) {}

                return anchor.hash.length > 1 && anchorUrl === locationUrl;
            };
        })(),

        _create: function() {
            var that = this,
                options = this.options;

            this.running = false;

            this._addClass("ui-tabs", "ui-widget ui-widget-content");
            this._toggleClass("ui-tabs-collapsible", null, options.collapsible);

            this._processTabs();
            options.active = this._initialActive();

            // Take disabling tabs via class attribute from HTML
            // into account and update option properly.
            if (Array.isArray(options.disabled)) {
                options.disabled = $.uniqueSort(options.disabled.concat(
                    $.map(this.tabs.filter(".ui-state-disabled"), function(li) {
                        return that.tabs.index(li);
                    })
                )).sort();
            }

            // Check for length avoids error when initializing empty list
            if (this.options.active !== false && this.anchors.length) {
                this.active = this._findActive(options.active);
            } else {
                this.active = $();
            }

            this._refresh();

            if (this.active.length) {
                this.load(options.active);
            }
        },

        _initialActive: function() {
            var active = this.options.active,
                collapsible = this.options.collapsible,
                locationHash = location.hash.substring(1);

            if (active === null) {

                // check the fragment identifier in the URL
                if (locationHash) {
                    this.tabs.each(function(i, tab) {
                        if ($(tab).attr("aria-controls") === locationHash) {
                            active = i;
                            return false;
                        }
                    });
                }

                // Check for a tab marked active via a class
                if (active === null) {
                    active = this.tabs.index(this.tabs.filter(".ui-tabs-active"));
                }

                // No active tab, set to false
                if (active === null || active === -1) {
                    active = this.tabs.length ? 0 : false;
                }
            }

            // Handle numbers: negative, out of range
            if (active !== false) {
                active = this.tabs.index(this.tabs.eq(active));
                if (active === -1) {
                    active = collapsible ? false : 0;
                }
            }

            // Don't allow collapsible: false and active: false
            if (!collapsible && active === false && this.anchors.length) {
                active = 0;
            }

            return active;
        },

        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: !this.active.length ? $() : this._getPanelForTab(this.active)
            };
        },

        _tabKeydown: function(event) {
            var focusedTab = $($.ui.safeActiveElement(this.document[0])).closest("li"),
                selectedIndex = this.tabs.index(focusedTab),
                goingForward = true;

            if (this._handlePageNav(event)) {
                return;
            }

            switch (event.keyCode) {
                case $.ui.keyCode.RIGHT:
                case $.ui.keyCode.DOWN:
                    selectedIndex++;
                    break;
                case $.ui.keyCode.UP:
                case $.ui.keyCode.LEFT:
                    goingForward = false;
                    selectedIndex--;
                    break;
                case $.ui.keyCode.END:
                    selectedIndex = this.anchors.length - 1;
                    break;
                case $.ui.keyCode.HOME:
                    selectedIndex = 0;
                    break;
                case $.ui.keyCode.SPACE:

                    // Activate only, no collapsing
                    event.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(selectedIndex);
                    return;
                case $.ui.keyCode.ENTER:

                    // Toggle (cancel delayed activation, allow collapsing)
                    event.preventDefault();
                    clearTimeout(this.activating);

                    // Determine if we should collapse or activate
                    this._activate(selectedIndex === this.options.active ? false : selectedIndex);
                    return;
                default:
                    return;
            }

            // Focus the appropriate tab, based on which key was pressed
            event.preventDefault();
            clearTimeout(this.activating);
            selectedIndex = this._focusNextTab(selectedIndex, goingForward);

            // Navigating with control/command key will prevent automatic activation
            if (!event.ctrlKey && !event.metaKey) {

                // Update aria-selected immediately so that AT think the tab is already selected.
                // Otherwise AT may confuse the user by stating that they need to activate the tab,
                // but the tab will already be activated by the time the announcement finishes.
                focusedTab.attr("aria-selected", "false");
                this.tabs.eq(selectedIndex).attr("aria-selected", "true");

                this.activating = this._delay(function() {
                    this.option("active", selectedIndex);
                }, this.delay);
            }
        },

        _panelKeydown: function(event) {
            if (this._handlePageNav(event)) {
                return;
            }

            // Ctrl+up moves focus to the current tab
            if (event.ctrlKey && event.keyCode === $.ui.keyCode.UP) {
                event.preventDefault();
                this.active.trigger("focus");
            }
        },

        // Alt+page up/down moves focus to the previous/next tab (and activates)
        _handlePageNav: function(event) {
            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, false));
                return true;
            }
            if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, true));
                return true;
            }
        },

        _findNextTab: function(index, goingForward) {
            var lastTabIndex = this.tabs.length - 1;

            function constrain() {
                if (index > lastTabIndex) {
                    index = 0;
                }
                if (index < 0) {
                    index = lastTabIndex;
                }
                return index;
            }

            while ($.inArray(constrain(), this.options.disabled) !== -1) {
                index = goingForward ? index + 1 : index - 1;
            }

            return index;
        },

        _focusNextTab: function(index, goingForward) {
            index = this._findNextTab(index, goingForward);
            this.tabs.eq(index).trigger("focus");
            return index;
        },

        _setOption: function(key, value) {
            if (key === "active") {

                // _activate() will handle invalid values and update this.options
                this._activate(value);
                return;
            }

            this._super(key, value);

            if (key === "collapsible") {
                this._toggleClass("ui-tabs-collapsible", null, value);

                // Setting collapsible: false while collapsed; open first panel
                if (!value && this.options.active === false) {
                    this._activate(0);
                }
            }

            if (key === "event") {
                this._setupEvents(value);
            }

            if (key === "heightStyle") {
                this._setupHeightStyle(value);
            }
        },

        _sanitizeSelector: function(hash) {
            return hash ? hash.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
        },

        refresh: function() {
            var options = this.options,
                lis = this.tablist.children(":has(a[href])");

            // Get disabled tabs from class attribute from HTML
            // this will get converted to a boolean if needed in _refresh()
            options.disabled = $.map(lis.filter(".ui-state-disabled"), function(tab) {
                return lis.index(tab);
            });

            this._processTabs();

            // Was collapsed or no tabs
            if (options.active === false || !this.anchors.length) {
                options.active = false;
                this.active = $();

                // was active, but active tab is gone
            } else if (this.active.length && !$.contains(this.tablist[0], this.active[0])) {

                // all remaining tabs are disabled
                if (this.tabs.length === options.disabled.length) {
                    options.active = false;
                    this.active = $();

                    // activate previous tab
                } else {
                    this._activate(this._findNextTab(Math.max(0, options.active - 1), false));
                }

                // was active, active tab still exists
            } else {

                // make sure active index is correct
                options.active = this.tabs.index(this.active);
            }

            this._refresh();
        },

        _refresh: function() {
            this._setOptionDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);

            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active))
                .hide()
                .attr({
                    "aria-hidden": "true"
                });

            // Make sure one tab is in the tab order
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0);
            } else {
                this.active
                    .attr({
                        "aria-selected": "true",
                        "aria-expanded": "true",
                        tabIndex: 0
                    });
                this._addClass(this.active, "ui-tabs-active", "ui-state-active");
                this._getPanelForTab(this.active)
                    .show()
                    .attr({
                        "aria-hidden": "false"
                    });
            }
        },

        _processTabs: function() {
            var that = this,
                prevTabs = this.tabs,
                prevAnchors = this.anchors,
                prevPanels = this.panels;

            this.tablist = this._getList().attr("role", "tablist");
            this._addClass(this.tablist, "ui-tabs-nav",
                "ui-helper-reset ui-helper-clearfix ui-widget-header");

            // Prevent users from focusing disabled tabs via click
            this.tablist
                .on("mousedown" + this.eventNamespace, "> li", function(event) {
                    if ($(this).is(".ui-state-disabled")) {
                        event.preventDefault();
                    }
                })

                // Support: IE <9
                // Preventing the default action in mousedown doesn't prevent IE
                // from focusing the element, so if the anchor gets focused, blur.
                // We don't have to worry about focusing the previously focused
                // element since clicking on a non-focusable element should focus
                // the body anyway.
                .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function() {
                    if ($(this).closest("li").is(".ui-state-disabled")) {
                        this.blur();
                    }
                });

            this.tabs = this.tablist.find("> li:has(a[href])")
                .attr({
                    role: "tab",
                    tabIndex: -1
                });
            this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default");

            this.anchors = this.tabs.map(function() {
                    return $("a", this)[0];
                })
                .attr({
                    tabIndex: -1
                });
            this._addClass(this.anchors, "ui-tabs-anchor");

            this.panels = $();

            this.anchors.each(function(i, anchor) {
                var selector, panel, panelId,
                    anchorId = $(anchor).uniqueId().attr("id"),
                    tab = $(anchor).closest("li"),
                    originalAriaControls = tab.attr("aria-controls");

                // Inline tab
                if (that._isLocal(anchor)) {
                    selector = anchor.hash;
                    panelId = selector.substring(1);
                    panel = that.element.find(that._sanitizeSelector(selector));

                    // remote tab
                } else {

                    // If the tab doesn't already have aria-controls,
                    // generate an id by using a throw-away element
                    panelId = tab.attr("aria-controls") || $({}).uniqueId()[0].id;
                    selector = "#" + panelId;
                    panel = that.element.find(selector);
                    if (!panel.length) {
                        panel = that._createPanel(panelId);
                        panel.insertAfter(that.panels[i - 1] || that.tablist);
                    }
                    panel.attr("aria-live", "polite");
                }

                if (panel.length) {
                    that.panels = that.panels.add(panel);
                }
                if (originalAriaControls) {
                    tab.data("ui-tabs-aria-controls", originalAriaControls);
                }
                tab.attr({
                    "aria-controls": panelId,
                    "aria-labelledby": anchorId
                });
                panel.attr("aria-labelledby", anchorId);
            });

            this.panels.attr("role", "tabpanel");
            this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content");

            // Avoid memory leaks (#10056)
            if (prevTabs) {
                this._off(prevTabs.not(this.tabs));
                this._off(prevAnchors.not(this.anchors));
                this._off(prevPanels.not(this.panels));
            }
        },

        // Allow overriding how to find the list for rare usage scenarios (#7715)
        _getList: function() {
            return this.tablist || this.element.find("ol, ul").eq(0);
        },

        _createPanel: function(id) {
            return $("<div>")
                .attr("id", id)
                .data("ui-tabs-destroy", true);
        },

        _setOptionDisabled: function(disabled) {
            var currentItem, li, i;

            if (Array.isArray(disabled)) {
                if (!disabled.length) {
                    disabled = false;
                } else if (disabled.length === this.anchors.length) {
                    disabled = true;
                }
            }

            // Disable tabs
            for (i = 0;
                (li = this.tabs[i]); i++) {
                currentItem = $(li);
                if (disabled === true || $.inArray(i, disabled) !== -1) {
                    currentItem.attr("aria-disabled", "true");
                    this._addClass(currentItem, null, "ui-state-disabled");
                } else {
                    currentItem.removeAttr("aria-disabled");
                    this._removeClass(currentItem, null, "ui-state-disabled");
                }
            }

            this.options.disabled = disabled;

            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null,
                disabled === true);
        },

        _setupEvents: function(event) {
            var events = {};
            if (event) {
                $.each(event.split(" "), function(index, eventName) {
                    events[eventName] = "_eventHandler";
                });
            }

            this._off(this.anchors.add(this.tabs).add(this.panels));

            // Always prevent the default action, even when disabled
            this._on(true, this.anchors, {
                click: function(event) {
                    event.preventDefault();
                }
            });
            this._on(this.anchors, events);
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            });
            this._on(this.panels, {
                keydown: "_panelKeydown"
            });

            this._focusable(this.tabs);
            this._hoverable(this.tabs);
        },

        _setupHeightStyle: function(heightStyle) {
            var maxHeight,
                parent = this.element.parent();

            if (heightStyle === "fill") {
                maxHeight = parent.height();
                maxHeight -= this.element.outerHeight() - this.element.height();

                this.element.siblings(":visible").each(function() {
                    var elem = $(this),
                        position = elem.css("position");

                    if (position === "absolute" || position === "fixed") {
                        return;
                    }
                    maxHeight -= elem.outerHeight(true);
                });

                this.element.children().not(this.panels).each(function() {
                    maxHeight -= $(this).outerHeight(true);
                });

                this.panels.each(function() {
                        $(this).height(Math.max(0, maxHeight -
                            $(this).innerHeight() + $(this).height()));
                    })
                    .css("overflow", "auto");
            } else if (heightStyle === "auto") {
                maxHeight = 0;
                this.panels.each(function() {
                    maxHeight = Math.max(maxHeight, $(this).height("").height());
                }).height(maxHeight);
            }
        },

        _eventHandler: function(event) {
            var options = this.options,
                active = this.active,
                anchor = $(event.currentTarget),
                tab = anchor.closest("li"),
                clickedIsActive = tab[0] === active[0],
                collapsing = clickedIsActive && options.collapsible,
                toShow = collapsing ? $() : this._getPanelForTab(tab),
                toHide = !active.length ? $() : this._getPanelForTab(active),
                eventData = {
                    oldTab: active,
                    oldPanel: toHide,
                    newTab: collapsing ? $() : tab,
                    newPanel: toShow
                };

            event.preventDefault();

            if (tab.hasClass("ui-state-disabled") ||

                // tab is already loading
                tab.hasClass("ui-tabs-loading") ||

                // can't switch durning an animation
                this.running ||

                // click on active header, but not collapsible
                (clickedIsActive && !options.collapsible) ||

                // allow canceling activation
                (this._trigger("beforeActivate", event, eventData) === false)) {
                return;
            }

            options.active = collapsing ? false : this.tabs.index(tab);

            this.active = clickedIsActive ? $() : tab;
            if (this.xhr) {
                this.xhr.abort();
            }

            if (!toHide.length && !toShow.length) {
                $.error("jQuery UI Tabs: Mismatching fragment identifier.");
            }

            if (toShow.length) {
                this.load(this.tabs.index(tab), event);
            }
            this._toggle(event, eventData);
        },

        // Handles show/hide for selecting tabs
        _toggle: function(event, eventData) {
            var that = this,
                toShow = eventData.newPanel,
                toHide = eventData.oldPanel;

            this.running = true;

            function complete() {
                that.running = false;
                that._trigger("activate", event, eventData);
            }

            function show() {
                that._addClass(eventData.newTab.closest("li"), "ui-tabs-active", "ui-state-active");

                if (toShow.length && that.options.show) {
                    that._show(toShow, that.options.show, complete);
                } else {
                    toShow.show();
                    complete();
                }
            }

            // Start out by hiding, then showing, then completing
            if (toHide.length && this.options.hide) {
                this._hide(toHide, this.options.hide, function() {
                    that._removeClass(eventData.oldTab.closest("li"),
                        "ui-tabs-active", "ui-state-active");
                    show();
                });
            } else {
                this._removeClass(eventData.oldTab.closest("li"),
                    "ui-tabs-active", "ui-state-active");
                toHide.hide();
                show();
            }

            toHide.attr("aria-hidden", "true");
            eventData.oldTab.attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            });

            // If we're switching tabs, remove the old tab from the tab order.
            // If we're opening from collapsed state, remove the previous tab from the tab order.
            // If we're collapsing, then keep the collapsing tab in the tab order.
            if (toShow.length && toHide.length) {
                eventData.oldTab.attr("tabIndex", -1);
            } else if (toShow.length) {
                this.tabs.filter(function() {
                        return $(this).attr("tabIndex") === 0;
                    })
                    .attr("tabIndex", -1);
            }

            toShow.attr("aria-hidden", "false");
            eventData.newTab.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            });
        },

        _activate: function(index) {
            var anchor,
                active = this._findActive(index);

            // Trying to activate the already active panel
            if (active[0] === this.active[0]) {
                return;
            }

            // Trying to collapse, simulate a click on the current active header
            if (!active.length) {
                active = this.active;
            }

            anchor = active.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: anchor,
                currentTarget: anchor,
                preventDefault: $.noop
            });
        },

        _findActive: function(index) {
            return index === false ? $() : this.tabs.eq(index);
        },

        _getIndex: function(index) {

            // meta-function to give users option to provide a href string instead of a numerical index.
            if (typeof index === "string") {
                index = this.anchors.index(this.anchors.filter("[href$='" +
                    $.escapeSelector(index) + "']"));
            }

            return index;
        },

        _destroy: function() {
            if (this.xhr) {
                this.xhr.abort();
            }

            this.tablist
                .removeAttr("role")
                .off(this.eventNamespace);

            this.anchors
                .removeAttr("role tabIndex")
                .removeUniqueId();

            this.tabs.add(this.panels).each(function() {
                if ($.data(this, "ui-tabs-destroy")) {
                    $(this).remove();
                } else {
                    $(this).removeAttr("role tabIndex " +
                        "aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded");
                }
            });

            this.tabs.each(function() {
                var li = $(this),
                    prev = li.data("ui-tabs-aria-controls");
                if (prev) {
                    li
                        .attr("aria-controls", prev)
                        .removeData("ui-tabs-aria-controls");
                } else {
                    li.removeAttr("aria-controls");
                }
            });

            this.panels.show();

            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "");
            }
        },

        enable: function(index) {
            var disabled = this.options.disabled;
            if (disabled === false) {
                return;
            }

            if (index === undefined) {
                disabled = false;
            } else {
                index = this._getIndex(index);
                if (Array.isArray(disabled)) {
                    disabled = $.map(disabled, function(num) {
                        return num !== index ? num : null;
                    });
                } else {
                    disabled = $.map(this.tabs, function(li, num) {
                        return num !== index ? num : null;
                    });
                }
            }
            this._setOptionDisabled(disabled);
        },

        disable: function(index) {
            var disabled = this.options.disabled;
            if (disabled === true) {
                return;
            }

            if (index === undefined) {
                disabled = true;
            } else {
                index = this._getIndex(index);
                if ($.inArray(index, disabled) !== -1) {
                    return;
                }
                if (Array.isArray(disabled)) {
                    disabled = $.merge([index], disabled).sort();
                } else {
                    disabled = [index];
                }
            }
            this._setOptionDisabled(disabled);
        },

        load: function(index, event) {
            index = this._getIndex(index);
            var that = this,
                tab = this.tabs.eq(index),
                anchor = tab.find(".ui-tabs-anchor"),
                panel = this._getPanelForTab(tab),
                eventData = {
                    tab: tab,
                    panel: panel
                },
                complete = function(jqXHR, status) {
                    if (status === "abort") {
                        that.panels.stop(false, true);
                    }

                    that._removeClass(tab, "ui-tabs-loading");
                    panel.removeAttr("aria-busy");

                    if (jqXHR === that.xhr) {
                        delete that.xhr;
                    }
                };

            // Not remote
            if (this._isLocal(anchor[0])) {
                return;
            }

            this.xhr = $.ajax(this._ajaxSettings(anchor, event, eventData));

            // Support: jQuery <1.8
            // jQuery <1.8 returns false if the request is canceled in beforeSend,
            // but as of 1.8, $.ajax() always returns a jqXHR object.
            if (this.xhr && this.xhr.statusText !== "canceled") {
                this._addClass(tab, "ui-tabs-loading");
                panel.attr("aria-busy", "true");

                this.xhr
                    .done(function(response, status, jqXHR) {

                        // support: jQuery <1.8
                        // http://bugs.jquery.com/ticket/11778
                        setTimeout(function() {
                            panel.html(response);
                            that._trigger("load", event, eventData);

                            complete(jqXHR, status);
                        }, 1);
                    })
                    .fail(function(jqXHR, status) {

                        // support: jQuery <1.8
                        // http://bugs.jquery.com/ticket/11778
                        setTimeout(function() {
                            complete(jqXHR, status);
                        }, 1);
                    });
            }
        },

        _ajaxSettings: function(anchor, event, eventData) {
            var that = this;
            return {

                // Support: IE <11 only
                // Strip any hash that exists to prevent errors with the Ajax request
                url: anchor.attr("href").replace(/#.*$/, ""),
                beforeSend: function(jqXHR, settings) {
                    return that._trigger("beforeLoad", event,
                        $.extend({
                            jqXHR: jqXHR,
                            ajaxSettings: settings
                        }, eventData));
                }
            };
        },

        _getPanelForTab: function(tab) {
            var id = $(tab).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + id));
        }
    });

    // DEPRECATED
    // TODO: Switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) {

        // Backcompat for ui-tab class (now ui-tabs-tab)
        $.widget("ui.tabs", $.ui.tabs, {
            _processTabs: function() {
                this._superApply(arguments);
                this._addClass(this.tabs, "ui-tab");
            }
        });
    }

    return $.ui.tabs;

});






/*!
 * jQuery UI Tooltip 1.13.0
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Tooltip
//>>group: Widgets
//>>description: Shows additional information for any element on hover or focus.
//>>docs: http://api.jqueryui.com/tooltip/
//>>demos: http://jqueryui.com/tooltip/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/tooltip.css
//>>css.theme: ../../themes/base/theme.css

(function(factory) {
    "use strict";

    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define([
            "jquery",
            "../keycode",
            "../position",
            "../unique-id",
            "../version",
            "../widget"
        ], factory);
    } else {

        // Browser globals
        factory(jQuery);
    }
})(function($) {
    "use strict";

    $.widget("ui.tooltip", {
        version: "1.13.0",
        options: {
            classes: {
                "ui-tooltip": "ui-corner-all ui-widget-shadow"
            },
            content: function() {
                var title = $(this).attr("title");

                // Escape title, since we're going from an attribute to raw HTML
                return $("<a>").text(title).html();
            },
            hide: true,

            // Disabled elements have inconsistent behavior across browsers (#8661)
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: true,
            track: false,

            // Callbacks
            close: null,
            open: null
        },

        _addDescribedBy: function(elem, id) {
            var describedby = (elem.attr("aria-describedby") || "").split(/\s+/);
            describedby.push(id);
            elem
                .data("ui-tooltip-id", id)
                .attr("aria-describedby", String.prototype.trim.call(describedby.join(" ")));
        },

        _removeDescribedBy: function(elem) {
            var id = elem.data("ui-tooltip-id"),
                describedby = (elem.attr("aria-describedby") || "").split(/\s+/),
                index = $.inArray(id, describedby);

            if (index !== -1) {
                describedby.splice(index, 1);
            }

            elem.removeData("ui-tooltip-id");
            describedby = String.prototype.trim.call(describedby.join(" "));
            if (describedby) {
                elem.attr("aria-describedby", describedby);
            } else {
                elem.removeAttr("aria-describedby");
            }
        },

        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            });

            // IDs of generated tooltips, needed for destroy
            this.tooltips = {};

            // IDs of parent tooltips where we removed the title attribute
            this.parents = {};

            // Append the aria-live region so tooltips announce correctly
            this.liveRegion = $("<div>")
                .attr({
                    role: "log",
                    "aria-live": "assertive",
                    "aria-relevant": "additions"
                })
                .appendTo(this.document[0].body);
            this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible");

            this.disabledTitles = $([]);
        },

        _setOption: function(key, value) {
            var that = this;

            this._super(key, value);

            if (key === "content") {
                $.each(this.tooltips, function(id, tooltipData) {
                    that._updateContent(tooltipData.element);
                });
            }
        },

        _setOptionDisabled: function(value) {
            this[value ? "_disable" : "_enable"]();
        },

        _disable: function() {
            var that = this;

            // Close open tooltips
            $.each(this.tooltips, function(id, tooltipData) {
                var event = $.Event("blur");
                event.target = event.currentTarget = tooltipData.element[0];
                that.close(event, true);
            });

            // Remove title attributes to prevent native tooltips
            this.disabledTitles = this.disabledTitles.add(
                this.element.find(this.options.items).addBack()
                .filter(function() {
                    var element = $(this);
                    if (element.is("[title]")) {
                        return element
                            .data("ui-tooltip-title", element.attr("title"))
                            .removeAttr("title");
                    }
                })
            );
        },

        _enable: function() {

            // restore title attributes
            this.disabledTitles.each(function() {
                var element = $(this);
                if (element.data("ui-tooltip-title")) {
                    element.attr("title", element.data("ui-tooltip-title"));
                }
            });
            this.disabledTitles = $([]);
        },

        open: function(event) {
            var that = this,
                target = $(event ? event.target : this.element)

                // we need closest here due to mouseover bubbling,
                // but always pointing at the same event target
                .closest(this.options.items);

            // No element to show a tooltip for or the tooltip is already open
            if (!target.length || target.data("ui-tooltip-id")) {
                return;
            }

            if (target.attr("title")) {
                target.data("ui-tooltip-title", target.attr("title"));
            }

            target.data("ui-tooltip-open", true);

            // Kill parent tooltips, custom or native, for hover
            if (event && event.type === "mouseover") {
                target.parents().each(function() {
                    var parent = $(this),
                        blurEvent;
                    if (parent.data("ui-tooltip-open")) {
                        blurEvent = $.Event("blur");
                        blurEvent.target = blurEvent.currentTarget = this;
                        that.close(blurEvent, true);
                    }
                    if (parent.attr("title")) {
                        parent.uniqueId();
                        that.parents[this.id] = {
                            element: this,
                            title: parent.attr("title")
                        };
                        parent.attr("title", "");
                    }
                });
            }

            this._registerCloseHandlers(event, target);
            this._updateContent(target, event);
        },

        _updateContent: function(target, event) {
            var content,
                contentOption = this.options.content,
                that = this,
                eventType = event ? event.type : null;

            if (typeof contentOption === "string" || contentOption.nodeType ||
                contentOption.jquery) {
                return this._open(event, target, contentOption);
            }

            content = contentOption.call(target[0], function(response) {

                // IE may instantly serve a cached response for ajax requests
                // delay this call to _open so the other call to _open runs first
                that._delay(function() {

                    // Ignore async response if tooltip was closed already
                    if (!target.data("ui-tooltip-open")) {
                        return;
                    }

                    // JQuery creates a special event for focusin when it doesn't
                    // exist natively. To improve performance, the native event
                    // object is reused and the type is changed. Therefore, we can't
                    // rely on the type being correct after the event finished
                    // bubbling, so we set it back to the previous value. (#8740)
                    if (event) {
                        event.type = eventType;
                    }
                    this._open(event, target, response);
                });
            });
            if (content) {
                this._open(event, target, content);
            }
        },

        _open: function(event, target, content) {
            var tooltipData, tooltip, delayedShow, a11yContent,
                positionOption = $.extend({}, this.options.position);

            if (!content) {
                return;
            }

            // Content can be updated multiple times. If the tooltip already
            // exists, then just update the content and bail.
            tooltipData = this._find(target);
            if (tooltipData) {
                tooltipData.tooltip.find(".ui-tooltip-content").html(content);
                return;
            }

            // If we have a title, clear it to prevent the native tooltip
            // we have to check first to avoid defining a title if none exists
            // (we don't want to cause an element to start matching [title])
            //
            // We use removeAttr only for key events, to allow IE to export the correct
            // accessible attributes. For mouse events, set to empty string to avoid
            // native tooltip showing up (happens only when removing inside mouseover).
            if (target.is("[title]")) {
                if (event && event.type === "mouseover") {
                    target.attr("title", "");
                } else {
                    target.removeAttr("title");
                }
            }

            tooltipData = this._tooltip(target);
            tooltip = tooltipData.tooltip;
            this._addDescribedBy(target, tooltip.attr("id"));
            tooltip.find(".ui-tooltip-content").html(content);

            // Support: Voiceover on OS X, JAWS on IE <= 9
            // JAWS announces deletions even when aria-relevant="additions"
            // Voiceover will sometimes re-read the entire log region's contents from the beginning
            this.liveRegion.children().hide();
            a11yContent = $("<div>").html(tooltip.find(".ui-tooltip-content").html());
            a11yContent.removeAttr("name").find("[name]").removeAttr("name");
            a11yContent.removeAttr("id").find("[id]").removeAttr("id");
            a11yContent.appendTo(this.liveRegion);

            function position(event) {
                positionOption.of = event;
                if (tooltip.is(":hidden")) {
                    return;
                }
                tooltip.position(positionOption);
            }
            if (this.options.track && event && /^mouse/.test(event.type)) {
                this._on(this.document, {
                    mousemove: position
                });

                // trigger once to override element-relative positioning
                position(event);
            } else {
                tooltip.position($.extend({ of: target
                }, this.options.position));
            }

            tooltip.hide();

            this._show(tooltip, this.options.show);

            // Handle tracking tooltips that are shown with a delay (#8644). As soon
            // as the tooltip is visible, position the tooltip using the most recent
            // event.
            // Adds the check to add the timers only when both delay and track options are set (#14682)
            if (this.options.track && this.options.show && this.options.show.delay) {
                delayedShow = this.delayedShow = setInterval(function() {
                    if (tooltip.is(":visible")) {
                        position(positionOption.of);
                        clearInterval(delayedShow);
                    }
                }, 13);
            }

            this._trigger("open", event, {
                tooltip: tooltip
            });
        },

        _registerCloseHandlers: function(event, target) {
            var events = {
                keyup: function(event) {
                    if (event.keyCode === $.ui.keyCode.ESCAPE) {
                        var fakeEvent = $.Event(event);
                        fakeEvent.currentTarget = target[0];
                        this.close(fakeEvent, true);
                    }
                }
            };

            // Only bind remove handler for delegated targets. Non-delegated
            // tooltips will handle this in destroy.
            if (target[0] !== this.element[0]) {
                events.remove = function() {
                    this._removeTooltip(this._find(target).tooltip);
                };
            }

            if (!event || event.type === "mouseover") {
                events.mouseleave = "close";
            }
            if (!event || event.type === "focusin") {
                events.focusout = "close";
            }
            this._on(true, target, events);
        },

        close: function(event) {
            var tooltip,
                that = this,
                target = $(event ? event.currentTarget : this.element),
                tooltipData = this._find(target);

            // The tooltip may already be closed
            if (!tooltipData) {

                // We set ui-tooltip-open immediately upon open (in open()), but only set the
                // additional data once there's actually content to show (in _open()). So even if the
                // tooltip doesn't have full data, we always remove ui-tooltip-open in case we're in
                // the period between open() and _open().
                target.removeData("ui-tooltip-open");
                return;
            }

            tooltip = tooltipData.tooltip;

            // Disabling closes the tooltip, so we need to track when we're closing
            // to avoid an infinite loop in case the tooltip becomes disabled on close
            if (tooltipData.closing) {
                return;
            }

            // Clear the interval for delayed tracking tooltips
            clearInterval(this.delayedShow);

            // Only set title if we had one before (see comment in _open())
            // If the title attribute has changed since open(), don't restore
            if (target.data("ui-tooltip-title") && !target.attr("title")) {
                target.attr("title", target.data("ui-tooltip-title"));
            }

            this._removeDescribedBy(target);

            tooltipData.hiding = true;
            tooltip.stop(true);
            this._hide(tooltip, this.options.hide, function() {
                that._removeTooltip($(this));
            });

            target.removeData("ui-tooltip-open");
            this._off(target, "mouseleave focusout keyup");

            // Remove 'remove' binding only on delegated targets
            if (target[0] !== this.element[0]) {
                this._off(target, "remove");
            }
            this._off(this.document, "mousemove");

            if (event && event.type === "mouseleave") {
                $.each(this.parents, function(id, parent) {
                    $(parent.element).attr("title", parent.title);
                    delete that.parents[id];
                });
            }

            tooltipData.closing = true;
            this._trigger("close", event, {
                tooltip: tooltip
            });
            if (!tooltipData.hiding) {
                tooltipData.closing = false;
            }
        },

        _tooltip: function(element) {
            var tooltip = $("<div>").attr("role", "tooltip"),
                content = $("<div>").appendTo(tooltip),
                id = tooltip.uniqueId().attr("id");

            this._addClass(content, "ui-tooltip-content");
            this._addClass(tooltip, "ui-tooltip", "ui-widget ui-widget-content");

            tooltip.appendTo(this._appendTo(element));

            return this.tooltips[id] = {
                element: element,
                tooltip: tooltip
            };
        },

        _find: function(target) {
            var id = target.data("ui-tooltip-id");
            return id ? this.tooltips[id] : null;
        },

        _removeTooltip: function(tooltip) {

            // Clear the interval for delayed tracking tooltips
            clearInterval(this.delayedShow);

            tooltip.remove();
            delete this.tooltips[tooltip.attr("id")];
        },

        _appendTo: function(target) {
            var element = target.closest(".ui-front, dialog");

            if (!element.length) {
                element = this.document[0].body;
            }

            return element;
        },

        _destroy: function() {
            var that = this;

            // Close open tooltips
            $.each(this.tooltips, function(id, tooltipData) {

                // Delegate to close method to handle common cleanup
                var event = $.Event("blur"),
                    element = tooltipData.element;
                event.target = event.currentTarget = element[0];
                that.close(event, true);

                // Remove immediately; destroying an open tooltip doesn't use the
                // hide animation
                $("#" + id).remove();

                // Restore the title
                if (element.data("ui-tooltip-title")) {

                    // If the title attribute has changed since open(), don't restore
                    if (!element.attr("title")) {
                        element.attr("title", element.data("ui-tooltip-title"));
                    }
                    element.removeData("ui-tooltip-title");
                }
            });
            this.liveRegion.remove();
        }
    });

    // DEPRECATED
    // TODO: Switch return back to widget declaration at top of file when this is removed
    if ($.uiBackCompat !== false) {

        // Backcompat for tooltipClass option
        $.widget("ui.tooltip", $.ui.tooltip, {
            options: {
                tooltipClass: null
            },
            _tooltip: function() {
                var tooltipData = this._superApply(arguments);
                if (this.options.tooltipClass) {
                    tooltipData.tooltip.addClass(this.options.tooltipClass);
                }
                return tooltipData;
            }
        });
    }

    return $.ui.tooltip;

});

























































(function($) {

    $.fn.railsSortable = function(options) {
        options = options || {};
        var settings = $.extend({}, options);

        settings.baseUrl = settings.baseUrl || '';

        settings.update = function(event, ui) {
            if (typeof options.update === 'function') {
                options.update(event, ui);
            }

            $.ajax({
                type: 'POST',
                url: settings.baseUrl + '/sortable/reorder',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify({
                    rails_sortable: $(this).sortable('toArray'),
                }),
            });
        }

        this.sortable(settings);
    };
})(jQuery);
(function(global, factory) {
    typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self,
        factory(global.ActiveStorage = {}));
})(this, (function(exports) {
    "use strict";
    var sparkMd5 = {
        exports: {}
    };
    (function(module, exports) {
        (function(factory) {
            {
                module.exports = factory();
            }
        })((function(undefined$1) {
            var hex_chr = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"];

            function md5cycle(x, k) {
                var a = x[0],
                    b = x[1],
                    c = x[2],
                    d = x[3];
                a += (b & c | ~b & d) + k[0] - 680876936 | 0;
                a = (a << 7 | a >>> 25) + b | 0;
                d += (a & b | ~a & c) + k[1] - 389564586 | 0;
                d = (d << 12 | d >>> 20) + a | 0;
                c += (d & a | ~d & b) + k[2] + 606105819 | 0;
                c = (c << 17 | c >>> 15) + d | 0;
                b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
                b = (b << 22 | b >>> 10) + c | 0;
                a += (b & c | ~b & d) + k[4] - 176418897 | 0;
                a = (a << 7 | a >>> 25) + b | 0;
                d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
                d = (d << 12 | d >>> 20) + a | 0;
                c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
                c = (c << 17 | c >>> 15) + d | 0;
                b += (c & d | ~c & a) + k[7] - 45705983 | 0;
                b = (b << 22 | b >>> 10) + c | 0;
                a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
                a = (a << 7 | a >>> 25) + b | 0;
                d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
                d = (d << 12 | d >>> 20) + a | 0;
                c += (d & a | ~d & b) + k[10] - 42063 | 0;
                c = (c << 17 | c >>> 15) + d | 0;
                b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
                b = (b << 22 | b >>> 10) + c | 0;
                a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
                a = (a << 7 | a >>> 25) + b | 0;
                d += (a & b | ~a & c) + k[13] - 40341101 | 0;
                d = (d << 12 | d >>> 20) + a | 0;
                c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
                c = (c << 17 | c >>> 15) + d | 0;
                b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
                b = (b << 22 | b >>> 10) + c | 0;
                a += (b & d | c & ~d) + k[1] - 165796510 | 0;
                a = (a << 5 | a >>> 27) + b | 0;
                d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
                d = (d << 9 | d >>> 23) + a | 0;
                c += (d & b | a & ~b) + k[11] + 643717713 | 0;
                c = (c << 14 | c >>> 18) + d | 0;
                b += (c & a | d & ~a) + k[0] - 373897302 | 0;
                b = (b << 20 | b >>> 12) + c | 0;
                a += (b & d | c & ~d) + k[5] - 701558691 | 0;
                a = (a << 5 | a >>> 27) + b | 0;
                d += (a & c | b & ~c) + k[10] + 38016083 | 0;
                d = (d << 9 | d >>> 23) + a | 0;
                c += (d & b | a & ~b) + k[15] - 660478335 | 0;
                c = (c << 14 | c >>> 18) + d | 0;
                b += (c & a | d & ~a) + k[4] - 405537848 | 0;
                b = (b << 20 | b >>> 12) + c | 0;
                a += (b & d | c & ~d) + k[9] + 568446438 | 0;
                a = (a << 5 | a >>> 27) + b | 0;
                d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
                d = (d << 9 | d >>> 23) + a | 0;
                c += (d & b | a & ~b) + k[3] - 187363961 | 0;
                c = (c << 14 | c >>> 18) + d | 0;
                b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
                b = (b << 20 | b >>> 12) + c | 0;
                a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
                a = (a << 5 | a >>> 27) + b | 0;
                d += (a & c | b & ~c) + k[2] - 51403784 | 0;
                d = (d << 9 | d >>> 23) + a | 0;
                c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
                c = (c << 14 | c >>> 18) + d | 0;
                b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
                b = (b << 20 | b >>> 12) + c | 0;
                a += (b ^ c ^ d) + k[5] - 378558 | 0;
                a = (a << 4 | a >>> 28) + b | 0;
                d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
                d = (d << 11 | d >>> 21) + a | 0;
                c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
                c = (c << 16 | c >>> 16) + d | 0;
                b += (c ^ d ^ a) + k[14] - 35309556 | 0;
                b = (b << 23 | b >>> 9) + c | 0;
                a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
                a = (a << 4 | a >>> 28) + b | 0;
                d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
                d = (d << 11 | d >>> 21) + a | 0;
                c += (d ^ a ^ b) + k[7] - 155497632 | 0;
                c = (c << 16 | c >>> 16) + d | 0;
                b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
                b = (b << 23 | b >>> 9) + c | 0;
                a += (b ^ c ^ d) + k[13] + 681279174 | 0;
                a = (a << 4 | a >>> 28) + b | 0;
                d += (a ^ b ^ c) + k[0] - 358537222 | 0;
                d = (d << 11 | d >>> 21) + a | 0;
                c += (d ^ a ^ b) + k[3] - 722521979 | 0;
                c = (c << 16 | c >>> 16) + d | 0;
                b += (c ^ d ^ a) + k[6] + 76029189 | 0;
                b = (b << 23 | b >>> 9) + c | 0;
                a += (b ^ c ^ d) + k[9] - 640364487 | 0;
                a = (a << 4 | a >>> 28) + b | 0;
                d += (a ^ b ^ c) + k[12] - 421815835 | 0;
                d = (d << 11 | d >>> 21) + a | 0;
                c += (d ^ a ^ b) + k[15] + 530742520 | 0;
                c = (c << 16 | c >>> 16) + d | 0;
                b += (c ^ d ^ a) + k[2] - 995338651 | 0;
                b = (b << 23 | b >>> 9) + c | 0;
                a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
                a = (a << 6 | a >>> 26) + b | 0;
                d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
                d = (d << 10 | d >>> 22) + a | 0;
                c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
                c = (c << 15 | c >>> 17) + d | 0;
                b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
                b = (b << 21 | b >>> 11) + c | 0;
                a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
                a = (a << 6 | a >>> 26) + b | 0;
                d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
                d = (d << 10 | d >>> 22) + a | 0;
                c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
                c = (c << 15 | c >>> 17) + d | 0;
                b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
                b = (b << 21 | b >>> 11) + c | 0;
                a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
                a = (a << 6 | a >>> 26) + b | 0;
                d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
                d = (d << 10 | d >>> 22) + a | 0;
                c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
                c = (c << 15 | c >>> 17) + d | 0;
                b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
                b = (b << 21 | b >>> 11) + c | 0;
                a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
                a = (a << 6 | a >>> 26) + b | 0;
                d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
                d = (d << 10 | d >>> 22) + a | 0;
                c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
                c = (c << 15 | c >>> 17) + d | 0;
                b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
                b = (b << 21 | b >>> 11) + c | 0;
                x[0] = a + x[0] | 0;
                x[1] = b + x[1] | 0;
                x[2] = c + x[2] | 0;
                x[3] = d + x[3] | 0;
            }

            function md5blk(s) {
                var md5blks = [],
                    i;
                for (i = 0; i < 64; i += 4) {
                    md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);
                }
                return md5blks;
            }

            function md5blk_array(a) {
                var md5blks = [],
                    i;
                for (i = 0; i < 64; i += 4) {
                    md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);
                }
                return md5blks;
            }

            function md51(s) {
                var n = s.length,
                    state = [1732584193, -271733879, -1732584194, 271733878],
                    i, length, tail, tmp, lo, hi;
                for (i = 64; i <= n; i += 64) {
                    md5cycle(state, md5blk(s.substring(i - 64, i)));
                }
                s = s.substring(i - 64);
                length = s.length;
                tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                for (i = 0; i < length; i += 1) {
                    tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);
                }
                tail[i >> 2] |= 128 << (i % 4 << 3);
                if (i > 55) {
                    md5cycle(state, tail);
                    for (i = 0; i < 16; i += 1) {
                        tail[i] = 0;
                    }
                }
                tmp = n * 8;
                tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
                lo = parseInt(tmp[2], 16);
                hi = parseInt(tmp[1], 16) || 0;
                tail[14] = lo;
                tail[15] = hi;
                md5cycle(state, tail);
                return state;
            }

            function md51_array(a) {
                var n = a.length,
                    state = [1732584193, -271733879, -1732584194, 271733878],
                    i, length, tail, tmp, lo, hi;
                for (i = 64; i <= n; i += 64) {
                    md5cycle(state, md5blk_array(a.subarray(i - 64, i)));
                }
                a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);
                length = a.length;
                tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                for (i = 0; i < length; i += 1) {
                    tail[i >> 2] |= a[i] << (i % 4 << 3);
                }
                tail[i >> 2] |= 128 << (i % 4 << 3);
                if (i > 55) {
                    md5cycle(state, tail);
                    for (i = 0; i < 16; i += 1) {
                        tail[i] = 0;
                    }
                }
                tmp = n * 8;
                tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
                lo = parseInt(tmp[2], 16);
                hi = parseInt(tmp[1], 16) || 0;
                tail[14] = lo;
                tail[15] = hi;
                md5cycle(state, tail);
                return state;
            }

            function rhex(n) {
                var s = "",
                    j;
                for (j = 0; j < 4; j += 1) {
                    s += hex_chr[n >> j * 8 + 4 & 15] + hex_chr[n >> j * 8 & 15];
                }
                return s;
            }

            function hex(x) {
                var i;
                for (i = 0; i < x.length; i += 1) {
                    x[i] = rhex(x[i]);
                }
                return x.join("");
            }
            if (hex(md51("hello")) !== "5d41402abc4b2a76b9719d911017c592");
            if (typeof ArrayBuffer !== "undefined" && !ArrayBuffer.prototype.slice) {
                (function() {
                    function clamp(val, length) {
                        val = val | 0 || 0;
                        if (val < 0) {
                            return Math.max(val + length, 0);
                        }
                        return Math.min(val, length);
                    }
                    ArrayBuffer.prototype.slice = function(from, to) {
                        var length = this.byteLength,
                            begin = clamp(from, length),
                            end = length,
                            num, target, targetArray, sourceArray;
                        if (to !== undefined$1) {
                            end = clamp(to, length);
                        }
                        if (begin > end) {
                            return new ArrayBuffer(0);
                        }
                        num = end - begin;
                        target = new ArrayBuffer(num);
                        targetArray = new Uint8Array(target);
                        sourceArray = new Uint8Array(this, begin, num);
                        targetArray.set(sourceArray);
                        return target;
                    };
                })();
            }

            function toUtf8(str) {
                if (/[\u0080-\uFFFF]/.test(str)) {
                    str = unescape(encodeURIComponent(str));
                }
                return str;
            }

            function utf8Str2ArrayBuffer(str, returnUInt8Array) {
                var length = str.length,
                    buff = new ArrayBuffer(length),
                    arr = new Uint8Array(buff),
                    i;
                for (i = 0; i < length; i += 1) {
                    arr[i] = str.charCodeAt(i);
                }
                return returnUInt8Array ? arr : buff;
            }

            function arrayBuffer2Utf8Str(buff) {
                return String.fromCharCode.apply(null, new Uint8Array(buff));
            }

            function concatenateArrayBuffers(first, second, returnUInt8Array) {
                var result = new Uint8Array(first.byteLength + second.byteLength);
                result.set(new Uint8Array(first));
                result.set(new Uint8Array(second), first.byteLength);
                return returnUInt8Array ? result : result.buffer;
            }

            function hexToBinaryString(hex) {
                var bytes = [],
                    length = hex.length,
                    x;
                for (x = 0; x < length - 1; x += 2) {
                    bytes.push(parseInt(hex.substr(x, 2), 16));
                }
                return String.fromCharCode.apply(String, bytes);
            }

            function SparkMD5() {
                this.reset();
            }
            SparkMD5.prototype.append = function(str) {
                this.appendBinary(toUtf8(str));
                return this;
            };
            SparkMD5.prototype.appendBinary = function(contents) {
                this._buff += contents;
                this._length += contents.length;
                var length = this._buff.length,
                    i;
                for (i = 64; i <= length; i += 64) {
                    md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));
                }
                this._buff = this._buff.substring(i - 64);
                return this;
            };
            SparkMD5.prototype.end = function(raw) {
                var buff = this._buff,
                    length = buff.length,
                    i, tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    ret;
                for (i = 0; i < length; i += 1) {
                    tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);
                }
                this._finish(tail, length);
                ret = hex(this._hash);
                if (raw) {
                    ret = hexToBinaryString(ret);
                }
                this.reset();
                return ret;
            };
            SparkMD5.prototype.reset = function() {
                this._buff = "";
                this._length = 0;
                this._hash = [1732584193, -271733879, -1732584194, 271733878];
                return this;
            };
            SparkMD5.prototype.getState = function() {
                return {
                    buff: this._buff,
                    length: this._length,
                    hash: this._hash.slice()
                };
            };
            SparkMD5.prototype.setState = function(state) {
                this._buff = state.buff;
                this._length = state.length;
                this._hash = state.hash;
                return this;
            };
            SparkMD5.prototype.destroy = function() {
                delete this._hash;
                delete this._buff;
                delete this._length;
            };
            SparkMD5.prototype._finish = function(tail, length) {
                var i = length,
                    tmp, lo, hi;
                tail[i >> 2] |= 128 << (i % 4 << 3);
                if (i > 55) {
                    md5cycle(this._hash, tail);
                    for (i = 0; i < 16; i += 1) {
                        tail[i] = 0;
                    }
                }
                tmp = this._length * 8;
                tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
                lo = parseInt(tmp[2], 16);
                hi = parseInt(tmp[1], 16) || 0;
                tail[14] = lo;
                tail[15] = hi;
                md5cycle(this._hash, tail);
            };
            SparkMD5.hash = function(str, raw) {
                return SparkMD5.hashBinary(toUtf8(str), raw);
            };
            SparkMD5.hashBinary = function(content, raw) {
                var hash = md51(content),
                    ret = hex(hash);
                return raw ? hexToBinaryString(ret) : ret;
            };
            SparkMD5.ArrayBuffer = function() {
                this.reset();
            };
            SparkMD5.ArrayBuffer.prototype.append = function(arr) {
                var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),
                    length = buff.length,
                    i;
                this._length += arr.byteLength;
                for (i = 64; i <= length; i += 64) {
                    md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));
                }
                this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);
                return this;
            };
            SparkMD5.ArrayBuffer.prototype.end = function(raw) {
                var buff = this._buff,
                    length = buff.length,
                    tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    i, ret;
                for (i = 0; i < length; i += 1) {
                    tail[i >> 2] |= buff[i] << (i % 4 << 3);
                }
                this._finish(tail, length);
                ret = hex(this._hash);
                if (raw) {
                    ret = hexToBinaryString(ret);
                }
                this.reset();
                return ret;
            };
            SparkMD5.ArrayBuffer.prototype.reset = function() {
                this._buff = new Uint8Array(0);
                this._length = 0;
                this._hash = [1732584193, -271733879, -1732584194, 271733878];
                return this;
            };
            SparkMD5.ArrayBuffer.prototype.getState = function() {
                var state = SparkMD5.prototype.getState.call(this);
                state.buff = arrayBuffer2Utf8Str(state.buff);
                return state;
            };
            SparkMD5.ArrayBuffer.prototype.setState = function(state) {
                state.buff = utf8Str2ArrayBuffer(state.buff, true);
                return SparkMD5.prototype.setState.call(this, state);
            };
            SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;
            SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;
            SparkMD5.ArrayBuffer.hash = function(arr, raw) {
                var hash = md51_array(new Uint8Array(arr)),
                    ret = hex(hash);
                return raw ? hexToBinaryString(ret) : ret;
            };
            return SparkMD5;
        }));
    })(sparkMd5);
    var SparkMD5 = sparkMd5.exports;
    const fileSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;
    class FileChecksum {
        static create(file, callback) {
            const instance = new FileChecksum(file);
            instance.create(callback);
        }
        constructor(file) {
            this.file = file;
            this.chunkSize = 2097152;
            this.chunkCount = Math.ceil(this.file.size / this.chunkSize);
            this.chunkIndex = 0;
        }
        create(callback) {
            this.callback = callback;
            this.md5Buffer = new SparkMD5.ArrayBuffer;
            this.fileReader = new FileReader;
            this.fileReader.addEventListener("load", (event => this.fileReaderDidLoad(event)));
            this.fileReader.addEventListener("error", (event => this.fileReaderDidError(event)));
            this.readNextChunk();
        }
        fileReaderDidLoad(event) {
            this.md5Buffer.append(event.target.result);
            if (!this.readNextChunk()) {
                const binaryDigest = this.md5Buffer.end(true);
                const base64digest = btoa(binaryDigest);
                this.callback(null, base64digest);
            }
        }
        fileReaderDidError(event) {
            this.callback(`Error reading ${this.file.name}`);
        }
        readNextChunk() {
            if (this.chunkIndex < this.chunkCount || this.chunkIndex == 0 && this.chunkCount == 0) {
                const start = this.chunkIndex * this.chunkSize;
                const end = Math.min(start + this.chunkSize, this.file.size);
                const bytes = fileSlice.call(this.file, start, end);
                this.fileReader.readAsArrayBuffer(bytes);
                this.chunkIndex++;
                return true;
            } else {
                return false;
            }
        }
    }

    function getMetaValue(name) {
        const element = findElement(document.head, `meta[name="${name}"]`);
        if (element) {
            return element.getAttribute("content");
        }
    }

    function findElements(root, selector) {
        if (typeof root == "string") {
            selector = root;
            root = document;
        }
        const elements = root.querySelectorAll(selector);
        return toArray(elements);
    }

    function findElement(root, selector) {
        if (typeof root == "string") {
            selector = root;
            root = document;
        }
        return root.querySelector(selector);
    }

    function dispatchEvent(element, type, eventInit = {}) {
        const {
            disabled: disabled
        } = element;
        const {
            bubbles: bubbles,
            cancelable: cancelable,
            detail: detail
        } = eventInit;
        const event = document.createEvent("Event");
        event.initEvent(type, bubbles || true, cancelable || true);
        event.detail = detail || {};
        try {
            element.disabled = false;
            element.dispatchEvent(event);
        } finally {
            element.disabled = disabled;
        }
        return event;
    }

    function toArray(value) {
        if (Array.isArray(value)) {
            return value;
        } else if (Array.from) {
            return Array.from(value);
        } else {
            return [].slice.call(value);
        }
    }
    class BlobRecord {
        constructor(file, checksum, url, customHeaders = {}) {
            this.file = file;
            this.attributes = {
                filename: file.name,
                content_type: file.type || "application/octet-stream",
                byte_size: file.size,
                checksum: checksum
            };
            this.xhr = new XMLHttpRequest;
            this.xhr.open("POST", url, true);
            this.xhr.responseType = "json";
            this.xhr.setRequestHeader("Content-Type", "application/json");
            this.xhr.setRequestHeader("Accept", "application/json");
            this.xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
            Object.keys(customHeaders).forEach((headerKey => {
                this.xhr.setRequestHeader(headerKey, customHeaders[headerKey]);
            }));
            const csrfToken = getMetaValue("csrf-token");
            if (csrfToken != undefined) {
                this.xhr.setRequestHeader("X-CSRF-Token", csrfToken);
            }
            this.xhr.addEventListener("load", (event => this.requestDidLoad(event)));
            this.xhr.addEventListener("error", (event => this.requestDidError(event)));
        }
        get status() {
            return this.xhr.status;
        }
        get response() {
            const {
                responseType: responseType,
                response: response
            } = this.xhr;
            if (responseType == "json") {
                return response;
            } else {
                return JSON.parse(response);
            }
        }
        create(callback) {
            this.callback = callback;
            this.xhr.send(JSON.stringify({
                blob: this.attributes
            }));
        }
        requestDidLoad(event) {
            if (this.status >= 200 && this.status < 300) {
                const {
                    response: response
                } = this;
                const {
                    direct_upload: direct_upload
                } = response;
                delete response.direct_upload;
                this.attributes = response;
                this.directUploadData = direct_upload;
                this.callback(null, this.toJSON());
            } else {
                this.requestDidError(event);
            }
        }
        requestDidError(event) {
            this.callback(`Error creating Blob for "${this.file.name}". Status: ${this.status}`);
        }
        toJSON() {
            const result = {};
            for (const key in this.attributes) {
                result[key] = this.attributes[key];
            }
            return result;
        }
    }
    class BlobUpload {
        constructor(blob) {
            this.blob = blob;
            this.file = blob.file;
            const {
                url: url,
                headers: headers
            } = blob.directUploadData;
            this.xhr = new XMLHttpRequest;
            this.xhr.open("PUT", url, true);
            this.xhr.responseType = "text";
            for (const key in headers) {
                this.xhr.setRequestHeader(key, headers[key]);
            }
            this.xhr.addEventListener("load", (event => this.requestDidLoad(event)));
            this.xhr.addEventListener("error", (event => this.requestDidError(event)));
        }
        create(callback) {
            this.callback = callback;
            this.xhr.send(this.file.slice());
        }
        requestDidLoad(event) {
            const {
                status: status,
                response: response
            } = this.xhr;
            if (status >= 200 && status < 300) {
                this.callback(null, response);
            } else {
                this.requestDidError(event);
            }
        }
        requestDidError(event) {
            this.callback(`Error storing "${this.file.name}". Status: ${this.xhr.status}`);
        }
    }
    let id = 0;
    class DirectUpload {
        constructor(file, url, delegate, customHeaders = {}) {
            this.id = ++id;
            this.file = file;
            this.url = url;
            this.delegate = delegate;
            this.customHeaders = customHeaders;
        }
        create(callback) {
            FileChecksum.create(this.file, ((error, checksum) => {
                if (error) {
                    callback(error);
                    return;
                }
                const blob = new BlobRecord(this.file, checksum, this.url, this.customHeaders);
                notify(this.delegate, "directUploadWillCreateBlobWithXHR", blob.xhr);
                blob.create((error => {
                    if (error) {
                        callback(error);
                    } else {
                        const upload = new BlobUpload(blob);
                        notify(this.delegate, "directUploadWillStoreFileWithXHR", upload.xhr);
                        upload.create((error => {
                            if (error) {
                                callback(error);
                            } else {
                                callback(null, blob.toJSON());
                            }
                        }));
                    }
                }));
            }));
        }
    }

    function notify(object, methodName, ...messages) {
        if (object && typeof object[methodName] == "function") {
            return object[methodName](...messages);
        }
    }
    class DirectUploadController {
        constructor(input, file) {
            this.input = input;
            this.file = file;
            this.directUpload = new DirectUpload(this.file, this.url, this);
            this.dispatch("initialize");
        }
        start(callback) {
            const hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = this.input.name;
            this.input.insertAdjacentElement("beforebegin", hiddenInput);
            this.dispatch("start");
            this.directUpload.create(((error, attributes) => {
                if (error) {
                    hiddenInput.parentNode.removeChild(hiddenInput);
                    this.dispatchError(error);
                } else {
                    hiddenInput.value = attributes.signed_id;
                }
                this.dispatch("end");
                callback(error);
            }));
        }
        uploadRequestDidProgress(event) {
            const progress = event.loaded / event.total * 100;
            if (progress) {
                this.dispatch("progress", {
                    progress: progress
                });
            }
        }
        get url() {
            return this.input.getAttribute("data-direct-upload-url");
        }
        dispatch(name, detail = {}) {
            detail.file = this.file;
            detail.id = this.directUpload.id;
            return dispatchEvent(this.input, `direct-upload:${name}`, {
                detail: detail
            });
        }
        dispatchError(error) {
            const event = this.dispatch("error", {
                error: error
            });
            if (!event.defaultPrevented) {
                alert(error);
            }
        }
        directUploadWillCreateBlobWithXHR(xhr) {
            this.dispatch("before-blob-request", {
                xhr: xhr
            });
        }
        directUploadWillStoreFileWithXHR(xhr) {
            this.dispatch("before-storage-request", {
                xhr: xhr
            });
            xhr.upload.addEventListener("progress", (event => this.uploadRequestDidProgress(event)));
        }
    }
    const inputSelector = "input[type=file][data-direct-upload-url]:not([disabled])";
    class DirectUploadsController {
        constructor(form) {
            this.form = form;
            this.inputs = findElements(form, inputSelector).filter((input => input.files.length));
        }
        start(callback) {
            const controllers = this.createDirectUploadControllers();
            const startNextController = () => {
                const controller = controllers.shift();
                if (controller) {
                    controller.start((error => {
                        if (error) {
                            callback(error);
                            this.dispatch("end");
                        } else {
                            startNextController();
                        }
                    }));
                } else {
                    callback();
                    this.dispatch("end");
                }
            };
            this.dispatch("start");
            startNextController();
        }
        createDirectUploadControllers() {
            const controllers = [];
            this.inputs.forEach((input => {
                toArray(input.files).forEach((file => {
                    const controller = new DirectUploadController(input, file);
                    controllers.push(controller);
                }));
            }));
            return controllers;
        }
        dispatch(name, detail = {}) {
            return dispatchEvent(this.form, `direct-uploads:${name}`, {
                detail: detail
            });
        }
    }
    const processingAttribute = "data-direct-uploads-processing";
    const submitButtonsByForm = new WeakMap;
    let started = false;

    function start() {
        if (!started) {
            started = true;
            document.addEventListener("click", didClick, true);
            document.addEventListener("submit", didSubmitForm, true);
            document.addEventListener("ajax:before", didSubmitRemoteElement);
        }
    }

    function didClick(event) {
        const button = event.target.closest("button, input");
        if (button && button.type === "submit" && button.form) {
            submitButtonsByForm.set(button.form, button);
        }
    }

    function didSubmitForm(event) {
        handleFormSubmissionEvent(event);
    }

    function didSubmitRemoteElement(event) {
        if (event.target.tagName == "FORM") {
            handleFormSubmissionEvent(event);
        }
    }

    function handleFormSubmissionEvent(event) {
        const form = event.target;
        if (form.hasAttribute(processingAttribute)) {
            event.preventDefault();
            return;
        }
        const controller = new DirectUploadsController(form);
        const {
            inputs: inputs
        } = controller;
        if (inputs.length) {
            event.preventDefault();
            form.setAttribute(processingAttribute, "");
            inputs.forEach(disable);
            controller.start((error => {
                form.removeAttribute(processingAttribute);
                if (error) {
                    inputs.forEach(enable);
                } else {
                    submitForm(form);
                }
            }));
        }
    }

    function submitForm(form) {
        let button = submitButtonsByForm.get(form) || findElement(form, "input[type=submit], button[type=submit]");
        if (button) {
            const {
                disabled: disabled
            } = button;
            button.disabled = false;
            button.focus();
            button.click();
            button.disabled = disabled;
        } else {
            button = document.createElement("input");
            button.type = "submit";
            button.style.display = "none";
            form.appendChild(button);
            button.click();
            form.removeChild(button);
        }
        submitButtonsByForm.delete(form);
    }

    function disable(input) {
        input.disabled = true;
    }

    function enable(input) {
        input.disabled = false;
    }

    function autostart() {
        if (window.ActiveStorage) {
            start();
        }
    }
    setTimeout(autostart, 1);
    exports.DirectUpload = DirectUpload;
    exports.DirectUploadController = DirectUploadController;
    exports.DirectUploadsController = DirectUploadsController;
    exports.start = start;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
}));
/*!
	Autosize v1.18.9 - 2014-05-27
	Automatically adjust textarea height based on user input.
	(c) 2014 Jack Moore - http://www.jacklmoore.com/autosize
	license: http://www.opensource.org/licenses/mit-license.php
*/
(function($) {
    'use strict';
    var defaults = {
            className: 'autosizejs',
            id: 'autosizejs',
            append: '\n',
            callback: false,
            resizeDelay: 10,
            placeholder: true
        },

        // border:0 is unnecessary, but avoids a bug in Firefox on OSX
        copy = '<textarea tabindex="-1" style="position:absolute; top:-999px; left:0; right:auto; bottom:auto; border:0; padding: 0; -moz-box-sizing:content-box; -webkit-box-sizing:content-box; box-sizing:content-box; word-wrap:break-word; height:0 !important; min-height:0 !important; overflow:hidden; transition:none; -webkit-transition:none; -moz-transition:none;"/>',

        // line-height is conditionally included because IE7/IE8/old Opera do not return the correct value.
        typographyStyles = [
            'fontFamily',
            'fontSize',
            'fontWeight',
            'fontStyle',
            'letterSpacing',
            'textTransform',
            'wordSpacing',
            'textIndent'
        ],

        // to keep track which textarea is being mirrored when adjust() is called.
        mirrored,

        // the mirror element, which is used to calculate what size the mirrored element should be.
        mirror = $(copy).data('autosize', true)[0];

    // test that line-height can be accurately copied.
    mirror.style.lineHeight = '99px';
    if ($(mirror).css('lineHeight') === '99px') {
        typographyStyles.push('lineHeight');
    }
    mirror.style.lineHeight = '';

    $.fn.autosize = function(options) {
        if (!this.length) {
            return this;
        }

        options = $.extend({}, defaults, options || {});

        if (mirror.parentNode !== document.body) {
            $(document.body).append(mirror);
        }

        return this.each(function() {
            var
                ta = this,
                $ta = $(ta),
                maxHeight,
                minHeight,
                boxOffset = 0,
                callback = $.isFunction(options.callback),
                originalStyles = {
                    height: ta.style.height,
                    overflow: ta.style.overflow,
                    overflowY: ta.style.overflowY,
                    wordWrap: ta.style.wordWrap,
                    resize: ta.style.resize
                },
                timeout,
                width = $ta.width(),
                taResize = $ta.css('resize');

            if ($ta.data('autosize')) {
                // exit if autosize has already been applied, or if the textarea is the mirror element.
                return;
            }
            $ta.data('autosize', true);

            if ($ta.css('box-sizing') === 'border-box' || $ta.css('-moz-box-sizing') === 'border-box' || $ta.css('-webkit-box-sizing') === 'border-box') {
                boxOffset = $ta.outerHeight() - $ta.height();
            }

            // IE8 and lower return 'auto', which parses to NaN, if no min-height is set.
            minHeight = Math.max(parseInt($ta.css('minHeight'), 10) - boxOffset || 0, $ta.height());

            $ta.css({
                overflow: 'hidden',
                overflowY: 'hidden',
                wordWrap: 'break-word' // horizontal overflow is hidden, so break-word is necessary for handling words longer than the textarea width
            });

            if (taResize === 'vertical') {
                $ta.css('resize', 'none');
            } else if (taResize === 'both') {
                $ta.css('resize', 'horizontal');
            }

            // The mirror width must exactly match the textarea width, so using getBoundingClientRect because it doesn't round the sub-pixel value.
            // window.getComputedStyle, getBoundingClientRect returning a width are unsupported, but also unneeded in IE8 and lower.
            function setWidth() {
                var width;
                var style = window.getComputedStyle ? window.getComputedStyle(ta, null) : false;

                if (style) {

                    width = ta.getBoundingClientRect().width;

                    if (width === 0 || typeof width !== 'number') {
                        width = parseInt(style.width, 10);
                    }

                    $.each(['paddingLeft', 'paddingRight', 'borderLeftWidth', 'borderRightWidth'], function(i, val) {
                        width -= parseInt(style[val], 10);
                    });
                } else {
                    width = $ta.width();
                }

                mirror.style.width = Math.max(width, 0) + 'px';
            }

            function initMirror() {
                var styles = {};

                mirrored = ta;
                mirror.className = options.className;
                mirror.id = options.id;
                maxHeight = parseInt($ta.css('maxHeight'), 10);

                // mirror is a duplicate textarea located off-screen that
                // is automatically updated to contain the same text as the
                // original textarea.  mirror always has a height of 0.
                // This gives a cross-browser supported way getting the actual
                // height of the text, through the scrollTop property.
                $.each(typographyStyles, function(i, val) {
                    styles[val] = $ta.css(val);
                });

                $(mirror).css(styles).attr('wrap', $ta.attr('wrap'));

                setWidth();

                // Chrome-specific fix:
                // When the textarea y-overflow is hidden, Chrome doesn't reflow the text to account for the space
                // made available by removing the scrollbar. This workaround triggers the reflow for Chrome.
                if (window.chrome) {
                    var width = ta.style.width;
                    ta.style.width = '0px';
                    var ignore = ta.offsetWidth;
                    ta.style.width = width;
                }
            }

            // Using mainly bare JS in this function because it is going
            // to fire very often while typing, and needs to very efficient.
            function adjust() {
                var height, original;

                if (mirrored !== ta) {
                    initMirror();
                } else {
                    setWidth();
                }

                if (!ta.value && options.placeholder) {
                    // If the textarea is empty, copy the placeholder text into 
                    // the mirror control and use that for sizing so that we 
                    // don't end up with placeholder getting trimmed.
                    mirror.value = ($ta.attr("placeholder") || '') + options.append;
                } else {
                    mirror.value = ta.value + options.append;
                }

                mirror.style.overflowY = ta.style.overflowY;
                original = parseInt(ta.style.height, 10);

                // Setting scrollTop to zero is needed in IE8 and lower for the next step to be accurately applied
                mirror.scrollTop = 0;

                mirror.scrollTop = 9e4;

                // Using scrollTop rather than scrollHeight because scrollHeight is non-standard and includes padding.
                height = mirror.scrollTop;

                if (maxHeight && height > maxHeight) {
                    ta.style.overflowY = 'scroll';
                    height = maxHeight;
                } else {
                    ta.style.overflowY = 'hidden';
                    if (height < minHeight) {
                        height = minHeight;
                    }
                }

                height += boxOffset;

                if (original !== height) {
                    ta.style.height = height + 'px';
                    if (callback) {
                        options.callback.call(ta, ta);
                    }
                }
            }

            function resize() {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    var newWidth = $ta.width();

                    if (newWidth !== width) {
                        width = newWidth;
                        adjust();
                    }
                }, parseInt(options.resizeDelay, 10));
            }

            if ('onpropertychange' in ta) {
                if ('oninput' in ta) {
                    // Detects IE9.  IE9 does not fire onpropertychange or oninput for deletions,
                    // so binding to onkeyup to catch most of those occasions.  There is no way that I
                    // know of to detect something like 'cut' in IE9.
                    $ta.on('input.autosize keyup.autosize', adjust);
                } else {
                    // IE7 / IE8
                    $ta.on('propertychange.autosize', function() {
                        if (event.propertyName === 'value') {
                            adjust();
                        }
                    });
                }
            } else {
                // Modern Browsers
                $ta.on('input.autosize', adjust);
            }

            // Set options.resizeDelay to false if using fixed-width textarea elements.
            // Uses a timeout and width check to reduce the amount of times adjust needs to be called after window resize.

            if (options.resizeDelay !== false) {
                $(window).on('resize.autosize', resize);
            }

            // Event for manual triggering if needed.
            // Should only be needed when the value of the textarea is changed through JavaScript rather than user input.
            $ta.on('autosize.resize', adjust);

            // Event for manual triggering that also forces the styles to update as well.
            // Should only be needed if one of typography styles of the textarea change, and the textarea is already the target of the adjust method.
            $ta.on('autosize.resizeIncludeStyle', function() {
                mirrored = null;
                adjust();
            });

            $ta.on('autosize.destroy', function() {
                mirrored = null;
                clearTimeout(timeout);
                $(window).off('resize', resize);
                $ta
                    .off('autosize')
                    .off('.autosize')
                    .css(originalStyles)
                    .removeData('autosize');
            });

            // Call adjust in case the textarea already contains text.
            adjust();
        });
    };
}(window.jQuery || window.$)); // jQuery or jQuery-like library, such as Zepto;
/*
 * BestInPlace (for jQuery)
 * version: 3.0.0.alpha (2014)
 *
 * By Bernat Farrero based on the work of Jan Varwig.
 * Examples at http://bernatfarrero.com
 *
 * Licensed under the MIT:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * @requires jQuery
 *
 * Usage:
 *
 * Attention.
 * The format of the JSON object given to the select inputs is the following:
 * [["key", "value"],["key", "value"]]
 * The format of the JSON object given to the checkbox inputs is the following:
 * ["falseValue", "trueValue"]

 */


function BestInPlaceEditor(e) {
    'use strict';
    this.element = e;
    this.initOptions();
    this.bindForm();
    this.initPlaceHolder();
    jQuery(this.activator).bind('click', {
        editor: this
    }, this.clickHandler);
}

BestInPlaceEditor.prototype = {
    // Public Interface Functions //////////////////////////////////////////////

    activate: function() {
        'use strict';
        var to_display;
        if (this.isPlaceHolder()) {
            to_display = "";
        } else if (this.original_content) {
            to_display = this.original_content;
        } else {
            switch (this.formType) {
                case 'input':
                case 'textarea':
                    if (this.display_raw) {
                        to_display = this.element.html().replace(/&amp;/gi, '&');
                    } else {
                        var value = this.element.data('bipValue');
                        if (typeof value === 'undefined') {
                            to_display = '';
                        } else if (typeof value === 'string') {
                            to_display = this.element.data('bipValue').replace(/&amp;/gi, '&');
                        } else {
                            to_display = this.element.data('bipValue');
                        }
                    }
                    break;
                case 'select':
                    to_display = this.element.html();

            }
        }

        this.oldValue = this.isPlaceHolder() ? "" : this.element.html();
        this.display_value = to_display;
        jQuery(this.activator).unbind("click", this.clickHandler);
        this.activateForm();
        this.element.trigger(jQuery.Event("best_in_place:activate"));
    },

    abort: function() {
        'use strict';
        this.activateText(this.oldValue);
        jQuery(this.activator).bind('click', {
            editor: this
        }, this.clickHandler);
        this.element.trigger(jQuery.Event("best_in_place:abort"));
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));
    },

    abortIfConfirm: function() {
        'use strict';
        if (!this.useConfirm) {
            this.abort();
            return;
        }

        if (confirm(BestInPlaceEditor.defaults.locales[''].confirmMessage)) {
            this.abort();
        }
    },

    update: function() {
        'use strict';

        this.element.trigger(jQuery.Event("best_in_place:before-update"));

        var editor = this,
            value = this.getValue();

        // Avoid request if no change is made
        if (this.formType in {
                "input": 1,
                "textarea": 1
            } && value === this.oldValue) {
            this.abort();
            return true;
        }

        editor.ajax({
            "type": this.requestMethod(),
            "dataType": BestInPlaceEditor.defaults.ajaxDataType,
            "data": editor.requestData(),
            "success": function(data, status, xhr) {
                editor.loadSuccessCallback(data, status, xhr);
            },
            "error": function(request, error) {
                editor.loadErrorCallback(request, error);
            }
        });


        switch (this.formType) {
            case "select":
                this.previousCollectionValue = value;

                // search for the text for the span
                $.each(this.values, function(index, arr) {
                    if (String(arr[0]) === String(value)) editor.element.html(arr[1]);
                });
                break;

            case "checkbox":
                $.each(this.values, function(index, arr) {
                    if (String(arr[0]) === String(value)) editor.element.html(arr[1]);
                });
                break;

            default:
                if (value !== "") {
                    if (this.display_raw) {
                        editor.element.html(value);
                    } else {
                        editor.element.text(value);
                    }
                } else {
                    editor.element.html(this.placeHolder);
                }
        }

        editor.element.data('bipValue', value);
        editor.element.attr('data-bip-value', value);

        editor.element.trigger(jQuery.Event("best_in_place:update"));
    },

    activateForm: function() {
        'use strict';
        alert(BestInPlaceEditor.defaults.locales[''].uninitializedForm);
    },

    activateText: function(value) {
        'use strict';
        this.element.html(value);
        if (this.isPlaceHolder()) {
            this.element.html(this.placeHolder);
        }
    },

    // Helper Functions ////////////////////////////////////////////////////////

    initOptions: function() {
        // Try parent supplied info
        'use strict';
        var self = this;
        self.element.parents().each(function() {
            var $parent = jQuery(this);
            self.url = self.url || $parent.data("bipUrl");
            self.activator = self.activator || $parent.data("bipActivator");
            self.okButton = self.okButton || $parent.data("bipOkButton");
            self.okButtonClass = self.okButtonClass || $parent.data("bipOkButtonClass");
            self.cancelButton = self.cancelButton || $parent.data("bipCancelButton");
            self.cancelButtonClass = self.cancelButtonClass || $parent.data("bipCancelButtonClass");
            self.skipBlur = self.skipBlur || $parent.data("bipSkipBlur");
        });

        // Load own attributes (overrides all others)
        self.url = self.element.data("bipUrl") || self.url || document.location.pathname;
        self.collection = self.element.data("bipCollection") || self.collection;
        self.formType = self.element.data("bipType") || "input";
        self.objectName = self.element.data("bipObject") || self.objectName;
        self.attributeName = self.element.data("bipAttribute") || self.attributeName;
        self.activator = self.element.data("bipActivator") || self.element;
        self.okButton = self.element.data("bipOkButton") || self.okButton;
        self.okButtonClass = self.element.data("bipOkButtonClass") || self.okButtonClass || BestInPlaceEditor.defaults.okButtonClass;
        self.cancelButton = self.element.data("bipCancelButton") || self.cancelButton;
        self.cancelButtonClass = self.element.data("bipCancelButtonClass") || self.cancelButtonClass || BestInPlaceEditor.defaults.cancelButtonClass;
        self.skipBlur = self.element.data("bipSkipBlur") || self.skipBlur || BestInPlaceEditor.defaults.skipBlur;
        self.isNewObject = self.element.data("bipNewObject");
        self.dataExtraPayload = self.element.data("bipExtraPayload");

        // Fix for default values of 0
        if (self.element.data("bipPlaceholder") == null) {
            self.placeHolder = BestInPlaceEditor.defaults.locales[''].placeHolder;
        } else {
            self.placeHolder = self.element.data("bipPlaceholder");
        }

        self.inner_class = self.element.data("bipInnerClass");
        self.html_attrs = self.element.data("bipHtmlAttrs");
        self.original_content = self.element.data("bipOriginalContent") || self.original_content;

        // if set the input won't be satinized
        self.display_raw = self.element.data("bip-raw");

        self.useConfirm = self.element.data("bip-confirm");

        if (self.formType === "select" || self.formType === "checkbox") {
            self.values = self.collection;
            self.collectionValue = self.element.data("bipValue") || self.collectionValue;
        }
    },

    bindForm: function() {
        'use strict';
        this.activateForm = BestInPlaceEditor.forms[this.formType].activateForm;
        this.getValue = BestInPlaceEditor.forms[this.formType].getValue;
    },


    initPlaceHolder: function() {
        'use strict';
        // TODO add placeholder for select and checkbox
        if (this.element.html() === "") {
            this.element.addClass('bip-placeholder');
            this.element.html(this.placeHolder);
        }
    },

    isPlaceHolder: function() {
        'use strict';
        // TODO: It only work when form is deactivated.
        // Condition will fail when form is activated
        return this.element.html() === "" || this.element.html() === this.placeHolder;
    },

    getValue: function() {
        'use strict';
        alert(BestInPlaceEditor.defaults.locales[''].uninitializedForm);
    },

    // Trim and Strips HTML from text
    sanitizeValue: function(s) {
        'use strict';
        return jQuery.trim(s);
    },

    requestMethod: function() {
        'use strict';
        return this.isNewObject ? 'post' : BestInPlaceEditor.defaults.ajaxMethod;
    },

    /* Generate the data sent in the POST request */
    requestData: function() {
        'use strict';
        // To prevent xss attacks, a csrf token must be defined as a meta attribute
        var csrf_token = jQuery('meta[name=csrf-token]').attr('content'),
            csrf_param = jQuery('meta[name=csrf-param]').attr('content');

        var data = {}
        data['_method'] = this.requestMethod()

        data[this.objectName] = this.dataExtraPayload || {}

        data[this.objectName][this.attributeName] = this.getValue()

        if (csrf_param !== undefined && csrf_token !== undefined) {
            data[csrf_param] = csrf_token
        }
        return jQuery.param(data);
    },

    ajax: function(options) {
        'use strict';
        options.url = this.url;
        options.beforeSend = function(xhr) {
            xhr.setRequestHeader("Accept", "application/json");
        };
        return jQuery.ajax(options);
    },

    // Handlers ////////////////////////////////////////////////////////////////

    loadSuccessCallback: function(data, status, xhr) {
        'use strict';
        data = jQuery.trim(data);
        //Update original content with current text.
        if (this.display_raw) {
            this.original_content = this.element.html();
        } else {
            this.original_content = this.element.text();
        }

        if (data && data !== "") {
            var response = jQuery.parseJSON(data);
            if (response !== null && response.hasOwnProperty("display_as")) {
                this.element.data('bip-original-content', this.element.text());
                this.element.html(response.display_as);
            }
            if (this.isNewObject && response && response[this.objectName]) {
                if (response[this.objectName]["id"]) {
                    this.isNewObject = false
                    this.url += "/" + response[this.objectName]["id"] // in REST a POST /thing url should become PUT /thing/123
                }
            }
        }
        this.element.toggleClass('bip-placeholder', this.isPlaceHolder());

        this.element.trigger(jQuery.Event("best_in_place:success"), [data, status, xhr]);
        this.element.trigger(jQuery.Event("ajax:success"), [data, status, xhr]);

        // Binding back after being clicked
        jQuery(this.activator).bind('click', {
            editor: this
        }, this.clickHandler);
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));

        if (this.collectionValue !== null && this.formType === "select") {
            this.collectionValue = this.previousCollectionValue;
            this.previousCollectionValue = null;
        }
    },

    loadErrorCallback: function(request, error) {
        'use strict';
        this.activateText(this.oldValue);

        this.element.trigger(jQuery.Event("best_in_place:error"), [request, error]);
        this.element.trigger(jQuery.Event("ajax:error"), request, error);

        // Binding back after being clicked
        jQuery(this.activator).bind('click', {
            editor: this
        }, this.clickHandler);
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));
    },

    clickHandler: function(event) {
        'use strict';
        event.preventDefault();
        event.data.editor.activate();
    },

    setHtmlAttributes: function() {
        'use strict';
        var formField = this.element.find(this.formType);

        if (this.html_attrs) {
            var attrs = this.html_attrs;
            $.each(attrs, function(key, val) {
                formField.attr(key, val);
            });
        }
    },

    placeButtons: function(output, field) {
        'use strict';
        if (field.okButton) {
            output.append(
                jQuery(document.createElement('input'))
                .attr('type', 'submit')
                .attr('class', field.okButtonClass)
                .attr('value', field.okButton)
            );
        }
        if (field.cancelButton) {
            output.append(
                jQuery(document.createElement('input'))
                .attr('type', 'button')
                .attr('class', field.cancelButtonClass)
                .attr('value', field.cancelButton)
            );
        }
    }
};


// Button cases:
// If no buttons, then blur saves, ESC cancels
// If just Cancel button, then blur saves, ESC or clicking Cancel cancels (careful of blur event!)
// If just OK button, then clicking OK saves (careful of blur event!), ESC or blur cancels
// If both buttons, then clicking OK saves, ESC or clicking Cancel or blur cancels
BestInPlaceEditor.forms = {
    "input": {
        activateForm: function() {
            'use strict';
            var output = jQuery(document.createElement('form'))
                .addClass('form_in_place')
                .attr('action', 'javascript:void(0);')
                .attr('style', 'display:inline');
            var input_elt = jQuery(document.createElement('input'))
                .attr('type', 'text')
                .attr('name', this.attributeName)
                .val(this.display_value);

            // Add class to form input
            if (this.inner_class) {
                input_elt.addClass(this.inner_class);
            }

            output.append(input_elt);
            this.placeButtons(output, this);

            this.element.html(output);
            this.setHtmlAttributes();

            this.element.find("input[type='text']")[0].select();
            this.element.find("form").bind('submit', {
                editor: this
            }, BestInPlaceEditor.forms.input.submitHandler);
            if (this.cancelButton) {
                this.element.find("input[type='button']").bind('click', {
                    editor: this
                }, BestInPlaceEditor.forms.input.cancelButtonHandler);
            }
            if (!this.okButton) {
                this.element.find("input[type='text']").bind('blur', {
                    editor: this
                }, BestInPlaceEditor.forms.input.inputBlurHandler);
            }
            this.element.find("input[type='text']").bind('keyup', {
                editor: this
            }, BestInPlaceEditor.forms.input.keyupHandler);
            this.blurTimer = null;
            this.userClicked = false;
        },

        getValue: function() {
            'use strict';
            return this.sanitizeValue(this.element.find("input").val());
        },

        // When buttons are present, use a timer on the blur event to give precedence to clicks
        inputBlurHandler: function(event) {
            'use strict';
            if (event.data.editor.okButton) {
                event.data.editor.blurTimer = setTimeout(function() {
                    if (!event.data.editor.userClicked) {
                        event.data.editor.abort();
                    }
                }, 500);
            } else {
                if (event.data.editor.cancelButton) {
                    event.data.editor.blurTimer = setTimeout(function() {
                        if (!event.data.editor.userClicked) {
                            event.data.editor.update();
                        }
                    }, 500);
                } else {
                    event.data.editor.update();
                }
            }
        },

        submitHandler: function(event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.update();
        },

        cancelButtonHandler: function(event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.abort();
            event.stopPropagation(); // Without this, click isn't handled
        },

        keyupHandler: function(event) {
            'use strict';
            if (event.keyCode === 27) {
                event.data.editor.abort();
                event.stopImmediatePropagation();
            }
        }
    },

    "select": {
        activateForm: function() {
            'use strict';
            var output = jQuery(document.createElement('form'))
                .attr('action', 'javascript:void(0)')
                .attr('style', 'display:inline'),
                selected = '',
                select_elt = jQuery(document.createElement('select'))
                .attr('class', this.inner_class !== null ? this.inner_class : ''),
                currentCollectionValue = this.collectionValue,
                key, value,
                a = this.values;

            $.each(a, function(index, arr) {
                key = arr[0];
                value = arr[1];
                var option_elt = jQuery(document.createElement('option'))
                    .val(key)
                    .html(value);

                if (currentCollectionValue) {
                    if (String(key) === String(currentCollectionValue)) option_elt.attr('selected', 'selected');
                }
                select_elt.append(option_elt);
            });
            output.append(select_elt);

            this.element.html(output);
            this.setHtmlAttributes();
            this.element.find("select").bind('change', {
                editor: this
            }, BestInPlaceEditor.forms.select.blurHandler);
            this.element.find("select").bind('blur', {
                editor: this
            }, BestInPlaceEditor.forms.select.blurHandler);
            this.element.find("select").bind('keyup', {
                editor: this
            }, BestInPlaceEditor.forms.select.keyupHandler);
            this.element.find("select")[0].focus();

            // automatically click on the select so you
            // don't have to click twice
            try {
                var e = document.createEvent("MouseEvents");
                e.initMouseEvent("mousedown", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
                this.element.find("select")[0].dispatchEvent(e);
            } catch (e) {
                // browser doesn't support this, e.g. IE8
            }
        },

        getValue: function() {
            'use strict';
            return this.sanitizeValue(this.element.find("select").val());
        },

        blurHandler: function(event) {
            'use strict';
            event.data.editor.update();
        },

        keyupHandler: function(event) {
            'use strict';
            if (event.keyCode === 27) {
                event.data.editor.abort();
            }
        }
    },

    "checkbox": {
        activateForm: function() {
            'use strict';
            this.collectionValue = !this.getValue();
            this.setHtmlAttributes();
            this.update();
        },

        getValue: function() {
            'use strict';
            return this.collectionValue;
        }
    },

    "textarea": {
        activateForm: function() {
            'use strict';
            // grab width and height of text
            var width = this.element.css('width');
            var height = this.element.css('height');

            // construct form
            var output = jQuery(document.createElement('form'))
                .addClass('form_in_place')
                .attr('action', 'javascript:void(0);')
                .attr('style', 'display:inline');
            var textarea_elt = jQuery(document.createElement('textarea'))
                .attr('name', this.attributeName)
                .val(this.sanitizeValue(this.display_value));

            if (this.inner_class !== null) {
                textarea_elt.addClass(this.inner_class);
            }

            output.append(textarea_elt);

            this.placeButtons(output, this);

            this.element.html(output);
            this.setHtmlAttributes();

            // set width and height of textarea
            jQuery(this.element.find("textarea")[0]).css({
                'min-width': width,
                'min-height': height
            });
            jQuery(this.element.find("textarea")[0]).autosize();

            this.element.find("textarea")[0].focus();
            this.element.find("form").bind('submit', {
                editor: this
            }, BestInPlaceEditor.forms.textarea.submitHandler);

            if (this.cancelButton) {
                this.element.find("input[type='button']").bind('click', {
                    editor: this
                }, BestInPlaceEditor.forms.textarea.cancelButtonHandler);
            }

            if (!this.skipBlur) {
                this.element.find("textarea").bind('blur', {
                    editor: this
                }, BestInPlaceEditor.forms.textarea.blurHandler);
            }
            this.element.find("textarea").bind('keyup', {
                editor: this
            }, BestInPlaceEditor.forms.textarea.keyupHandler);
            this.blurTimer = null;
            this.userClicked = false;
        },

        getValue: function() {
            'use strict';
            return this.sanitizeValue(this.element.find("textarea").val());
        },

        // When buttons are present, use a timer on the blur event to give precedence to clicks
        blurHandler: function(event) {
            'use strict';
            if (event.data.editor.okButton) {
                event.data.editor.blurTimer = setTimeout(function() {
                    if (!event.data.editor.userClicked) {
                        event.data.editor.abortIfConfirm();
                    }
                }, 500);
            } else {
                if (event.data.editor.cancelButton) {
                    event.data.editor.blurTimer = setTimeout(function() {
                        if (!event.data.editor.userClicked) {
                            event.data.editor.update();
                        }
                    }, 500);
                } else {
                    event.data.editor.update();
                }
            }
        },

        submitHandler: function(event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.update();
        },

        cancelButtonHandler: function(event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.abortIfConfirm();
            event.stopPropagation(); // Without this, click isn't handled
        },

        keyupHandler: function(event) {
            'use strict';
            if (event.keyCode === 27) {
                event.data.editor.abortIfConfirm();
            }
        }
    }
};

BestInPlaceEditor.defaults = {
    locales: {},
    ajaxMethod: "put", //TODO Change to patch when support to 3.2 is dropped
    ajaxDataType: 'text',
    okButtonClass: '',
    cancelButtonClass: '',
    skipBlur: false
};

// Default locale
BestInPlaceEditor.defaults.locales[''] = {
    confirmMessage: "Are you sure you want to discard your changes?",
    uninitializedForm: "The form was not properly initialized. getValue is unbound",
    placeHolder: '-'
};

jQuery.fn.best_in_place = function() {
    'use strict';

    function setBestInPlace(element) {
        if (!element.data('bestInPlaceEditor')) {
            element.data('bestInPlaceEditor', new BestInPlaceEditor(element));
            return true;
        }
    }

    jQuery(this.context).delegate(this.selector, 'click', function() {
        var el = jQuery(this);
        if (setBestInPlace(el)) {
            el.click();
        }
    });

    this.each(function() {
        setBestInPlace(jQuery(this));
    });

    return this;
};



/*! jsTimezoneDetect - v1.0.6 - 2014-02-25 */
! function(a) {
    var b = function() {
        "use strict";
        var a = "s",
            c = function(a) {
                var b = -a.getTimezoneOffset();
                return null !== b ? b : 0
            },
            d = function(a, b, c) {
                var d = new Date;
                return void 0 !== a && d.setFullYear(a), d.setMonth(b), d.setDate(c), d
            },
            e = function(a) {
                return c(d(a, 0, 2))
            },
            f = function(a) {
                return c(d(a, 5, 2))
            },
            g = function(a) {
                var b = a.getMonth() > 7,
                    d = b ? f(a.getFullYear()) : e(a.getFullYear()),
                    g = c(a),
                    h = 0 > d,
                    i = d - g;
                return h || b ? 0 !== i : 0 > i
            },
            h = function() {
                var b = e(),
                    c = f(),
                    d = b - c;
                return 0 > d ? b + ",1" : d > 0 ? c + ",1," + a : b + ",0"
            },
            i = function() {
                var a = h();
                return new b.TimeZone(b.olson.timezones[a])
            },
            j = function(a) {
                var b = new Date(2010, 6, 15, 1, 0, 0, 0),
                    c = {
                        "America/Denver": new Date(2011, 2, 13, 3, 0, 0, 0),
                        "America/Mazatlan": new Date(2011, 3, 3, 3, 0, 0, 0),
                        "America/Chicago": new Date(2011, 2, 13, 3, 0, 0, 0),
                        "America/Mexico_City": new Date(2011, 3, 3, 3, 0, 0, 0),
                        "America/Asuncion": new Date(2012, 9, 7, 3, 0, 0, 0),
                        "America/Santiago": new Date(2012, 9, 3, 3, 0, 0, 0),
                        "America/Campo_Grande": new Date(2012, 9, 21, 5, 0, 0, 0),
                        "America/Montevideo": new Date(2011, 9, 2, 3, 0, 0, 0),
                        "America/Sao_Paulo": new Date(2011, 9, 16, 5, 0, 0, 0),
                        "America/Los_Angeles": new Date(2011, 2, 13, 8, 0, 0, 0),
                        "America/Santa_Isabel": new Date(2011, 3, 5, 8, 0, 0, 0),
                        "America/Havana": new Date(2012, 2, 10, 2, 0, 0, 0),
                        "America/New_York": new Date(2012, 2, 10, 7, 0, 0, 0),
                        "Europe/Helsinki": new Date(2013, 2, 31, 5, 0, 0, 0),
                        "Pacific/Auckland": new Date(2011, 8, 26, 7, 0, 0, 0),
                        "America/Halifax": new Date(2011, 2, 13, 6, 0, 0, 0),
                        "America/Goose_Bay": new Date(2011, 2, 13, 2, 1, 0, 0),
                        "America/Miquelon": new Date(2011, 2, 13, 5, 0, 0, 0),
                        "America/Godthab": new Date(2011, 2, 27, 1, 0, 0, 0),
                        "Europe/Moscow": b,
                        "Asia/Amman": new Date(2013, 2, 29, 1, 0, 0, 0),
                        "Asia/Beirut": new Date(2013, 2, 31, 2, 0, 0, 0),
                        "Asia/Damascus": new Date(2013, 3, 6, 2, 0, 0, 0),
                        "Asia/Jerusalem": new Date(2013, 2, 29, 5, 0, 0, 0),
                        "Asia/Yekaterinburg": b,
                        "Asia/Omsk": b,
                        "Asia/Krasnoyarsk": b,
                        "Asia/Irkutsk": b,
                        "Asia/Yakutsk": b,
                        "Asia/Vladivostok": b,
                        "Asia/Baku": new Date(2013, 2, 31, 4, 0, 0),
                        "Asia/Yerevan": new Date(2013, 2, 31, 3, 0, 0),
                        "Asia/Kamchatka": b,
                        "Asia/Gaza": new Date(2010, 2, 27, 4, 0, 0),
                        "Africa/Cairo": new Date(2010, 4, 1, 3, 0, 0),
                        "Europe/Minsk": b,
                        "Pacific/Apia": new Date(2010, 10, 1, 1, 0, 0, 0),
                        "Pacific/Fiji": new Date(2010, 11, 1, 0, 0, 0),
                        "Australia/Perth": new Date(2008, 10, 1, 1, 0, 0, 0)
                    };
                return c[a]
            };
        return {
            determine: i,
            date_is_dst: g,
            dst_start_for: j
        }
    }();
    b.TimeZone = function(a) {
        "use strict";
        var c = {
                "America/Denver": ["America/Denver", "America/Mazatlan"],
                "America/Chicago": ["America/Chicago", "America/Mexico_City"],
                "America/Santiago": ["America/Santiago", "America/Asuncion", "America/Campo_Grande"],
                "America/Montevideo": ["America/Montevideo", "America/Sao_Paulo"],
                "Asia/Beirut": ["Asia/Amman", "Asia/Jerusalem", "Asia/Beirut", "Europe/Helsinki", "Asia/Damascus"],
                "Pacific/Auckland": ["Pacific/Auckland", "Pacific/Fiji"],
                "America/Los_Angeles": ["America/Los_Angeles", "America/Santa_Isabel"],
                "America/New_York": ["America/Havana", "America/New_York"],
                "America/Halifax": ["America/Goose_Bay", "America/Halifax"],
                "America/Godthab": ["America/Miquelon", "America/Godthab"],
                "Asia/Dubai": ["Europe/Moscow"],
                "Asia/Dhaka": ["Asia/Yekaterinburg"],
                "Asia/Jakarta": ["Asia/Omsk"],
                "Asia/Shanghai": ["Asia/Krasnoyarsk", "Australia/Perth"],
                "Asia/Tokyo": ["Asia/Irkutsk"],
                "Australia/Brisbane": ["Asia/Yakutsk"],
                "Pacific/Noumea": ["Asia/Vladivostok"],
                "Pacific/Tarawa": ["Asia/Kamchatka", "Pacific/Fiji"],
                "Pacific/Tongatapu": ["Pacific/Apia"],
                "Asia/Baghdad": ["Europe/Minsk"],
                "Asia/Baku": ["Asia/Yerevan", "Asia/Baku"],
                "Africa/Johannesburg": ["Asia/Gaza", "Africa/Cairo"]
            },
            d = a,
            e = function() {
                for (var a = c[d], e = a.length, f = 0, g = a[0]; e > f; f += 1)
                    if (g = a[f], b.date_is_dst(b.dst_start_for(g))) return void(d = g)
            },
            f = function() {
                return "undefined" != typeof c[d]
            };
        return f() && e(), {
            name: function() {
                return d
            }
        }
    }, b.olson = {}, b.olson.timezones = {
        "-720,0": "Pacific/Majuro",
        "-660,0": "Pacific/Pago_Pago",
        "-600,1": "America/Adak",
        "-600,0": "Pacific/Honolulu",
        "-570,0": "Pacific/Marquesas",
        "-540,0": "Pacific/Gambier",
        "-540,1": "America/Anchorage",
        "-480,1": "America/Los_Angeles",
        "-480,0": "Pacific/Pitcairn",
        "-420,0": "America/Phoenix",
        "-420,1": "America/Denver",
        "-360,0": "America/Guatemala",
        "-360,1": "America/Chicago",
        "-360,1,s": "Pacific/Easter",
        "-300,0": "America/Bogota",
        "-300,1": "America/New_York",
        "-270,0": "America/Caracas",
        "-240,1": "America/Halifax",
        "-240,0": "America/Santo_Domingo",
        "-240,1,s": "America/Santiago",
        "-210,1": "America/St_Johns",
        "-180,1": "America/Godthab",
        "-180,0": "America/Argentina/Buenos_Aires",
        "-180,1,s": "America/Montevideo",
        "-120,0": "America/Noronha",
        "-120,1": "America/Noronha",
        "-60,1": "Atlantic/Azores",
        "-60,0": "Atlantic/Cape_Verde",
        "0,0": "Etc/UTC",
        "0,1": "Europe/London",
        "60,1": "Europe/Berlin",
        "60,0": "Africa/Lagos",
        "60,1,s": "Africa/Windhoek",
        "120,1": "Asia/Beirut",
        "120,0": "Africa/Johannesburg",
        "180,0": "Asia/Baghdad",
        "180,1": "Europe/Moscow",
        "210,1": "Asia/Tehran",
        "240,0": "Asia/Dubai",
        "240,1": "Asia/Baku",
        "270,0": "Asia/Kabul",
        "300,1": "Asia/Yekaterinburg",
        "300,0": "Asia/Karachi",
        "330,0": "Asia/Kolkata",
        "345,0": "Asia/Kathmandu",
        "360,0": "Asia/Dhaka",
        "360,1": "Asia/Omsk",
        "390,0": "Asia/Rangoon",
        "420,1": "Asia/Krasnoyarsk",
        "420,0": "Asia/Jakarta",
        "480,0": "Asia/Shanghai",
        "480,1": "Asia/Irkutsk",
        "525,0": "Australia/Eucla",
        "525,1,s": "Australia/Eucla",
        "540,1": "Asia/Yakutsk",
        "540,0": "Asia/Tokyo",
        "570,0": "Australia/Darwin",
        "570,1,s": "Australia/Adelaide",
        "600,0": "Australia/Brisbane",
        "600,1": "Asia/Vladivostok",
        "600,1,s": "Australia/Sydney",
        "630,1,s": "Australia/Lord_Howe",
        "660,1": "Asia/Kamchatka",
        "660,0": "Pacific/Noumea",
        "690,0": "Pacific/Norfolk",
        "720,1,s": "Pacific/Auckland",
        "720,0": "Pacific/Tarawa",
        "765,1,s": "Pacific/Chatham",
        "780,0": "Pacific/Tongatapu",
        "780,1,s": "Pacific/Apia",
        "840,0": "Pacific/Kiritimati"
    }, "undefined" != typeof exports ? exports.jstz = b : a.jstz = b
}(this);
/*!
 * Generated using the Bootstrap Customizer (https://getbootstrap.com/docs/3.4/customize/)
 */

/*!
 * Bootstrap v3.4.1 (https://getbootstrap.com/)
 * Copyright 2011-2023 Twitter, Inc.
 * Licensed under the MIT license
 */

if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery"); + function(t) {
    "use strict";
    var e = t.fn.jquery.split(" ")[0].split(".");
    if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] > 3) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var i = t(this),
                n = i.data("bs.alert");
            n || i.data("bs.alert", n = new o(this)), "string" == typeof e && n[e].call(i)
        })
    }
    var i = '[data-dismiss="alert"]',
        o = function(e) {
            t(e).on("click", i, this.close)
        };
    o.VERSION = "3.4.1", o.TRANSITION_DURATION = 150, o.prototype.close = function(e) {
        function i() {
            a.detach().trigger("closed.bs.alert").remove()
        }
        var n = t(this),
            s = n.attr("data-target");
        s || (s = n.attr("href"), s = s && s.replace(/.*(?=#[^\s]*$)/, "")), s = "#" === s ? [] : s;
        var a = t(document).find(s);
        e && e.preventDefault(), a.length || (a = n.closest(".alert")), a.trigger(e = t.Event("close.bs.alert")), e.isDefaultPrevented() || (a.removeClass("in"), t.support.transition && a.hasClass("fade") ? a.one("bsTransitionEnd", i).emulateTransitionEnd(o.TRANSITION_DURATION) : i())
    };
    var n = t.fn.alert;
    t.fn.alert = e, t.fn.alert.Constructor = o, t.fn.alert.noConflict = function() {
        return t.fn.alert = n, this
    }, t(document).on("click.bs.alert.data-api", i, o.prototype.close)
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.button"),
                s = "object" == typeof e && e;
            n || o.data("bs.button", n = new i(this, s)), "toggle" == e ? n.toggle() : e && n.setState(e)
        })
    }
    var i = function(e, o) {
        this.$element = t(e), this.options = t.extend({}, i.DEFAULTS, o), this.isLoading = !1
    };
    i.VERSION = "3.4.1", i.DEFAULTS = {
        loadingText: "loading..."
    }, i.prototype.setState = function(e) {
        var i = "disabled",
            o = this.$element,
            n = o.is("input") ? "val" : "html",
            s = o.data();
        e += "Text", null == s.resetText && o.data("resetText", o[n]()), setTimeout(t.proxy(function() {
            o[n](null == s[e] ? this.options[e] : s[e]), "loadingText" == e ? (this.isLoading = !0, o.addClass(i).attr(i, i).prop(i, !0)) : this.isLoading && (this.isLoading = !1, o.removeClass(i).removeAttr(i).prop(i, !1))
        }, this), 0)
    }, i.prototype.toggle = function() {
        var t = !0,
            e = this.$element.closest('[data-toggle="buttons"]');
        if (e.length) {
            var i = this.$element.find("input");
            "radio" == i.prop("type") ? (i.prop("checked") && (t = !1), e.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == i.prop("type") && (i.prop("checked") !== this.$element.hasClass("active") && (t = !1), this.$element.toggleClass("active")), i.prop("checked", this.$element.hasClass("active")), t && i.trigger("change")
        } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active")
    };
    var o = t.fn.button;
    t.fn.button = e, t.fn.button.Constructor = i, t.fn.button.noConflict = function() {
        return t.fn.button = o, this
    }, t(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(i) {
        var o = t(i.target).closest(".btn");
        e.call(o, "toggle"), t(i.target).is('input[type="radio"], input[type="checkbox"]') || (i.preventDefault(), o.is("input,button") ? o.trigger("focus") : o.find("input:visible,button:visible").first().trigger("focus"))
    }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(e) {
        t(e.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(e.type))
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.carousel"),
                s = t.extend({}, i.DEFAULTS, o.data(), "object" == typeof e && e),
                a = "string" == typeof e ? e : s.slide;
            n || o.data("bs.carousel", n = new i(this, s)), "number" == typeof e ? n.to(e) : a ? n[a]() : s.interval && n.pause().cycle()
        })
    }
    var i = function(e, i) {
        this.$element = t(e), this.$indicators = this.$element.find(".carousel-indicators"), this.options = i, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", t.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", t.proxy(this.pause, this)).on("mouseleave.bs.carousel", t.proxy(this.cycle, this))
    };
    i.VERSION = "3.4.1", i.TRANSITION_DURATION = 600, i.DEFAULTS = {
        interval: 5e3,
        pause: "hover",
        wrap: !0,
        keyboard: !0
    }, i.prototype.keydown = function(t) {
        if (!/input|textarea/i.test(t.target.tagName)) {
            switch (t.which) {
                case 37:
                    this.prev();
                    break;
                case 39:
                    this.next();
                    break;
                default:
                    return
            }
            t.preventDefault()
        }
    }, i.prototype.cycle = function(e) {
        return e || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(t.proxy(this.next, this), this.options.interval)), this
    }, i.prototype.getItemIndex = function(t) {
        return this.$items = t.parent().children(".item"), this.$items.index(t || this.$active)
    }, i.prototype.getItemForDirection = function(t, e) {
        var i = this.getItemIndex(e),
            o = "prev" == t && 0 === i || "next" == t && i == this.$items.length - 1;
        if (o && !this.options.wrap) return e;
        var n = "prev" == t ? -1 : 1,
            s = (i + n) % this.$items.length;
        return this.$items.eq(s)
    }, i.prototype.to = function(t) {
        var e = this,
            i = this.getItemIndex(this.$active = this.$element.find(".item.active"));
        return t > this.$items.length - 1 || 0 > t ? void 0 : this.sliding ? this.$element.one("slid.bs.carousel", function() {
            e.to(t)
        }) : i == t ? this.pause().cycle() : this.slide(t > i ? "next" : "prev", this.$items.eq(t))
    }, i.prototype.pause = function(e) {
        return e || (this.paused = !0), this.$element.find(".next, .prev").length && t.support.transition && (this.$element.trigger(t.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this
    }, i.prototype.next = function() {
        return this.sliding ? void 0 : this.slide("next")
    }, i.prototype.prev = function() {
        return this.sliding ? void 0 : this.slide("prev")
    }, i.prototype.slide = function(e, o) {
        var n = this.$element.find(".item.active"),
            s = o || this.getItemForDirection(e, n),
            a = this.interval,
            r = "next" == e ? "left" : "right",
            l = this;
        if (s.hasClass("active")) return this.sliding = !1;
        var h = s[0],
            d = t.Event("slide.bs.carousel", {
                relatedTarget: h,
                direction: r
            });
        if (this.$element.trigger(d), !d.isDefaultPrevented()) {
            if (this.sliding = !0, a && this.pause(), this.$indicators.length) {
                this.$indicators.find(".active").removeClass("active");
                var p = t(this.$indicators.children()[this.getItemIndex(s)]);
                p && p.addClass("active")
            }
            var c = t.Event("slid.bs.carousel", {
                relatedTarget: h,
                direction: r
            });
            return t.support.transition && this.$element.hasClass("slide") ? (s.addClass(e), "object" == typeof s && s.length && s[0].offsetWidth, n.addClass(r), s.addClass(r), n.one("bsTransitionEnd", function() {
                s.removeClass([e, r].join(" ")).addClass("active"), n.removeClass(["active", r].join(" ")), l.sliding = !1, setTimeout(function() {
                    l.$element.trigger(c)
                }, 0)
            }).emulateTransitionEnd(i.TRANSITION_DURATION)) : (n.removeClass("active"), s.addClass("active"), this.sliding = !1, this.$element.trigger(c)), a && this.cycle(), this
        }
    };
    var o = t.fn.carousel;
    t.fn.carousel = e, t.fn.carousel.Constructor = i, t.fn.carousel.noConflict = function() {
        return t.fn.carousel = o, this
    };
    var n = function(i) {
        var o = t(this),
            n = o.attr("href");
        n && (n = n.replace(/.*(?=#[^\s]+$)/, ""));
        var s = o.attr("data-target") || n,
            a = t(document).find(s);
        if (a.hasClass("carousel")) {
            var r = t.extend({}, a.data(), o.data()),
                l = o.attr("data-slide-to");
            l && (r.interval = !1), e.call(a, r), l && a.data("bs.carousel").to(l), i.preventDefault()
        }
    };
    t(document).on("click.bs.carousel.data-api", "[data-slide]", n).on("click.bs.carousel.data-api", "[data-slide-to]", n), t(window).on("load", function() {
        t('[data-ride="carousel"]').each(function() {
            var i = t(this);
            e.call(i, i.data())
        })
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        var i = e.attr("data-target");
        i || (i = e.attr("href"), i = i && /#[A-Za-z]/.test(i) && i.replace(/.*(?=#[^\s]*$)/, ""));
        var o = "#" !== i ? t(document).find(i) : null;
        return o && o.length ? o : e.parent()
    }

    function i(i) {
        i && 3 === i.which || (t(n).remove(), t(s).each(function() {
            var o = t(this),
                n = e(o),
                s = {
                    relatedTarget: this
                };
            n.hasClass("open") && (i && "click" == i.type && /input|textarea/i.test(i.target.tagName) && t.contains(n[0], i.target) || (n.trigger(i = t.Event("hide.bs.dropdown", s)), i.isDefaultPrevented() || (o.attr("aria-expanded", "false"), n.removeClass("open").trigger(t.Event("hidden.bs.dropdown", s)))))
        }))
    }

    function o(e) {
        return this.each(function() {
            var i = t(this),
                o = i.data("bs.dropdown");
            o || i.data("bs.dropdown", o = new a(this)), "string" == typeof e && o[e].call(i)
        })
    }
    var n = ".dropdown-backdrop",
        s = '[data-toggle="dropdown"]',
        a = function(e) {
            t(e).on("click.bs.dropdown", this.toggle)
        };
    a.VERSION = "3.4.1", a.prototype.toggle = function(o) {
        var n = t(this);
        if (!n.is(".disabled, :disabled")) {
            var s = e(n),
                a = s.hasClass("open");
            if (i(), !a) {
                "ontouchstart" in document.documentElement && !s.closest(".navbar-nav").length && t(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(t(this)).on("click", i);
                var r = {
                    relatedTarget: this
                };
                if (s.trigger(o = t.Event("show.bs.dropdown", r)), o.isDefaultPrevented()) return;
                n.trigger("focus").attr("aria-expanded", "true"), s.toggleClass("open").trigger(t.Event("shown.bs.dropdown", r))
            }
            return !1
        }
    }, a.prototype.keydown = function(i) {
        if (/(38|40|27|32)/.test(i.which) && !/input|textarea/i.test(i.target.tagName)) {
            var o = t(this);
            if (i.preventDefault(), i.stopPropagation(), !o.is(".disabled, :disabled")) {
                var n = e(o),
                    a = n.hasClass("open");
                if (!a && 27 != i.which || a && 27 == i.which) return 27 == i.which && n.find(s).trigger("focus"), o.trigger("click");
                var r = " li:not(.disabled):visible a",
                    l = n.find(".dropdown-menu" + r);
                if (l.length) {
                    var h = l.index(i.target);
                    38 == i.which && h > 0 && h--, 40 == i.which && h < l.length - 1 && h++, ~h || (h = 0), l.eq(h).trigger("focus")
                }
            }
        }
    };
    var r = t.fn.dropdown;
    t.fn.dropdown = o, t.fn.dropdown.Constructor = a, t.fn.dropdown.noConflict = function() {
        return t.fn.dropdown = r, this
    }, t(document).on("click.bs.dropdown.data-api", i).on("click.bs.dropdown.data-api", ".dropdown form", function(t) {
        t.stopPropagation()
    }).on("click.bs.dropdown.data-api", s, a.prototype.toggle).on("keydown.bs.dropdown.data-api", s, a.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", a.prototype.keydown)
}(jQuery), + function(t) {
    "use strict";

    function e(e, o) {
        return this.each(function() {
            var n = t(this),
                s = n.data("bs.modal"),
                a = t.extend({}, i.DEFAULTS, n.data(), "object" == typeof e && e);
            s || n.data("bs.modal", s = new i(this, a)), "string" == typeof e ? s[e](o) : a.show && s.show(o)
        })
    }
    var i = function(e, i) {
        this.options = i, this.$body = t(document.body), this.$element = t(e), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.fixedContent = ".navbar-fixed-top, .navbar-fixed-bottom", this.options.remote && this.$element.find(".modal-content").load(this.options.remote, t.proxy(function() {
            this.$element.trigger("loaded.bs.modal")
        }, this))
    };
    i.VERSION = "3.4.1", i.TRANSITION_DURATION = 300, i.BACKDROP_TRANSITION_DURATION = 150, i.DEFAULTS = {
        backdrop: !0,
        keyboard: !0,
        show: !0
    }, i.prototype.toggle = function(t) {
        return this.isShown ? this.hide() : this.show(t)
    }, i.prototype.show = function(e) {
        var o = this,
            n = t.Event("show.bs.modal", {
                relatedTarget: e
            });
        this.$element.trigger(n), this.isShown || n.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', t.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function() {
            o.$element.one("mouseup.dismiss.bs.modal", function(e) {
                t(e.target).is(o.$element) && (o.ignoreBackdropClick = !0)
            })
        }), this.backdrop(function() {
            var n = t.support.transition && o.$element.hasClass("fade");
            o.$element.parent().length || o.$element.appendTo(o.$body), o.$element.show().scrollTop(0), o.adjustDialog(), n && o.$element[0].offsetWidth, o.$element.addClass("in"), o.enforceFocus();
            var s = t.Event("shown.bs.modal", {
                relatedTarget: e
            });
            n ? o.$dialog.one("bsTransitionEnd", function() {
                o.$element.trigger("focus").trigger(s)
            }).emulateTransitionEnd(i.TRANSITION_DURATION) : o.$element.trigger("focus").trigger(s)
        }))
    }, i.prototype.hide = function(e) {
        e && e.preventDefault(), e = t.Event("hide.bs.modal"), this.$element.trigger(e), this.isShown && !e.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), t(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), t.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", t.proxy(this.hideModal, this)).emulateTransitionEnd(i.TRANSITION_DURATION) : this.hideModal())
    }, i.prototype.enforceFocus = function() {
        t(document).off("focusin.bs.modal").on("focusin.bs.modal", t.proxy(function(t) {
            document === t.target || this.$element[0] === t.target || this.$element.has(t.target).length || this.$element.trigger("focus")
        }, this))
    }, i.prototype.escape = function() {
        this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", t.proxy(function(t) {
            27 == t.which && this.hide()
        }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal")
    }, i.prototype.resize = function() {
        this.isShown ? t(window).on("resize.bs.modal", t.proxy(this.handleUpdate, this)) : t(window).off("resize.bs.modal")
    }, i.prototype.hideModal = function() {
        var t = this;
        this.$element.hide(), this.backdrop(function() {
            t.$body.removeClass("modal-open"), t.resetAdjustments(), t.resetScrollbar(), t.$element.trigger("hidden.bs.modal")
        })
    }, i.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
    }, i.prototype.backdrop = function(e) {
        var o = this,
            n = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var s = t.support.transition && n;
            if (this.$backdrop = t(document.createElement("div")).addClass("modal-backdrop " + n).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", t.proxy(function(t) {
                    return this.ignoreBackdropClick ? void(this.ignoreBackdropClick = !1) : void(t.target === t.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide()))
                }, this)), s && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !e) return;
            s ? this.$backdrop.one("bsTransitionEnd", e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION) : e()
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            var a = function() {
                o.removeBackdrop(), e && e()
            };
            t.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION) : a()
        } else e && e()
    }, i.prototype.handleUpdate = function() {
        this.adjustDialog()
    }, i.prototype.adjustDialog = function() {
        var t = this.$element[0].scrollHeight > document.documentElement.clientHeight;
        this.$element.css({
            paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : "",
            paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : ""
        })
    }, i.prototype.resetAdjustments = function() {
        this.$element.css({
            paddingLeft: "",
            paddingRight: ""
        })
    }, i.prototype.checkScrollbar = function() {
        var t = window.innerWidth;
        if (!t) {
            var e = document.documentElement.getBoundingClientRect();
            t = e.right - Math.abs(e.left)
        }
        this.bodyIsOverflowing = document.body.clientWidth < t, this.scrollbarWidth = this.measureScrollbar()
    }, i.prototype.setScrollbar = function() {
        var e = parseInt(this.$body.css("padding-right") || 0, 10);
        this.originalBodyPad = document.body.style.paddingRight || "";
        var i = this.scrollbarWidth;
        this.bodyIsOverflowing && (this.$body.css("padding-right", e + i), t(this.fixedContent).each(function(e, o) {
            var n = o.style.paddingRight,
                s = t(o).css("padding-right");
            t(o).data("padding-right", n).css("padding-right", parseFloat(s) + i + "px")
        }))
    }, i.prototype.resetScrollbar = function() {
        this.$body.css("padding-right", this.originalBodyPad), t(this.fixedContent).each(function(e, i) {
            var o = t(i).data("padding-right");
            t(i).removeData("padding-right"), i.style.paddingRight = o ? o : ""
        })
    }, i.prototype.measureScrollbar = function() {
        var t = document.createElement("div");
        t.className = "modal-scrollbar-measure", this.$body.append(t);
        var e = t.offsetWidth - t.clientWidth;
        return this.$body[0].removeChild(t), e
    };
    var o = t.fn.modal;
    t.fn.modal = e, t.fn.modal.Constructor = i, t.fn.modal.noConflict = function() {
        return t.fn.modal = o, this
    }, t(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(i) {
        var o = t(this),
            n = o.attr("href"),
            s = o.attr("data-target") || n && n.replace(/.*(?=#[^\s]+$)/, ""),
            a = t(document).find(s),
            r = a.data("bs.modal") ? "toggle" : t.extend({
                remote: !/#/.test(n) && n
            }, a.data(), o.data());
        o.is("a") && i.preventDefault(), a.one("show.bs.modal", function(t) {
            t.isDefaultPrevented() || a.one("hidden.bs.modal", function() {
                o.is(":visible") && o.trigger("focus")
            })
        }), e.call(a, r, this)
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e, i) {
        var o = e.nodeName.toLowerCase();
        if (-1 !== t.inArray(o, i)) return -1 !== t.inArray(o, s) ? Boolean(e.nodeValue.match(l) || e.nodeValue.match(h)) : !0;
        for (var n = t(i).filter(function(t, e) {
                return e instanceof RegExp
            }), a = 0, r = n.length; r > a; a++)
            if (o.match(n[a])) return !0;
        return !1
    }

    function i(i, o, n) {
        if (0 === i.length) return i;
        if (n && "function" == typeof n) return n(i);
        if (!document.implementation || !document.implementation.createHTMLDocument) return i;
        var s = document.implementation.createHTMLDocument("sanitization");
        s.body.innerHTML = i;
        for (var a = t.map(o, function(t, e) {
                return e
            }), r = t(s.body).find("*"), l = 0, h = r.length; h > l; l++) {
            var d = r[l],
                p = d.nodeName.toLowerCase();
            if (-1 !== t.inArray(p, a))
                for (var c = t.map(d.attributes, function(t) {
                        return t
                    }), f = [].concat(o["*"] || [], o[p] || []), u = 0, g = c.length; g > u; u++) e(c[u], f) || d.removeAttribute(c[u].nodeName);
            else d.parentNode.removeChild(d)
        }
        return s.body.innerHTML
    }

    function o(e) {
        return this.each(function() {
            var i = t(this),
                o = i.data("bs.tooltip"),
                n = "object" == typeof e && e;
            !o && /destroy|hide/.test(e) || (o || i.data("bs.tooltip", o = new d(this, n)), "string" == typeof e && o[e]())
        })
    }
    var n = ["sanitize", "whiteList", "sanitizeFn"],
        s = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"],
        a = /^aria-[\w-]*$/i,
        r = {
            "*": ["class", "dir", "id", "lang", "role", a],
            a: ["target", "href", "title", "rel"],
            area: [],
            b: [],
            br: [],
            col: [],
            code: [],
            div: [],
            em: [],
            hr: [],
            h1: [],
            h2: [],
            h3: [],
            h4: [],
            h5: [],
            h6: [],
            i: [],
            img: ["src", "alt", "title", "width", "height"],
            li: [],
            ol: [],
            p: [],
            pre: [],
            s: [],
            small: [],
            span: [],
            sub: [],
            sup: [],
            strong: [],
            u: [],
            ul: []
        },
        l = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
        h = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i,
        d = function(t, e) {
            this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, e)
        };
    d.VERSION = "3.4.1", d.TRANSITION_DURATION = 150, d.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1,
        viewport: {
            selector: "body",
            padding: 0
        },
        sanitize: !0,
        sanitizeFn: null,
        whiteList: r
    }, d.prototype.init = function(e, i, o) {
        if (this.enabled = !0, this.type = e, this.$element = t(i), this.options = this.getOptions(o), this.$viewport = this.options.viewport && t(document).find(t.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
                click: !1,
                hover: !1,
                focus: !1
            }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
        for (var n = this.options.trigger.split(" "), s = n.length; s--;) {
            var a = n[s];
            if ("click" == a) this.$element.on("click." + this.type, this.options.selector, t.proxy(this.toggle, this));
            else if ("manual" != a) {
                var r = "hover" == a ? "mouseenter" : "focusin",
                    l = "hover" == a ? "mouseleave" : "focusout";
                this.$element.on(r + "." + this.type, this.options.selector, t.proxy(this.enter, this)), this.$element.on(l + "." + this.type, this.options.selector, t.proxy(this.leave, this))
            }
        }
        this.options.selector ? this._options = t.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle()
    }, d.prototype.getDefaults = function() {
        return d.DEFAULTS
    }, d.prototype.getOptions = function(e) {
        var o = this.$element.data();
        for (var s in o) o.hasOwnProperty(s) && -1 !== t.inArray(s, n) && delete o[s];
        return e = t.extend({}, this.getDefaults(), o, e), e.delay && "number" == typeof e.delay && (e.delay = {
            show: e.delay,
            hide: e.delay
        }), e.sanitize && (e.template = i(e.template, e.whiteList, e.sanitizeFn)), e
    }, d.prototype.getDelegateOptions = function() {
        var e = {},
            i = this.getDefaults();
        return this._options && t.each(this._options, function(t, o) {
            i[t] != o && (e[t] = o)
        }), e
    }, d.prototype.enter = function(e) {
        var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type);
        return i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusin" == e.type ? "focus" : "hover"] = !0), i.tip().hasClass("in") || "in" == i.hoverState ? void(i.hoverState = "in") : (clearTimeout(i.timeout), i.hoverState = "in", i.options.delay && i.options.delay.show ? void(i.timeout = setTimeout(function() {
            "in" == i.hoverState && i.show()
        }, i.options.delay.show)) : i.show())
    }, d.prototype.isInStateTrue = function() {
        for (var t in this.inState)
            if (this.inState[t]) return !0;
        return !1
    }, d.prototype.leave = function(e) {
        var i = e instanceof this.constructor ? e : t(e.currentTarget).data("bs." + this.type);
        return i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i)), e instanceof t.Event && (i.inState["focusout" == e.type ? "focus" : "hover"] = !1), i.isInStateTrue() ? void 0 : (clearTimeout(i.timeout), i.hoverState = "out", i.options.delay && i.options.delay.hide ? void(i.timeout = setTimeout(function() {
            "out" == i.hoverState && i.hide()
        }, i.options.delay.hide)) : i.hide())
    }, d.prototype.show = function() {
        var e = t.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(e);
            var i = t.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
            if (e.isDefaultPrevented() || !i) return;
            var o = this,
                n = this.tip(),
                s = this.getUID(this.type);
            this.setContent(), n.attr("id", s), this.$element.attr("aria-describedby", s), this.options.animation && n.addClass("fade");
            var a = "function" == typeof this.options.placement ? this.options.placement.call(this, n[0], this.$element[0]) : this.options.placement,
                r = /\s?auto?\s?/i,
                l = r.test(a);
            l && (a = a.replace(r, "") || "top"), n.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(a).data("bs." + this.type, this), this.options.container ? n.appendTo(t(document).find(this.options.container)) : n.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type);
            var h = this.getPosition(),
                p = n[0].offsetWidth,
                c = n[0].offsetHeight;
            if (l) {
                var f = a,
                    u = this.getPosition(this.$viewport);
                a = "bottom" == a && h.bottom + c > u.bottom ? "top" : "top" == a && h.top - c < u.top ? "bottom" : "right" == a && h.right + p > u.width ? "left" : "left" == a && h.left - p < u.left ? "right" : a, n.removeClass(f).addClass(a)
            }
            var g = this.getCalculatedOffset(a, h, p, c);
            this.applyPlacement(g, a);
            var m = function() {
                var t = o.hoverState;
                o.$element.trigger("shown.bs." + o.type), o.hoverState = null, "out" == t && o.leave(o)
            };
            t.support.transition && this.$tip.hasClass("fade") ? n.one("bsTransitionEnd", m).emulateTransitionEnd(d.TRANSITION_DURATION) : m()
        }
    }, d.prototype.applyPlacement = function(e, i) {
        var o = this.tip(),
            n = o[0].offsetWidth,
            s = o[0].offsetHeight,
            a = parseInt(o.css("margin-top"), 10),
            r = parseInt(o.css("margin-left"), 10);
        isNaN(a) && (a = 0), isNaN(r) && (r = 0), e.top += a, e.left += r, t.offset.setOffset(o[0], t.extend({
            using: function(t) {
                o.css({
                    top: Math.round(t.top),
                    left: Math.round(t.left)
                })
            }
        }, e), 0), o.addClass("in");
        var l = o[0].offsetWidth,
            h = o[0].offsetHeight;
        "top" == i && h != s && (e.top = e.top + s - h);
        var d = this.getViewportAdjustedDelta(i, e, l, h);
        d.left ? e.left += d.left : e.top += d.top;
        var p = /top|bottom/.test(i),
            c = p ? 2 * d.left - n + l : 2 * d.top - s + h,
            f = p ? "offsetWidth" : "offsetHeight";
        o.offset(e), this.replaceArrow(c, o[0][f], p)
    }, d.prototype.replaceArrow = function(t, e, i) {
        this.arrow().css(i ? "left" : "top", 50 * (1 - t / e) + "%").css(i ? "top" : "left", "")
    }, d.prototype.setContent = function() {
        var t = this.tip(),
            e = this.getTitle();
        this.options.html ? (this.options.sanitize && (e = i(e, this.options.whiteList, this.options.sanitizeFn)), t.find(".tooltip-inner").html(e)) : t.find(".tooltip-inner").text(e), t.removeClass("fade in top bottom left right")
    }, d.prototype.hide = function(e) {
        function i() {
            "in" != o.hoverState && n.detach(), o.$element && o.$element.removeAttr("aria-describedby").trigger("hidden.bs." + o.type), e && e()
        }
        var o = this,
            n = t(this.$tip),
            s = t.Event("hide.bs." + this.type);
        return this.$element.trigger(s), s.isDefaultPrevented() ? void 0 : (n.removeClass("in"), t.support.transition && n.hasClass("fade") ? n.one("bsTransitionEnd", i).emulateTransitionEnd(d.TRANSITION_DURATION) : i(), this.hoverState = null, this)
    }, d.prototype.fixTitle = function() {
        var t = this.$element;
        (t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "")
    }, d.prototype.hasContent = function() {
        return this.getTitle()
    }, d.prototype.getPosition = function(e) {
        e = e || this.$element;
        var i = e[0],
            o = "BODY" == i.tagName,
            n = i.getBoundingClientRect();
        null == n.width && (n = t.extend({}, n, {
            width: n.right - n.left,
            height: n.bottom - n.top
        }));
        var s = window.SVGElement && i instanceof window.SVGElement,
            a = o ? {
                top: 0,
                left: 0
            } : s ? null : e.offset(),
            r = {
                scroll: o ? document.documentElement.scrollTop || document.body.scrollTop : e.scrollTop()
            },
            l = o ? {
                width: t(window).width(),
                height: t(window).height()
            } : null;
        return t.extend({}, n, r, l, a)
    }, d.prototype.getCalculatedOffset = function(t, e, i, o) {
        return "bottom" == t ? {
            top: e.top + e.height,
            left: e.left + e.width / 2 - i / 2
        } : "top" == t ? {
            top: e.top - o,
            left: e.left + e.width / 2 - i / 2
        } : "left" == t ? {
            top: e.top + e.height / 2 - o / 2,
            left: e.left - i
        } : {
            top: e.top + e.height / 2 - o / 2,
            left: e.left + e.width
        }
    }, d.prototype.getViewportAdjustedDelta = function(t, e, i, o) {
        var n = {
            top: 0,
            left: 0
        };
        if (!this.$viewport) return n;
        var s = this.options.viewport && this.options.viewport.padding || 0,
            a = this.getPosition(this.$viewport);
        if (/right|left/.test(t)) {
            var r = e.top - s - a.scroll,
                l = e.top + s - a.scroll + o;
            r < a.top ? n.top = a.top - r : l > a.top + a.height && (n.top = a.top + a.height - l)
        } else {
            var h = e.left - s,
                d = e.left + s + i;
            h < a.left ? n.left = a.left - h : d > a.right && (n.left = a.left + a.width - d)
        }
        return n
    }, d.prototype.getTitle = function() {
        var t, e = this.$element,
            i = this.options;
        return t = e.attr("data-original-title") || ("function" == typeof i.title ? i.title.call(e[0]) : i.title)
    }, d.prototype.getUID = function(t) {
        do t += ~~(1e6 * Math.random()); while (document.getElementById(t));
        return t
    }, d.prototype.tip = function() {
        if (!this.$tip && (this.$tip = t(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
        return this.$tip
    }, d.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
    }, d.prototype.enable = function() {
        this.enabled = !0
    }, d.prototype.disable = function() {
        this.enabled = !1
    }, d.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled
    }, d.prototype.toggle = function(e) {
        var i = this;
        e && (i = t(e.currentTarget).data("bs." + this.type), i || (i = new this.constructor(e.currentTarget, this.getDelegateOptions()), t(e.currentTarget).data("bs." + this.type, i))), e ? (i.inState.click = !i.inState.click, i.isInStateTrue() ? i.enter(i) : i.leave(i)) : i.tip().hasClass("in") ? i.leave(i) : i.enter(i)
    }, d.prototype.destroy = function() {
        var t = this;
        clearTimeout(this.timeout), this.hide(function() {
            t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null
        })
    }, d.prototype.sanitizeHtml = function(t) {
        return i(t, this.options.whiteList, this.options.sanitizeFn)
    };
    var p = t.fn.tooltip;
    t.fn.tooltip = o, t.fn.tooltip.Constructor = d, t.fn.tooltip.noConflict = function() {
        return t.fn.tooltip = p, this
    }
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.popover"),
                s = "object" == typeof e && e;
            !n && /destroy|hide/.test(e) || (n || o.data("bs.popover", n = new i(this, s)), "string" == typeof e && n[e]())
        })
    }
    var i = function(t, e) {
        this.init("popover", t, e)
    };
    if (!t.fn.tooltip) throw new Error("Popover requires tooltip.js");
    i.VERSION = "3.4.1", i.DEFAULTS = t.extend({}, t.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    }), i.prototype = t.extend({}, t.fn.tooltip.Constructor.prototype), i.prototype.constructor = i, i.prototype.getDefaults = function() {
        return i.DEFAULTS
    }, i.prototype.setContent = function() {
        var t = this.tip(),
            e = this.getTitle(),
            i = this.getContent();
        if (this.options.html) {
            var o = typeof i;
            this.options.sanitize && (e = this.sanitizeHtml(e), "string" === o && (i = this.sanitizeHtml(i))), t.find(".popover-title").html(e), t.find(".popover-content").children().detach().end()["string" === o ? "html" : "append"](i)
        } else t.find(".popover-title").text(e), t.find(".popover-content").children().detach().end().text(i);
        t.removeClass("fade top bottom left right in"), t.find(".popover-title").html() || t.find(".popover-title").hide()
    }, i.prototype.hasContent = function() {
        return this.getTitle() || this.getContent()
    }, i.prototype.getContent = function() {
        var t = this.$element,
            e = this.options;
        return t.attr("data-content") || ("function" == typeof e.content ? e.content.call(t[0]) : e.content)
    }, i.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".arrow")
    };
    var o = t.fn.popover;
    t.fn.popover = e, t.fn.popover.Constructor = i, t.fn.popover.noConflict = function() {
        return t.fn.popover = o, this
    }
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.tab");
            n || o.data("bs.tab", n = new i(this)), "string" == typeof e && n[e]()
        })
    }
    var i = function(e) {
        this.element = t(e)
    };
    i.VERSION = "3.4.1", i.TRANSITION_DURATION = 150, i.prototype.show = function() {
        var e = this.element,
            i = e.closest("ul:not(.dropdown-menu)"),
            o = e.data("target");
        if (o || (o = e.attr("href"), o = o && o.replace(/.*(?=#[^\s]*$)/, "")), !e.parent("li").hasClass("active")) {
            var n = i.find(".active:last a"),
                s = t.Event("hide.bs.tab", {
                    relatedTarget: e[0]
                }),
                a = t.Event("show.bs.tab", {
                    relatedTarget: n[0]
                });
            if (n.trigger(s), e.trigger(a), !a.isDefaultPrevented() && !s.isDefaultPrevented()) {
                var r = t(document).find(o);
                this.activate(e.closest("li"), i), this.activate(r, r.parent(), function() {
                    n.trigger({
                        type: "hidden.bs.tab",
                        relatedTarget: e[0]
                    }), e.trigger({
                        type: "shown.bs.tab",
                        relatedTarget: n[0]
                    })
                })
            }
        }
    }, i.prototype.activate = function(e, o, n) {
        function s() {
            a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !1), e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", !0), r ? (e[0].offsetWidth, e.addClass("in")) : e.removeClass("fade"), e.parent(".dropdown-menu").length && e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", !0), n && n()
        }
        var a = o.find("> .active"),
            r = n && t.support.transition && (a.length && a.hasClass("fade") || !!o.find("> .fade").length);
        a.length && r ? a.one("bsTransitionEnd", s).emulateTransitionEnd(i.TRANSITION_DURATION) : s(), a.removeClass("in")
    };
    var o = t.fn.tab;
    t.fn.tab = e, t.fn.tab.Constructor = i, t.fn.tab.noConflict = function() {
        return t.fn.tab = o, this
    };
    var n = function(i) {
        i.preventDefault(), e.call(t(this), "show")
    };
    t(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', n).on("click.bs.tab.data-api", '[data-toggle="pill"]', n)
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.affix"),
                s = "object" == typeof e && e;
            n || o.data("bs.affix", n = new i(this, s)), "string" == typeof e && n[e]()
        })
    }
    var i = function(e, o) {
        this.options = t.extend({}, i.DEFAULTS, o);
        var n = this.options.target === i.DEFAULTS.target ? t(this.options.target) : t(document).find(this.options.target);
        this.$target = n.on("scroll.bs.affix.data-api", t.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", t.proxy(this.checkPositionWithEventLoop, this)), this.$element = t(e), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition()
    };
    i.VERSION = "3.4.1", i.RESET = "affix affix-top affix-bottom", i.DEFAULTS = {
        offset: 0,
        target: window
    }, i.prototype.getState = function(t, e, i, o) {
        var n = this.$target.scrollTop(),
            s = this.$element.offset(),
            a = this.$target.height();
        if (null != i && "top" == this.affixed) return i > n ? "top" : !1;
        if ("bottom" == this.affixed) return null != i ? n + this.unpin <= s.top ? !1 : "bottom" : t - o >= n + a ? !1 : "bottom";
        var r = null == this.affixed,
            l = r ? n : s.top,
            h = r ? a : e;
        return null != i && i >= n ? "top" : null != o && l + h >= t - o ? "bottom" : !1
    }, i.prototype.getPinnedOffset = function() {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(i.RESET).addClass("affix");
        var t = this.$target.scrollTop(),
            e = this.$element.offset();
        return this.pinnedOffset = e.top - t
    }, i.prototype.checkPositionWithEventLoop = function() {
        setTimeout(t.proxy(this.checkPosition, this), 1)
    }, i.prototype.checkPosition = function() {
        if (this.$element.is(":visible")) {
            var e = this.$element.height(),
                o = this.options.offset,
                n = o.top,
                s = o.bottom,
                a = Math.max(t(document).height(), t(document.body).height());
            "object" != typeof o && (s = n = o), "function" == typeof n && (n = o.top(this.$element)), "function" == typeof s && (s = o.bottom(this.$element));
            var r = this.getState(a, e, n, s);
            if (this.affixed != r) {
                null != this.unpin && this.$element.css("top", "");
                var l = "affix" + (r ? "-" + r : ""),
                    h = t.Event(l + ".bs.affix");
                if (this.$element.trigger(h), h.isDefaultPrevented()) return;
                this.affixed = r, this.unpin = "bottom" == r ? this.getPinnedOffset() : null, this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix", "affixed") + ".bs.affix")
            }
            "bottom" == r && this.$element.offset({
                top: a - e - s
            })
        }
    };
    var o = t.fn.affix;
    t.fn.affix = e, t.fn.affix.Constructor = i, t.fn.affix.noConflict = function() {
        return t.fn.affix = o, this
    }, t(window).on("load", function() {
        t('[data-spy="affix"]').each(function() {
            var i = t(this),
                o = i.data();
            o.offset = o.offset || {}, null != o.offsetBottom && (o.offset.bottom = o.offsetBottom), null != o.offsetTop && (o.offset.top = o.offsetTop), e.call(i, o)
        })
    })
}(jQuery), + function(t) {
    "use strict";

    function e(e) {
        var i, o = e.attr("data-target") || (i = e.attr("href")) && i.replace(/.*(?=#[^\s]+$)/, "");
        return t(document).find(o)
    }

    function i(e) {
        return this.each(function() {
            var i = t(this),
                n = i.data("bs.collapse"),
                s = t.extend({}, o.DEFAULTS, i.data(), "object" == typeof e && e);
            !n && s.toggle && /show|hide/.test(e) && (s.toggle = !1), n || i.data("bs.collapse", n = new o(this, s)), "string" == typeof e && n[e]()
        })
    }
    var o = function(e, i) {
        this.$element = t(e), this.options = t.extend({}, o.DEFAULTS, i), this.$trigger = t('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle()
    };
    o.VERSION = "3.4.1", o.TRANSITION_DURATION = 350, o.DEFAULTS = {
        toggle: !0
    }, o.prototype.dimension = function() {
        var t = this.$element.hasClass("width");
        return t ? "width" : "height"
    }, o.prototype.show = function() {
        if (!this.transitioning && !this.$element.hasClass("in")) {
            var e, n = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
            if (!(n && n.length && (e = n.data("bs.collapse"), e && e.transitioning))) {
                var s = t.Event("show.bs.collapse");
                if (this.$element.trigger(s), !s.isDefaultPrevented()) {
                    n && n.length && (i.call(n, "hide"), e || n.data("bs.collapse", null));
                    var a = this.dimension();
                    this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1;
                    var r = function() {
                        this.$element.removeClass("collapsing").addClass("collapse in")[a](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
                    };
                    if (!t.support.transition) return r.call(this);
                    var l = t.camelCase(["scroll", a].join("-"));
                    this.$element.one("bsTransitionEnd", t.proxy(r, this)).emulateTransitionEnd(o.TRANSITION_DURATION)[a](this.$element[0][l])
                }
            }
        }
    }, o.prototype.hide = function() {
        if (!this.transitioning && this.$element.hasClass("in")) {
            var e = t.Event("hide.bs.collapse");
            if (this.$element.trigger(e), !e.isDefaultPrevented()) {
                var i = this.dimension();
                this.$element[i](this.$element[i]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1;
                var n = function() {
                    this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
                };
                return t.support.transition ? void this.$element[i](0).one("bsTransitionEnd", t.proxy(n, this)).emulateTransitionEnd(o.TRANSITION_DURATION) : n.call(this)
            }
        }
    }, o.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]()
    }, o.prototype.getParent = function() {
        return t(document).find(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(t.proxy(function(i, o) {
            var n = t(o);
            this.addAriaAndCollapsedClass(e(n), n)
        }, this)).end()
    }, o.prototype.addAriaAndCollapsedClass = function(t, e) {
        var i = t.hasClass("in");
        t.attr("aria-expanded", i), e.toggleClass("collapsed", !i).attr("aria-expanded", i)
    };
    var n = t.fn.collapse;
    t.fn.collapse = i, t.fn.collapse.Constructor = o, t.fn.collapse.noConflict = function() {
        return t.fn.collapse = n, this
    }, t(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(o) {
        var n = t(this);
        n.attr("data-target") || o.preventDefault();
        var s = e(n),
            a = s.data("bs.collapse"),
            r = a ? "toggle" : n.data();
        i.call(s, r)
    })
}(jQuery), + function(t) {
    "use strict";

    function e(i, o) {
        this.$body = t(document.body), this.$scrollElement = t(t(i).is(document.body) ? window : i), this.options = t.extend({}, e.DEFAULTS, o), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", t.proxy(this.process, this)), this.refresh(), this.process()
    }

    function i(i) {
        return this.each(function() {
            var o = t(this),
                n = o.data("bs.scrollspy"),
                s = "object" == typeof i && i;
            n || o.data("bs.scrollspy", n = new e(this, s)), "string" == typeof i && n[i]()
        })
    }
    e.VERSION = "3.4.1", e.DEFAULTS = {
        offset: 10
    }, e.prototype.getScrollHeight = function() {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
    }, e.prototype.refresh = function() {
        var e = this,
            i = "offset",
            o = 0;
        this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), t.isWindow(this.$scrollElement[0]) || (i = "position", o = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function() {
            var e = t(this),
                n = e.data("target") || e.attr("href"),
                s = /^#./.test(n) && t(n);
            return s && s.length && s.is(":visible") && [
                [s[i]().top + o, n]
            ] || null
        }).sort(function(t, e) {
            return t[0] - e[0]
        }).each(function() {
            e.offsets.push(this[0]), e.targets.push(this[1])
        })
    }, e.prototype.process = function() {
        var t, e = this.$scrollElement.scrollTop() + this.options.offset,
            i = this.getScrollHeight(),
            o = this.options.offset + i - this.$scrollElement.height(),
            n = this.offsets,
            s = this.targets,
            a = this.activeTarget;
        if (this.scrollHeight != i && this.refresh(), e >= o) return a != (t = s[s.length - 1]) && this.activate(t);
        if (a && e < n[0]) return this.activeTarget = null, this.clear();
        for (t = n.length; t--;) a != s[t] && e >= n[t] && (void 0 === n[t + 1] || e < n[t + 1]) && this.activate(s[t])
    }, e.prototype.activate = function(e) {
        this.activeTarget = e, this.clear();
        var i = this.selector + '[data-target="' + e + '"],' + this.selector + '[href="' + e + '"]',
            o = t(i).parents("li").addClass("active");
        o.parent(".dropdown-menu").length && (o = o.closest("li.dropdown").addClass("active")), o.trigger("activate.bs.scrollspy")
    }, e.prototype.clear = function() {
        t(this.selector).parentsUntil(this.options.target, ".active").removeClass("active")
    };
    var o = t.fn.scrollspy;
    t.fn.scrollspy = i, t.fn.scrollspy.Constructor = e, t.fn.scrollspy.noConflict = function() {
        return t.fn.scrollspy = o, this
    }, t(window).on("load.bs.scrollspy.data-api", function() {
        t('[data-spy="scroll"]').each(function() {
            var e = t(this);
            i.call(e, e.data())
        })
    })
}(jQuery), + function(t) {
    "use strict";

    function e() {
        var t = document.createElement("bootstrap"),
            e = {
                WebkitTransition: "webkitTransitionEnd",
                MozTransition: "transitionend",
                OTransition: "oTransitionEnd otransitionend",
                transition: "transitionend"
            };
        for (var i in e)
            if (void 0 !== t.style[i]) return {
                end: e[i]
            };
        return !1
    }
    t.fn.emulateTransitionEnd = function(e) {
        var i = !1,
            o = this;
        t(this).one("bsTransitionEnd", function() {
            i = !0
        });
        var n = function() {
            i || t(o).trigger(t.support.transition.end)
        };
        return setTimeout(n, e), this
    }, t(function() {
        t.support.transition = e(), t.support.transition && (t.event.special.bsTransitionEnd = {
            bindType: t.support.transition.end,
            delegateType: t.support.transition.end,
            handle: function(e) {
                return t(e.target).is(this) ? e.handleObj.handler.apply(this, arguments) : void 0
            }
        })
    })
}(jQuery);
/*
 *  Document   : app.js
 *  Author     : pixelcave
 *  Description: Custom scripts and plugin initializations (available to all pages)
 *
 *  Feel free to remove the plugin initilizations from uiInit() if you would like to
 *  use them only in specific pages. Also, if you remove a js plugin you won't use, make
 *  sure to remove its initialization from uiInit().
 */

var App = (function() {
    /* Helper variables - set in uiInit() */
    var page,
        pageContent,
        header,
        sidebar,
        sBrand,
        sExtraInfo,
        sidebarAlt,
        sScroll,
        sScrollAlt;

    /* Initialization UI Code */
    var uiInit = function() {
        // Set variables - Cache some often used Jquery objects in variables */
        page = $('#page-container');
        header = $('header');
        pageContent = $('#page-content');

        sidebar = $('#sidebar');
        sBrand = $('#sidebar-brand');
        sExtraInfo = $('#sidebar-extra-info');
        sScroll = $('#sidebar-scroll');

        sidebarAlt = $('#sidebar-alt');
        sScrollAlt = $('#sidebar-scroll-alt');

        // Color Theme Preview functionality
        colorThemePreview();

        // Initialize sidebars functionality
        handleSidebar('init');

        // Sidebar navigation functionality
        handleNav();

        // Header glass effect on scrolling
        if (
            header.hasClass('navbar-fixed-top') ||
            header.hasClass('navbar-fixed-bottom')
        ) {
            $(window).on('scroll', function() {
                if ($(this).scrollTop() > 50) {
                    header.addClass('navbar-glass');
                } else {
                    header.removeClass('navbar-glass');
                }
            });
        }

        // Resize #page-content to fill empty space if exists
        $(window)
            .on('resize orientationchange', function() {
                resizePageContent();
            })
            .resize();

        // Add the correct copyright year
        var yearCopy = $('#year-copy'),
            d = new Date();
        if (d.getFullYear() === 2014) {
            yearCopy.html('2014');
        } else {
            yearCopy.html(d.getFullYear().toString());
        }

        // Intialize ripple effect on buttons
        rippleEffect($('.btn-effect-ripple'), 'btn-ripple');

        // Initialize Tabs
        $('[data-toggle="tabs"] a, .enable-tabs a').click(function(e) {
            e.preventDefault();
            $(this).tab('show');
        });

        // Initialize Tooltips
        $('[data-toggle="tooltip"], .enable-tooltip').tooltip({
            container: 'body',
            animation: false,
        });

        // Initialize Popovers
        $('[data-toggle="popover"], .enable-popover').popover({
            container: 'body',
            animation: true,
        });

        // Initialize Image Lightbox
        $('[data-toggle="lightbox-image"]').magnificPopup({
            type: 'image',
            image: {
                titleSrc: 'title'
            },
        });

        // Initialize image gallery lightbox
        $('[data-toggle="lightbox-gallery"]').each(function() {
            $(this).magnificPopup({
                delegate: 'a',
                type: 'image',
                gallery: {
                    enabled: true,
                    navigateByImgClick: true,
                    arrowMarkup: '<button type="button" class="mfp-arrow mfp-arrow-%dir%" title="%title%"></button>',
                    tPrev: 'Previous',
                    tNext: 'Next',
                    tCounter: '<span class="mfp-counter">%curr% of %total%</span>',
                },
                image: {
                    titleSrc: 'title'
                },
            });
        });

        // Initialize Typeahead - Example with countries
        var exampleTypeheadData = [
            'Afghanistan',
            'Albania',
            'Algeria',
            'American Samoa',
            'Andorra',
            'Angola',
            'Anguilla',
            'Antarctica',
            'Antigua and Barbuda',
            'Argentina',
            'Armenia',
            'Aruba',
            'Australia',
            'Austria',
            'Azerbaijan',
            'Bahrain',
            'Bangladesh',
            'Barbados',
            'Belarus',
            'Belgium',
            'Belize',
            'Benin',
            'Bermuda',
            'Bhutan',
            'Bolivia',
            'Bosnia and Herzegovina',
            'Botswana',
            'Bouvet Island',
            'Brazil',
            'British Indian Ocean Territory',
            'British Virgin Islands',
            'Brunei',
            'Bulgaria',
            'Burkina Faso',
            'Burundi',
            "CΓ΄te d'Ivoire",
            'Cambodia',
            'Cameroon',
            'Canada',
            'Cape Verde',
            'Cayman Islands',
            'Central African Republic',
            'Chad',
            'Chile',
            'China',
            'Christmas Island',
            'Cocos (Keeling) Islands',
            'Colombia',
            'Comoros',
            'Congo',
            'Cook Islands',
            'Costa Rica',
            'Croatia',
            'Cuba',
            'Cyprus',
            'Czech Republic',
            'Democratic Republic of the Congo',
            'Denmark',
            'Djibouti',
            'Dominica',
            'Dominican Republic',
            'East Timor',
            'Ecuador',
            'Egypt',
            'El Salvador',
            'Equatorial Guinea',
            'Eritrea',
            'Estonia',
            'Ethiopia',
            'Faeroe Islands',
            'Falkland Islands',
            'Fiji',
            'Finland',
            'Former Yugoslav Republic of Macedonia',
            'France',
            'French Guiana',
            'French Polynesia',
            'French Southern Territories',
            'Gabon',
            'Georgia',
            'Germany',
            'Ghana',
            'Gibraltar',
            'Greece',
            'Greenland',
            'Grenada',
            'Guadeloupe',
            'Guam',
            'Guatemala',
            'Guinea',
            'Guinea-Bissau',
            'Guyana',
            'Haiti',
            'Heard Island and McDonald Islands',
            'Honduras',
            'Hong Kong',
            'Hungary',
            'Iceland',
            'India',
            'Indonesia',
            'Iran',
            'Iraq',
            'Ireland',
            'Israel',
            'Italy',
            'Jamaica',
            'Japan',
            'Jordan',
            'Kazakhstan',
            'Kenya',
            'Kiribati',
            'Kuwait',
            'Kyrgyzstan',
            'Laos',
            'Latvia',
            'Lebanon',
            'Lesotho',
            'Liberia',
            'Libya',
            'Liechtenstein',
            'Lithuania',
            'Luxembourg',
            'Macau',
            'Madagascar',
            'Malawi',
            'Malaysia',
            'Maldives',
            'Mali',
            'Malta',
            'Marshall Islands',
            'Martinique',
            'Mauritania',
            'Mauritius',
            'Mayotte',
            'Mexico',
            'Micronesia',
            'Moldova',
            'Monaco',
            'Mongolia',
            'Montserrat',
            'Morocco',
            'Mozambique',
            'Myanmar',
            'Namibia',
            'Nauru',
            'Nepal',
            'Netherlands',
            'Netherlands Antilles',
            'New Caledonia',
            'New Zealand',
            'Nicaragua',
            'Niger',
            'Nigeria',
            'Niue',
            'Norfolk Island',
            'North Korea',
            'Northern Marianas',
            'Norway',
            'Oman',
            'Pakistan',
            'Palau',
            'Panama',
            'Papua New Guinea',
            'Paraguay',
            'Peru',
            'Philippines',
            'Pitcairn Islands',
            'Poland',
            'Portugal',
            'Puerto Rico',
            'Qatar',
            'RΓ©union',
            'Romania',
            'Russia',
            'Rwanda',
            'SΓ£o TomΓ© and PrΓ­ncipe',
            'Saint Helena',
            'Saint Kitts and Nevis',
            'Saint Lucia',
            'Saint Pierre and Miquelon',
            'Saint Vincent and the Grenadines',
            'Samoa',
            'San Marino',
            'Saudi Arabia',
            'Senegal',
            'Seychelles',
            'Sierra Leone',
            'Singapore',
            'Slovakia',
            'Slovenia',
            'Solomon Islands',
            'Somalia',
            'South Africa',
            'South Georgia and the South Sandwich Islands',
            'South Korea',
            'Spain',
            'Sri Lanka',
            'Sudan',
            'Suriname',
            'Svalbard and Jan Mayen',
            'Swaziland',
            'Sweden',
            'Switzerland',
            'Syria',
            'Taiwan',
            'Tajikistan',
            'Tanzania',
            'Thailand',
            'The Bahamas',
            'The Gambia',
            'Togo',
            'Tokelau',
            'Tonga',
            'Trinidad and Tobago',
            'Tunisia',
            'Turkey',
            'Turkmenistan',
            'Turks and Caicos Islands',
            'Tuvalu',
            'US Virgin Islands',
            'Uganda',
            'Ukraine',
            'United Arab Emirates',
            'United Kingdom',
            'United States',
            'United States Minor Outlying Islands',
            'Uruguay',
            'Uzbekistan',
            'Vanuatu',
            'Vatican City',
            'Venezuela',
            'Vietnam',
            'Wallis and Futuna',
            'Western Sahara',
            'Yemen',
            'Yugoslavia',
            'Zambia',
            'Zimbabwe',
        ];
        $('.input-typeahead').typeahead({
            source: exampleTypeheadData
        });

        // Initialize Chosen
        $('.select-chosen').chosen({
            width: '100%'
        });

        // Initialize Select2
        $('.select-select2').select2();

        // Initialize Slider for Bootstrap
        $('.input-slider').slider();

        // Initialize Tags Input
        $('.input-tags').tagsInput({
            width: 'auto',
            height: 'auto'
        });

        // Initialize Timepicker
        $('.input-timepicker').timepicker({
            minuteStep: 1,
            showSeconds: true,
            showMeridian: true,
        });
        $('.input-timepicker24').timepicker({
            minuteStep: 1,
            showSeconds: true,
            showMeridian: false,
        });

        // Initialize Datepicker
        $('.input-datepicker, .input-daterange')
            .datepicker({
                weekStart: 1
            })
            .on('changeDate', function(e) {
                $(this).datepicker('hide');
            });

        // Initialize Bootstrap Colorpicker
        $('.input-colorpicker').colorpicker({
            format: 'hex'
        });
        $('.input-colorpicker-rgba').colorpicker({
            format: 'rgba'
        });

        // Easy Pie Chart
        $('.pie-chart').easyPieChart({
            barColor: $(this).data('bar-color') ?
                $(this).data('bar-color') :
                '#777777',
            trackColor: $(this).data('track-color') ?
                $(this).data('track-color') :
                '#eeeeee',
            lineWidth: $(this).data('line-width') ? $(this).data('line-width') : 3,
            size: $(this).data('size') ? $(this).data('size') : '80',
            animate: 800,
            scaleColor: false,
        });

        // Toggles 'open' class on toggle menu
        $('.toggle-menu .submenu').on('click', function() {
            $(this).parent('li').toggleClass('open');
        });

        // Initialize Placeholder (for IE9)
        $('input, textarea').placeholder();
    };

    /* Page Loading functionality */
    var pageLoading = function() {
        var pageWrapper = $('#page-wrapper');

        if (pageWrapper.hasClass('page-loading')) {
            if (page.hasClass('enable-cookies')) {
                setTimeout(function() {
                    pageWrapper.removeClass('page-loading');
                }, 100);
            } else {
                pageWrapper.removeClass('page-loading');
            }
        }
    };

    /* Sidebar Navigation functionality */
    var handleNav = function() {
        // Get all vital links
        var allLinks = $('.sidebar-nav a', sidebar);
        var menuLinks = $('.sidebar-nav-menu', sidebar);
        var submenuLinks = $('.sidebar-nav-submenu', sidebar);

        // Add ripple effect to all navigation links
        allLinks.on('click', function(e) {
            var link = $(this),
                ripple,
                d,
                x,
                y;

            // Remove .animate class from all ripple elements
            sidebar.find('.sidebar-nav-ripple').removeClass('animate');

            // If the ripple element doesn't exist in this link, add it
            if (link.children('.sidebar-nav-ripple').length === 0) {
                link.prepend('<span class="sidebar-nav-ripple"></span>');
            }

            // Get the ripple element
            var ripple = link.children('.sidebar-nav-ripple');

            // If the ripple element doesn't have dimensions set them accordingly
            if (!ripple.height() && !ripple.width()) {
                d = Math.max(link.outerWidth(), link.outerHeight());
                ripple.css({
                    height: d,
                    width: d
                });
            }

            // Get coordinates for our ripple element
            x = e.pageX - link.offset().left - ripple.width() / 2;
            y = e.pageY - link.offset().top - ripple.height() / 2;

            // Position the ripple element and add the class .animate to it
            ripple.css({
                top: y + 'px',
                left: x + 'px'
            }).addClass('animate');
        });

        // Primary Accordion functionality
        menuLinks.on('click', function(e) {
            var link = $(this);
            var windowW =
                window.innerWidth ||
                document.documentElement.clientWidth ||
                document.body.clientWidth;

            // If we are in mini sidebar mode
            if (page.hasClass('sidebar-visible-lg-mini') && windowW > 991) {
                if (link.hasClass('open')) {
                    link.removeClass('open');
                } else {
                    $('#sidebar .sidebar-nav-menu.open').removeClass('open');
                    link.addClass('open');
                }
            } else if (!link.parent().hasClass('active')) {
                if (link.hasClass('open')) {
                    link.removeClass('open');
                } else {
                    $('#sidebar .sidebar-nav-menu.open').removeClass('open');
                    link.addClass('open');
                }

                // Resize Page Content
                setTimeout(resizePageContent, 50);
            }

            return false;
        });

        // Submenu Accordion functionality
        submenuLinks.on('click', function(e) {
            var link = $(this);

            if (link.parent().hasClass('active') !== true) {
                if (link.hasClass('open')) {
                    link.removeClass('open');
                } else {
                    link
                        .closest('ul')
                        .find('.sidebar-nav-submenu.open')
                        .removeClass('open');
                    link.addClass('open');
                }

                // Resize Page Content
                setTimeout(resizePageContent, 50);
            }

            return false;
        });
    };

    /* Ripple effect on click functionality */
    var rippleEffect = function(element, cl) {
        // Add required classes to the element
        element.css({
            overflow: 'hidden',
            position: 'relative',
        });

        // On element click
        element.on('click', function(e) {
            var elem = $(this),
                ripple,
                d,
                x,
                y;

            // If the ripple element doesn't exist in this element, add it..
            if (elem.children('.' + cl).length === 0) {
                elem.prepend('<span class="' + cl + '"></span>');
            } else {
                // ..else remove .animate class from ripple element
                elem.children('.' + cl).removeClass('animate');
            }

            // Get the ripple element
            var ripple = elem.children('.' + cl);

            // If the ripple element doesn't have dimensions set them accordingly
            if (!ripple.height() && !ripple.width()) {
                d = Math.max(elem.outerWidth(), elem.outerHeight());
                ripple.css({
                    height: d,
                    width: d
                });
            }

            // Get coordinates for our ripple element
            x = e.pageX - elem.offset().left - ripple.width() / 2;
            y = e.pageY - elem.offset().top - ripple.height() / 2;

            // Position the ripple element and add the class .animate to it
            ripple.css({
                top: y + 'px',
                left: x + 'px'
            }).addClass('animate');
        });
    };

    /* Sidebars Functionality */
    var handleSidebar = function(mode) {
        if (mode === 'init') {
            // Init sidebars scrolling functionality
            handleSidebar('sidebar-scroll');
            handleSidebar('sidebar-alt-scroll');

            // Handle main sidebar's scrolling functionality on resize or orientation change
            var sScrollTimeout;

            $(window).on('resize orientationchange', function() {
                clearTimeout(sScrollTimeout);

                sScrollTimeout = setTimeout(function() {
                    handleSidebar('sidebar-scroll');
                }, 150);
            });
        } else {
            var windowW =
                window.innerWidth ||
                document.documentElement.clientWidth ||
                document.body.clientWidth;

            if (mode === 'toggle-sidebar') {
                if (windowW > 991) {
                    // Toggle main sidebar in large screens (> 991px)
                    if (page.hasClass('sidebar-visible-lg-full')) {
                        page
                            .removeClass('sidebar-visible-lg-full')
                            .addClass('sidebar-visible-lg-mini');
                    } else if (page.hasClass('sidebar-visible-lg-mini')) {
                        page
                            .removeClass('sidebar-visible-lg-mini')
                            .addClass('sidebar-visible-lg-full');
                    } else {
                        page.addClass('sidebar-visible-lg-mini');
                    }

                    // Resize Page Content
                    setTimeout(resizePageContent, 50);
                } else {
                    // Toggle main sidebar in small screens (< 992px)
                    page.toggleClass('sidebar-visible-xs');

                    if (page.hasClass('sidebar-visible-xs')) {
                        handleSidebar('close-sidebar-alt');
                    }
                }

                // Handle main sidebar scrolling functionality
                handleSidebar('sidebar-scroll');
            } else if (mode === 'open-sidebar') {
                if (windowW > 991) {
                    // Open main sidebar in large screens (> 991px)
                    page
                        .removeClass('sidebar-visible-lg-mini')
                        .addClass('sidebar-visible-lg-full');
                } else {
                    // Open main sidebar in small screens (< 992px)
                    page.addClass('sidebar-visible-xs');
                    handleSidebar('close-sidebar-alt');
                }
                // Handle main sidebar scrolling functionality
                handleSidebar('sidebar-scroll');

                // Resize Page Content
                setTimeout(resizePageContent, 50);
            } else if (mode === 'close-sidebar') {
                if (windowW > 991) {
                    // Close main sidebar in large screens (> 991px)
                    page
                        .removeClass('sidebar-visible-lg-full')
                        .addClass('sidebar-visible-lg-mini');
                } else {
                    // Close main sidebar in small screens (< 992px)
                    page.removeClass('sidebar-visible-xs');
                }

                // Handle main sidebar scrolling functionality
                handleSidebar('sidebar-scroll');
            } else if (mode === 'toggle-sidebar-alt') {
                if (windowW > 991) {
                    // Toggle alternative sidebar in large screens (> 991px)
                    page.toggleClass('sidebar-alt-visible-lg');
                } else {
                    // Toggle alternative sidebar in small screens (< 992px)
                    page.toggleClass('sidebar-alt-visible-xs');

                    if (page.hasClass('sidebar-alt-visible-xs')) {
                        handleSidebar('close-sidebar');
                    }
                }
            } else if (mode === 'open-sidebar-alt') {
                if (windowW > 991) {
                    // Open alternative sidebar in large screens (> 991px)
                    page.addClass('sidebar-alt-visible-lg');
                } else {
                    // Open alternative sidebar in small screens (< 992px)
                    page.addClass('sidebar-alt-visible-xs');
                    handleSidebar('close-sidebar');
                }
            } else if (mode === 'close-sidebar-alt') {
                if (windowW > 991) {
                    // Close alternative sidebar in large screens (> 991px)
                    page.removeClass('sidebar-alt-visible-lg');
                } else {
                    // Close alternative sidebar in small screens (< 992px)
                    page.removeClass('sidebar-alt-visible-xs');
                }
            } else if (mode === 'sidebar-scroll') {
                // Handle main sidebar scrolling
                if (page.hasClass('sidebar-visible-lg-mini') && windowW > 991) {
                    // Destroy main sidebar scrolling when in mini sidebar mode
                    if (sScroll.length && sScroll.parent('.slimScrollDiv').length) {
                        sScroll.slimScroll({
                            destroy: true
                        });
                        sScroll.attr('style', '');
                    }
                } else if (
                    header.hasClass('navbar-fixed-top') ||
                    header.hasClass('navbar-fixed-bottom')
                ) {
                    var sHeight =
                        $(window).height() -
                        ((sBrand.css('display') === 'none' ? 0 : sBrand.outerHeight()) +
                            (sExtraInfo.css('display') === 'none' ?
                                0 :
                                sExtraInfo.outerHeight()));

                    if (windowW < 992) {
                        sHeight = sHeight - 50;
                    }

                    if (sScroll.length && !sScroll.parent('.slimScrollDiv').length) {
                        // If scrolling does not exist init it..
                        sScroll.slimScroll({
                            height: sHeight,
                            color: '#bbbbbb',
                            size: '3px',
                            touchScrollStep: 100,
                            railVisible: false,
                            railOpacity: 1,
                        });
                    } else {
                        // ..else resize scrolling height
                        sScroll.add(sScroll.parent()).css('height', sHeight);
                    }
                }
            } else if (mode === 'sidebar-alt-scroll') {
                // Init alternative sidebar scrolling
                if (sScrollAlt.length && !sScrollAlt.parent('.slimScrollDiv').length) {
                    // If scrolling does not exist init it..
                    sScrollAlt.slimScroll({
                        height: sidebarAlt.outerHeight(),
                        color: '#bbbbbb',
                        size: '3px',
                        touchScrollStep: 100,
                        railVisible: false,
                        railOpacity: 1,
                    });

                    // Resize alternative sidebar scrolling height on window resize or orientation change
                    var sScrollAltTimeout;

                    $(window).on('resize orientationchange', function() {
                        clearTimeout(sScrollAltTimeout);

                        sScrollAltTimeout = setTimeout(function() {
                            handleSidebar('sidebar-alt-scroll');
                        }, 150);
                    });
                } else {
                    // ..else resize scrolling height
                    sScrollAlt
                        .add(sScrollAlt.parent())
                        .css('height', sidebarAlt.outerHeight());
                }
            }
        }
    };

    /* Resize #page-content to fill empty space if exists */
    var resizePageContent = function() {
        var windowH = $(window).height();
        var headerH = header.outerHeight();
        var sidebarH = sidebar.outerHeight();

        if (
            header.hasClass('navbar-fixed-top') ||
            header.hasClass('navbar-fixed-bottom')
        ) {
            pageContent.css('min-height', windowH);
        } else if (sidebarH > windowH) {
            pageContent.css('min-height', sidebarH - headerH);
        } else {
            pageContent.css('min-height', windowH - headerH);
        }
    };

    /* Color Theme preview, preview a color theme on a page */
    var colorThemePreview = function() {
        var colorList = $('.sidebar-themes');
        var themeLink = $('#theme-link');

        var themeColor = themeLink.length ? themeLink.attr('href') : 'default';
        var themeHeader = header.hasClass('navbar-inverse') ?
            'navbar-inverse' :
            'navbar-default';
        var themeSidebar = page.hasClass('sidebar-light') ? 'sidebar-light' : '';

        var cookies = page.hasClass('enable-cookies') ? true : false;
        var themeColorCke, themeHeaderCke, themeSidebarCke;

        // If cookies have been enabled
        if (cookies) {
            themeColorCke = Cookies.get('optionThemeColor') ?
                Cookies.get('optionThemeColor') :
                false;
            themeHeaderCke = Cookies.get('optionThemeHeader') ?
                Cookies.get('optionThemeHeader') :
                false;
            themeSidebarCke = Cookies.get('optionThemeSidebar') ?
                Cookies.get('optionThemeSidebar') :
                false;

            // Update navbar class
            themeHeaderCke
                ?
                header
                .removeClass('navbar-inverse navbar-default')
                .addClass(themeHeaderCke) :
                false;

            // Update sidebar class
            themeSidebarCke
                ?
                page.removeClass('sidebar-light').addClass(themeSidebarCke) :
                false;

            // Update color theme
            if (themeColorCke) {
                if (themeColorCke === 'default') {
                    if (themeLink.length) {
                        themeLink.remove();
                        themeLink = $('#theme-link');
                    }
                } else {
                    if (themeLink.length) {
                        themeLink.attr('href', themeColorCke);
                    } else {
                        $('link[href="css/themes.css"]').before(
                            '<link id="theme-link" rel="stylesheet" href="' +
                            themeColorCke +
                            '">',
                        );

                        themeLink = $('#theme-link');
                    }
                }
            }

            themeColor = themeColorCke ? themeColorCke : themeColor;
            themeHeader = themeHeaderCke ? themeHeaderCke : themeHeader;
            themeSidebar = themeSidebarCke ? themeSidebarCke : themeSidebar;
        }

        // Set the active color theme link as active
        $(
                'a[data-theme="' +
                themeColor +
                '"][data-theme-navbar="' +
                themeHeader +
                '"][data-theme-sidebar="' +
                themeSidebar +
                '"]',
                colorList,
            )
            .parent('li')
            .addClass('active');

        // When a color theme link is clicked
        $('a', colorList).click(function(e) {
            themeColor = $(this).data('theme');
            themeHeader = $(this).data('theme-navbar');
            themeSidebar = $(this).data('theme-sidebar');

            // Set this color theme link as active
            $('li', colorList).removeClass('active');
            $(this).parent('li').addClass('active');

            // Update navbar class
            header.removeClass('navbar-inverse navbar-default').addClass(themeHeader);

            // Update sidebar class
            page.removeClass('sidebar-light').addClass(themeSidebar);

            // Update color theme
            if (themeColor === 'default') {
                if (themeLink.length) {
                    themeLink.remove();
                    themeLink = $('#theme-link');
                }
            } else {
                if (themeLink.length) {
                    themeLink.attr('href', themeColor);
                } else {
                    $('link[href="css/themes.css"]').before(
                        '<link id="theme-link" rel="stylesheet" href="' + themeColor + '">',
                    );

                    themeLink = $('#theme-link');
                }
            }

            // If cookies have been enabled, save the new options
            if (cookies) {
                Cookies.set('optionThemeColor', themeColor, {
                    expires: 7
                });
                Cookies.set('optionThemeHeader', themeHeader, {
                    expires: 7
                });
                Cookies.set('optionThemeSidebar', themeSidebar, {
                    expires: 7
                });
            }
        });
    };

    /* Datatables basic Bootstrap integration (pagination integration included under the Datatables plugin in plugins.js) */
    var dtIntegration = function() {
        $.extend(true, $.fn.dataTable.defaults, {
            sDom: "<'row'<'col-sm-6 col-xs-5'l><'col-sm-6 col-xs-7'f>r>t<'row'<'col-sm-5 hidden-xs'i><'col-sm-7 col-xs-12 clearfix'p>>",
            sPaginationType: 'bootstrap',
            oLanguage: {
                sLengthMenu: '_MENU_',
                sSearch: '<div class="input-group">_INPUT_<span class="input-group-addon"><i class="fa fa-search"></i></span></div>',
                sInfo: '<strong>_START_</strong>-<strong>_END_</strong> of <strong>_TOTAL_</strong>',
                oPaginate: {
                    sPrevious: '',
                    sNext: '',
                },
            },
        });
        $.extend($.fn.dataTableExt.oStdClasses, {
            sWrapper: 'dataTables_wrapper form-inline',
            sFilterInput: 'form-control',
            sLengthSelect: 'form-control',
        });
    };

    /* Print functionality - Hides all sidebars, prints the page and then restores them (To fix an issue with CSS print styles in webkit browsers)  */
    var handlePrint = function() {
        // Store all #page-container classes
        var pageCls = page.prop('class');

        // Remove all classes from #page-container
        page.prop('class', '');

        // Print the page
        window.print();

        // Restore all #page-container classes
        page.prop('class', pageCls);
    };

    return {
        init: function() {
            uiInit(); // Initialize UI
            pageLoading(); // Initialize Page Loading
        },
        sidebar: function(mode, extra) {
            handleSidebar(mode, extra); // Handle sidebars - access functionality from everywhere
        },
        datatables: function() {
            dtIntegration(); // Datatables Bootstrap integration
        },
        pagePrint: function() {
            handlePrint(); // Print functionality
        },
    };
})();

/* Initialize App when page loads */
$(function() {
    App.init();
});

// TODO HNS: Where should we put this?
function showSpinner(text = 'Loading') {
    document.getElementById('spinner').style.display = 'block';
    document.getElementById('spinner-loading-text').innerText = text + '...';
};
/*
 *  Document   : plugins.js
 *  Author     : Various
 *  Description: Jquery Plugins in one file for consistency
 *
 *  Feel free to remove the plugins you won't use (along with their style - if there is one - in css/plugins.css)
 *  or include them separately if you are going to use them only in few pages of your project.
 *  I've included this file along with css/plugins.css in all pages to make all the plugins
 *  available everywhere with the minimum cost (few http requests).
 *
 *  Most plugins are initialized on specific classes in app.js - uiInit() to be available for use in any page.
 *  You can remove the initializations from app.js if you like and only put them in the pages you will use them :-)
 */

/* Avoid `console` errors in browsers that lack a console */
(function() {
    var e;
    var t = function() {};
    var n = [
        "assert",
        "clear",
        "count",
        "debug",
        "dir",
        "dirxml",
        "error",
        "exception",
        "group",
        "groupCollapsed",
        "groupEnd",
        "info",
        "log",
        "markTimeline",
        "profile",
        "profileEnd",
        "table",
        "time",
        "timeEnd",
        "timeStamp",
        "trace",
        "warn",
    ];
    var r = n.length;
    var i = (window.console = window.console || {});
    while (r--) {
        e = n[r];
        if (!i[e]) {
            i[e] = t;
        }
    }
})();

/*! jQuery UI - v1.11.4 - 2015-04-01
 * http://jqueryui.com
 * Includes: core.js, widget.js, mouse.js, draggable.js, resizable.js, sortable.js
 * Copyright 2015 jQuery Foundation and other contributors; Licensed MIT */
(function(e) {
    "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery);
})(function(e) {
    function t(t, s) {
        var n,
            a,
            o,
            r = t.nodeName.toLowerCase();
        return "area" === r ?
            ((n = t.parentNode),
                (a = n.name),
                t.href && a && "map" === n.nodeName.toLowerCase() ?
                ((o = e("img[usemap='#" + a + "']")[0]), !!o && i(o)) :
                !1) :
            (/^(input|select|textarea|button|object)$/.test(r) ?
                !t.disabled :
                "a" === r ?
                t.href || s :
                s) && i(t);
    }

    function i(t) {
        return (
            e.expr.filters.visible(t) &&
            !e(t)
            .parents()
            .addBack()
            .filter(function() {
                return "hidden" === e.css(this, "visibility");
            }).length
        );
    }
    (e.ui = e.ui || {}),
    e.extend(e.ui, {
            version: "1.11.4",
            keyCode: {
                BACKSPACE: 8,
                COMMA: 188,
                DELETE: 46,
                DOWN: 40,
                END: 35,
                ENTER: 13,
                ESCAPE: 27,
                HOME: 36,
                LEFT: 37,
                PAGE_DOWN: 34,
                PAGE_UP: 33,
                PERIOD: 190,
                RIGHT: 39,
                SPACE: 32,
                TAB: 9,
                UP: 38,
            },
        }),
        e.fn.extend({
            scrollParent: function(t) {
                var i = this.css("position"),
                    s = "absolute" === i,
                    n = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
                    a = this.parents()
                    .filter(function() {
                        var t = e(this);
                        return s && "static" === t.css("position") ?
                            !1 :
                            n.test(
                                t.css("overflow") +
                                t.css("overflow-y") +
                                t.css("overflow-x")
                            );
                    })
                    .eq(0);
                return "fixed" !== i && a.length ?
                    a :
                    e(this[0].ownerDocument || document);
            },
            uniqueId: (function() {
                var e = 0;
                return function() {
                    return this.each(function() {
                        this.id || (this.id = "ui-id-" + ++e);
                    });
                };
            })(),
            removeUniqueId: function() {
                return this.each(function() {
                    /^ui-id-\d+$/.test(this.id) && e(this).removeAttr("id");
                });
            },
        }),
        e.extend(e.expr[":"], {
            data: e.expr.createPseudo ?
                e.expr.createPseudo(function(t) {
                    return function(i) {
                        return !!e.data(i, t);
                    };
                }) :
                function(t, i, s) {
                    return !!e.data(t, s[3]);
                },
            focusable: function(i) {
                return t(i, !isNaN(e.attr(i, "tabindex")));
            },
            tabbable: function(i) {
                var s = e.attr(i, "tabindex"),
                    n = isNaN(s);
                return (n || s >= 0) && t(i, !n);
            },
        }),
        e("<a>").outerWidth(1).jquery ||
        e.each(["Width", "Height"], function(t, i) {
            function s(t, i, s, a) {
                return (
                    e.each(n, function() {
                        (i -= parseFloat(e.css(t, "padding" + this)) || 0),
                        s &&
                            (i -= parseFloat(e.css(t, "border" + this + "Width")) || 0),
                            a && (i -= parseFloat(e.css(t, "margin" + this)) || 0);
                    }),
                    i
                );
            }
            var n = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"],
                a = i.toLowerCase(),
                o = {
                    innerWidth: e.fn.innerWidth,
                    innerHeight: e.fn.innerHeight,
                    outerWidth: e.fn.outerWidth,
                    outerHeight: e.fn.outerHeight,
                };
            (e.fn["inner" + i] = function(t) {
                return void 0 === t ?
                    o["inner" + i].call(this) :
                    this.each(function() {
                        e(this).css(a, s(this, t) + "px");
                    });
            }),
            (e.fn["outer" + i] = function(t, n) {
                return "number" != typeof t ?
                    o["outer" + i].call(this, t) :
                    this.each(function() {
                        e(this).css(a, s(this, t, !0, n) + "px");
                    });
            });
        }),
        e.fn.addBack ||
        (e.fn.addBack = function(e) {
            return this.add(
                null == e ? this.prevObject : this.prevObject.filter(e)
            );
        }),
        e("<a>").data("a-b", "a").removeData("a-b").data("a-b") &&
        (e.fn.removeData = (function(t) {
            return function(i) {
                return arguments.length ? t.call(this, e.camelCase(i)) : t.call(this);
            };
        })(e.fn.removeData)),
        (e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase())),
        e.fn.extend({
            focus: (function(t) {
                return function(i, s) {
                    return "number" == typeof i ?
                        this.each(function() {
                            var t = this;
                            setTimeout(function() {
                                e(t).focus(), s && s.call(t);
                            }, i);
                        }) :
                        t.apply(this, arguments);
                };
            })(e.fn.focus),
            disableSelection: (function() {
                var e =
                    "onselectstart" in document.createElement("div") ?
                    "selectstart" :
                    "mousedown";
                return function() {
                    return this.bind(e + ".ui-disableSelection", function(e) {
                        e.preventDefault();
                    });
                };
            })(),
            enableSelection: function() {
                return this.unbind(".ui-disableSelection");
            },
            zIndex: function(t) {
                if (void 0 !== t) return this.css("zIndex", t);
                if (this.length)
                    for (var i, s, n = e(this[0]); n.length && n[0] !== document;) {
                        if (
                            ((i = n.css("position")),
                                ("absolute" === i || "relative" === i || "fixed" === i) &&
                                ((s = parseInt(n.css("zIndex"), 10)), !isNaN(s) && 0 !== s))
                        )
                            return s;
                        n = n.parent();
                    }
                return 0;
            },
        }),
        (e.ui.plugin = {
            add: function(t, i, s) {
                var n,
                    a = e.ui[t].prototype;
                for (n in s)
                    (a.plugins[n] = a.plugins[n] || []), a.plugins[n].push([i, s[n]]);
            },
            call: function(e, t, i, s) {
                var n,
                    a = e.plugins[t];
                if (
                    a &&
                    (s ||
                        (e.element[0].parentNode &&
                            11 !== e.element[0].parentNode.nodeType))
                )
                    for (n = 0; a.length > n; n++)
                        e.options[a[n][0]] && a[n][1].apply(e.element, i);
            },
        });
    var s = 0,
        n = Array.prototype.slice;
    (e.cleanData = (function(t) {
        return function(i) {
            var s, n, a;
            for (a = 0; null != (n = i[a]); a++)
                try {
                    (s = e._data(n, "events")),
                    s && s.remove && e(n).triggerHandler("remove");
                } catch (o) {}
            t(i);
        };
    })(e.cleanData)),
    (e.widget = function(t, i, s) {
        var n,
            a,
            o,
            r,
            h = {},
            l = t.split(".")[0];
        return (
            (t = t.split(".")[1]),
            (n = l + "-" + t),
            s || ((s = i), (i = e.Widget)),
            (e.expr[":"][n.toLowerCase()] = function(t) {
                return !!e.data(t, n);
            }),
            (e[l] = e[l] || {}),
            (a = e[l][t]),
            (o = e[l][t] =
                function(e, t) {
                    return this._createWidget ?
                        (arguments.length && this._createWidget(e, t), void 0) :
                        new o(e, t);
                }),
            e.extend(o, a, {
                version: s.version,
                _proto: e.extend({}, s),
                _childConstructors: [],
            }),
            (r = new i()),
            (r.options = e.widget.extend({}, r.options)),
            e.each(s, function(t, s) {
                return e.isFunction(s) ?
                    ((h[t] = (function() {
                            var e = function() {
                                    return i.prototype[t].apply(this, arguments);
                                },
                                n = function(e) {
                                    return i.prototype[t].apply(this, e);
                                };
                            return function() {
                                var t,
                                    i = this._super,
                                    a = this._superApply;
                                return (
                                    (this._super = e),
                                    (this._superApply = n),
                                    (t = s.apply(this, arguments)),
                                    (this._super = i),
                                    (this._superApply = a),
                                    t
                                );
                            };
                        })()),
                        void 0) :
                    ((h[t] = s), void 0);
            }),
            (o.prototype = e.widget.extend(
                r, {
                    widgetEventPrefix: a ? r.widgetEventPrefix || t : t
                },
                h, {
                    constructor: o,
                    namespace: l,
                    widgetName: t,
                    widgetFullName: n
                }
            )),
            a ?
            (e.each(a._childConstructors, function(t, i) {
                    var s = i.prototype;
                    e.widget(s.namespace + "." + s.widgetName, o, i._proto);
                }),
                delete a._childConstructors) :
            i._childConstructors.push(o),
            e.widget.bridge(t, o),
            o
        );
    }),
    (e.widget.extend = function(t) {
        for (var i, s, a = n.call(arguments, 1), o = 0, r = a.length; r > o; o++)
            for (i in a[o])
                (s = a[o][i]),
                a[o].hasOwnProperty(i) &&
                void 0 !== s &&
                (t[i] = e.isPlainObject(s) ?
                    e.isPlainObject(t[i]) ?
                    e.widget.extend({}, t[i], s) :
                    e.widget.extend({}, s) :
                    s);
        return t;
    }),
    (e.widget.bridge = function(t, i) {
        var s = i.prototype.widgetFullName || t;
        e.fn[t] = function(a) {
            var o = "string" == typeof a,
                r = n.call(arguments, 1),
                h = this;
            return (
                o ?
                this.each(function() {
                    var i,
                        n = e.data(this, s);
                    return "instance" === a ?
                        ((h = n), !1) :
                        n ?
                        e.isFunction(n[a]) && "_" !== a.charAt(0) ?
                        ((i = n[a].apply(n, r)),
                            i !== n && void 0 !== i ?
                            ((h = i && i.jquery ? h.pushStack(i.get()) : i), !1) :
                            void 0) :
                        e.error(
                            "no such method '" +
                            a +
                            "' for " +
                            t +
                            " widget instance"
                        ) :
                        e.error(
                            "cannot call methods on " +
                            t +
                            " prior to initialization; " +
                            "attempted to call method '" +
                            a +
                            "'"
                        );
                }) :
                (r.length && (a = e.widget.extend.apply(null, [a].concat(r))),
                    this.each(function() {
                        var t = e.data(this, s);
                        t
                            ?
                            (t.option(a || {}), t._init && t._init()) :
                            e.data(this, s, new i(a, this));
                    })),
                h
            );
        };
    }),
    (e.Widget = function() {}),
    (e.Widget._childConstructors = []),
    (e.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(t, i) {
            (i = e(i || this.defaultElement || this)[0]),
            (this.element = e(i)),
            (this.uuid = s++),
            (this.eventNamespace = "." + this.widgetName + this.uuid),
            (this.bindings = e()),
            (this.hoverable = e()),
            (this.focusable = e()),
            i !== this &&
                (e.data(i, this.widgetFullName, this),
                    this._on(!0, this.element, {
                        remove: function(e) {
                            e.target === i && this.destroy();
                        },
                    }),
                    (this.document = e(i.style ? i.ownerDocument : i.document || i)),
                    (this.window = e(
                        this.document[0].defaultView || this.document[0].parentWindow
                    ))),
                (this.options = e.widget.extend({},
                    this.options,
                    this._getCreateOptions(),
                    t
                )),
                this._create(),
                this._trigger("create", null, this._getCreateEventData()),
                this._init();
        },
        _getCreateOptions: e.noop,
        _getCreateEventData: e.noop,
        _create: e.noop,
        _init: e.noop,
        destroy: function() {
            this._destroy(),
                this.element
                .unbind(this.eventNamespace)
                .removeData(this.widgetFullName)
                .removeData(e.camelCase(this.widgetFullName)),
                this.widget()
                .unbind(this.eventNamespace)
                .removeAttr("aria-disabled")
                .removeClass(
                    this.widgetFullName + "-disabled " + "ui-state-disabled"
                ),
                this.bindings.unbind(this.eventNamespace),
                this.hoverable.removeClass("ui-state-hover"),
                this.focusable.removeClass("ui-state-focus");
        },
        _destroy: e.noop,
        widget: function() {
            return this.element;
        },
        option: function(t, i) {
            var s,
                n,
                a,
                o = t;
            if (0 === arguments.length) return e.widget.extend({}, this.options);
            if ("string" == typeof t)
                if (((o = {}), (s = t.split(".")), (t = s.shift()), s.length)) {
                    for (
                        n = o[t] = e.widget.extend({}, this.options[t]), a = 0; s.length - 1 > a; a++
                    )
                        (n[s[a]] = n[s[a]] || {}), (n = n[s[a]]);
                    if (((t = s.pop()), 1 === arguments.length))
                        return void 0 === n[t] ? null : n[t];
                    n[t] = i;
                } else {
                    if (1 === arguments.length)
                        return void 0 === this.options[t] ? null : this.options[t];
                    o[t] = i;
                }
            return this._setOptions(o), this;
        },
        _setOptions: function(e) {
            var t;
            for (t in e) this._setOption(t, e[t]);
            return this;
        },
        _setOption: function(e, t) {
            return (
                (this.options[e] = t),
                "disabled" === e &&
                (this.widget().toggleClass(this.widgetFullName + "-disabled", !!t),
                    t &&
                    (this.hoverable.removeClass("ui-state-hover"),
                        this.focusable.removeClass("ui-state-focus"))),
                this
            );
        },
        enable: function() {
            return this._setOptions({
                disabled: !1
            });
        },
        disable: function() {
            return this._setOptions({
                disabled: !0
            });
        },
        _on: function(t, i, s) {
            var n,
                a = this;
            "boolean" != typeof t && ((s = i), (i = t), (t = !1)),
                s ?
                ((i = n = e(i)), (this.bindings = this.bindings.add(i))) :
                ((s = i), (i = this.element), (n = this.widget())),
                e.each(s, function(s, o) {
                    function r() {
                        return t ||
                            (a.options.disabled !== !0 &&
                                !e(this).hasClass("ui-state-disabled")) ?
                            ("string" == typeof o ? a[o] : o).apply(a, arguments) :
                            void 0;
                    }
                    "string" != typeof o &&
                        (r.guid = o.guid = o.guid || r.guid || e.guid++);
                    var h = s.match(/^([\w:-]*)\s*(.*)$/),
                        l = h[1] + a.eventNamespace,
                        u = h[2];
                    u ? n.delegate(u, l, r) : i.bind(l, r);
                });
        },
        _off: function(t, i) {
            (i =
                (i || "").split(" ").join(this.eventNamespace + " ") +
                this.eventNamespace),
            t.unbind(i).undelegate(i),
                (this.bindings = e(this.bindings.not(t).get())),
                (this.focusable = e(this.focusable.not(t).get())),
                (this.hoverable = e(this.hoverable.not(t).get()));
        },
        _delay: function(e, t) {
            function i() {
                return ("string" == typeof e ? s[e] : e).apply(s, arguments);
            }
            var s = this;
            return setTimeout(i, t || 0);
        },
        _hoverable: function(t) {
            (this.hoverable = this.hoverable.add(t)),
            this._on(t, {
                mouseenter: function(t) {
                    e(t.currentTarget).addClass("ui-state-hover");
                },
                mouseleave: function(t) {
                    e(t.currentTarget).removeClass("ui-state-hover");
                },
            });
        },
        _focusable: function(t) {
            (this.focusable = this.focusable.add(t)),
            this._on(t, {
                focusin: function(t) {
                    e(t.currentTarget).addClass("ui-state-focus");
                },
                focusout: function(t) {
                    e(t.currentTarget).removeClass("ui-state-focus");
                },
            });
        },
        _trigger: function(t, i, s) {
            var n,
                a,
                o = this.options[t];
            if (
                ((s = s || {}),
                    (i = e.Event(i)),
                    (i.type = (
                        t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
                    ).toLowerCase()),
                    (i.target = this.element[0]),
                    (a = i.originalEvent))
            )
                for (n in a) n in i || (i[n] = a[n]);
            return (
                this.element.trigger(i, s), !(
                    (e.isFunction(o) &&
                        o.apply(this.element[0], [i].concat(s)) === !1) ||
                    i.isDefaultPrevented()
                )
            );
        },
    }),
    e.each({
            show: "fadeIn",
            hide: "fadeOut"
        }, function(t, i) {
            e.Widget.prototype["_" + t] = function(s, n, a) {
                "string" == typeof n && (n = {
                    effect: n
                });
                var o,
                    r = n ? (n === !0 || "number" == typeof n ? i : n.effect || i) : t;
                (n = n || {}),
                "number" == typeof n && (n = {
                        duration: n
                    }),
                    (o = !e.isEmptyObject(n)),
                    (n.complete = a),
                    n.delay && s.delay(n.delay),
                    o && e.effects && e.effects.effect[r] ?
                    s[t](n) :
                    r !== t && s[r] ?
                    s[r](n.duration, n.easing, a) :
                    s.queue(function(i) {
                        e(this)[t](), a && a.call(s[0]), i();
                    });
            };
        }),
        e.widget;
    var a = !1;
    e(document).mouseup(function() {
            a = !1;
        }),
        e.widget("ui.mouse", {
            version: "1.11.4",
            options: {
                cancel: "input,textarea,button,select,option",
                distance: 1,
                delay: 0,
            },
            _mouseInit: function() {
                var t = this;
                this.element
                    .bind("mousedown." + this.widgetName, function(e) {
                        return t._mouseDown(e);
                    })
                    .bind("click." + this.widgetName, function(i) {
                        return !0 === e.data(i.target, t.widgetName + ".preventClickEvent") ?
                            (e.removeData(i.target, t.widgetName + ".preventClickEvent"),
                                i.stopImmediatePropagation(), !1) :
                            void 0;
                    }),
                    (this.started = !1);
            },
            _mouseDestroy: function() {
                this.element.unbind("." + this.widgetName),
                    this._mouseMoveDelegate &&
                    this.document
                    .unbind("mousemove." + this.widgetName, this._mouseMoveDelegate)
                    .unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            },
            _mouseDown: function(t) {
                if (!a) {
                    (this._mouseMoved = !1),
                    this._mouseStarted && this._mouseUp(t),
                        (this._mouseDownEvent = t);
                    var i = this,
                        s = 1 === t.which,
                        n =
                        "string" == typeof this.options.cancel && t.target.nodeName ?
                        e(t.target).closest(this.options.cancel).length :
                        !1;
                    return s && !n && this._mouseCapture(t) ?
                        ((this.mouseDelayMet = !this.options.delay),
                            this.mouseDelayMet ||
                            (this._mouseDelayTimer = setTimeout(function() {
                                i.mouseDelayMet = !0;
                            }, this.options.delay)),
                            this._mouseDistanceMet(t) &&
                            this._mouseDelayMet(t) &&
                            ((this._mouseStarted = this._mouseStart(t) !== !1), !this._mouseStarted) ?
                            (t.preventDefault(), !0) :
                            (!0 ===
                                e.data(t.target, this.widgetName + ".preventClickEvent") &&
                                e.removeData(
                                    t.target,
                                    this.widgetName + ".preventClickEvent"
                                ),
                                (this._mouseMoveDelegate = function(e) {
                                    return i._mouseMove(e);
                                }),
                                (this._mouseUpDelegate = function(e) {
                                    return i._mouseUp(e);
                                }),
                                this.document
                                .bind(
                                    "mousemove." + this.widgetName,
                                    this._mouseMoveDelegate
                                )
                                .bind("mouseup." + this.widgetName, this._mouseUpDelegate),
                                t.preventDefault(),
                                (a = !0), !0)) :
                        !0;
                }
            },
            _mouseMove: function(t) {
                if (this._mouseMoved) {
                    if (
                        e.ui.ie &&
                        (!document.documentMode || 9 > document.documentMode) &&
                        !t.button
                    )
                        return this._mouseUp(t);
                    if (!t.which) return this._mouseUp(t);
                }
                return (
                    (t.which || t.button) && (this._mouseMoved = !0),
                    this._mouseStarted ?
                    (this._mouseDrag(t), t.preventDefault()) :
                    (this._mouseDistanceMet(t) &&
                        this._mouseDelayMet(t) &&
                        ((this._mouseStarted =
                                this._mouseStart(this._mouseDownEvent, t) !== !1),
                            this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted)
                );
            },
            _mouseUp: function(t) {
                return (
                    this.document
                    .unbind("mousemove." + this.widgetName, this._mouseMoveDelegate)
                    .unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
                    this._mouseStarted &&
                    ((this._mouseStarted = !1),
                        t.target === this._mouseDownEvent.target &&
                        e.data(t.target, this.widgetName + ".preventClickEvent", !0),
                        this._mouseStop(t)),
                    (a = !1), !1
                );
            },
            _mouseDistanceMet: function(e) {
                return (
                    Math.max(
                        Math.abs(this._mouseDownEvent.pageX - e.pageX),
                        Math.abs(this._mouseDownEvent.pageY - e.pageY)
                    ) >= this.options.distance
                );
            },
            _mouseDelayMet: function() {
                return this.mouseDelayMet;
            },
            _mouseStart: function() {},
            _mouseDrag: function() {},
            _mouseStop: function() {},
            _mouseCapture: function() {
                return !0;
            },
        }),
        e.widget("ui.draggable", e.ui.mouse, {
            version: "1.11.4",
            widgetEventPrefix: "drag",
            options: {
                addClasses: !0,
                appendTo: "parent",
                axis: !1,
                connectToSortable: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                iframeFix: !1,
                opacity: !1,
                refreshPositions: !1,
                revert: !1,
                revertDuration: 500,
                scope: "default",
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                snap: !1,
                snapMode: "both",
                snapTolerance: 20,
                stack: !1,
                zIndex: !1,
                drag: null,
                start: null,
                stop: null,
            },
            _create: function() {
                "original" === this.options.helper && this._setPositionRelative(),
                    this.options.addClasses && this.element.addClass("ui-draggable"),
                    this.options.disabled &&
                    this.element.addClass("ui-draggable-disabled"),
                    this._setHandleClassName(),
                    this._mouseInit();
            },
            _setOption: function(e, t) {
                this._super(e, t),
                    "handle" === e &&
                    (this._removeHandleClassName(), this._setHandleClassName());
            },
            _destroy: function() {
                return (this.helper || this.element).is(".ui-draggable-dragging") ?
                    ((this.destroyOnClear = !0), void 0) :
                    (this.element.removeClass(
                            "ui-draggable ui-draggable-dragging ui-draggable-disabled"
                        ),
                        this._removeHandleClassName(),
                        this._mouseDestroy(),
                        void 0);
            },
            _mouseCapture: function(t) {
                var i = this.options;
                return (
                    this._blurActiveElement(t),
                    this.helper ||
                    i.disabled ||
                    e(t.target).closest(".ui-resizable-handle").length > 0 ?
                    !1 :
                    ((this.handle = this._getHandle(t)),
                        this.handle ?
                        (this._blockFrames(
                            i.iframeFix === !0 ? "iframe" : i.iframeFix
                        ), !0) :
                        !1)
                );
            },
            _blockFrames: function(t) {
                this.iframeBlocks = this.document.find(t).map(function() {
                    var t = e(this);
                    return e("<div>")
                        .css("position", "absolute")
                        .appendTo(t.parent())
                        .outerWidth(t.outerWidth())
                        .outerHeight(t.outerHeight())
                        .offset(t.offset())[0];
                });
            },
            _unblockFrames: function() {
                this.iframeBlocks &&
                    (this.iframeBlocks.remove(), delete this.iframeBlocks);
            },
            _blurActiveElement: function(t) {
                var i = this.document[0];
                if (this.handleElement.is(t.target))
                    try {
                        i.activeElement &&
                            "body" !== i.activeElement.nodeName.toLowerCase() &&
                            e(i.activeElement).blur();
                    } catch (s) {}
            },
            _mouseStart: function(t) {
                var i = this.options;
                return (
                    (this.helper = this._createHelper(t)),
                    this.helper.addClass("ui-draggable-dragging"),
                    this._cacheHelperProportions(),
                    e.ui.ddmanager && (e.ui.ddmanager.current = this),
                    this._cacheMargins(),
                    (this.cssPosition = this.helper.css("position")),
                    (this.scrollParent = this.helper.scrollParent(!0)),
                    (this.offsetParent = this.helper.offsetParent()),
                    (this.hasFixedAncestor =
                        this.helper.parents().filter(function() {
                            return "fixed" === e(this).css("position");
                        }).length > 0),
                    (this.positionAbs = this.element.offset()),
                    this._refreshOffsets(t),
                    (this.originalPosition = this.position =
                        this._generatePosition(t, !1)),
                    (this.originalPageX = t.pageX),
                    (this.originalPageY = t.pageY),
                    i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
                    this._setContainment(),
                    this._trigger("start", t) === !1 ?
                    (this._clear(), !1) :
                    (this._cacheHelperProportions(),
                        e.ui.ddmanager &&
                        !i.dropBehaviour &&
                        e.ui.ddmanager.prepareOffsets(this, t),
                        this._normalizeRightBottom(),
                        this._mouseDrag(t, !0),
                        e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t), !0)
                );
            },
            _refreshOffsets: function(e) {
                (this.offset = {
                    top: this.positionAbs.top - this.margins.top,
                    left: this.positionAbs.left - this.margins.left,
                    scroll: !1,
                    parent: this._getParentOffset(),
                    relative: this._getRelativeOffset(),
                }),
                (this.offset.click = {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top,
                });
            },
            _mouseDrag: function(t, i) {
                if (
                    (this.hasFixedAncestor &&
                        (this.offset.parent = this._getParentOffset()),
                        (this.position = this._generatePosition(t, !0)),
                        (this.positionAbs = this._convertPositionTo("absolute")), !i)
                ) {
                    var s = this._uiHash();
                    if (this._trigger("drag", t, s) === !1) return this._mouseUp({}), !1;
                    this.position = s.position;
                }
                return (
                    (this.helper[0].style.left = this.position.left + "px"),
                    (this.helper[0].style.top = this.position.top + "px"),
                    e.ui.ddmanager && e.ui.ddmanager.drag(this, t), !1
                );
            },
            _mouseStop: function(t) {
                var i = this,
                    s = !1;
                return (
                    e.ui.ddmanager &&
                    !this.options.dropBehaviour &&
                    (s = e.ui.ddmanager.drop(this, t)),
                    this.dropped && ((s = this.dropped), (this.dropped = !1)),
                    ("invalid" === this.options.revert && !s) ||
                    ("valid" === this.options.revert && s) ||
                    this.options.revert === !0 ||
                    (e.isFunction(this.options.revert) &&
                        this.options.revert.call(this.element, s)) ?
                    e(this.helper).animate(
                        this.originalPosition,
                        parseInt(this.options.revertDuration, 10),
                        function() {
                            i._trigger("stop", t) !== !1 && i._clear();
                        }
                    ) :
                    this._trigger("stop", t) !== !1 && this._clear(), !1
                );
            },
            _mouseUp: function(t) {
                return (
                    this._unblockFrames(),
                    e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t),
                    this.handleElement.is(t.target) && this.element.focus(),
                    e.ui.mouse.prototype._mouseUp.call(this, t)
                );
            },
            cancel: function() {
                return (
                    this.helper.is(".ui-draggable-dragging") ?
                    this._mouseUp({}) :
                    this._clear(),
                    this
                );
            },
            _getHandle: function(t) {
                return this.options.handle ?
                    !!e(t.target).closest(this.element.find(this.options.handle)).length :
                    !0;
            },
            _setHandleClassName: function() {
                (this.handleElement = this.options.handle ?
                    this.element.find(this.options.handle) :
                    this.element),
                this.handleElement.addClass("ui-draggable-handle");
            },
            _removeHandleClassName: function() {
                this.handleElement.removeClass("ui-draggable-handle");
            },
            _createHelper: function(t) {
                var i = this.options,
                    s = e.isFunction(i.helper),
                    n = s ?
                    e(i.helper.apply(this.element[0], [t])) :
                    "clone" === i.helper ?
                    this.element.clone().removeAttr("id") :
                    this.element;
                return (
                    n.parents("body").length ||
                    n.appendTo(
                        "parent" === i.appendTo ? this.element[0].parentNode : i.appendTo
                    ),
                    s && n[0] === this.element[0] && this._setPositionRelative(),
                    n[0] === this.element[0] ||
                    /(fixed|absolute)/.test(n.css("position")) ||
                    n.css("position", "absolute"),
                    n
                );
            },
            _setPositionRelative: function() {
                /^(?:r|a|f)/.test(this.element.css("position")) ||
                    (this.element[0].style.position = "relative");
            },
            _adjustOffsetFromHelper: function(t) {
                "string" == typeof t && (t = t.split(" ")),
                    e.isArray(t) && (t = {
                        left: +t[0],
                        top: +t[1] || 0
                    }),
                    "left" in t && (this.offset.click.left = t.left + this.margins.left),
                    "right" in t &&
                    (this.offset.click.left =
                        this.helperProportions.width - t.right + this.margins.left),
                    "top" in t && (this.offset.click.top = t.top + this.margins.top),
                    "bottom" in t &&
                    (this.offset.click.top =
                        this.helperProportions.height - t.bottom + this.margins.top);
            },
            _isRootNode: function(e) {
                return /(html|body)/i.test(e.tagName) || e === this.document[0];
            },
            _getParentOffset: function() {
                var t = this.offsetParent.offset(),
                    i = this.document[0];
                return (
                    "absolute" === this.cssPosition &&
                    this.scrollParent[0] !== i &&
                    e.contains(this.scrollParent[0], this.offsetParent[0]) &&
                    ((t.left += this.scrollParent.scrollLeft()),
                        (t.top += this.scrollParent.scrollTop())),
                    this._isRootNode(this.offsetParent[0]) && (t = {
                        top: 0,
                        left: 0
                    }), {
                        top: t.top +
                            (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                        left: t.left +
                            (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
                    }
                );
            },
            _getRelativeOffset: function() {
                if ("relative" !== this.cssPosition) return {
                    top: 0,
                    left: 0
                };
                var e = this.element.position(),
                    t = this._isRootNode(this.scrollParent[0]);
                return {
                    top: e.top -
                        (parseInt(this.helper.css("top"), 10) || 0) +
                        (t ? 0 : this.scrollParent.scrollTop()),
                    left: e.left -
                        (parseInt(this.helper.css("left"), 10) || 0) +
                        (t ? 0 : this.scrollParent.scrollLeft()),
                };
            },
            _cacheMargins: function() {
                this.margins = {
                    left: parseInt(this.element.css("marginLeft"), 10) || 0,
                    top: parseInt(this.element.css("marginTop"), 10) || 0,
                    right: parseInt(this.element.css("marginRight"), 10) || 0,
                    bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
                };
            },
            _cacheHelperProportions: function() {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight(),
                };
            },
            _setContainment: function() {
                var t,
                    i,
                    s,
                    n = this.options,
                    a = this.document[0];
                return (
                    (this.relativeContainer = null),
                    n.containment ?
                    "window" === n.containment ?
                    ((this.containment = [
                            e(window).scrollLeft() -
                            this.offset.relative.left -
                            this.offset.parent.left,
                            e(window).scrollTop() -
                            this.offset.relative.top -
                            this.offset.parent.top,
                            e(window).scrollLeft() +
                            e(window).width() -
                            this.helperProportions.width -
                            this.margins.left,
                            e(window).scrollTop() +
                            (e(window).height() || a.body.parentNode.scrollHeight) -
                            this.helperProportions.height -
                            this.margins.top,
                        ]),
                        void 0) :
                    "document" === n.containment ?
                    ((this.containment = [
                            0,
                            0,
                            e(a).width() -
                            this.helperProportions.width -
                            this.margins.left,
                            (e(a).height() || a.body.parentNode.scrollHeight) -
                            this.helperProportions.height -
                            this.margins.top,
                        ]),
                        void 0) :
                    n.containment.constructor === Array ?
                    ((this.containment = n.containment), void 0) :
                    ("parent" === n.containment &&
                        (n.containment = this.helper[0].parentNode),
                        (i = e(n.containment)),
                        (s = i[0]),
                        s &&
                        ((t = /(scroll|auto)/.test(i.css("overflow"))),
                            (this.containment = [
                                (parseInt(i.css("borderLeftWidth"), 10) || 0) +
                                (parseInt(i.css("paddingLeft"), 10) || 0),
                                (parseInt(i.css("borderTopWidth"), 10) || 0) +
                                (parseInt(i.css("paddingTop"), 10) || 0),
                                (t ?
                                    Math.max(s.scrollWidth, s.offsetWidth) :
                                    s.offsetWidth) -
                                (parseInt(i.css("borderRightWidth"), 10) || 0) -
                                (parseInt(i.css("paddingRight"), 10) || 0) -
                                this.helperProportions.width -
                                this.margins.left -
                                this.margins.right,
                                (t ?
                                    Math.max(s.scrollHeight, s.offsetHeight) :
                                    s.offsetHeight) -
                                (parseInt(i.css("borderBottomWidth"), 10) || 0) -
                                (parseInt(i.css("paddingBottom"), 10) || 0) -
                                this.helperProportions.height -
                                this.margins.top -
                                this.margins.bottom,
                            ]),
                            (this.relativeContainer = i)),
                        void 0) :
                    ((this.containment = null), void 0)
                );
            },
            _convertPositionTo: function(e, t) {
                t || (t = this.position);
                var i = "absolute" === e ? 1 : -1,
                    s = this._isRootNode(this.scrollParent[0]);
                return {
                    top: t.top +
                        this.offset.relative.top * i +
                        this.offset.parent.top * i -
                        ("fixed" === this.cssPosition ?
                            -this.offset.scroll.top :
                            s ?
                            0 :
                            this.offset.scroll.top) *
                        i,
                    left: t.left +
                        this.offset.relative.left * i +
                        this.offset.parent.left * i -
                        ("fixed" === this.cssPosition ?
                            -this.offset.scroll.left :
                            s ?
                            0 :
                            this.offset.scroll.left) *
                        i,
                };
            },
            _generatePosition: function(e, t) {
                var i,
                    s,
                    n,
                    a,
                    o = this.options,
                    r = this._isRootNode(this.scrollParent[0]),
                    h = e.pageX,
                    l = e.pageY;
                return (
                    (r && this.offset.scroll) ||
                    (this.offset.scroll = {
                        top: this.scrollParent.scrollTop(),
                        left: this.scrollParent.scrollLeft(),
                    }),
                    t &&
                    (this.containment &&
                        (this.relativeContainer ?
                            ((s = this.relativeContainer.offset()),
                                (i = [
                                    this.containment[0] + s.left,
                                    this.containment[1] + s.top,
                                    this.containment[2] + s.left,
                                    this.containment[3] + s.top,
                                ])) :
                            (i = this.containment),
                            e.pageX - this.offset.click.left < i[0] &&
                            (h = i[0] + this.offset.click.left),
                            e.pageY - this.offset.click.top < i[1] &&
                            (l = i[1] + this.offset.click.top),
                            e.pageX - this.offset.click.left > i[2] &&
                            (h = i[2] + this.offset.click.left),
                            e.pageY - this.offset.click.top > i[3] &&
                            (l = i[3] + this.offset.click.top)),
                        o.grid &&
                        ((n = o.grid[1] ?
                                this.originalPageY +
                                Math.round((l - this.originalPageY) / o.grid[1]) * o.grid[1] :
                                this.originalPageY),
                            (l = i ?
                                n - this.offset.click.top >= i[1] ||
                                n - this.offset.click.top > i[3] ?
                                n :
                                n - this.offset.click.top >= i[1] ?
                                n - o.grid[1] :
                                n + o.grid[1] :
                                n),
                            (a = o.grid[0] ?
                                this.originalPageX +
                                Math.round((h - this.originalPageX) / o.grid[0]) * o.grid[0] :
                                this.originalPageX),
                            (h = i ?
                                a - this.offset.click.left >= i[0] ||
                                a - this.offset.click.left > i[2] ?
                                a :
                                a - this.offset.click.left >= i[0] ?
                                a - o.grid[0] :
                                a + o.grid[0] :
                                a)),
                        "y" === o.axis && (h = this.originalPageX),
                        "x" === o.axis && (l = this.originalPageY)), {
                        top: l -
                            this.offset.click.top -
                            this.offset.relative.top -
                            this.offset.parent.top +
                            ("fixed" === this.cssPosition ?
                                -this.offset.scroll.top :
                                r ?
                                0 :
                                this.offset.scroll.top),
                        left: h -
                            this.offset.click.left -
                            this.offset.relative.left -
                            this.offset.parent.left +
                            ("fixed" === this.cssPosition ?
                                -this.offset.scroll.left :
                                r ?
                                0 :
                                this.offset.scroll.left),
                    }
                );
            },
            _clear: function() {
                this.helper.removeClass("ui-draggable-dragging"),
                    this.helper[0] === this.element[0] ||
                    this.cancelHelperRemoval ||
                    this.helper.remove(),
                    (this.helper = null),
                    (this.cancelHelperRemoval = !1),
                    this.destroyOnClear && this.destroy();
            },
            _normalizeRightBottom: function() {
                "y" !== this.options.axis &&
                    "auto" !== this.helper.css("right") &&
                    (this.helper.width(this.helper.width()),
                        this.helper.css("right", "auto")),
                    "x" !== this.options.axis &&
                    "auto" !== this.helper.css("bottom") &&
                    (this.helper.height(this.helper.height()),
                        this.helper.css("bottom", "auto"));
            },
            _trigger: function(t, i, s) {
                return (
                    (s = s || this._uiHash()),
                    e.ui.plugin.call(this, t, [i, s, this], !0),
                    /^(drag|start|stop)/.test(t) &&
                    ((this.positionAbs = this._convertPositionTo("absolute")),
                        (s.offset = this.positionAbs)),
                    e.Widget.prototype._trigger.call(this, t, i, s)
                );
            },
            plugins: {},
            _uiHash: function() {
                return {
                    helper: this.helper,
                    position: this.position,
                    originalPosition: this.originalPosition,
                    offset: this.positionAbs,
                };
            },
        }),
        e.ui.plugin.add("draggable", "connectToSortable", {
            start: function(t, i, s) {
                var n = e.extend({}, i, {
                    item: s.element
                });
                (s.sortables = []),
                e(s.options.connectToSortable).each(function() {
                    var i = e(this).sortable("instance");
                    i &&
                        !i.options.disabled &&
                        (s.sortables.push(i),
                            i.refreshPositions(),
                            i._trigger("activate", t, n));
                });
            },
            stop: function(t, i, s) {
                var n = e.extend({}, i, {
                    item: s.element
                });
                (s.cancelHelperRemoval = !1),
                e.each(s.sortables, function() {
                    var e = this;
                    e.isOver ?
                        ((e.isOver = 0),
                            (s.cancelHelperRemoval = !0),
                            (e.cancelHelperRemoval = !1),
                            (e._storedCSS = {
                                position: e.placeholder.css("position"),
                                top: e.placeholder.css("top"),
                                left: e.placeholder.css("left"),
                            }),
                            e._mouseStop(t),
                            (e.options.helper = e.options._helper)) :
                        ((e.cancelHelperRemoval = !0), e._trigger("deactivate", t, n));
                });
            },
            drag: function(t, i, s) {
                e.each(s.sortables, function() {
                    var n = !1,
                        a = this;
                    (a.positionAbs = s.positionAbs),
                    (a.helperProportions = s.helperProportions),
                    (a.offset.click = s.offset.click),
                    a._intersectsWith(a.containerCache) &&
                        ((n = !0),
                            e.each(s.sortables, function() {
                                return (
                                    (this.positionAbs = s.positionAbs),
                                    (this.helperProportions = s.helperProportions),
                                    (this.offset.click = s.offset.click),
                                    this !== a &&
                                    this._intersectsWith(this.containerCache) &&
                                    e.contains(a.element[0], this.element[0]) &&
                                    (n = !1),
                                    n
                                );
                            })),
                        n ?
                        (a.isOver ||
                            ((a.isOver = 1),
                                (s._parent = i.helper.parent()),
                                (a.currentItem = i.helper
                                    .appendTo(a.element)
                                    .data("ui-sortable-item", !0)),
                                (a.options._helper = a.options.helper),
                                (a.options.helper = function() {
                                    return i.helper[0];
                                }),
                                (t.target = a.currentItem[0]),
                                a._mouseCapture(t, !0),
                                a._mouseStart(t, !0, !0),
                                (a.offset.click.top = s.offset.click.top),
                                (a.offset.click.left = s.offset.click.left),
                                (a.offset.parent.left -=
                                    s.offset.parent.left - a.offset.parent.left),
                                (a.offset.parent.top -=
                                    s.offset.parent.top - a.offset.parent.top),
                                s._trigger("toSortable", t),
                                (s.dropped = a.element),
                                e.each(s.sortables, function() {
                                    this.refreshPositions();
                                }),
                                (s.currentItem = s.element),
                                (a.fromOutside = s)),
                            a.currentItem && (a._mouseDrag(t), (i.position = a.position))) :
                        a.isOver &&
                        ((a.isOver = 0),
                            (a.cancelHelperRemoval = !0),
                            (a.options._revert = a.options.revert),
                            (a.options.revert = !1),
                            a._trigger("out", t, a._uiHash(a)),
                            a._mouseStop(t, !0),
                            (a.options.revert = a.options._revert),
                            (a.options.helper = a.options._helper),
                            a.placeholder && a.placeholder.remove(),
                            i.helper.appendTo(s._parent),
                            s._refreshOffsets(t),
                            (i.position = s._generatePosition(t, !0)),
                            s._trigger("fromSortable", t),
                            (s.dropped = !1),
                            e.each(s.sortables, function() {
                                this.refreshPositions();
                            }));
                });
            },
        }),
        e.ui.plugin.add("draggable", "cursor", {
            start: function(t, i, s) {
                var n = e("body"),
                    a = s.options;
                n.css("cursor") && (a._cursor = n.css("cursor")),
                    n.css("cursor", a.cursor);
            },
            stop: function(t, i, s) {
                var n = s.options;
                n._cursor && e("body").css("cursor", n._cursor);
            },
        }),
        e.ui.plugin.add("draggable", "opacity", {
            start: function(t, i, s) {
                var n = e(i.helper),
                    a = s.options;
                n.css("opacity") && (a._opacity = n.css("opacity")),
                    n.css("opacity", a.opacity);
            },
            stop: function(t, i, s) {
                var n = s.options;
                n._opacity && e(i.helper).css("opacity", n._opacity);
            },
        }),
        e.ui.plugin.add("draggable", "scroll", {
            start: function(e, t, i) {
                i.scrollParentNotHidden ||
                    (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
                    i.scrollParentNotHidden[0] !== i.document[0] &&
                    "HTML" !== i.scrollParentNotHidden[0].tagName &&
                    (i.overflowOffset = i.scrollParentNotHidden.offset());
            },
            drag: function(t, i, s) {
                var n = s.options,
                    a = !1,
                    o = s.scrollParentNotHidden[0],
                    r = s.document[0];
                o !== r && "HTML" !== o.tagName ?
                    ((n.axis && "x" === n.axis) ||
                        (s.overflowOffset.top + o.offsetHeight - t.pageY <
                            n.scrollSensitivity ?
                            (o.scrollTop = a = o.scrollTop + n.scrollSpeed) :
                            t.pageY - s.overflowOffset.top < n.scrollSensitivity &&
                            (o.scrollTop = a = o.scrollTop - n.scrollSpeed)),
                        (n.axis && "y" === n.axis) ||
                        (s.overflowOffset.left + o.offsetWidth - t.pageX <
                            n.scrollSensitivity ?
                            (o.scrollLeft = a = o.scrollLeft + n.scrollSpeed) :
                            t.pageX - s.overflowOffset.left < n.scrollSensitivity &&
                            (o.scrollLeft = a = o.scrollLeft - n.scrollSpeed))) :
                    ((n.axis && "x" === n.axis) ||
                        (t.pageY - e(r).scrollTop() < n.scrollSensitivity ?
                            (a = e(r).scrollTop(e(r).scrollTop() - n.scrollSpeed)) :
                            e(window).height() - (t.pageY - e(r).scrollTop()) <
                            n.scrollSensitivity &&
                            (a = e(r).scrollTop(e(r).scrollTop() + n.scrollSpeed))),
                        (n.axis && "y" === n.axis) ||
                        (t.pageX - e(r).scrollLeft() < n.scrollSensitivity ?
                            (a = e(r).scrollLeft(e(r).scrollLeft() - n.scrollSpeed)) :
                            e(window).width() - (t.pageX - e(r).scrollLeft()) <
                            n.scrollSensitivity &&
                            (a = e(r).scrollLeft(e(r).scrollLeft() + n.scrollSpeed)))),
                    a !== !1 &&
                    e.ui.ddmanager &&
                    !n.dropBehaviour &&
                    e.ui.ddmanager.prepareOffsets(s, t);
            },
        }),
        e.ui.plugin.add("draggable", "snap", {
            start: function(t, i, s) {
                var n = s.options;
                (s.snapElements = []),
                e(
                    n.snap.constructor !== String ?
                    n.snap.items || ":data(ui-draggable)" :
                    n.snap
                ).each(function() {
                    var t = e(this),
                        i = t.offset();
                    this !== s.element[0] &&
                        s.snapElements.push({
                            item: this,
                            width: t.outerWidth(),
                            height: t.outerHeight(),
                            top: i.top,
                            left: i.left,
                        });
                });
            },
            drag: function(t, i, s) {
                var n,
                    a,
                    o,
                    r,
                    h,
                    l,
                    u,
                    d,
                    c,
                    p,
                    f = s.options,
                    m = f.snapTolerance,
                    g = i.offset.left,
                    v = g + s.helperProportions.width,
                    y = i.offset.top,
                    b = y + s.helperProportions.height;
                for (c = s.snapElements.length - 1; c >= 0; c--)
                    (h = s.snapElements[c].left - s.margins.left),
                    (l = h + s.snapElements[c].width),
                    (u = s.snapElements[c].top - s.margins.top),
                    (d = u + s.snapElements[c].height),
                    h - m > v ||
                    g > l + m ||
                    u - m > b ||
                    y > d + m ||
                    !e.contains(
                        s.snapElements[c].item.ownerDocument,
                        s.snapElements[c].item
                    ) ?
                    (s.snapElements[c].snapping &&
                        s.options.snap.release &&
                        s.options.snap.release.call(
                            s.element,
                            t,
                            e.extend(s._uiHash(), {
                                snapItem: s.snapElements[c].item
                            })
                        ),
                        (s.snapElements[c].snapping = !1)) :
                    ("inner" !== f.snapMode &&
                        ((n = m >= Math.abs(u - b)),
                            (a = m >= Math.abs(d - y)),
                            (o = m >= Math.abs(h - v)),
                            (r = m >= Math.abs(l - g)),
                            n &&
                            (i.position.top = s._convertPositionTo("relative", {
                                top: u - s.helperProportions.height,
                                left: 0,
                            }).top),
                            a &&
                            (i.position.top = s._convertPositionTo("relative", {
                                top: d,
                                left: 0,
                            }).top),
                            o &&
                            (i.position.left = s._convertPositionTo("relative", {
                                top: 0,
                                left: h - s.helperProportions.width,
                            }).left),
                            r &&
                            (i.position.left = s._convertPositionTo("relative", {
                                top: 0,
                                left: l,
                            }).left)),
                        (p = n || a || o || r),
                        "outer" !== f.snapMode &&
                        ((n = m >= Math.abs(u - y)),
                            (a = m >= Math.abs(d - b)),
                            (o = m >= Math.abs(h - g)),
                            (r = m >= Math.abs(l - v)),
                            n &&
                            (i.position.top = s._convertPositionTo("relative", {
                                top: u,
                                left: 0,
                            }).top),
                            a &&
                            (i.position.top = s._convertPositionTo("relative", {
                                top: d - s.helperProportions.height,
                                left: 0,
                            }).top),
                            o &&
                            (i.position.left = s._convertPositionTo("relative", {
                                top: 0,
                                left: h,
                            }).left),
                            r &&
                            (i.position.left = s._convertPositionTo("relative", {
                                top: 0,
                                left: l - s.helperProportions.width,
                            }).left)), !s.snapElements[c].snapping &&
                        (n || a || o || r || p) &&
                        s.options.snap.snap &&
                        s.options.snap.snap.call(
                            s.element,
                            t,
                            e.extend(s._uiHash(), {
                                snapItem: s.snapElements[c].item
                            })
                        ),
                        (s.snapElements[c].snapping = n || a || o || r || p));
            },
        }),
        e.ui.plugin.add("draggable", "stack", {
            start: function(t, i, s) {
                var n,
                    a = s.options,
                    o = e.makeArray(e(a.stack)).sort(function(t, i) {
                        return (
                            (parseInt(e(t).css("zIndex"), 10) || 0) -
                            (parseInt(e(i).css("zIndex"), 10) || 0)
                        );
                    });
                o.length &&
                    ((n = parseInt(e(o[0]).css("zIndex"), 10) || 0),
                        e(o).each(function(t) {
                            e(this).css("zIndex", n + t);
                        }),
                        this.css("zIndex", n + o.length));
            },
        }),
        e.ui.plugin.add("draggable", "zIndex", {
            start: function(t, i, s) {
                var n = e(i.helper),
                    a = s.options;
                n.css("zIndex") && (a._zIndex = n.css("zIndex")),
                    n.css("zIndex", a.zIndex);
            },
            stop: function(t, i, s) {
                var n = s.options;
                n._zIndex && e(i.helper).css("zIndex", n._zIndex);
            },
        }),
        e.ui.draggable,
        e.widget("ui.resizable", e.ui.mouse, {
            version: "1.11.4",
            widgetEventPrefix: "resize",
            options: {
                alsoResize: !1,
                animate: !1,
                animateDuration: "slow",
                animateEasing: "swing",
                aspectRatio: !1,
                autoHide: !1,
                containment: !1,
                ghost: !1,
                grid: !1,
                handles: "e,s,se",
                helper: !1,
                maxHeight: null,
                maxWidth: null,
                minHeight: 10,
                minWidth: 10,
                zIndex: 90,
                resize: null,
                start: null,
                stop: null,
            },
            _num: function(e) {
                return parseInt(e, 10) || 0;
            },
            _isNumber: function(e) {
                return !isNaN(parseInt(e, 10));
            },
            _hasScroll: function(t, i) {
                if ("hidden" === e(t).css("overflow")) return !1;
                var s = i && "left" === i ? "scrollLeft" : "scrollTop",
                    n = !1;
                return t[s] > 0 ? !0 : ((t[s] = 1), (n = t[s] > 0), (t[s] = 0), n);
            },
            _create: function() {
                var t,
                    i,
                    s,
                    n,
                    a,
                    o = this,
                    r = this.options;
                if (
                    (this.element.addClass("ui-resizable"),
                        e.extend(this, {
                            _aspectRatio: !!r.aspectRatio,
                            aspectRatio: r.aspectRatio,
                            originalElement: this.element,
                            _proportionallyResizeElements: [],
                            _helper: r.helper || r.ghost || r.animate ?
                                r.helper || "ui-resizable-helper" :
                                null,
                        }),
                        this.element[0].nodeName.match(
                            /^(canvas|textarea|input|select|button|img)$/i
                        ) &&
                        (this.element.wrap(
                                e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                                    position: this.element.css("position"),
                                    width: this.element.outerWidth(),
                                    height: this.element.outerHeight(),
                                    top: this.element.css("top"),
                                    left: this.element.css("left"),
                                })
                            ),
                            (this.element = this.element
                                .parent()
                                .data("ui-resizable", this.element.resizable("instance"))),
                            (this.elementIsWrapper = !0),
                            this.element.css({
                                marginLeft: this.originalElement.css("marginLeft"),
                                marginTop: this.originalElement.css("marginTop"),
                                marginRight: this.originalElement.css("marginRight"),
                                marginBottom: this.originalElement.css("marginBottom"),
                            }),
                            this.originalElement.css({
                                marginLeft: 0,
                                marginTop: 0,
                                marginRight: 0,
                                marginBottom: 0,
                            }),
                            (this.originalResizeStyle = this.originalElement.css("resize")),
                            this.originalElement.css("resize", "none"),
                            this._proportionallyResizeElements.push(
                                this.originalElement.css({
                                    position: "static",
                                    zoom: 1,
                                    display: "block",
                                })
                            ),
                            this.originalElement.css({
                                margin: this.originalElement.css("margin"),
                            }),
                            this._proportionallyResize()),
                        (this.handles =
                            r.handles ||
                            (e(".ui-resizable-handle", this.element).length ?
                                {
                                    n: ".ui-resizable-n",
                                    e: ".ui-resizable-e",
                                    s: ".ui-resizable-s",
                                    w: ".ui-resizable-w",
                                    se: ".ui-resizable-se",
                                    sw: ".ui-resizable-sw",
                                    ne: ".ui-resizable-ne",
                                    nw: ".ui-resizable-nw",
                                } :
                                "e,s,se")),
                        (this._handles = e()),
                        this.handles.constructor === String)
                )
                    for (
                        "all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
                        t = this.handles.split(","),
                        this.handles = {},
                        i = 0; t.length > i; i++
                    )
                        (s = e.trim(t[i])),
                        (a = "ui-resizable-" + s),
                        (n = e("<div class='ui-resizable-handle " + a + "'></div>")),
                        n.css({
                            zIndex: r.zIndex
                        }),
                        "se" === s && n.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),
                        (this.handles[s] = ".ui-resizable-" + s),
                        this.element.append(n);
                (this._renderAxis = function(t) {
                    var i, s, n, a;
                    t = t || this.element;
                    for (i in this.handles)
                        this.handles[i].constructor === String ?
                        (this.handles[i] = this.element
                            .children(this.handles[i])
                            .first()
                            .show()) :
                        (this.handles[i].jquery || this.handles[i].nodeType) &&
                        ((this.handles[i] = e(this.handles[i])),
                            this._on(this.handles[i], {
                                mousedown: o._mouseDown
                            })),
                        this.elementIsWrapper &&
                        this.originalElement[0].nodeName.match(
                            /^(textarea|input|select|button)$/i
                        ) &&
                        ((s = e(this.handles[i], this.element)),
                            (a = /sw|ne|nw|se|n|s/.test(i) ?
                                s.outerHeight() :
                                s.outerWidth()),
                            (n = [
                                "padding",
                                /ne|nw|n/.test(i) ?
                                "Top" :
                                /se|sw|s/.test(i) ?
                                "Bottom" :
                                /^e$/.test(i) ?
                                "Right" :
                                "Left",
                            ].join("")),
                            t.css(n, a),
                            this._proportionallyResize()),
                        (this._handles = this._handles.add(this.handles[i]));
                }),
                this._renderAxis(this.element),
                    (this._handles = this._handles.add(
                        this.element.find(".ui-resizable-handle")
                    )),
                    this._handles.disableSelection(),
                    this._handles.mouseover(function() {
                        o.resizing ||
                            (this.className &&
                                (n = this.className.match(
                                    /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i
                                )),
                                (o.axis = n && n[1] ? n[1] : "se"));
                    }),
                    r.autoHide &&
                    (this._handles.hide(),
                        e(this.element)
                        .addClass("ui-resizable-autohide")
                        .mouseenter(function() {
                            r.disabled ||
                                (e(this).removeClass("ui-resizable-autohide"),
                                    o._handles.show());
                        })
                        .mouseleave(function() {
                            r.disabled ||
                                o.resizing ||
                                (e(this).addClass("ui-resizable-autohide"),
                                    o._handles.hide());
                        })),
                    this._mouseInit();
            },
            _destroy: function() {
                this._mouseDestroy();
                var t,
                    i = function(t) {
                        e(t)
                            .removeClass(
                                "ui-resizable ui-resizable-disabled ui-resizable-resizing"
                            )
                            .removeData("resizable")
                            .removeData("ui-resizable")
                            .unbind(".resizable")
                            .find(".ui-resizable-handle")
                            .remove();
                    };
                return (
                    this.elementIsWrapper &&
                    (i(this.element),
                        (t = this.element),
                        this.originalElement
                        .css({
                            position: t.css("position"),
                            width: t.outerWidth(),
                            height: t.outerHeight(),
                            top: t.css("top"),
                            left: t.css("left"),
                        })
                        .insertAfter(t),
                        t.remove()),
                    this.originalElement.css("resize", this.originalResizeStyle),
                    i(this.originalElement),
                    this
                );
            },
            _mouseCapture: function(t) {
                var i,
                    s,
                    n = !1;
                for (i in this.handles)
                    (s = e(this.handles[i])[0]),
                    (s === t.target || e.contains(s, t.target)) && (n = !0);
                return !this.options.disabled && n;
            },
            _mouseStart: function(t) {
                var i,
                    s,
                    n,
                    a = this.options,
                    o = this.element;
                return (
                    (this.resizing = !0),
                    this._renderProxy(),
                    (i = this._num(this.helper.css("left"))),
                    (s = this._num(this.helper.css("top"))),
                    a.containment &&
                    ((i += e(a.containment).scrollLeft() || 0),
                        (s += e(a.containment).scrollTop() || 0)),
                    (this.offset = this.helper.offset()),
                    (this.position = {
                        left: i,
                        top: s
                    }),
                    (this.size = this._helper ?
                        {
                            width: this.helper.width(),
                            height: this.helper.height()
                        } :
                        {
                            width: o.width(),
                            height: o.height()
                        }),
                    (this.originalSize = this._helper ?
                        {
                            width: o.outerWidth(),
                            height: o.outerHeight()
                        } :
                        {
                            width: o.width(),
                            height: o.height()
                        }),
                    (this.sizeDiff = {
                        width: o.outerWidth() - o.width(),
                        height: o.outerHeight() - o.height(),
                    }),
                    (this.originalPosition = {
                        left: i,
                        top: s
                    }),
                    (this.originalMousePosition = {
                        left: t.pageX,
                        top: t.pageY
                    }),
                    (this.aspectRatio =
                        "number" == typeof a.aspectRatio ?
                        a.aspectRatio :
                        this.originalSize.width / this.originalSize.height || 1),
                    (n = e(".ui-resizable-" + this.axis).css("cursor")),
                    e("body").css("cursor", "auto" === n ? this.axis + "-resize" : n),
                    o.addClass("ui-resizable-resizing"),
                    this._propagate("start", t), !0
                );
            },
            _mouseDrag: function(t) {
                var i,
                    s,
                    n = this.originalMousePosition,
                    a = this.axis,
                    o = t.pageX - n.left || 0,
                    r = t.pageY - n.top || 0,
                    h = this._change[a];
                return (
                    this._updatePrevProperties(),
                    h ?
                    ((i = h.apply(this, [t, o, r])),
                        this._updateVirtualBoundaries(t.shiftKey),
                        (this._aspectRatio || t.shiftKey) &&
                        (i = this._updateRatio(i, t)),
                        (i = this._respectSize(i, t)),
                        this._updateCache(i),
                        this._propagate("resize", t),
                        (s = this._applyChanges()), !this._helper &&
                        this._proportionallyResizeElements.length &&
                        this._proportionallyResize(),
                        e.isEmptyObject(s) ||
                        (this._updatePrevProperties(),
                            this._trigger("resize", t, this.ui()),
                            this._applyChanges()), !1) :
                    !1
                );
            },
            _mouseStop: function(t) {
                this.resizing = !1;
                var i,
                    s,
                    n,
                    a,
                    o,
                    r,
                    h,
                    l = this.options,
                    u = this;
                return (
                    this._helper &&
                    ((i = this._proportionallyResizeElements),
                        (s = i.length && /textarea/i.test(i[0].nodeName)),
                        (n = s && this._hasScroll(i[0], "left") ? 0 : u.sizeDiff.height),
                        (a = s ? 0 : u.sizeDiff.width),
                        (o = {
                            width: u.helper.width() - a,
                            height: u.helper.height() - n,
                        }),
                        (r =
                            parseInt(u.element.css("left"), 10) +
                            (u.position.left - u.originalPosition.left) || null),
                        (h =
                            parseInt(u.element.css("top"), 10) +
                            (u.position.top - u.originalPosition.top) || null),
                        l.animate || this.element.css(e.extend(o, {
                            top: h,
                            left: r
                        })),
                        u.helper.height(u.size.height),
                        u.helper.width(u.size.width),
                        this._helper && !l.animate && this._proportionallyResize()),
                    e("body").css("cursor", "auto"),
                    this.element.removeClass("ui-resizable-resizing"),
                    this._propagate("stop", t),
                    this._helper && this.helper.remove(), !1
                );
            },
            _updatePrevProperties: function() {
                (this.prevPosition = {
                    top: this.position.top,
                    left: this.position.left,
                }),
                (this.prevSize = {
                    width: this.size.width,
                    height: this.size.height,
                });
            },
            _applyChanges: function() {
                var e = {};
                return (
                    this.position.top !== this.prevPosition.top &&
                    (e.top = this.position.top + "px"),
                    this.position.left !== this.prevPosition.left &&
                    (e.left = this.position.left + "px"),
                    this.size.width !== this.prevSize.width &&
                    (e.width = this.size.width + "px"),
                    this.size.height !== this.prevSize.height &&
                    (e.height = this.size.height + "px"),
                    this.helper.css(e),
                    e
                );
            },
            _updateVirtualBoundaries: function(e) {
                var t,
                    i,
                    s,
                    n,
                    a,
                    o = this.options;
                (a = {
                    minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,
                    maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : 1 / 0,
                    minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,
                    maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : 1 / 0,
                }),
                (this._aspectRatio || e) &&
                ((t = a.minHeight * this.aspectRatio),
                    (s = a.minWidth / this.aspectRatio),
                    (i = a.maxHeight * this.aspectRatio),
                    (n = a.maxWidth / this.aspectRatio),
                    t > a.minWidth && (a.minWidth = t),
                    s > a.minHeight && (a.minHeight = s),
                    a.maxWidth > i && (a.maxWidth = i),
                    a.maxHeight > n && (a.maxHeight = n)),
                (this._vBoundaries = a);
            },
            _updateCache: function(e) {
                (this.offset = this.helper.offset()),
                this._isNumber(e.left) && (this.position.left = e.left),
                    this._isNumber(e.top) && (this.position.top = e.top),
                    this._isNumber(e.height) && (this.size.height = e.height),
                    this._isNumber(e.width) && (this.size.width = e.width);
            },
            _updateRatio: function(e) {
                var t = this.position,
                    i = this.size,
                    s = this.axis;
                return (
                    this._isNumber(e.height) ?
                    (e.width = e.height * this.aspectRatio) :
                    this._isNumber(e.width) &&
                    (e.height = e.width / this.aspectRatio),
                    "sw" === s &&
                    ((e.left = t.left + (i.width - e.width)), (e.top = null)),
                    "nw" === s &&
                    ((e.top = t.top + (i.height - e.height)),
                        (e.left = t.left + (i.width - e.width))),
                    e
                );
            },
            _respectSize: function(e) {
                var t = this._vBoundaries,
                    i = this.axis,
                    s = this._isNumber(e.width) && t.maxWidth && t.maxWidth < e.width,
                    n = this._isNumber(e.height) && t.maxHeight && t.maxHeight < e.height,
                    a = this._isNumber(e.width) && t.minWidth && t.minWidth > e.width,
                    o = this._isNumber(e.height) && t.minHeight && t.minHeight > e.height,
                    r = this.originalPosition.left + this.originalSize.width,
                    h = this.position.top + this.size.height,
                    l = /sw|nw|w/.test(i),
                    u = /nw|ne|n/.test(i);
                return (
                    a && (e.width = t.minWidth),
                    o && (e.height = t.minHeight),
                    s && (e.width = t.maxWidth),
                    n && (e.height = t.maxHeight),
                    a && l && (e.left = r - t.minWidth),
                    s && l && (e.left = r - t.maxWidth),
                    o && u && (e.top = h - t.minHeight),
                    n && u && (e.top = h - t.maxHeight),
                    e.width || e.height || e.left || !e.top ?
                    e.width || e.height || e.top || !e.left || (e.left = null) :
                    (e.top = null),
                    e
                );
            },
            _getPaddingPlusBorderDimensions: function(e) {
                for (
                    var t = 0,
                        i = [],
                        s = [
                            e.css("borderTopWidth"),
                            e.css("borderRightWidth"),
                            e.css("borderBottomWidth"),
                            e.css("borderLeftWidth"),
                        ],
                        n = [
                            e.css("paddingTop"),
                            e.css("paddingRight"),
                            e.css("paddingBottom"),
                            e.css("paddingLeft"),
                        ]; 4 > t; t++
                )
                    (i[t] = parseInt(s[t], 10) || 0), (i[t] += parseInt(n[t], 10) || 0);
                return {
                    height: i[0] + i[2],
                    width: i[1] + i[3]
                };
            },
            _proportionallyResize: function() {
                if (this._proportionallyResizeElements.length)
                    for (
                        var e, t = 0, i = this.helper || this.element; this._proportionallyResizeElements.length > t; t++
                    )
                        (e = this._proportionallyResizeElements[t]),
                        this.outerDimensions ||
                        (this.outerDimensions =
                            this._getPaddingPlusBorderDimensions(e)),
                        e.css({
                            height: i.height() - this.outerDimensions.height || 0,
                            width: i.width() - this.outerDimensions.width || 0,
                        });
            },
            _renderProxy: function() {
                var t = this.element,
                    i = this.options;
                (this.elementOffset = t.offset()),
                this._helper ?
                    ((this.helper =
                            this.helper || e("<div style='overflow:hidden;'></div>")),
                        this.helper
                        .addClass(this._helper)
                        .css({
                            width: this.element.outerWidth() - 1,
                            height: this.element.outerHeight() - 1,
                            position: "absolute",
                            left: this.elementOffset.left + "px",
                            top: this.elementOffset.top + "px",
                            zIndex: ++i.zIndex,
                        }),
                        this.helper.appendTo("body").disableSelection()) :
                    (this.helper = this.element);
            },
            _change: {
                e: function(e, t) {
                    return {
                        width: this.originalSize.width + t
                    };
                },
                w: function(e, t) {
                    var i = this.originalSize,
                        s = this.originalPosition;
                    return {
                        left: s.left + t,
                        width: i.width - t
                    };
                },
                n: function(e, t, i) {
                    var s = this.originalSize,
                        n = this.originalPosition;
                    return {
                        top: n.top + i,
                        height: s.height - i
                    };
                },
                s: function(e, t, i) {
                    return {
                        height: this.originalSize.height + i
                    };
                },
                se: function(t, i, s) {
                    return e.extend(
                        this._change.s.apply(this, arguments),
                        this._change.e.apply(this, [t, i, s])
                    );
                },
                sw: function(t, i, s) {
                    return e.extend(
                        this._change.s.apply(this, arguments),
                        this._change.w.apply(this, [t, i, s])
                    );
                },
                ne: function(t, i, s) {
                    return e.extend(
                        this._change.n.apply(this, arguments),
                        this._change.e.apply(this, [t, i, s])
                    );
                },
                nw: function(t, i, s) {
                    return e.extend(
                        this._change.n.apply(this, arguments),
                        this._change.w.apply(this, [t, i, s])
                    );
                },
            },
            _propagate: function(t, i) {
                e.ui.plugin.call(this, t, [i, this.ui()]),
                    "resize" !== t && this._trigger(t, i, this.ui());
            },
            plugins: {},
            ui: function() {
                return {
                    originalElement: this.originalElement,
                    element: this.element,
                    helper: this.helper,
                    position: this.position,
                    size: this.size,
                    originalSize: this.originalSize,
                    originalPosition: this.originalPosition,
                };
            },
        }),
        e.ui.plugin.add("resizable", "animate", {
            stop: function(t) {
                var i = e(this).resizable("instance"),
                    s = i.options,
                    n = i._proportionallyResizeElements,
                    a = n.length && /textarea/i.test(n[0].nodeName),
                    o = a && i._hasScroll(n[0], "left") ? 0 : i.sizeDiff.height,
                    r = a ? 0 : i.sizeDiff.width,
                    h = {
                        width: i.size.width - r,
                        height: i.size.height - o
                    },
                    l =
                    parseInt(i.element.css("left"), 10) +
                    (i.position.left - i.originalPosition.left) || null,
                    u =
                    parseInt(i.element.css("top"), 10) +
                    (i.position.top - i.originalPosition.top) || null;
                i.element.animate(e.extend(h, u && l ? {
                    top: u,
                    left: l
                } : {}), {
                    duration: s.animateDuration,
                    easing: s.animateEasing,
                    step: function() {
                        var s = {
                            width: parseInt(i.element.css("width"), 10),
                            height: parseInt(i.element.css("height"), 10),
                            top: parseInt(i.element.css("top"), 10),
                            left: parseInt(i.element.css("left"), 10),
                        };
                        n && n.length && e(n[0]).css({
                                width: s.width,
                                height: s.height
                            }),
                            i._updateCache(s),
                            i._propagate("resize", t);
                    },
                });
            },
        }),
        e.ui.plugin.add("resizable", "containment", {
            start: function() {
                var t,
                    i,
                    s,
                    n,
                    a,
                    o,
                    r,
                    h = e(this).resizable("instance"),
                    l = h.options,
                    u = h.element,
                    d = l.containment,
                    c =
                    d instanceof e ?
                    d.get(0) :
                    /parent/.test(d) ?
                    u.parent().get(0) :
                    d;
                c &&
                    ((h.containerElement = e(c)),
                        /document/.test(d) || d === document ?
                        ((h.containerOffset = {
                                left: 0,
                                top: 0
                            }),
                            (h.containerPosition = {
                                left: 0,
                                top: 0
                            }),
                            (h.parentData = {
                                element: e(document),
                                left: 0,
                                top: 0,
                                width: e(document).width(),
                                height: e(document).height() || document.body.parentNode.scrollHeight,
                            })) :
                        ((t = e(c)),
                            (i = []),
                            e(["Top", "Right", "Left", "Bottom"]).each(function(e, s) {
                                i[e] = h._num(t.css("padding" + s));
                            }),
                            (h.containerOffset = t.offset()),
                            (h.containerPosition = t.position()),
                            (h.containerSize = {
                                height: t.innerHeight() - i[3],
                                width: t.innerWidth() - i[1],
                            }),
                            (s = h.containerOffset),
                            (n = h.containerSize.height),
                            (a = h.containerSize.width),
                            (o = h._hasScroll(c, "left") ? c.scrollWidth : a),
                            (r = h._hasScroll(c) ? c.scrollHeight : n),
                            (h.parentData = {
                                element: c,
                                left: s.left,
                                top: s.top,
                                width: o,
                                height: r,
                            })));
            },
            resize: function(t) {
                var i,
                    s,
                    n,
                    a,
                    o = e(this).resizable("instance"),
                    r = o.options,
                    h = o.containerOffset,
                    l = o.position,
                    u = o._aspectRatio || t.shiftKey,
                    d = {
                        top: 0,
                        left: 0
                    },
                    c = o.containerElement,
                    p = !0;
                c[0] !== document && /static/.test(c.css("position")) && (d = h),
                    l.left < (o._helper ? h.left : 0) &&
                    ((o.size.width =
                            o.size.width +
                            (o._helper ?
                                o.position.left - h.left :
                                o.position.left - d.left)),
                        u && ((o.size.height = o.size.width / o.aspectRatio), (p = !1)),
                        (o.position.left = r.helper ? h.left : 0)),
                    l.top < (o._helper ? h.top : 0) &&
                    ((o.size.height =
                            o.size.height +
                            (o._helper ? o.position.top - h.top : o.position.top)),
                        u && ((o.size.width = o.size.height * o.aspectRatio), (p = !1)),
                        (o.position.top = o._helper ? h.top : 0)),
                    (n = o.containerElement.get(0) === o.element.parent().get(0)),
                    (a = /relative|absolute/.test(o.containerElement.css("position"))),
                    n && a ?
                    ((o.offset.left = o.parentData.left + o.position.left),
                        (o.offset.top = o.parentData.top + o.position.top)) :
                    ((o.offset.left = o.element.offset().left),
                        (o.offset.top = o.element.offset().top)),
                    (i = Math.abs(
                        o.sizeDiff.width +
                        (o._helper ? o.offset.left - d.left : o.offset.left - h.left)
                    )),
                    (s = Math.abs(
                        o.sizeDiff.height +
                        (o._helper ? o.offset.top - d.top : o.offset.top - h.top)
                    )),
                    i + o.size.width >= o.parentData.width &&
                    ((o.size.width = o.parentData.width - i),
                        u && ((o.size.height = o.size.width / o.aspectRatio), (p = !1))),
                    s + o.size.height >= o.parentData.height &&
                    ((o.size.height = o.parentData.height - s),
                        u && ((o.size.width = o.size.height * o.aspectRatio), (p = !1))),
                    p ||
                    ((o.position.left = o.prevPosition.left),
                        (o.position.top = o.prevPosition.top),
                        (o.size.width = o.prevSize.width),
                        (o.size.height = o.prevSize.height));
            },
            stop: function() {
                var t = e(this).resizable("instance"),
                    i = t.options,
                    s = t.containerOffset,
                    n = t.containerPosition,
                    a = t.containerElement,
                    o = e(t.helper),
                    r = o.offset(),
                    h = o.outerWidth() - t.sizeDiff.width,
                    l = o.outerHeight() - t.sizeDiff.height;
                t._helper &&
                    !i.animate &&
                    /relative/.test(a.css("position")) &&
                    e(this).css({
                        left: r.left - n.left - s.left,
                        width: h,
                        height: l
                    }),
                    t._helper &&
                    !i.animate &&
                    /static/.test(a.css("position")) &&
                    e(this).css({
                        left: r.left - n.left - s.left,
                        width: h,
                        height: l,
                    });
            },
        }),
        e.ui.plugin.add("resizable", "alsoResize", {
            start: function() {
                var t = e(this).resizable("instance"),
                    i = t.options;
                e(i.alsoResize).each(function() {
                    var t = e(this);
                    t.data("ui-resizable-alsoresize", {
                        width: parseInt(t.width(), 10),
                        height: parseInt(t.height(), 10),
                        left: parseInt(t.css("left"), 10),
                        top: parseInt(t.css("top"), 10),
                    });
                });
            },
            resize: function(t, i) {
                var s = e(this).resizable("instance"),
                    n = s.options,
                    a = s.originalSize,
                    o = s.originalPosition,
                    r = {
                        height: s.size.height - a.height || 0,
                        width: s.size.width - a.width || 0,
                        top: s.position.top - o.top || 0,
                        left: s.position.left - o.left || 0,
                    };
                e(n.alsoResize).each(function() {
                    var t = e(this),
                        s = e(this).data("ui-resizable-alsoresize"),
                        n = {},
                        a = t.parents(i.originalElement[0]).length ?
                        ["width", "height"] :
                        ["width", "height", "top", "left"];
                    e.each(a, function(e, t) {
                            var i = (s[t] || 0) + (r[t] || 0);
                            i && i >= 0 && (n[t] = i || null);
                        }),
                        t.css(n);
                });
            },
            stop: function() {
                e(this).removeData("resizable-alsoresize");
            },
        }),
        e.ui.plugin.add("resizable", "ghost", {
            start: function() {
                var t = e(this).resizable("instance"),
                    i = t.options,
                    s = t.size;
                (t.ghost = t.originalElement.clone()),
                t.ghost
                    .css({
                        opacity: 0.25,
                        display: "block",
                        position: "relative",
                        height: s.height,
                        width: s.width,
                        margin: 0,
                        left: 0,
                        top: 0,
                    })
                    .addClass("ui-resizable-ghost")
                    .addClass("string" == typeof i.ghost ? i.ghost : ""),
                    t.ghost.appendTo(t.helper);
            },
            resize: function() {
                var t = e(this).resizable("instance");
                t.ghost &&
                    t.ghost.css({
                        position: "relative",
                        height: t.size.height,
                        width: t.size.width,
                    });
            },
            stop: function() {
                var t = e(this).resizable("instance");
                t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));
            },
        }),
        e.ui.plugin.add("resizable", "grid", {
            resize: function() {
                var t,
                    i = e(this).resizable("instance"),
                    s = i.options,
                    n = i.size,
                    a = i.originalSize,
                    o = i.originalPosition,
                    r = i.axis,
                    h = "number" == typeof s.grid ? [s.grid, s.grid] : s.grid,
                    l = h[0] || 1,
                    u = h[1] || 1,
                    d = Math.round((n.width - a.width) / l) * l,
                    c = Math.round((n.height - a.height) / u) * u,
                    p = a.width + d,
                    f = a.height + c,
                    m = s.maxWidth && p > s.maxWidth,
                    g = s.maxHeight && f > s.maxHeight,
                    v = s.minWidth && s.minWidth > p,
                    y = s.minHeight && s.minHeight > f;
                (s.grid = h),
                v && (p += l),
                    y && (f += u),
                    m && (p -= l),
                    g && (f -= u),
                    /^(se|s|e)$/.test(r) ?
                    ((i.size.width = p), (i.size.height = f)) :
                    /^(ne)$/.test(r) ?
                    ((i.size.width = p),
                        (i.size.height = f),
                        (i.position.top = o.top - c)) :
                    /^(sw)$/.test(r) ?
                    ((i.size.width = p),
                        (i.size.height = f),
                        (i.position.left = o.left - d)) :
                    ((0 >= f - u || 0 >= p - l) &&
                        (t = i._getPaddingPlusBorderDimensions(this)),
                        f - u > 0 ?
                        ((i.size.height = f), (i.position.top = o.top - c)) :
                        ((f = u - t.height),
                            (i.size.height = f),
                            (i.position.top = o.top + a.height - f)),
                        p - l > 0 ?
                        ((i.size.width = p), (i.position.left = o.left - d)) :
                        ((p = l - t.width),
                            (i.size.width = p),
                            (i.position.left = o.left + a.width - p)));
            },
        }),
        e.ui.resizable,
        e.widget("ui.sortable", e.ui.mouse, {
            version: "1.11.4",
            widgetEventPrefix: "sort",
            ready: !1,
            options: {
                appendTo: "parent",
                axis: !1,
                connectWith: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                dropOnEmpty: !0,
                forcePlaceholderSize: !1,
                forceHelperSize: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                items: "> *",
                opacity: !1,
                placeholder: !1,
                revert: !1,
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                scope: "default",
                tolerance: "intersect",
                zIndex: 1e3,
                activate: null,
                beforeStop: null,
                change: null,
                deactivate: null,
                out: null,
                over: null,
                receive: null,
                remove: null,
                sort: null,
                start: null,
                stop: null,
                update: null,
            },
            _isOverAxis: function(e, t, i) {
                return e >= t && t + i > e;
            },
            _isFloating: function(e) {
                return (
                    /left|right/.test(e.css("float")) ||
                    /inline|table-cell/.test(e.css("display"))
                );
            },
            _create: function() {
                (this.containerCache = {}),
                this.element.addClass("ui-sortable"),
                    this.refresh(),
                    (this.offset = this.element.offset()),
                    this._mouseInit(),
                    this._setHandleClassName(),
                    (this.ready = !0);
            },
            _setOption: function(e, t) {
                this._super(e, t), "handle" === e && this._setHandleClassName();
            },
            _setHandleClassName: function() {
                this.element
                    .find(".ui-sortable-handle")
                    .removeClass("ui-sortable-handle"),
                    e.each(this.items, function() {
                        (this.instance.options.handle ?
                            this.item.find(this.instance.options.handle) :
                            this.item
                        ).addClass("ui-sortable-handle");
                    });
            },
            _destroy: function() {
                this.element
                    .removeClass("ui-sortable ui-sortable-disabled")
                    .find(".ui-sortable-handle")
                    .removeClass("ui-sortable-handle"),
                    this._mouseDestroy();
                for (var e = this.items.length - 1; e >= 0; e--)
                    this.items[e].item.removeData(this.widgetName + "-item");
                return this;
            },
            _mouseCapture: function(t, i) {
                var s = null,
                    n = !1,
                    a = this;
                return this.reverting ?
                    !1 :
                    this.options.disabled || "static" === this.options.type ?
                    !1 :
                    (this._refreshItems(t),
                        e(t.target)
                        .parents()
                        .each(function() {
                            return e.data(this, a.widgetName + "-item") === a ?
                                ((s = e(this)), !1) :
                                void 0;
                        }),
                        e.data(t.target, a.widgetName + "-item") === a && (s = e(t.target)),
                        s ?
                        !this.options.handle ||
                        i ||
                        (e(this.options.handle, s)
                            .find("*")
                            .addBack()
                            .each(function() {
                                this === t.target && (n = !0);
                            }),
                            n) ?
                        ((this.currentItem = s), this._removeCurrentsFromItems(), !0) :
                        !1 :
                        !1);
            },
            _mouseStart: function(t, i, s) {
                var n,
                    a,
                    o = this.options;
                if (
                    ((this.currentContainer = this),
                        this.refreshPositions(),
                        (this.helper = this._createHelper(t)),
                        this._cacheHelperProportions(),
                        this._cacheMargins(),
                        (this.scrollParent = this.helper.scrollParent()),
                        (this.offset = this.currentItem.offset()),
                        (this.offset = {
                            top: this.offset.top - this.margins.top,
                            left: this.offset.left - this.margins.left,
                        }),
                        e.extend(this.offset, {
                            click: {
                                left: t.pageX - this.offset.left,
                                top: t.pageY - this.offset.top,
                            },
                            parent: this._getParentOffset(),
                            relative: this._getRelativeOffset(),
                        }),
                        this.helper.css("position", "absolute"),
                        (this.cssPosition = this.helper.css("position")),
                        (this.originalPosition = this._generatePosition(t)),
                        (this.originalPageX = t.pageX),
                        (this.originalPageY = t.pageY),
                        o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt),
                        (this.domPosition = {
                            prev: this.currentItem.prev()[0],
                            parent: this.currentItem.parent()[0],
                        }),
                        this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
                        this._createPlaceholder(),
                        o.containment && this._setContainment(),
                        o.cursor &&
                        "auto" !== o.cursor &&
                        ((a = this.document.find("body")),
                            (this.storedCursor = a.css("cursor")),
                            a.css("cursor", o.cursor),
                            (this.storedStylesheet = e(
                                "<style>*{ cursor: " + o.cursor + " !important; }</style>"
                            ).appendTo(a))),
                        o.opacity &&
                        (this.helper.css("opacity") &&
                            (this._storedOpacity = this.helper.css("opacity")),
                            this.helper.css("opacity", o.opacity)),
                        o.zIndex &&
                        (this.helper.css("zIndex") &&
                            (this._storedZIndex = this.helper.css("zIndex")),
                            this.helper.css("zIndex", o.zIndex)),
                        this.scrollParent[0] !== this.document[0] &&
                        "HTML" !== this.scrollParent[0].tagName &&
                        (this.overflowOffset = this.scrollParent.offset()),
                        this._trigger("start", t, this._uiHash()),
                        this._preserveHelperProportions || this._cacheHelperProportions(), !s)
                )
                    for (n = this.containers.length - 1; n >= 0; n--)
                        this.containers[n]._trigger("activate", t, this._uiHash(this));
                return (
                    e.ui.ddmanager && (e.ui.ddmanager.current = this),
                    e.ui.ddmanager &&
                    !o.dropBehaviour &&
                    e.ui.ddmanager.prepareOffsets(this, t),
                    (this.dragging = !0),
                    this.helper.addClass("ui-sortable-helper"),
                    this._mouseDrag(t), !0
                );
            },
            _mouseDrag: function(t) {
                var i,
                    s,
                    n,
                    a,
                    o = this.options,
                    r = !1;
                for (
                    this.position = this._generatePosition(t),
                    this.positionAbs = this._convertPositionTo("absolute"),
                    this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs),
                    this.options.scroll &&
                    (this.scrollParent[0] !== this.document[0] &&
                        "HTML" !== this.scrollParent[0].tagName ?
                        (this.overflowOffset.top +
                            this.scrollParent[0].offsetHeight -
                            t.pageY <
                            o.scrollSensitivity ?
                            (this.scrollParent[0].scrollTop = r =
                                this.scrollParent[0].scrollTop + o.scrollSpeed) :
                            t.pageY - this.overflowOffset.top < o.scrollSensitivity &&
                            (this.scrollParent[0].scrollTop = r =
                                this.scrollParent[0].scrollTop - o.scrollSpeed),
                            this.overflowOffset.left +
                            this.scrollParent[0].offsetWidth -
                            t.pageX <
                            o.scrollSensitivity ?
                            (this.scrollParent[0].scrollLeft = r =
                                this.scrollParent[0].scrollLeft + o.scrollSpeed) :
                            t.pageX - this.overflowOffset.left <
                            o.scrollSensitivity &&
                            (this.scrollParent[0].scrollLeft = r =
                                this.scrollParent[0].scrollLeft - o.scrollSpeed)) :
                        (t.pageY - this.document.scrollTop() < o.scrollSensitivity ?
                            (r = this.document.scrollTop(
                                this.document.scrollTop() - o.scrollSpeed
                            )) :
                            this.window.height() -
                            (t.pageY - this.document.scrollTop()) <
                            o.scrollSensitivity &&
                            (r = this.document.scrollTop(
                                this.document.scrollTop() + o.scrollSpeed
                            )),
                            t.pageX - this.document.scrollLeft() < o.scrollSensitivity ?
                            (r = this.document.scrollLeft(
                                this.document.scrollLeft() - o.scrollSpeed
                            )) :
                            this.window.width() -
                            (t.pageX - this.document.scrollLeft()) <
                            o.scrollSensitivity &&
                            (r = this.document.scrollLeft(
                                this.document.scrollLeft() + o.scrollSpeed
                            ))),
                        r !== !1 &&
                        e.ui.ddmanager &&
                        !o.dropBehaviour &&
                        e.ui.ddmanager.prepareOffsets(this, t)),
                    this.positionAbs = this._convertPositionTo("absolute"),
                    (this.options.axis && "y" === this.options.axis) ||
                    (this.helper[0].style.left = this.position.left + "px"),
                    (this.options.axis && "x" === this.options.axis) ||
                    (this.helper[0].style.top = this.position.top + "px"),
                    i = this.items.length - 1; i >= 0; i--
                )
                    if (
                        ((s = this.items[i]),
                            (n = s.item[0]),
                            (a = this._intersectsWithPointer(s)),
                            a &&
                            s.instance === this.currentContainer &&
                            n !== this.currentItem[0] &&
                            this.placeholder[1 === a ? "next" : "prev"]()[0] !== n &&
                            !e.contains(this.placeholder[0], n) &&
                            ("semi-dynamic" === this.options.type ?
                                !e.contains(this.element[0], n) :
                                !0))
                    ) {
                        if (
                            ((this.direction = 1 === a ? "down" : "up"),
                                "pointer" !== this.options.tolerance &&
                                !this._intersectsWithSides(s))
                        )
                            break;
                        this._rearrange(t, s), this._trigger("change", t, this._uiHash());
                        break;
                    }
                return (
                    this._contactContainers(t),
                    e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
                    this._trigger("sort", t, this._uiHash()),
                    (this.lastPositionAbs = this.positionAbs), !1
                );
            },
            _mouseStop: function(t, i) {
                if (t) {
                    if (
                        (e.ui.ddmanager &&
                            !this.options.dropBehaviour &&
                            e.ui.ddmanager.drop(this, t),
                            this.options.revert)
                    ) {
                        var s = this,
                            n = this.placeholder.offset(),
                            a = this.options.axis,
                            o = {};
                        (a && "x" !== a) ||
                        (o.left =
                            n.left -
                            this.offset.parent.left -
                            this.margins.left +
                            (this.offsetParent[0] === this.document[0].body ?
                                0 :
                                this.offsetParent[0].scrollLeft)),
                        (a && "y" !== a) ||
                        (o.top =
                            n.top -
                            this.offset.parent.top -
                            this.margins.top +
                            (this.offsetParent[0] === this.document[0].body ?
                                0 :
                                this.offsetParent[0].scrollTop)),
                        (this.reverting = !0),
                        e(this.helper).animate(
                            o,
                            parseInt(this.options.revert, 10) || 500,
                            function() {
                                s._clear(t);
                            }
                        );
                    } else this._clear(t, i);
                    return !1;
                }
            },
            cancel: function() {
                if (this.dragging) {
                    this._mouseUp({
                            target: null
                        }),
                        "original" === this.options.helper ?
                        this.currentItem
                        .css(this._storedCSS)
                        .removeClass("ui-sortable-helper") :
                        this.currentItem.show();
                    for (var t = this.containers.length - 1; t >= 0; t--)
                        this.containers[t]._trigger("deactivate", null, this._uiHash(this)),
                        this.containers[t].containerCache.over &&
                        (this.containers[t]._trigger("out", null, this._uiHash(this)),
                            (this.containers[t].containerCache.over = 0));
                }
                return (
                    this.placeholder &&
                    (this.placeholder[0].parentNode &&
                        this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
                        "original" !== this.options.helper &&
                        this.helper &&
                        this.helper[0].parentNode &&
                        this.helper.remove(),
                        e.extend(this, {
                            helper: null,
                            dragging: !1,
                            reverting: !1,
                            _noFinalSort: null,
                        }),
                        this.domPosition.prev ?
                        e(this.domPosition.prev).after(this.currentItem) :
                        e(this.domPosition.parent).prepend(this.currentItem)),
                    this
                );
            },
            serialize: function(t) {
                var i = this._getItemsAsjQuery(t && t.connected),
                    s = [];
                return (
                    (t = t || {}),
                    e(i).each(function() {
                        var i = (e(t.item || this).attr(t.attribute || "id") || "").match(
                            t.expression || /(.+)[\-=_](.+)/
                        );
                        i &&
                            s.push(
                                (t.key || i[1] + "[]") +
                                "=" +
                                (t.key && t.expression ? i[1] : i[2])
                            );
                    }), !s.length && t.key && s.push(t.key + "="),
                    s.join("&")
                );
            },
            toArray: function(t) {
                var i = this._getItemsAsjQuery(t && t.connected),
                    s = [];
                return (
                    (t = t || {}),
                    i.each(function() {
                        s.push(e(t.item || this).attr(t.attribute || "id") || "");
                    }),
                    s
                );
            },
            _intersectsWith: function(e) {
                var t = this.positionAbs.left,
                    i = t + this.helperProportions.width,
                    s = this.positionAbs.top,
                    n = s + this.helperProportions.height,
                    a = e.left,
                    o = a + e.width,
                    r = e.top,
                    h = r + e.height,
                    l = this.offset.click.top,
                    u = this.offset.click.left,
                    d = "x" === this.options.axis || (s + l > r && h > s + l),
                    c = "y" === this.options.axis || (t + u > a && o > t + u),
                    p = d && c;
                return "pointer" === this.options.tolerance ||
                    this.options.forcePointerForContainers ||
                    ("pointer" !== this.options.tolerance &&
                        this.helperProportions[this.floating ? "width" : "height"] >
                        e[this.floating ? "width" : "height"]) ?
                    p :
                    t + this.helperProportions.width / 2 > a &&
                    o > i - this.helperProportions.width / 2 &&
                    s + this.helperProportions.height / 2 > r &&
                    h > n - this.helperProportions.height / 2;
            },
            _intersectsWithPointer: function(e) {
                var t =
                    "x" === this.options.axis ||
                    this._isOverAxis(
                        this.positionAbs.top + this.offset.click.top,
                        e.top,
                        e.height
                    ),
                    i =
                    "y" === this.options.axis ||
                    this._isOverAxis(
                        this.positionAbs.left + this.offset.click.left,
                        e.left,
                        e.width
                    ),
                    s = t && i,
                    n = this._getDragVerticalDirection(),
                    a = this._getDragHorizontalDirection();
                return s ?
                    this.floating ?
                    (a && "right" === a) || "down" === n ?
                    2 :
                    1 :
                    n && ("down" === n ? 2 : 1) :
                    !1;
            },
            _intersectsWithSides: function(e) {
                var t = this._isOverAxis(
                        this.positionAbs.top + this.offset.click.top,
                        e.top + e.height / 2,
                        e.height
                    ),
                    i = this._isOverAxis(
                        this.positionAbs.left + this.offset.click.left,
                        e.left + e.width / 2,
                        e.width
                    ),
                    s = this._getDragVerticalDirection(),
                    n = this._getDragHorizontalDirection();
                return this.floating && n ?
                    ("right" === n && i) || ("left" === n && !i) :
                    s && (("down" === s && t) || ("up" === s && !t));
            },
            _getDragVerticalDirection: function() {
                var e = this.positionAbs.top - this.lastPositionAbs.top;
                return 0 !== e && (e > 0 ? "down" : "up");
            },
            _getDragHorizontalDirection: function() {
                var e = this.positionAbs.left - this.lastPositionAbs.left;
                return 0 !== e && (e > 0 ? "right" : "left");
            },
            refresh: function(e) {
                return (
                    this._refreshItems(e),
                    this._setHandleClassName(),
                    this.refreshPositions(),
                    this
                );
            },
            _connectWith: function() {
                var e = this.options;
                return e.connectWith.constructor === String ?
                    [e.connectWith] :
                    e.connectWith;
            },
            _getItemsAsjQuery: function(t) {
                function i() {
                    r.push(this);
                }
                var s,
                    n,
                    a,
                    o,
                    r = [],
                    h = [],
                    l = this._connectWith();
                if (l && t)
                    for (s = l.length - 1; s >= 0; s--)
                        for (a = e(l[s], this.document[0]), n = a.length - 1; n >= 0; n--)
                            (o = e.data(a[n], this.widgetFullName)),
                            o &&
                            o !== this &&
                            !o.options.disabled &&
                            h.push([
                                e.isFunction(o.options.items) ?
                                o.options.items.call(o.element) :
                                e(o.options.items, o.element)
                                .not(".ui-sortable-helper")
                                .not(".ui-sortable-placeholder"),
                                o,
                            ]);
                for (
                    h.push([
                        e.isFunction(this.options.items) ?
                        this.options.items.call(this.element, null, {
                            options: this.options,
                            item: this.currentItem,
                        }) :
                        e(this.options.items, this.element)
                        .not(".ui-sortable-helper")
                        .not(".ui-sortable-placeholder"),
                        this,
                    ]),
                    s = h.length - 1; s >= 0; s--
                )
                    h[s][0].each(i);
                return e(r);
            },
            _removeCurrentsFromItems: function() {
                var t = this.currentItem.find(":data(" + this.widgetName + "-item)");
                this.items = e.grep(this.items, function(e) {
                    for (var i = 0; t.length > i; i++)
                        if (t[i] === e.item[0]) return !1;
                    return !0;
                });
            },
            _refreshItems: function(t) {
                (this.items = []), (this.containers = [this]);
                var i,
                    s,
                    n,
                    a,
                    o,
                    r,
                    h,
                    l,
                    u = this.items,
                    d = [
                        [
                            e.isFunction(this.options.items) ?
                            this.options.items.call(this.element[0], t, {
                                item: this.currentItem,
                            }) :
                            e(this.options.items, this.element),
                            this,
                        ],
                    ],
                    c = this._connectWith();
                if (c && this.ready)
                    for (i = c.length - 1; i >= 0; i--)
                        for (n = e(c[i], this.document[0]), s = n.length - 1; s >= 0; s--)
                            (a = e.data(n[s], this.widgetFullName)),
                            a &&
                            a !== this &&
                            !a.options.disabled &&
                            (d.push([
                                    e.isFunction(a.options.items) ?
                                    a.options.items.call(a.element[0], t, {
                                        item: this.currentItem,
                                    }) :
                                    e(a.options.items, a.element),
                                    a,
                                ]),
                                this.containers.push(a));
                for (i = d.length - 1; i >= 0; i--)
                    for (o = d[i][1], r = d[i][0], s = 0, l = r.length; l > s; s++)
                        (h = e(r[s])),
                        h.data(this.widgetName + "-item", o),
                        u.push({
                            item: h,
                            instance: o,
                            width: 0,
                            height: 0,
                            left: 0,
                            top: 0,
                        });
            },
            refreshPositions: function(t) {
                (this.floating = this.items.length ?
                    "x" === this.options.axis || this._isFloating(this.items[0].item) :
                    !1),
                this.offsetParent &&
                    this.helper &&
                    (this.offset.parent = this._getParentOffset());
                var i, s, n, a;
                for (i = this.items.length - 1; i >= 0; i--)
                    (s = this.items[i]),
                    (s.instance !== this.currentContainer &&
                        this.currentContainer &&
                        s.item[0] !== this.currentItem[0]) ||
                    ((n = this.options.toleranceElement ?
                            e(this.options.toleranceElement, s.item) :
                            s.item),
                        t || ((s.width = n.outerWidth()), (s.height = n.outerHeight())),
                        (a = n.offset()),
                        (s.left = a.left),
                        (s.top = a.top));
                if (this.options.custom && this.options.custom.refreshContainers)
                    this.options.custom.refreshContainers.call(this);
                else
                    for (i = this.containers.length - 1; i >= 0; i--)
                        (a = this.containers[i].element.offset()),
                        (this.containers[i].containerCache.left = a.left),
                        (this.containers[i].containerCache.top = a.top),
                        (this.containers[i].containerCache.width =
                            this.containers[i].element.outerWidth()),
                        (this.containers[i].containerCache.height =
                            this.containers[i].element.outerHeight());
                return this;
            },
            _createPlaceholder: function(t) {
                t = t || this;
                var i,
                    s = t.options;
                (s.placeholder && s.placeholder.constructor !== String) ||
                ((i = s.placeholder),
                    (s.placeholder = {
                        element: function() {
                            var s = t.currentItem[0].nodeName.toLowerCase(),
                                n = e("<" + s + ">", t.document[0])
                                .addClass(
                                    i || t.currentItem[0].className + " ui-sortable-placeholder"
                                )
                                .removeClass("ui-sortable-helper");
                            return (
                                "tbody" === s ?
                                t._createTrPlaceholder(
                                    t.currentItem.find("tr").eq(0),
                                    e("<tr>", t.document[0]).appendTo(n)
                                ) :
                                "tr" === s ?
                                t._createTrPlaceholder(t.currentItem, n) :
                                "img" === s && n.attr("src", t.currentItem.attr("src")),
                                i || n.css("visibility", "hidden"),
                                n
                            );
                        },
                        update: function(e, n) {
                            (!i || s.forcePlaceholderSize) &&
                            (n.height() ||
                                n.height(
                                    t.currentItem.innerHeight() -
                                    parseInt(t.currentItem.css("paddingTop") || 0, 10) -
                                    parseInt(t.currentItem.css("paddingBottom") || 0, 10)
                                ),
                                n.width() ||
                                n.width(
                                    t.currentItem.innerWidth() -
                                    parseInt(t.currentItem.css("paddingLeft") || 0, 10) -
                                    parseInt(t.currentItem.css("paddingRight") || 0, 10)
                                ));
                        },
                    })),
                (t.placeholder = e(
                    s.placeholder.element.call(t.element, t.currentItem)
                )),
                t.currentItem.after(t.placeholder),
                    s.placeholder.update(t, t.placeholder);
            },
            _createTrPlaceholder: function(t, i) {
                var s = this;
                t.children().each(function() {
                    e("<td>&#160;</td>", s.document[0])
                        .attr("colspan", e(this).attr("colspan") || 1)
                        .appendTo(i);
                });
            },
            _contactContainers: function(t) {
                var i,
                    s,
                    n,
                    a,
                    o,
                    r,
                    h,
                    l,
                    u,
                    d,
                    c = null,
                    p = null;
                for (i = this.containers.length - 1; i >= 0; i--)
                    if (!e.contains(this.currentItem[0], this.containers[i].element[0]))
                        if (this._intersectsWith(this.containers[i].containerCache)) {
                            if (c && e.contains(this.containers[i].element[0], c.element[0]))
                                continue;
                            (c = this.containers[i]), (p = i);
                        } else
                            this.containers[i].containerCache.over &&
                            (this.containers[i]._trigger("out", t, this._uiHash(this)),
                                (this.containers[i].containerCache.over = 0));
                if (c)
                    if (1 === this.containers.length)
                        this.containers[p].containerCache.over ||
                        (this.containers[p]._trigger("over", t, this._uiHash(this)),
                            (this.containers[p].containerCache.over = 1));
                    else {
                        for (
                            n = 1e4,
                            a = null,
                            u = c.floating || this._isFloating(this.currentItem),
                            o = u ? "left" : "top",
                            r = u ? "width" : "height",
                            d = u ? "clientX" : "clientY",
                            s = this.items.length - 1; s >= 0; s--
                        )
                            e.contains(
                                this.containers[p].element[0],
                                this.items[s].item[0]
                            ) &&
                            this.items[s].item[0] !== this.currentItem[0] &&
                            ((h = this.items[s].item.offset()[o]),
                                (l = !1),
                                t[d] - h > this.items[s][r] / 2 && (l = !0),
                                n > Math.abs(t[d] - h) &&
                                ((n = Math.abs(t[d] - h)),
                                    (a = this.items[s]),
                                    (this.direction = l ? "up" : "down")));
                        if (!a && !this.options.dropOnEmpty) return;
                        if (this.currentContainer === this.containers[p])
                            return (
                                this.currentContainer.containerCache.over ||
                                (this.containers[p]._trigger("over", t, this._uiHash()),
                                    (this.currentContainer.containerCache.over = 1)),
                                void 0
                            );
                        a
                            ?
                            this._rearrange(t, a, null, !0) :
                            this._rearrange(t, null, this.containers[p].element, !0),
                            this._trigger("change", t, this._uiHash()),
                            this.containers[p]._trigger("change", t, this._uiHash(this)),
                            (this.currentContainer = this.containers[p]),
                            this.options.placeholder.update(
                                this.currentContainer,
                                this.placeholder
                            ),
                            this.containers[p]._trigger("over", t, this._uiHash(this)),
                            (this.containers[p].containerCache.over = 1);
                    }
            },
            _createHelper: function(t) {
                var i = this.options,
                    s = e.isFunction(i.helper) ?
                    e(i.helper.apply(this.element[0], [t, this.currentItem])) :
                    "clone" === i.helper ?
                    this.currentItem.clone() :
                    this.currentItem;
                return (
                    s.parents("body").length ||
                    e(
                        "parent" !== i.appendTo ?
                        i.appendTo :
                        this.currentItem[0].parentNode
                    )[0].appendChild(s[0]),
                    s[0] === this.currentItem[0] &&
                    (this._storedCSS = {
                        width: this.currentItem[0].style.width,
                        height: this.currentItem[0].style.height,
                        position: this.currentItem.css("position"),
                        top: this.currentItem.css("top"),
                        left: this.currentItem.css("left"),
                    }),
                    (!s[0].style.width || i.forceHelperSize) &&
                    s.width(this.currentItem.width()),
                    (!s[0].style.height || i.forceHelperSize) &&
                    s.height(this.currentItem.height()),
                    s
                );
            },
            _adjustOffsetFromHelper: function(t) {
                "string" == typeof t && (t = t.split(" ")),
                    e.isArray(t) && (t = {
                        left: +t[0],
                        top: +t[1] || 0
                    }),
                    "left" in t && (this.offset.click.left = t.left + this.margins.left),
                    "right" in t &&
                    (this.offset.click.left =
                        this.helperProportions.width - t.right + this.margins.left),
                    "top" in t && (this.offset.click.top = t.top + this.margins.top),
                    "bottom" in t &&
                    (this.offset.click.top =
                        this.helperProportions.height - t.bottom + this.margins.top);
            },
            _getParentOffset: function() {
                this.offsetParent = this.helper.offsetParent();
                var t = this.offsetParent.offset();
                return (
                    "absolute" === this.cssPosition &&
                    this.scrollParent[0] !== this.document[0] &&
                    e.contains(this.scrollParent[0], this.offsetParent[0]) &&
                    ((t.left += this.scrollParent.scrollLeft()),
                        (t.top += this.scrollParent.scrollTop())),
                    (this.offsetParent[0] === this.document[0].body ||
                        (this.offsetParent[0].tagName &&
                            "html" === this.offsetParent[0].tagName.toLowerCase() &&
                            e.ui.ie)) &&
                    (t = {
                        top: 0,
                        left: 0
                    }), {
                        top: t.top +
                            (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                        left: t.left +
                            (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
                    }
                );
            },
            _getRelativeOffset: function() {
                if ("relative" === this.cssPosition) {
                    var e = this.currentItem.position();
                    return {
                        top: e.top -
                            (parseInt(this.helper.css("top"), 10) || 0) +
                            this.scrollParent.scrollTop(),
                        left: e.left -
                            (parseInt(this.helper.css("left"), 10) || 0) +
                            this.scrollParent.scrollLeft(),
                    };
                }
                return {
                    top: 0,
                    left: 0
                };
            },
            _cacheMargins: function() {
                this.margins = {
                    left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                    top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
                };
            },
            _cacheHelperProportions: function() {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight(),
                };
            },
            _setContainment: function() {
                var t,
                    i,
                    s,
                    n = this.options;
                "parent" === n.containment &&
                    (n.containment = this.helper[0].parentNode),
                    ("document" === n.containment || "window" === n.containment) &&
                    (this.containment = [
                        0 - this.offset.relative.left - this.offset.parent.left,
                        0 - this.offset.relative.top - this.offset.parent.top,
                        "document" === n.containment ?
                        this.document.width() :
                        this.window.width() -
                        this.helperProportions.width -
                        this.margins.left,
                        ("document" === n.containment ?
                            this.document.width() :
                            this.window.height() ||
                            this.document[0].body.parentNode.scrollHeight) -
                        this.helperProportions.height -
                        this.margins.top,
                    ]),
                    /^(document|window|parent)$/.test(n.containment) ||
                    ((t = e(n.containment)[0]),
                        (i = e(n.containment).offset()),
                        (s = "hidden" !== e(t).css("overflow")),
                        (this.containment = [
                            i.left +
                            (parseInt(e(t).css("borderLeftWidth"), 10) || 0) +
                            (parseInt(e(t).css("paddingLeft"), 10) || 0) -
                            this.margins.left,
                            i.top +
                            (parseInt(e(t).css("borderTopWidth"), 10) || 0) +
                            (parseInt(e(t).css("paddingTop"), 10) || 0) -
                            this.margins.top,
                            i.left +
                            (s ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) -
                            (parseInt(e(t).css("borderLeftWidth"), 10) || 0) -
                            (parseInt(e(t).css("paddingRight"), 10) || 0) -
                            this.helperProportions.width -
                            this.margins.left,
                            i.top +
                            (s ?
                                Math.max(t.scrollHeight, t.offsetHeight) :
                                t.offsetHeight) -
                            (parseInt(e(t).css("borderTopWidth"), 10) || 0) -
                            (parseInt(e(t).css("paddingBottom"), 10) || 0) -
                            this.helperProportions.height -
                            this.margins.top,
                        ]));
            },
            _convertPositionTo: function(t, i) {
                i || (i = this.position);
                var s = "absolute" === t ? 1 : -1,
                    n =
                    "absolute" !== this.cssPosition ||
                    (this.scrollParent[0] !== this.document[0] &&
                        e.contains(this.scrollParent[0], this.offsetParent[0])) ?
                    this.scrollParent :
                    this.offsetParent,
                    a = /(html|body)/i.test(n[0].tagName);
                return {
                    top: i.top +
                        this.offset.relative.top * s +
                        this.offset.parent.top * s -
                        ("fixed" === this.cssPosition ?
                            -this.scrollParent.scrollTop() :
                            a ?
                            0 :
                            n.scrollTop()) *
                        s,
                    left: i.left +
                        this.offset.relative.left * s +
                        this.offset.parent.left * s -
                        ("fixed" === this.cssPosition ?
                            -this.scrollParent.scrollLeft() :
                            a ?
                            0 :
                            n.scrollLeft()) *
                        s,
                };
            },
            _generatePosition: function(t) {
                var i,
                    s,
                    n = this.options,
                    a = t.pageX,
                    o = t.pageY,
                    r =
                    "absolute" !== this.cssPosition ||
                    (this.scrollParent[0] !== this.document[0] &&
                        e.contains(this.scrollParent[0], this.offsetParent[0])) ?
                    this.scrollParent :
                    this.offsetParent,
                    h = /(html|body)/i.test(r[0].tagName);
                return (
                    "relative" !== this.cssPosition ||
                    (this.scrollParent[0] !== this.document[0] &&
                        this.scrollParent[0] !== this.offsetParent[0]) ||
                    (this.offset.relative = this._getRelativeOffset()),
                    this.originalPosition &&
                    (this.containment &&
                        (t.pageX - this.offset.click.left < this.containment[0] &&
                            (a = this.containment[0] + this.offset.click.left),
                            t.pageY - this.offset.click.top < this.containment[1] &&
                            (o = this.containment[1] + this.offset.click.top),
                            t.pageX - this.offset.click.left > this.containment[2] &&
                            (a = this.containment[2] + this.offset.click.left),
                            t.pageY - this.offset.click.top > this.containment[3] &&
                            (o = this.containment[3] + this.offset.click.top)),
                        n.grid &&
                        ((i =
                                this.originalPageY +
                                Math.round((o - this.originalPageY) / n.grid[1]) * n.grid[1]),
                            (o = this.containment ?
                                i - this.offset.click.top >= this.containment[1] &&
                                i - this.offset.click.top <= this.containment[3] ?
                                i :
                                i - this.offset.click.top >= this.containment[1] ?
                                i - n.grid[1] :
                                i + n.grid[1] :
                                i),
                            (s =
                                this.originalPageX +
                                Math.round((a - this.originalPageX) / n.grid[0]) * n.grid[0]),
                            (a = this.containment ?
                                s - this.offset.click.left >= this.containment[0] &&
                                s - this.offset.click.left <= this.containment[2] ?
                                s :
                                s - this.offset.click.left >= this.containment[0] ?
                                s - n.grid[0] :
                                s + n.grid[0] :
                                s))), {
                        top: o -
                            this.offset.click.top -
                            this.offset.relative.top -
                            this.offset.parent.top +
                            ("fixed" === this.cssPosition ?
                                -this.scrollParent.scrollTop() :
                                h ?
                                0 :
                                r.scrollTop()),
                        left: a -
                            this.offset.click.left -
                            this.offset.relative.left -
                            this.offset.parent.left +
                            ("fixed" === this.cssPosition ?
                                -this.scrollParent.scrollLeft() :
                                h ?
                                0 :
                                r.scrollLeft()),
                    }
                );
            },
            _rearrange: function(e, t, i, s) {
                i
                    ?
                    i[0].appendChild(this.placeholder[0]) :
                    t.item[0].parentNode.insertBefore(
                        this.placeholder[0],
                        "down" === this.direction ? t.item[0] : t.item[0].nextSibling
                    ),
                    (this.counter = this.counter ? ++this.counter : 1);
                var n = this.counter;
                this._delay(function() {
                    n === this.counter && this.refreshPositions(!s);
                });
            },
            _clear: function(e, t) {
                function i(e, t, i) {
                    return function(s) {
                        i._trigger(e, s, t._uiHash(t));
                    };
                }
                this.reverting = !1;
                var s,
                    n = [];
                if (
                    (!this._noFinalSort &&
                        this.currentItem.parent().length &&
                        this.placeholder.before(this.currentItem),
                        (this._noFinalSort = null),
                        this.helper[0] === this.currentItem[0])
                ) {
                    for (s in this._storedCSS)
                        ("auto" === this._storedCSS[s] ||
                            "static" === this._storedCSS[s]) &&
                        (this._storedCSS[s] = "");
                    this.currentItem
                        .css(this._storedCSS)
                        .removeClass("ui-sortable-helper");
                } else this.currentItem.show();
                for (
                    this.fromOutside &&
                    !t &&
                    n.push(function(e) {
                        this._trigger("receive", e, this._uiHash(this.fromOutside));
                    }),
                    (!this.fromOutside &&
                        this.domPosition.prev ===
                        this.currentItem.prev().not(".ui-sortable-helper")[0] &&
                        this.domPosition.parent === this.currentItem.parent()[0]) ||
                    t ||
                    n.push(function(e) {
                        this._trigger("update", e, this._uiHash());
                    }),
                    this !== this.currentContainer &&
                    (t ||
                        (n.push(function(e) {
                                this._trigger("remove", e, this._uiHash());
                            }),
                            n.push(
                                function(e) {
                                    return function(t) {
                                        e._trigger("receive", t, this._uiHash(this));
                                    };
                                }.call(this, this.currentContainer)
                            ),
                            n.push(
                                function(e) {
                                    return function(t) {
                                        e._trigger("update", t, this._uiHash(this));
                                    };
                                }.call(this, this.currentContainer)
                            ))),
                    s = this.containers.length - 1; s >= 0; s--
                )
                    t || n.push(i("deactivate", this, this.containers[s])),
                    this.containers[s].containerCache.over &&
                    (n.push(i("out", this, this.containers[s])),
                        (this.containers[s].containerCache.over = 0));
                if (
                    (this.storedCursor &&
                        (this.document.find("body").css("cursor", this.storedCursor),
                            this.storedStylesheet.remove()),
                        this._storedOpacity &&
                        this.helper.css("opacity", this._storedOpacity),
                        this._storedZIndex &&
                        this.helper.css(
                            "zIndex",
                            "auto" === this._storedZIndex ? "" : this._storedZIndex
                        ),
                        (this.dragging = !1),
                        t || this._trigger("beforeStop", e, this._uiHash()),
                        this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
                        this.cancelHelperRemoval ||
                        (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
                            (this.helper = null)), !t)
                ) {
                    for (s = 0; n.length > s; s++) n[s].call(this, e);
                    this._trigger("stop", e, this._uiHash());
                }
                return (this.fromOutside = !1), !this.cancelHelperRemoval;
            },
            _trigger: function() {
                e.Widget.prototype._trigger.apply(this, arguments) === !1 &&
                    this.cancel();
            },
            _uiHash: function(t) {
                var i = t || this;
                return {
                    helper: i.helper,
                    placeholder: i.placeholder || e([]),
                    position: i.position,
                    originalPosition: i.originalPosition,
                    offset: i.positionAbs,
                    item: i.currentItem,
                    sender: t ? t.element : null,
                };
            },
        });
});

/*!
 DataTables 1.10.18
 ©2008-2018 SpryMedia Ltd - datatables.net/license
*/
(function(h) {
    "function" === typeof define && define.amd ? define(["jquery"], function(E) {
        return h(E, window, document)
    }) : "object" === typeof exports ? module.exports = function(E, H) {
        E || (E = window);
        H || (H = "undefined" !== typeof window ? require("jquery") : require("jquery")(E));
        return h(H, E, E.document)
    } : h(jQuery, window, document)
})(function(h, E, H, k) {
    function Z(a) {
        var b, c, d = {};
        h.each(a, function(e) {
            if ((b = e.match(/^([^A-Z]+?)([A-Z])/)) && -1 !== "a aa ai ao as b fn i m o s ".indexOf(b[1] + " ")) c = e.replace(b[0], b[2].toLowerCase()),
                d[c] = e, "o" === b[1] && Z(a[e])
        });
        a._hungarianMap = d
    }

    function J(a, b, c) {
        a._hungarianMap || Z(a);
        var d;
        h.each(b, function(e) {
            d = a._hungarianMap[e];
            if (d !== k && (c || b[d] === k)) "o" === d.charAt(0) ? (b[d] || (b[d] = {}), h.extend(!0, b[d], b[e]), J(a[d], b[d], c)) : b[d] = b[e]
        })
    }

    function Ca(a) {
        var b = n.defaults.oLanguage,
            c = b.sDecimal;
        c && Da(c);
        if (a) {
            var d = a.sZeroRecords;
            !a.sEmptyTable && (d && "No data available in table" === b.sEmptyTable) && F(a, a, "sZeroRecords", "sEmptyTable");
            !a.sLoadingRecords && (d && "Loading..." === b.sLoadingRecords) && F(a,
                a, "sZeroRecords", "sLoadingRecords");
            a.sInfoThousands && (a.sThousands = a.sInfoThousands);
            (a = a.sDecimal) && c !== a && Da(a)
        }
    }

    function eb(a) {
        A(a, "ordering", "bSort");
        A(a, "orderMulti", "bSortMulti");
        A(a, "orderClasses", "bSortClasses");
        A(a, "orderCellsTop", "bSortCellsTop");
        A(a, "order", "aaSorting");
        A(a, "orderFixed", "aaSortingFixed");
        A(a, "paging", "bPaginate");
        A(a, "pagingType", "sPaginationType");
        A(a, "pageLength", "iDisplayLength");
        A(a, "searching", "bFilter");
        "boolean" === typeof a.sScrollX && (a.sScrollX = a.sScrollX ? "100%" :
            "");
        "boolean" === typeof a.scrollX && (a.scrollX = a.scrollX ? "100%" : "");
        if (a = a.aoSearchCols)
            for (var b = 0, c = a.length; b < c; b++) a[b] && J(n.models.oSearch, a[b])
    }

    function fb(a) {
        A(a, "orderable", "bSortable");
        A(a, "orderData", "aDataSort");
        A(a, "orderSequence", "asSorting");
        A(a, "orderDataType", "sortDataType");
        var b = a.aDataSort;
        "number" === typeof b && !h.isArray(b) && (a.aDataSort = [b])
    }

    function gb(a) {
        if (!n.__browser) {
            var b = {};
            n.__browser = b;
            var c = h("<div/>").css({
                    position: "fixed",
                    top: 0,
                    left: -1 * h(E).scrollLeft(),
                    height: 1,
                    width: 1,
                    overflow: "hidden"
                }).append(h("<div/>").css({
                    position: "absolute",
                    top: 1,
                    left: 1,
                    width: 100,
                    overflow: "scroll"
                }).append(h("<div/>").css({
                    width: "100%",
                    height: 10
                }))).appendTo("body"),
                d = c.children(),
                e = d.children();
            b.barWidth = d[0].offsetWidth - d[0].clientWidth;
            b.bScrollOversize = 100 === e[0].offsetWidth && 100 !== d[0].clientWidth;
            b.bScrollbarLeft = 1 !== Math.round(e.offset().left);
            b.bBounding = c[0].getBoundingClientRect().width ? !0 : !1;
            c.remove()
        }
        h.extend(a.oBrowser, n.__browser);
        a.oScroll.iBarWidth = n.__browser.barWidth
    }

    function hb(a, b, c, d, e, f) {
        var g, j = !1;
        c !== k && (g = c, j = !0);
        for (; d !== e;) a.hasOwnProperty(d) && (g = j ? b(g, a[d], d, a) : a[d], j = !0, d += f);
        return g
    }

    function Ea(a, b) {
        var c = n.defaults.column,
            d = a.aoColumns.length,
            c = h.extend({}, n.models.oColumn, c, {
                nTh: b ? b : H.createElement("th"),
                sTitle: c.sTitle ? c.sTitle : b ? b.innerHTML : "",
                aDataSort: c.aDataSort ? c.aDataSort : [d],
                mData: c.mData ? c.mData : d,
                idx: d
            });
        a.aoColumns.push(c);
        c = a.aoPreSearchCols;
        c[d] = h.extend({}, n.models.oSearch, c[d]);
        ka(a, d, h(b).data())
    }

    function ka(a, b, c) {
        var b = a.aoColumns[b],
            d = a.oClasses,
            e = h(b.nTh);
        if (!b.sWidthOrig) {
            b.sWidthOrig = e.attr("width") || null;
            var f = (e.attr("style") || "").match(/width:\s*(\d+[pxem%]+)/);
            f && (b.sWidthOrig = f[1])
        }
        c !== k && null !== c && (fb(c), J(n.defaults.column, c), c.mDataProp !== k && !c.mData && (c.mData = c.mDataProp), c.sType && (b._sManualType = c.sType), c.className && !c.sClass && (c.sClass = c.className), c.sClass && e.addClass(c.sClass), h.extend(b, c), F(b, c, "sWidth", "sWidthOrig"), c.iDataSort !== k && (b.aDataSort = [c.iDataSort]), F(b, c, "aDataSort"));
        var g = b.mData,
            j = S(g),
            i = b.mRender ?
            S(b.mRender) : null,
            c = function(a) {
                return "string" === typeof a && -1 !== a.indexOf("@")
            };
        b._bAttrSrc = h.isPlainObject(g) && (c(g.sort) || c(g.type) || c(g.filter));
        b._setter = null;
        b.fnGetData = function(a, b, c) {
            var d = j(a, b, k, c);
            return i && b ? i(d, b, a, c) : d
        };
        b.fnSetData = function(a, b, c) {
            return N(g)(a, b, c)
        };
        "number" !== typeof g && (a._rowReadObject = !0);
        a.oFeatures.bSort || (b.bSortable = !1, e.addClass(d.sSortableNone));
        a = -1 !== h.inArray("asc", b.asSorting);
        c = -1 !== h.inArray("desc", b.asSorting);
        !b.bSortable || !a && !c ? (b.sSortingClass = d.sSortableNone,
            b.sSortingClassJUI = "") : a && !c ? (b.sSortingClass = d.sSortableAsc, b.sSortingClassJUI = d.sSortJUIAscAllowed) : !a && c ? (b.sSortingClass = d.sSortableDesc, b.sSortingClassJUI = d.sSortJUIDescAllowed) : (b.sSortingClass = d.sSortable, b.sSortingClassJUI = d.sSortJUI)
    }

    function $(a) {
        if (!1 !== a.oFeatures.bAutoWidth) {
            var b = a.aoColumns;
            Fa(a);
            for (var c = 0, d = b.length; c < d; c++) b[c].nTh.style.width = b[c].sWidth
        }
        b = a.oScroll;
        ("" !== b.sY || "" !== b.sX) && la(a);
        r(a, null, "column-sizing", [a])
    }

    function aa(a, b) {
        var c = ma(a, "bVisible");
        return "number" ===
            typeof c[b] ? c[b] : null
    }

    function ba(a, b) {
        var c = ma(a, "bVisible"),
            c = h.inArray(b, c);
        return -1 !== c ? c : null
    }

    function V(a) {
        var b = 0;
        h.each(a.aoColumns, function(a, d) {
            d.bVisible && "none" !== h(d.nTh).css("display") && b++
        });
        return b
    }

    function ma(a, b) {
        var c = [];
        h.map(a.aoColumns, function(a, e) {
            a[b] && c.push(e)
        });
        return c
    }

    function Ga(a) {
        var b = a.aoColumns,
            c = a.aoData,
            d = n.ext.type.detect,
            e, f, g, j, i, h, l, q, t;
        e = 0;
        for (f = b.length; e < f; e++)
            if (l = b[e], t = [], !l.sType && l._sManualType) l.sType = l._sManualType;
            else if (!l.sType) {
            g = 0;
            for (j = d.length; g <
                j; g++) {
                i = 0;
                for (h = c.length; i < h; i++) {
                    t[i] === k && (t[i] = B(a, i, e, "type"));
                    q = d[g](t[i], a);
                    if (!q && g !== d.length - 1) break;
                    if ("html" === q) break
                }
                if (q) {
                    l.sType = q;
                    break
                }
            }
            l.sType || (l.sType = "string")
        }
    }

    function ib(a, b, c, d) {
        var e, f, g, j, i, m, l = a.aoColumns;
        if (b)
            for (e = b.length - 1; 0 <= e; e--) {
                m = b[e];
                var q = m.targets !== k ? m.targets : m.aTargets;
                h.isArray(q) || (q = [q]);
                f = 0;
                for (g = q.length; f < g; f++)
                    if ("number" === typeof q[f] && 0 <= q[f]) {
                        for (; l.length <= q[f];) Ea(a);
                        d(q[f], m)
                    } else if ("number" === typeof q[f] && 0 > q[f]) d(l.length + q[f], m);
                else if ("string" ===
                    typeof q[f]) {
                    j = 0;
                    for (i = l.length; j < i; j++)("_all" == q[f] || h(l[j].nTh).hasClass(q[f])) && d(j, m)
                }
            }
        if (c) {
            e = 0;
            for (a = c.length; e < a; e++) d(e, c[e])
        }
    }

    function O(a, b, c, d) {
        var e = a.aoData.length,
            f = h.extend(!0, {}, n.models.oRow, {
                src: c ? "dom" : "data",
                idx: e
            });
        f._aData = b;
        a.aoData.push(f);
        for (var g = a.aoColumns, j = 0, i = g.length; j < i; j++) g[j].sType = null;
        a.aiDisplayMaster.push(e);
        b = a.rowIdFn(b);
        b !== k && (a.aIds[b] = f);
        (c || !a.oFeatures.bDeferRender) && Ha(a, e, c, d);
        return e
    }

    function na(a, b) {
        var c;
        b instanceof h || (b = h(b));
        return b.map(function(b,
            e) {
            c = Ia(a, e);
            return O(a, c.data, e, c.cells)
        })
    }

    function B(a, b, c, d) {
        var e = a.iDraw,
            f = a.aoColumns[c],
            g = a.aoData[b]._aData,
            j = f.sDefaultContent,
            i = f.fnGetData(g, d, {
                settings: a,
                row: b,
                col: c
            });
        if (i === k) return a.iDrawError != e && null === j && (K(a, 0, "Requested unknown parameter " + ("function" == typeof f.mData ? "{function}" : "'" + f.mData + "'") + " for row " + b + ", column " + c, 4), a.iDrawError = e), j;
        if ((i === g || null === i) && null !== j && d !== k) i = j;
        else if ("function" === typeof i) return i.call(g);
        return null === i && "display" == d ? "" : i
    }

    function jb(a,
        b, c, d) {
        a.aoColumns[c].fnSetData(a.aoData[b]._aData, d, {
            settings: a,
            row: b,
            col: c
        })
    }

    function Ja(a) {
        return h.map(a.match(/(\\.|[^\.])+/g) || [""], function(a) {
            return a.replace(/\\\./g, ".")
        })
    }

    function S(a) {
        if (h.isPlainObject(a)) {
            var b = {};
            h.each(a, function(a, c) {
                c && (b[a] = S(c))
            });
            return function(a, c, f, g) {
                var j = b[c] || b._;
                return j !== k ? j(a, c, f, g) : a
            }
        }
        if (null === a) return function(a) {
            return a
        };
        if ("function" === typeof a) return function(b, c, f, g) {
            return a(b, c, f, g)
        };
        if ("string" === typeof a && (-1 !== a.indexOf(".") || -1 !== a.indexOf("[") ||
                -1 !== a.indexOf("("))) {
            var c = function(a, b, f) {
                var g, j;
                if ("" !== f) {
                    j = Ja(f);
                    for (var i = 0, m = j.length; i < m; i++) {
                        f = j[i].match(ca);
                        g = j[i].match(W);
                        if (f) {
                            j[i] = j[i].replace(ca, "");
                            "" !== j[i] && (a = a[j[i]]);
                            g = [];
                            j.splice(0, i + 1);
                            j = j.join(".");
                            if (h.isArray(a)) {
                                i = 0;
                                for (m = a.length; i < m; i++) g.push(c(a[i], b, j))
                            }
                            a = f[0].substring(1, f[0].length - 1);
                            a = "" === a ? g : g.join(a);
                            break
                        } else if (g) {
                            j[i] = j[i].replace(W, "");
                            a = a[j[i]]();
                            continue
                        }
                        if (null === a || a[j[i]] === k) return k;
                        a = a[j[i]]
                    }
                }
                return a
            };
            return function(b, e) {
                return c(b, e, a)
            }
        }
        return function(b) {
            return b[a]
        }
    }

    function N(a) {
        if (h.isPlainObject(a)) return N(a._);
        if (null === a) return function() {};
        if ("function" === typeof a) return function(b, d, e) {
            a(b, "set", d, e)
        };
        if ("string" === typeof a && (-1 !== a.indexOf(".") || -1 !== a.indexOf("[") || -1 !== a.indexOf("("))) {
            var b = function(a, d, e) {
                var e = Ja(e),
                    f;
                f = e[e.length - 1];
                for (var g, j, i = 0, m = e.length - 1; i < m; i++) {
                    g = e[i].match(ca);
                    j = e[i].match(W);
                    if (g) {
                        e[i] = e[i].replace(ca, "");
                        a[e[i]] = [];
                        f = e.slice();
                        f.splice(0, i + 1);
                        g = f.join(".");
                        if (h.isArray(d)) {
                            j = 0;
                            for (m = d.length; j < m; j++) f = {}, b(f, d[j], g),
                                a[e[i]].push(f)
                        } else a[e[i]] = d;
                        return
                    }
                    j && (e[i] = e[i].replace(W, ""), a = a[e[i]](d));
                    if (null === a[e[i]] || a[e[i]] === k) a[e[i]] = {};
                    a = a[e[i]]
                }
                if (f.match(W)) a[f.replace(W, "")](d);
                else a[f.replace(ca, "")] = d
            };
            return function(c, d) {
                return b(c, d, a)
            }
        }
        return function(b, d) {
            b[a] = d
        }
    }

    function Ka(a) {
        return D(a.aoData, "_aData")
    }

    function oa(a) {
        a.aoData.length = 0;
        a.aiDisplayMaster.length = 0;
        a.aiDisplay.length = 0;
        a.aIds = {}
    }

    function pa(a, b, c) {
        for (var d = -1, e = 0, f = a.length; e < f; e++) a[e] == b ? d = e : a[e] > b && a[e]--; - 1 != d && c === k && a.splice(d,
            1)
    }

    function da(a, b, c, d) {
        var e = a.aoData[b],
            f, g = function(c, d) {
                for (; c.childNodes.length;) c.removeChild(c.firstChild);
                c.innerHTML = B(a, b, d, "display")
            };
        if ("dom" === c || (!c || "auto" === c) && "dom" === e.src) e._aData = Ia(a, e, d, d === k ? k : e._aData).data;
        else {
            var j = e.anCells;
            if (j)
                if (d !== k) g(j[d], d);
                else {
                    c = 0;
                    for (f = j.length; c < f; c++) g(j[c], c)
                }
        }
        e._aSortData = null;
        e._aFilterData = null;
        g = a.aoColumns;
        if (d !== k) g[d].sType = null;
        else {
            c = 0;
            for (f = g.length; c < f; c++) g[c].sType = null;
            La(a, e)
        }
    }

    function Ia(a, b, c, d) {
        var e = [],
            f = b.firstChild,
            g,
            j, i = 0,
            m, l = a.aoColumns,
            q = a._rowReadObject,
            d = d !== k ? d : q ? {} : [],
            t = function(a, b) {
                if ("string" === typeof a) {
                    var c = a.indexOf("@"); - 1 !== c && (c = a.substring(c + 1), N(a)(d, b.getAttribute(c)))
                }
            },
            G = function(a) {
                if (c === k || c === i) j = l[i], m = h.trim(a.innerHTML), j && j._bAttrSrc ? (N(j.mData._)(d, m), t(j.mData.sort, a), t(j.mData.type, a), t(j.mData.filter, a)) : q ? (j._setter || (j._setter = N(j.mData)), j._setter(d, m)) : d[i] = m;
                i++
            };
        if (f)
            for (; f;) {
                g = f.nodeName.toUpperCase();
                if ("TD" == g || "TH" == g) G(f), e.push(f);
                f = f.nextSibling
            } else {
                e = b.anCells;
                f = 0;
                for (g = e.length; f < g; f++) G(e[f])
            }
        if (b = b.firstChild ? b : b.nTr)(b = b.getAttribute("id")) && N(a.rowId)(d, b);
        return {
            data: d,
            cells: e
        }
    }

    function Ha(a, b, c, d) {
        var e = a.aoData[b],
            f = e._aData,
            g = [],
            j, i, m, l, q;
        if (null === e.nTr) {
            j = c || H.createElement("tr");
            e.nTr = j;
            e.anCells = g;
            j._DT_RowIndex = b;
            La(a, e);
            l = 0;
            for (q = a.aoColumns.length; l < q; l++) {
                m = a.aoColumns[l];
                i = c ? d[l] : H.createElement(m.sCellType);
                i._DT_CellIndex = {
                    row: b,
                    column: l
                };
                g.push(i);
                if ((!c || m.mRender || m.mData !== l) && (!h.isPlainObject(m.mData) || m.mData._ !== l + ".display")) i.innerHTML =
                    B(a, b, l, "display");
                m.sClass && (i.className += " " + m.sClass);
                m.bVisible && !c ? j.appendChild(i) : !m.bVisible && c && i.parentNode.removeChild(i);
                m.fnCreatedCell && m.fnCreatedCell.call(a.oInstance, i, B(a, b, l), f, b, l)
            }
            r(a, "aoRowCreatedCallback", null, [j, f, b, g])
        }
        e.nTr.setAttribute("role", "row")
    }

    function La(a, b) {
        var c = b.nTr,
            d = b._aData;
        if (c) {
            var e = a.rowIdFn(d);
            e && (c.id = e);
            d.DT_RowClass && (e = d.DT_RowClass.split(" "), b.__rowc = b.__rowc ? qa(b.__rowc.concat(e)) : e, h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));
            d.DT_RowAttr && h(c).attr(d.DT_RowAttr);
            d.DT_RowData && h(c).data(d.DT_RowData)
        }
    }

    function kb(a) {
        var b, c, d, e, f, g = a.nTHead,
            j = a.nTFoot,
            i = 0 === h("th, td", g).length,
            m = a.oClasses,
            l = a.aoColumns;
        i && (e = h("<tr/>").appendTo(g));
        b = 0;
        for (c = l.length; b < c; b++) f = l[b], d = h(f.nTh).addClass(f.sClass), i && d.appendTo(e), a.oFeatures.bSort && (d.addClass(f.sSortingClass), !1 !== f.bSortable && (d.attr("tabindex", a.iTabIndex).attr("aria-controls", a.sTableId), Ma(a, f.nTh, b))), f.sTitle != d[0].innerHTML && d.html(f.sTitle), Na(a, "header")(a, d,
            f, m);
        i && ea(a.aoHeader, g);
        h(g).find(">tr").attr("role", "row");
        h(g).find(">tr>th, >tr>td").addClass(m.sHeaderTH);
        h(j).find(">tr>th, >tr>td").addClass(m.sFooterTH);
        if (null !== j) {
            a = a.aoFooter[0];
            b = 0;
            for (c = a.length; b < c; b++) f = l[b], f.nTf = a[b].cell, f.sClass && h(f.nTf).addClass(f.sClass)
        }
    }

    function fa(a, b, c) {
        var d, e, f, g = [],
            j = [],
            i = a.aoColumns.length,
            m;
        if (b) {
            c === k && (c = !1);
            d = 0;
            for (e = b.length; d < e; d++) {
                g[d] = b[d].slice();
                g[d].nTr = b[d].nTr;
                for (f = i - 1; 0 <= f; f--) !a.aoColumns[f].bVisible && !c && g[d].splice(f, 1);
                j.push([])
            }
            d =
                0;
            for (e = g.length; d < e; d++) {
                if (a = g[d].nTr)
                    for (; f = a.firstChild;) a.removeChild(f);
                f = 0;
                for (b = g[d].length; f < b; f++)
                    if (m = i = 1, j[d][f] === k) {
                        a.appendChild(g[d][f].cell);
                        for (j[d][f] = 1; g[d + i] !== k && g[d][f].cell == g[d + i][f].cell;) j[d + i][f] = 1, i++;
                        for (; g[d][f + m] !== k && g[d][f].cell == g[d][f + m].cell;) {
                            for (c = 0; c < i; c++) j[d + c][f + m] = 1;
                            m++
                        }
                        h(g[d][f].cell).attr("rowspan", i).attr("colspan", m)
                    }
            }
        }
    }

    function P(a) {
        var b = r(a, "aoPreDrawCallback", "preDraw", [a]);
        if (-1 !== h.inArray(!1, b)) C(a, !1);
        else {
            var b = [],
                c = 0,
                d = a.asStripeClasses,
                e =
                d.length,
                f = a.oLanguage,
                g = a.iInitDisplayStart,
                j = "ssp" == y(a),
                i = a.aiDisplay;
            a.bDrawing = !0;
            g !== k && -1 !== g && (a._iDisplayStart = j ? g : g >= a.fnRecordsDisplay() ? 0 : g, a.iInitDisplayStart = -1);
            var g = a._iDisplayStart,
                m = a.fnDisplayEnd();
            if (a.bDeferLoading) a.bDeferLoading = !1, a.iDraw++, C(a, !1);
            else if (j) {
                if (!a.bDestroying && !lb(a)) return
            } else a.iDraw++;
            if (0 !== i.length) {
                f = j ? a.aoData.length : m;
                for (j = j ? 0 : g; j < f; j++) {
                    var l = i[j],
                        q = a.aoData[l];
                    null === q.nTr && Ha(a, l);
                    var t = q.nTr;
                    if (0 !== e) {
                        var G = d[c % e];
                        q._sRowStripe != G && (h(t).removeClass(q._sRowStripe).addClass(G),
                            q._sRowStripe = G)
                    }
                    r(a, "aoRowCallback", null, [t, q._aData, c, j, l]);
                    b.push(t);
                    c++
                }
            } else c = f.sZeroRecords, 1 == a.iDraw && "ajax" == y(a) ? c = f.sLoadingRecords : f.sEmptyTable && 0 === a.fnRecordsTotal() && (c = f.sEmptyTable), b[0] = h("<tr/>", {
                "class": e ? d[0] : ""
            }).append(h("<td />", {
                valign: "top",
                colSpan: V(a),
                "class": a.oClasses.sRowEmpty
            }).html(c))[0];
            r(a, "aoHeaderCallback", "header", [h(a.nTHead).children("tr")[0], Ka(a), g, m, i]);
            r(a, "aoFooterCallback", "footer", [h(a.nTFoot).children("tr")[0], Ka(a), g, m, i]);
            d = h(a.nTBody);
            d.children().detach();
            d.append(h(b));
            r(a, "aoDrawCallback", "draw", [a]);
            a.bSorted = !1;
            a.bFiltered = !1;
            a.bDrawing = !1
        }
    }

    function T(a, b) {
        var c = a.oFeatures,
            d = c.bFilter;
        c.bSort && mb(a);
        d ? ga(a, a.oPreviousSearch) : a.aiDisplay = a.aiDisplayMaster.slice();
        !0 !== b && (a._iDisplayStart = 0);
        a._drawHold = b;
        P(a);
        a._drawHold = !1
    }

    function nb(a) {
        var b = a.oClasses,
            c = h(a.nTable),
            c = h("<div/>").insertBefore(c),
            d = a.oFeatures,
            e = h("<div/>", {
                id: a.sTableId + "_wrapper",
                "class": b.sWrapper + (a.nTFoot ? "" : " " + b.sNoFooter)
            });
        a.nHolding = c[0];
        a.nTableWrapper = e[0];
        a.nTableReinsertBefore =
            a.nTable.nextSibling;
        for (var f = a.sDom.split(""), g, j, i, m, l, q, k = 0; k < f.length; k++) {
            g = null;
            j = f[k];
            if ("<" == j) {
                i = h("<div/>")[0];
                m = f[k + 1];
                if ("'" == m || '"' == m) {
                    l = "";
                    for (q = 2; f[k + q] != m;) l += f[k + q], q++;
                    "H" == l ? l = b.sJUIHeader : "F" == l && (l = b.sJUIFooter); - 1 != l.indexOf(".") ? (m = l.split("."), i.id = m[0].substr(1, m[0].length - 1), i.className = m[1]) : "#" == l.charAt(0) ? i.id = l.substr(1, l.length - 1) : i.className = l;
                    k += q
                }
                e.append(i);
                e = h(i)
            } else if (">" == j) e = e.parent();
            else if ("l" == j && d.bPaginate && d.bLengthChange) g = ob(a);
            else if ("f" == j &&
                d.bFilter) g = pb(a);
            else if ("r" == j && d.bProcessing) g = qb(a);
            else if ("t" == j) g = rb(a);
            else if ("i" == j && d.bInfo) g = sb(a);
            else if ("p" == j && d.bPaginate) g = tb(a);
            else if (0 !== n.ext.feature.length) {
                i = n.ext.feature;
                q = 0;
                for (m = i.length; q < m; q++)
                    if (j == i[q].cFeature) {
                        g = i[q].fnInit(a);
                        break
                    }
            }
            g && (i = a.aanFeatures, i[j] || (i[j] = []), i[j].push(g), e.append(g))
        }
        c.replaceWith(e);
        a.nHolding = null
    }

    function ea(a, b) {
        var c = h(b).children("tr"),
            d, e, f, g, j, i, m, l, q, k;
        a.splice(0, a.length);
        f = 0;
        for (i = c.length; f < i; f++) a.push([]);
        f = 0;
        for (i = c.length; f <
            i; f++) {
            d = c[f];
            for (e = d.firstChild; e;) {
                if ("TD" == e.nodeName.toUpperCase() || "TH" == e.nodeName.toUpperCase()) {
                    l = 1 * e.getAttribute("colspan");
                    q = 1 * e.getAttribute("rowspan");
                    l = !l || 0 === l || 1 === l ? 1 : l;
                    q = !q || 0 === q || 1 === q ? 1 : q;
                    g = 0;
                    for (j = a[f]; j[g];) g++;
                    m = g;
                    k = 1 === l ? !0 : !1;
                    for (j = 0; j < l; j++)
                        for (g = 0; g < q; g++) a[f + g][m + j] = {
                            cell: e,
                            unique: k
                        }, a[f + g].nTr = d
                }
                e = e.nextSibling
            }
        }
    }

    function ra(a, b, c) {
        var d = [];
        c || (c = a.aoHeader, b && (c = [], ea(c, b)));
        for (var b = 0, e = c.length; b < e; b++)
            for (var f = 0, g = c[b].length; f < g; f++)
                if (c[b][f].unique && (!d[f] ||
                        !a.bSortCellsTop)) d[f] = c[b][f].cell;
        return d
    }

    function sa(a, b, c) {
        r(a, "aoServerParams", "serverParams", [b]);
        if (b && h.isArray(b)) {
            var d = {},
                e = /(.*?)\[\]$/;
            h.each(b, function(a, b) {
                var c = b.name.match(e);
                c ? (c = c[0], d[c] || (d[c] = []), d[c].push(b.value)) : d[b.name] = b.value
            });
            b = d
        }
        var f, g = a.ajax,
            j = a.oInstance,
            i = function(b) {
                r(a, null, "xhr", [a, b, a.jqXHR]);
                c(b)
            };
        if (h.isPlainObject(g) && g.data) {
            f = g.data;
            var m = "function" === typeof f ? f(b, a) : f,
                b = "function" === typeof f && m ? m : h.extend(!0, b, m);
            delete g.data
        }
        m = {
            data: b,
            success: function(b) {
                var c =
                    b.error || b.sError;
                c && K(a, 0, c);
                a.json = b;
                i(b)
            },
            dataType: "json",
            cache: !1,
            type: a.sServerMethod,
            error: function(b, c) {
                var d = r(a, null, "xhr", [a, null, a.jqXHR]); - 1 === h.inArray(!0, d) && ("parsererror" == c ? K(a, 0, "Invalid JSON response", 1) : 4 === b.readyState && K(a, 0, "Ajax error", 7));
                C(a, !1)
            }
        };
        a.oAjaxData = b;
        r(a, null, "preXhr", [a, b]);
        a.fnServerData ? a.fnServerData.call(j, a.sAjaxSource, h.map(b, function(a, b) {
                return {
                    name: b,
                    value: a
                }
            }), i, a) : a.sAjaxSource || "string" === typeof g ? a.jqXHR = h.ajax(h.extend(m, {
                url: g || a.sAjaxSource
            })) :
            "function" === typeof g ? a.jqXHR = g.call(j, b, i, a) : (a.jqXHR = h.ajax(h.extend(m, g)), g.data = f)
    }

    function lb(a) {
        return a.bAjaxDataGet ? (a.iDraw++, C(a, !0), sa(a, ub(a), function(b) {
            vb(a, b)
        }), !1) : !0
    }

    function ub(a) {
        var b = a.aoColumns,
            c = b.length,
            d = a.oFeatures,
            e = a.oPreviousSearch,
            f = a.aoPreSearchCols,
            g, j = [],
            i, m, l, k = X(a);
        g = a._iDisplayStart;
        i = !1 !== d.bPaginate ? a._iDisplayLength : -1;
        var t = function(a, b) {
            j.push({
                name: a,
                value: b
            })
        };
        t("sEcho", a.iDraw);
        t("iColumns", c);
        t("sColumns", D(b, "sName").join(","));
        t("iDisplayStart", g);
        t("iDisplayLength",
            i);
        var G = {
            draw: a.iDraw,
            columns: [],
            order: [],
            start: g,
            length: i,
            search: {
                value: e.sSearch,
                regex: e.bRegex
            }
        };
        for (g = 0; g < c; g++) m = b[g], l = f[g], i = "function" == typeof m.mData ? "function" : m.mData, G.columns.push({
            data: i,
            name: m.sName,
            searchable: m.bSearchable,
            orderable: m.bSortable,
            search: {
                value: l.sSearch,
                regex: l.bRegex
            }
        }), t("mDataProp_" + g, i), d.bFilter && (t("sSearch_" + g, l.sSearch), t("bRegex_" + g, l.bRegex), t("bSearchable_" + g, m.bSearchable)), d.bSort && t("bSortable_" + g, m.bSortable);
        d.bFilter && (t("sSearch", e.sSearch), t("bRegex",
            e.bRegex));
        d.bSort && (h.each(k, function(a, b) {
            G.order.push({
                column: b.col,
                dir: b.dir
            });
            t("iSortCol_" + a, b.col);
            t("sSortDir_" + a, b.dir)
        }), t("iSortingCols", k.length));
        b = n.ext.legacy.ajax;
        return null === b ? a.sAjaxSource ? j : G : b ? j : G
    }

    function vb(a, b) {
        var c = ta(a, b),
            d = b.sEcho !== k ? b.sEcho : b.draw,
            e = b.iTotalRecords !== k ? b.iTotalRecords : b.recordsTotal,
            f = b.iTotalDisplayRecords !== k ? b.iTotalDisplayRecords : b.recordsFiltered;
        if (d) {
            if (1 * d < a.iDraw) return;
            a.iDraw = 1 * d
        }
        oa(a);
        a._iRecordsTotal = parseInt(e, 10);
        a._iRecordsDisplay = parseInt(f,
            10);
        d = 0;
        for (e = c.length; d < e; d++) O(a, c[d]);
        a.aiDisplay = a.aiDisplayMaster.slice();
        a.bAjaxDataGet = !1;
        P(a);
        a._bInitComplete || ua(a, b);
        a.bAjaxDataGet = !0;
        C(a, !1)
    }

    function ta(a, b) {
        var c = h.isPlainObject(a.ajax) && a.ajax.dataSrc !== k ? a.ajax.dataSrc : a.sAjaxDataProp;
        return "data" === c ? b.aaData || b[c] : "" !== c ? S(c)(b) : b
    }

    function pb(a) {
        var b = a.oClasses,
            c = a.sTableId,
            d = a.oLanguage,
            e = a.oPreviousSearch,
            f = a.aanFeatures,
            g = '<input type="search" class="' + b.sFilterInput + '"/>',
            j = d.sSearch,
            j = j.match(/_INPUT_/) ? j.replace("_INPUT_",
                g) : j + g,
            b = h("<div/>", {
                id: !f.f ? c + "_filter" : null,
                "class": b.sFilter
            }).append(h("<label/>").append(j)),
            f = function() {
                var b = !this.value ? "" : this.value;
                b != e.sSearch && (ga(a, {
                    sSearch: b,
                    bRegex: e.bRegex,
                    bSmart: e.bSmart,
                    bCaseInsensitive: e.bCaseInsensitive
                }), a._iDisplayStart = 0, P(a))
            },
            g = null !== a.searchDelay ? a.searchDelay : "ssp" === y(a) ? 400 : 0,
            i = h("input", b).val(e.sSearch).attr("placeholder", d.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", g ? Oa(f, g) : f).on("keypress.DT", function(a) {
                if (13 == a.keyCode) return !1
            }).attr("aria-controls",
                c);
        h(a.nTable).on("search.dt.DT", function(b, c) {
            if (a === c) try {
                i[0] !== H.activeElement && i.val(e.sSearch)
            } catch (d) {}
        });
        return b[0]
    }

    function ga(a, b, c) {
        var d = a.oPreviousSearch,
            e = a.aoPreSearchCols,
            f = function(a) {
                d.sSearch = a.sSearch;
                d.bRegex = a.bRegex;
                d.bSmart = a.bSmart;
                d.bCaseInsensitive = a.bCaseInsensitive
            };
        Ga(a);
        if ("ssp" != y(a)) {
            wb(a, b.sSearch, c, b.bEscapeRegex !== k ? !b.bEscapeRegex : b.bRegex, b.bSmart, b.bCaseInsensitive);
            f(b);
            for (b = 0; b < e.length; b++) xb(a, e[b].sSearch, b, e[b].bEscapeRegex !== k ? !e[b].bEscapeRegex : e[b].bRegex,
                e[b].bSmart, e[b].bCaseInsensitive);
            yb(a)
        } else f(b);
        a.bFiltered = !0;
        r(a, null, "search", [a])
    }

    function yb(a) {
        for (var b = n.ext.search, c = a.aiDisplay, d, e, f = 0, g = b.length; f < g; f++) {
            for (var j = [], i = 0, m = c.length; i < m; i++) e = c[i], d = a.aoData[e], b[f](a, d._aFilterData, e, d._aData, i) && j.push(e);
            c.length = 0;
            h.merge(c, j)
        }
    }

    function xb(a, b, c, d, e, f) {
        if ("" !== b) {
            for (var g = [], j = a.aiDisplay, d = Pa(b, d, e, f), e = 0; e < j.length; e++) b = a.aoData[j[e]]._aFilterData[c], d.test(b) && g.push(j[e]);
            a.aiDisplay = g
        }
    }

    function wb(a, b, c, d, e, f) {
        var d = Pa(b,
                d, e, f),
            f = a.oPreviousSearch.sSearch,
            g = a.aiDisplayMaster,
            j, e = [];
        0 !== n.ext.search.length && (c = !0);
        j = zb(a);
        if (0 >= b.length) a.aiDisplay = g.slice();
        else {
            if (j || c || f.length > b.length || 0 !== b.indexOf(f) || a.bSorted) a.aiDisplay = g.slice();
            b = a.aiDisplay;
            for (c = 0; c < b.length; c++) d.test(a.aoData[b[c]]._sFilterRow) && e.push(b[c]);
            a.aiDisplay = e
        }
    }

    function Pa(a, b, c, d) {
        a = b ? a : Qa(a);
        c && (a = "^(?=.*?" + h.map(a.match(/"[^"]+"|[^ ]+/g) || [""], function(a) {
            if ('"' === a.charAt(0)) var b = a.match(/^"(.*)"$/),
                a = b ? b[1] : a;
            return a.replace('"',
                "")
        }).join(")(?=.*?") + ").*$");
        return RegExp(a, d ? "i" : "")
    }

    function zb(a) {
        var b = a.aoColumns,
            c, d, e, f, g, j, i, h, l = n.ext.type.search;
        c = !1;
        d = 0;
        for (f = a.aoData.length; d < f; d++)
            if (h = a.aoData[d], !h._aFilterData) {
                j = [];
                e = 0;
                for (g = b.length; e < g; e++) c = b[e], c.bSearchable ? (i = B(a, d, e, "filter"), l[c.sType] && (i = l[c.sType](i)), null === i && (i = ""), "string" !== typeof i && i.toString && (i = i.toString())) : i = "", i.indexOf && -1 !== i.indexOf("&") && (va.innerHTML = i, i = Wb ? va.textContent : va.innerText), i.replace && (i = i.replace(/[\r\n]/g, "")), j.push(i);
                h._aFilterData = j;
                h._sFilterRow = j.join("  ");
                c = !0
            }
        return c
    }

    function Ab(a) {
        return {
            search: a.sSearch,
            smart: a.bSmart,
            regex: a.bRegex,
            caseInsensitive: a.bCaseInsensitive
        }
    }

    function Bb(a) {
        return {
            sSearch: a.search,
            bSmart: a.smart,
            bRegex: a.regex,
            bCaseInsensitive: a.caseInsensitive
        }
    }

    function sb(a) {
        var b = a.sTableId,
            c = a.aanFeatures.i,
            d = h("<div/>", {
                "class": a.oClasses.sInfo,
                id: !c ? b + "_info" : null
            });
        c || (a.aoDrawCallback.push({
            fn: Cb,
            sName: "information"
        }), d.attr("role", "status").attr("aria-live", "polite"), h(a.nTable).attr("aria-describedby",
            b + "_info"));
        return d[0]
    }

    function Cb(a) {
        var b = a.aanFeatures.i;
        if (0 !== b.length) {
            var c = a.oLanguage,
                d = a._iDisplayStart + 1,
                e = a.fnDisplayEnd(),
                f = a.fnRecordsTotal(),
                g = a.fnRecordsDisplay(),
                j = g ? c.sInfo : c.sInfoEmpty;
            g !== f && (j += " " + c.sInfoFiltered);
            j += c.sInfoPostFix;
            j = Db(a, j);
            c = c.fnInfoCallback;
            null !== c && (j = c.call(a.oInstance, a, d, e, f, g, j));
            h(b).html(j)
        }
    }

    function Db(a, b) {
        var c = a.fnFormatNumber,
            d = a._iDisplayStart + 1,
            e = a._iDisplayLength,
            f = a.fnRecordsDisplay(),
            g = -1 === e;
        return b.replace(/_START_/g, c.call(a, d)).replace(/_END_/g,
            c.call(a, a.fnDisplayEnd())).replace(/_MAX_/g, c.call(a, a.fnRecordsTotal())).replace(/_TOTAL_/g, c.call(a, f)).replace(/_PAGE_/g, c.call(a, g ? 1 : Math.ceil(d / e))).replace(/_PAGES_/g, c.call(a, g ? 1 : Math.ceil(f / e)))
    }

    function ha(a) {
        var b, c, d = a.iInitDisplayStart,
            e = a.aoColumns,
            f;
        c = a.oFeatures;
        var g = a.bDeferLoading;
        if (a.bInitialised) {
            nb(a);
            kb(a);
            fa(a, a.aoHeader);
            fa(a, a.aoFooter);
            C(a, !0);
            c.bAutoWidth && Fa(a);
            b = 0;
            for (c = e.length; b < c; b++) f = e[b], f.sWidth && (f.nTh.style.width = v(f.sWidth));
            r(a, null, "preInit", [a]);
            T(a);
            e =
                y(a);
            if ("ssp" != e || g) "ajax" == e ? sa(a, [], function(c) {
                var f = ta(a, c);
                for (b = 0; b < f.length; b++) O(a, f[b]);
                a.iInitDisplayStart = d;
                T(a);
                C(a, !1);
                ua(a, c)
            }, a) : (C(a, !1), ua(a))
        } else setTimeout(function() {
            ha(a)
        }, 200)
    }

    function ua(a, b) {
        a._bInitComplete = !0;
        (b || a.oInit.aaData) && $(a);
        r(a, null, "plugin-init", [a, b]);
        r(a, "aoInitComplete", "init", [a, b])
    }

    function Ra(a, b) {
        var c = parseInt(b, 10);
        a._iDisplayLength = c;
        Sa(a);
        r(a, null, "length", [a, c])
    }

    function ob(a) {
        for (var b = a.oClasses, c = a.sTableId, d = a.aLengthMenu, e = h.isArray(d[0]), f =
                e ? d[0] : d, d = e ? d[1] : d, e = h("<select/>", {
                    name: c + "_length",
                    "aria-controls": c,
                    "class": b.sLengthSelect
                }), g = 0, j = f.length; g < j; g++) e[0][g] = new Option("number" === typeof d[g] ? a.fnFormatNumber(d[g]) : d[g], f[g]);
        var i = h("<div><label/></div>").addClass(b.sLength);
        a.aanFeatures.l || (i[0].id = c + "_length");
        i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_", e[0].outerHTML));
        h("select", i).val(a._iDisplayLength).on("change.DT", function() {
            Ra(a, h(this).val());
            P(a)
        });
        h(a.nTable).on("length.dt.DT", function(b, c, d) {
            a ===
                c && h("select", i).val(d)
        });
        return i[0]
    }

    function tb(a) {
        var b = a.sPaginationType,
            c = n.ext.pager[b],
            d = "function" === typeof c,
            e = function(a) {
                P(a)
            },
            b = h("<div/>").addClass(a.oClasses.sPaging + b)[0],
            f = a.aanFeatures;
        d || c.fnInit(a, b, e);
        f.p || (b.id = a.sTableId + "_paginate", a.aoDrawCallback.push({
            fn: function(a) {
                if (d) {
                    var b = a._iDisplayStart,
                        i = a._iDisplayLength,
                        h = a.fnRecordsDisplay(),
                        l = -1 === i,
                        b = l ? 0 : Math.ceil(b / i),
                        i = l ? 1 : Math.ceil(h / i),
                        h = c(b, i),
                        k, l = 0;
                    for (k = f.p.length; l < k; l++) Na(a, "pageButton")(a, f.p[l], l, h, b, i)
                } else c.fnUpdate(a,
                    e)
            },
            sName: "pagination"
        }));
        return b
    }

    function Ta(a, b, c) {
        var d = a._iDisplayStart,
            e = a._iDisplayLength,
            f = a.fnRecordsDisplay();
        0 === f || -1 === e ? d = 0 : "number" === typeof b ? (d = b * e, d > f && (d = 0)) : "first" == b ? d = 0 : "previous" == b ? (d = 0 <= e ? d - e : 0, 0 > d && (d = 0)) : "next" == b ? d + e < f && (d += e) : "last" == b ? d = Math.floor((f - 1) / e) * e : K(a, 0, "Unknown paging action: " + b, 5);
        b = a._iDisplayStart !== d;
        a._iDisplayStart = d;
        b && (r(a, null, "page", [a]), c && P(a));
        return b
    }

    function qb(a) {
        return h("<div/>", {
            id: !a.aanFeatures.r ? a.sTableId + "_processing" : null,
            "class": a.oClasses.sProcessing
        }).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]
    }

    function C(a, b) {
        a.oFeatures.bProcessing && h(a.aanFeatures.r).css("display", b ? "block" : "none");
        r(a, null, "processing", [a, b])
    }

    function rb(a) {
        var b = h(a.nTable);
        b.attr("role", "grid");
        var c = a.oScroll;
        if ("" === c.sX && "" === c.sY) return a.nTable;
        var d = c.sX,
            e = c.sY,
            f = a.oClasses,
            g = b.children("caption"),
            j = g.length ? g[0]._captionSide : null,
            i = h(b[0].cloneNode(!1)),
            m = h(b[0].cloneNode(!1)),
            l = b.children("tfoot");
        l.length || (l = null);
        i = h("<div/>", {
            "class": f.sScrollWrapper
        }).append(h("<div/>", {
            "class": f.sScrollHead
        }).css({
            overflow: "hidden",
            position: "relative",
            border: 0,
            width: d ? !d ? null : v(d) : "100%"
        }).append(h("<div/>", {
            "class": f.sScrollHeadInner
        }).css({
            "box-sizing": "content-box",
            width: c.sXInner || "100%"
        }).append(i.removeAttr("id").css("margin-left", 0).append("top" === j ? g : null).append(b.children("thead"))))).append(h("<div/>", {
            "class": f.sScrollBody
        }).css({
            position: "relative",
            overflow: "auto",
            width: !d ? null : v(d)
        }).append(b));
        l && i.append(h("<div/>", {
            "class": f.sScrollFoot
        }).css({
            overflow: "hidden",
            border: 0,
            width: d ? !d ? null : v(d) : "100%"
        }).append(h("<div/>", {
            "class": f.sScrollFootInner
        }).append(m.removeAttr("id").css("margin-left", 0).append("bottom" === j ? g : null).append(b.children("tfoot")))));
        var b = i.children(),
            k = b[0],
            f = b[1],
            t = l ? b[2] : null;
        if (d) h(f).on("scroll.DT", function() {
            var a = this.scrollLeft;
            k.scrollLeft = a;
            l && (t.scrollLeft = a)
        });
        h(f).css(e && c.bCollapse ? "max-height" : "height", e);
        a.nScrollHead = k;
        a.nScrollBody = f;
        a.nScrollFoot = t;
        a.aoDrawCallback.push({
            fn: la,
            sName: "scrolling"
        });
        return i[0]
    }

    function la(a) {
        var b = a.oScroll,
            c = b.sX,
            d = b.sXInner,
            e = b.sY,
            b = b.iBarWidth,
            f = h(a.nScrollHead),
            g = f[0].style,
            j = f.children("div"),
            i = j[0].style,
            m = j.children("table"),
            j = a.nScrollBody,
            l = h(j),
            q = j.style,
            t = h(a.nScrollFoot).children("div"),
            n = t.children("table"),
            o = h(a.nTHead),
            p = h(a.nTable),
            s = p[0],
            r = s.style,
            u = a.nTFoot ? h(a.nTFoot) : null,
            x = a.oBrowser,
            U = x.bScrollOversize,
            Xb = D(a.aoColumns, "nTh"),
            Q, L, R, w, Ua = [],
            y = [],
            z = [],
            A = [],
            B, C = function(a) {
                a = a.style;
                a.paddingTop = "0";
                a.paddingBottom = "0";
                a.borderTopWidth = "0";
                a.borderBottomWidth = "0";
                a.height = 0
            };
        L = j.scrollHeight > j.clientHeight;
        if (a.scrollBarVis !==
            L && a.scrollBarVis !== k) a.scrollBarVis = L, $(a);
        else {
            a.scrollBarVis = L;
            p.children("thead, tfoot").remove();
            u && (R = u.clone().prependTo(p), Q = u.find("tr"), R = R.find("tr"));
            w = o.clone().prependTo(p);
            o = o.find("tr");
            L = w.find("tr");
            w.find("th, td").removeAttr("tabindex");
            c || (q.width = "100%", f[0].style.width = "100%");
            h.each(ra(a, w), function(b, c) {
                B = aa(a, b);
                c.style.width = a.aoColumns[B].sWidth
            });
            u && I(function(a) {
                a.style.width = ""
            }, R);
            f = p.outerWidth();
            if ("" === c) {
                r.width = "100%";
                if (U && (p.find("tbody").height() > j.offsetHeight ||
                        "scroll" == l.css("overflow-y"))) r.width = v(p.outerWidth() - b);
                f = p.outerWidth()
            } else "" !== d && (r.width = v(d), f = p.outerWidth());
            I(C, L);
            I(function(a) {
                z.push(a.innerHTML);
                Ua.push(v(h(a).css("width")))
            }, L);
            I(function(a, b) {
                if (h.inArray(a, Xb) !== -1) a.style.width = Ua[b]
            }, o);
            h(L).height(0);
            u && (I(C, R), I(function(a) {
                A.push(a.innerHTML);
                y.push(v(h(a).css("width")))
            }, R), I(function(a, b) {
                a.style.width = y[b]
            }, Q), h(R).height(0));
            I(function(a, b) {
                a.innerHTML = '<div class="dataTables_sizing">' + z[b] + "</div>";
                a.childNodes[0].style.height =
                    "0";
                a.childNodes[0].style.overflow = "hidden";
                a.style.width = Ua[b]
            }, L);
            u && I(function(a, b) {
                a.innerHTML = '<div class="dataTables_sizing">' + A[b] + "</div>";
                a.childNodes[0].style.height = "0";
                a.childNodes[0].style.overflow = "hidden";
                a.style.width = y[b]
            }, R);
            if (p.outerWidth() < f) {
                Q = j.scrollHeight > j.offsetHeight || "scroll" == l.css("overflow-y") ? f + b : f;
                if (U && (j.scrollHeight > j.offsetHeight || "scroll" == l.css("overflow-y"))) r.width = v(Q - b);
                ("" === c || "" !== d) && K(a, 1, "Possible column misalignment", 6)
            } else Q = "100%";
            q.width = v(Q);
            g.width = v(Q);
            u && (a.nScrollFoot.style.width = v(Q));
            !e && U && (q.height = v(s.offsetHeight + b));
            c = p.outerWidth();
            m[0].style.width = v(c);
            i.width = v(c);
            d = p.height() > j.clientHeight || "scroll" == l.css("overflow-y");
            e = "padding" + (x.bScrollbarLeft ? "Left" : "Right");
            i[e] = d ? b + "px" : "0px";
            u && (n[0].style.width = v(c), t[0].style.width = v(c), t[0].style[e] = d ? b + "px" : "0px");
            p.children("colgroup").insertBefore(p.children("thead"));
            l.scroll();
            if ((a.bSorted || a.bFiltered) && !a._drawHold) j.scrollTop = 0
        }
    }

    function I(a, b, c) {
        for (var d = 0, e = 0,
                f = b.length, g, j; e < f;) {
            g = b[e].firstChild;
            for (j = c ? c[e].firstChild : null; g;) 1 === g.nodeType && (c ? a(g, j, d) : a(g, d), d++), g = g.nextSibling, j = c ? j.nextSibling : null;
            e++
        }
    }

    function Fa(a) {
        var b = a.nTable,
            c = a.aoColumns,
            d = a.oScroll,
            e = d.sY,
            f = d.sX,
            g = d.sXInner,
            j = c.length,
            i = ma(a, "bVisible"),
            m = h("th", a.nTHead),
            l = b.getAttribute("width"),
            k = b.parentNode,
            t = !1,
            n, o, p = a.oBrowser,
            d = p.bScrollOversize;
        (n = b.style.width) && -1 !== n.indexOf("%") && (l = n);
        for (n = 0; n < i.length; n++) o = c[i[n]], null !== o.sWidth && (o.sWidth = Eb(o.sWidthOrig, k), t = !0);
        if (d ||
            !t && !f && !e && j == V(a) && j == m.length)
            for (n = 0; n < j; n++) i = aa(a, n), null !== i && (c[i].sWidth = v(m.eq(n).width()));
        else {
            j = h(b).clone().css("visibility", "hidden").removeAttr("id");
            j.find("tbody tr").remove();
            var s = h("<tr/>").appendTo(j.find("tbody"));
            j.find("thead, tfoot").remove();
            j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());
            j.find("tfoot th, tfoot td").css("width", "");
            m = ra(a, j.find("thead")[0]);
            for (n = 0; n < i.length; n++) o = c[i[n]], m[n].style.width = null !== o.sWidthOrig && "" !== o.sWidthOrig ? v(o.sWidthOrig) :
                "", o.sWidthOrig && f && h(m[n]).append(h("<div/>").css({
                    width: o.sWidthOrig,
                    margin: 0,
                    padding: 0,
                    border: 0,
                    height: 1
                }));
            if (a.aoData.length)
                for (n = 0; n < i.length; n++) t = i[n], o = c[t], h(Fb(a, t)).clone(!1).append(o.sContentPadding).appendTo(s);
            h("[name]", j).removeAttr("name");
            o = h("<div/>").css(f || e ? {
                position: "absolute",
                top: 0,
                left: 0,
                height: 1,
                right: 0,
                overflow: "hidden"
            } : {}).append(j).appendTo(k);
            f && g ? j.width(g) : f ? (j.css("width", "auto"), j.removeAttr("width"), j.width() < k.clientWidth && l && j.width(k.clientWidth)) : e ? j.width(k.clientWidth) :
                l && j.width(l);
            for (n = e = 0; n < i.length; n++) k = h(m[n]), g = k.outerWidth() - k.width(), k = p.bBounding ? Math.ceil(m[n].getBoundingClientRect().width) : k.outerWidth(), e += k, c[i[n]].sWidth = v(k - g);
            b.style.width = v(e);
            o.remove()
        }
        l && (b.style.width = v(l));
        if ((l || f) && !a._reszEvt) b = function() {
            h(E).on("resize.DT-" + a.sInstance, Oa(function() {
                $(a)
            }))
        }, d ? setTimeout(b, 1E3) : b(), a._reszEvt = !0
    }

    function Eb(a, b) {
        if (!a) return 0;
        var c = h("<div/>").css("width", v(a)).appendTo(b || H.body),
            d = c[0].offsetWidth;
        c.remove();
        return d
    }

    function Fb(a,
        b) {
        var c = Gb(a, b);
        if (0 > c) return null;
        var d = a.aoData[c];
        return !d.nTr ? h("<td/>").html(B(a, c, b, "display"))[0] : d.anCells[b]
    }

    function Gb(a, b) {
        for (var c, d = -1, e = -1, f = 0, g = a.aoData.length; f < g; f++) c = B(a, f, b, "display") + "", c = c.replace(Yb, ""), c = c.replace(/&nbsp;/g, " "), c.length > d && (d = c.length, e = f);
        return e
    }

    function v(a) {
        return null === a ? "0px" : "number" == typeof a ? 0 > a ? "0px" : a + "px" : a.match(/\d$/) ? a + "px" : a
    }

    function X(a) {
        var b, c, d = [],
            e = a.aoColumns,
            f, g, j, i;
        b = a.aaSortingFixed;
        c = h.isPlainObject(b);
        var m = [];
        f = function(a) {
            a.length &&
                !h.isArray(a[0]) ? m.push(a) : h.merge(m, a)
        };
        h.isArray(b) && f(b);
        c && b.pre && f(b.pre);
        f(a.aaSorting);
        c && b.post && f(b.post);
        for (a = 0; a < m.length; a++) {
            i = m[a][0];
            f = e[i].aDataSort;
            b = 0;
            for (c = f.length; b < c; b++) g = f[b], j = e[g].sType || "string", m[a]._idx === k && (m[a]._idx = h.inArray(m[a][1], e[g].asSorting)), d.push({
                src: i,
                col: g,
                dir: m[a][1],
                index: m[a]._idx,
                type: j,
                formatter: n.ext.type.order[j + "-pre"]
            })
        }
        return d
    }

    function mb(a) {
        var b, c, d = [],
            e = n.ext.type.order,
            f = a.aoData,
            g = 0,
            j, i = a.aiDisplayMaster,
            h;
        Ga(a);
        h = X(a);
        b = 0;
        for (c = h.length; b <
            c; b++) j = h[b], j.formatter && g++, Hb(a, j.col);
        if ("ssp" != y(a) && 0 !== h.length) {
            b = 0;
            for (c = i.length; b < c; b++) d[i[b]] = b;
            g === h.length ? i.sort(function(a, b) {
                var c, e, g, j, i = h.length,
                    k = f[a]._aSortData,
                    n = f[b]._aSortData;
                for (g = 0; g < i; g++)
                    if (j = h[g], c = k[j.col], e = n[j.col], c = c < e ? -1 : c > e ? 1 : 0, 0 !== c) return "asc" === j.dir ? c : -c;
                c = d[a];
                e = d[b];
                return c < e ? -1 : c > e ? 1 : 0
            }) : i.sort(function(a, b) {
                var c, g, j, i, k = h.length,
                    n = f[a]._aSortData,
                    o = f[b]._aSortData;
                for (j = 0; j < k; j++)
                    if (i = h[j], c = n[i.col], g = o[i.col], i = e[i.type + "-" + i.dir] || e["string-" + i.dir],
                        c = i(c, g), 0 !== c) return c;
                c = d[a];
                g = d[b];
                return c < g ? -1 : c > g ? 1 : 0
            })
        }
        a.bSorted = !0
    }

    function Ib(a) {
        for (var b, c, d = a.aoColumns, e = X(a), a = a.oLanguage.oAria, f = 0, g = d.length; f < g; f++) {
            c = d[f];
            var j = c.asSorting;
            b = c.sTitle.replace(/<.*?>/g, "");
            var i = c.nTh;
            i.removeAttribute("aria-sort");
            c.bSortable && (0 < e.length && e[0].col == f ? (i.setAttribute("aria-sort", "asc" == e[0].dir ? "ascending" : "descending"), c = j[e[0].index + 1] || j[0]) : c = j[0], b += "asc" === c ? a.sSortAscending : a.sSortDescending);
            i.setAttribute("aria-label", b)
        }
    }

    function Va(a,
        b, c, d) {
        var e = a.aaSorting,
            f = a.aoColumns[b].asSorting,
            g = function(a, b) {
                var c = a._idx;
                c === k && (c = h.inArray(a[1], f));
                return c + 1 < f.length ? c + 1 : b ? null : 0
            };
        "number" === typeof e[0] && (e = a.aaSorting = [e]);
        c && a.oFeatures.bSortMulti ? (c = h.inArray(b, D(e, "0")), -1 !== c ? (b = g(e[c], !0), null === b && 1 === e.length && (b = 0), null === b ? e.splice(c, 1) : (e[c][1] = f[b], e[c]._idx = b)) : (e.push([b, f[0], 0]), e[e.length - 1]._idx = 0)) : e.length && e[0][0] == b ? (b = g(e[0]), e.length = 1, e[0][1] = f[b], e[0]._idx = b) : (e.length = 0, e.push([b, f[0]]), e[0]._idx = 0);
        T(a);
        "function" ==
        typeof d && d(a)
    }

    function Ma(a, b, c, d) {
        var e = a.aoColumns[c];
        Wa(b, {}, function(b) {
            !1 !== e.bSortable && (a.oFeatures.bProcessing ? (C(a, !0), setTimeout(function() {
                Va(a, c, b.shiftKey, d);
                "ssp" !== y(a) && C(a, !1)
            }, 0)) : Va(a, c, b.shiftKey, d))
        })
    }

    function wa(a) {
        var b = a.aLastSort,
            c = a.oClasses.sSortColumn,
            d = X(a),
            e = a.oFeatures,
            f, g;
        if (e.bSort && e.bSortClasses) {
            e = 0;
            for (f = b.length; e < f; e++) g = b[e].src, h(D(a.aoData, "anCells", g)).removeClass(c + (2 > e ? e + 1 : 3));
            e = 0;
            for (f = d.length; e < f; e++) g = d[e].src, h(D(a.aoData, "anCells", g)).addClass(c +
                (2 > e ? e + 1 : 3))
        }
        a.aLastSort = d
    }

    function Hb(a, b) {
        var c = a.aoColumns[b],
            d = n.ext.order[c.sSortDataType],
            e;
        d && (e = d.call(a.oInstance, a, b, ba(a, b)));
        for (var f, g = n.ext.type.order[c.sType + "-pre"], j = 0, i = a.aoData.length; j < i; j++)
            if (c = a.aoData[j], c._aSortData || (c._aSortData = []), !c._aSortData[b] || d) f = d ? e[j] : B(a, j, b, "sort"), c._aSortData[b] = g ? g(f) : f
    }

    function xa(a) {
        if (a.oFeatures.bStateSave && !a.bDestroying) {
            var b = {
                time: +new Date,
                start: a._iDisplayStart,
                length: a._iDisplayLength,
                order: h.extend(!0, [], a.aaSorting),
                search: Ab(a.oPreviousSearch),
                columns: h.map(a.aoColumns, function(b, d) {
                    return {
                        visible: b.bVisible,
                        search: Ab(a.aoPreSearchCols[d])
                    }
                })
            };
            r(a, "aoStateSaveParams", "stateSaveParams", [a, b]);
            a.oSavedState = b;
            a.fnStateSaveCallback.call(a.oInstance, a, b)
        }
    }

    function Jb(a, b, c) {
        var d, e, f = a.aoColumns,
            b = function(b) {
                if (b && b.time) {
                    var g = r(a, "aoStateLoadParams", "stateLoadParams", [a, b]);
                    if (-1 === h.inArray(!1, g) && (g = a.iStateDuration, !(0 < g && b.time < +new Date - 1E3 * g) && !(b.columns && f.length !== b.columns.length))) {
                        a.oLoadedState = h.extend(!0, {}, b);
                        b.start !== k &&
                            (a._iDisplayStart = b.start, a.iInitDisplayStart = b.start);
                        b.length !== k && (a._iDisplayLength = b.length);
                        b.order !== k && (a.aaSorting = [], h.each(b.order, function(b, c) {
                            a.aaSorting.push(c[0] >= f.length ? [0, c[1]] : c)
                        }));
                        b.search !== k && h.extend(a.oPreviousSearch, Bb(b.search));
                        if (b.columns) {
                            d = 0;
                            for (e = b.columns.length; d < e; d++) g = b.columns[d], g.visible !== k && (f[d].bVisible = g.visible), g.search !== k && h.extend(a.aoPreSearchCols[d], Bb(g.search))
                        }
                        r(a, "aoStateLoaded", "stateLoaded", [a, b])
                    }
                }
                c()
            };
        if (a.oFeatures.bStateSave) {
            var g =
                a.fnStateLoadCallback.call(a.oInstance, a, b);
            g !== k && b(g)
        } else c()
    }

    function ya(a) {
        var b = n.settings,
            a = h.inArray(a, D(b, "nTable"));
        return -1 !== a ? b[a] : null
    }

    function K(a, b, c, d) {
        c = "DataTables warning: " + (a ? "table id=" + a.sTableId + " - " : "") + c;
        d && (c += ". For more information about this error, please see http://datatables.net/tn/" + d);
        if (b) E.console && console.log && console.log(c);
        else if (b = n.ext, b = b.sErrMode || b.errMode, a && r(a, null, "error", [a, d, c]), "alert" == b) alert(c);
        else {
            if ("throw" == b) throw Error(c);
            "function" ==
            typeof b && b(a, d, c)
        }
    }

    function F(a, b, c, d) {
        h.isArray(c) ? h.each(c, function(c, d) {
            h.isArray(d) ? F(a, b, d[0], d[1]) : F(a, b, d)
        }) : (d === k && (d = c), b[c] !== k && (a[d] = b[c]))
    }

    function Xa(a, b, c) {
        var d, e;
        for (e in b) b.hasOwnProperty(e) && (d = b[e], h.isPlainObject(d) ? (h.isPlainObject(a[e]) || (a[e] = {}), h.extend(!0, a[e], d)) : a[e] = c && "data" !== e && "aaData" !== e && h.isArray(d) ? d.slice() : d);
        return a
    }

    function Wa(a, b, c) {
        h(a).on("click.DT", b, function(b) {
            h(a).blur();
            c(b)
        }).on("keypress.DT", b, function(a) {
            13 === a.which && (a.preventDefault(), c(a))
        }).on("selectstart.DT",
            function() {
                return !1
            })
    }

    function z(a, b, c, d) {
        c && a[b].push({
            fn: c,
            sName: d
        })
    }

    function r(a, b, c, d) {
        var e = [];
        b && (e = h.map(a[b].slice().reverse(), function(b) {
            return b.fn.apply(a.oInstance, d)
        }));
        null !== c && (b = h.Event(c + ".dt"), h(a.nTable).trigger(b, d), e.push(b.result));
        return e
    }

    function Sa(a) {
        var b = a._iDisplayStart,
            c = a.fnDisplayEnd(),
            d = a._iDisplayLength;
        b >= c && (b = c - d);
        b -= b % d;
        if (-1 === d || 0 > b) b = 0;
        a._iDisplayStart = b
    }

    function Na(a, b) {
        var c = a.renderer,
            d = n.ext.renderer[b];
        return h.isPlainObject(c) && c[b] ? d[c[b]] || d._ : "string" ===
            typeof c ? d[c] || d._ : d._
    }

    function y(a) {
        return a.oFeatures.bServerSide ? "ssp" : a.ajax || a.sAjaxSource ? "ajax" : "dom"
    }

    function ia(a, b) {
        var c = [],
            c = Kb.numbers_length,
            d = Math.floor(c / 2);
        b <= c ? c = Y(0, b) : a <= d ? (c = Y(0, c - 2), c.push("ellipsis"), c.push(b - 1)) : (a >= b - 1 - d ? c = Y(b - (c - 2), b) : (c = Y(a - d + 2, a + d - 1), c.push("ellipsis"), c.push(b - 1)), c.splice(0, 0, "ellipsis"), c.splice(0, 0, 0));
        c.DT_el = "span";
        return c
    }

    function Da(a) {
        h.each({
            num: function(b) {
                return za(b, a)
            },
            "num-fmt": function(b) {
                return za(b, a, Ya)
            },
            "html-num": function(b) {
                return za(b,
                    a, Aa)
            },
            "html-num-fmt": function(b) {
                return za(b, a, Aa, Ya)
            }
        }, function(b, c) {
            x.type.order[b + a + "-pre"] = c;
            b.match(/^html\-/) && (x.type.search[b + a] = x.type.search.html)
        })
    }

    function Lb(a) {
        return function() {
            var b = [ya(this[n.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));
            return n.ext.internal[a].apply(this, b)
        }
    }
    var n = function(a) {
            this.$ = function(a, b) {
                return this.api(!0).$(a, b)
            };
            this._ = function(a, b) {
                return this.api(!0).rows(a, b).data()
            };
            this.api = function(a) {
                return a ? new s(ya(this[x.iApiIndex])) : new s(this)
            };
            this.fnAddData = function(a, b) {
                var c = this.api(!0),
                    d = h.isArray(a) && (h.isArray(a[0]) || h.isPlainObject(a[0])) ? c.rows.add(a) : c.row.add(a);
                (b === k || b) && c.draw();
                return d.flatten().toArray()
            };
            this.fnAdjustColumnSizing = function(a) {
                var b = this.api(!0).columns.adjust(),
                    c = b.settings()[0],
                    d = c.oScroll;
                a === k || a ? b.draw(!1) : ("" !== d.sX || "" !== d.sY) && la(c)
            };
            this.fnClearTable = function(a) {
                var b = this.api(!0).clear();
                (a === k || a) && b.draw()
            };
            this.fnClose = function(a) {
                this.api(!0).row(a).child.hide()
            };
            this.fnDeleteRow = function(a,
                b, c) {
                var d = this.api(!0),
                    a = d.rows(a),
                    e = a.settings()[0],
                    h = e.aoData[a[0][0]];
                a.remove();
                b && b.call(this, e, h);
                (c === k || c) && d.draw();
                return h
            };
            this.fnDestroy = function(a) {
                this.api(!0).destroy(a)
            };
            this.fnDraw = function(a) {
                this.api(!0).draw(a)
            };
            this.fnFilter = function(a, b, c, d, e, h) {
                e = this.api(!0);
                null === b || b === k ? e.search(a, c, d, h) : e.column(b).search(a, c, d, h);
                e.draw()
            };
            this.fnGetData = function(a, b) {
                var c = this.api(!0);
                if (a !== k) {
                    var d = a.nodeName ? a.nodeName.toLowerCase() : "";
                    return b !== k || "td" == d || "th" == d ? c.cell(a, b).data() :
                        c.row(a).data() || null
                }
                return c.data().toArray()
            };
            this.fnGetNodes = function(a) {
                var b = this.api(!0);
                return a !== k ? b.row(a).node() : b.rows().nodes().flatten().toArray()
            };
            this.fnGetPosition = function(a) {
                var b = this.api(!0),
                    c = a.nodeName.toUpperCase();
                return "TR" == c ? b.row(a).index() : "TD" == c || "TH" == c ? (a = b.cell(a).index(), [a.row, a.columnVisible, a.column]) : null
            };
            this.fnIsOpen = function(a) {
                return this.api(!0).row(a).child.isShown()
            };
            this.fnOpen = function(a, b, c) {
                return this.api(!0).row(a).child(b, c).show().child()[0]
            };
            this.fnPageChange = function(a, b) {
                var c = this.api(!0).page(a);
                (b === k || b) && c.draw(!1)
            };
            this.fnSetColumnVis = function(a, b, c) {
                a = this.api(!0).column(a).visible(b);
                (c === k || c) && a.columns.adjust().draw()
            };
            this.fnSettings = function() {
                return ya(this[x.iApiIndex])
            };
            this.fnSort = function(a) {
                this.api(!0).order(a).draw()
            };
            this.fnSortListener = function(a, b, c) {
                this.api(!0).order.listener(a, b, c)
            };
            this.fnUpdate = function(a, b, c, d, e) {
                var h = this.api(!0);
                c === k || null === c ? h.row(b).data(a) : h.cell(b, c).data(a);
                (e === k || e) && h.columns.adjust();
                (d === k || d) && h.draw();
                return 0
            };
            this.fnVersionCheck = x.fnVersionCheck;
            var b = this,
                c = a === k,
                d = this.length;
            c && (a = {});
            this.oApi = this.internal = x.internal;
            for (var e in n.ext.internal) e && (this[e] = Lb(e));
            this.each(function() {
                var e = {},
                    g = 1 < d ? Xa(e, a, !0) : a,
                    j = 0,
                    i, e = this.getAttribute("id"),
                    m = !1,
                    l = n.defaults,
                    q = h(this);
                if ("table" != this.nodeName.toLowerCase()) K(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
                else {
                    eb(l);
                    fb(l.column);
                    J(l, l, !0);
                    J(l.column, l.column, !0);
                    J(l, h.extend(g, q.data()));
                    var t = n.settings,
                        j = 0;
                    for (i = t.length; j < i; j++) {
                        var o = t[j];
                        if (o.nTable == this || o.nTHead && o.nTHead.parentNode == this || o.nTFoot && o.nTFoot.parentNode == this) {
                            var s = g.bRetrieve !== k ? g.bRetrieve : l.bRetrieve;
                            if (c || s) return o.oInstance;
                            if (g.bDestroy !== k ? g.bDestroy : l.bDestroy) {
                                o.oInstance.fnDestroy();
                                break
                            } else {
                                K(o, 0, "Cannot reinitialise DataTable", 3);
                                return
                            }
                        }
                        if (o.sTableId == this.id) {
                            t.splice(j, 1);
                            break
                        }
                    }
                    if (null === e || "" === e) this.id = e = "DataTables_Table_" + n.ext._unique++;
                    var p = h.extend(!0, {}, n.models.oSettings, {
                        sDestroyWidth: q[0].style.width,
                        sInstance: e,
                        sTableId: e
                    });
                    p.nTable = this;
                    p.oApi = b.internal;
                    p.oInit = g;
                    t.push(p);
                    p.oInstance = 1 === b.length ? b : q.dataTable();
                    eb(g);
                    Ca(g.oLanguage);
                    g.aLengthMenu && !g.iDisplayLength && (g.iDisplayLength = h.isArray(g.aLengthMenu[0]) ? g.aLengthMenu[0][0] : g.aLengthMenu[0]);
                    g = Xa(h.extend(!0, {}, l), g);
                    F(p.oFeatures, g, "bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));
                    F(p, g, ["asStripeClasses", "ajax", "fnServerData", "fnFormatNumber", "sServerMethod",
                        "aaSorting", "aaSortingFixed", "aLengthMenu", "sPaginationType", "sAjaxSource", "sAjaxDataProp", "iStateDuration", "sDom", "bSortCellsTop", "iTabIndex", "fnStateLoadCallback", "fnStateSaveCallback", "renderer", "searchDelay", "rowId", ["iCookieDuration", "iStateDuration"],
                        ["oSearch", "oPreviousSearch"],
                        ["aoSearchCols", "aoPreSearchCols"],
                        ["iDisplayLength", "_iDisplayLength"]
                    ]);
                    F(p.oScroll, g, [
                        ["sScrollX", "sX"],
                        ["sScrollXInner", "sXInner"],
                        ["sScrollY", "sY"],
                        ["bScrollCollapse", "bCollapse"]
                    ]);
                    F(p.oLanguage, g, "fnInfoCallback");
                    z(p, "aoDrawCallback", g.fnDrawCallback, "user");
                    z(p, "aoServerParams", g.fnServerParams, "user");
                    z(p, "aoStateSaveParams", g.fnStateSaveParams, "user");
                    z(p, "aoStateLoadParams", g.fnStateLoadParams, "user");
                    z(p, "aoStateLoaded", g.fnStateLoaded, "user");
                    z(p, "aoRowCallback", g.fnRowCallback, "user");
                    z(p, "aoRowCreatedCallback", g.fnCreatedRow, "user");
                    z(p, "aoHeaderCallback", g.fnHeaderCallback, "user");
                    z(p, "aoFooterCallback", g.fnFooterCallback, "user");
                    z(p, "aoInitComplete", g.fnInitComplete, "user");
                    z(p, "aoPreDrawCallback",
                        g.fnPreDrawCallback, "user");
                    p.rowIdFn = S(g.rowId);
                    gb(p);
                    var u = p.oClasses;
                    h.extend(u, n.ext.classes, g.oClasses);
                    q.addClass(u.sTable);
                    p.iInitDisplayStart === k && (p.iInitDisplayStart = g.iDisplayStart, p._iDisplayStart = g.iDisplayStart);
                    null !== g.iDeferLoading && (p.bDeferLoading = !0, e = h.isArray(g.iDeferLoading), p._iRecordsDisplay = e ? g.iDeferLoading[0] : g.iDeferLoading, p._iRecordsTotal = e ? g.iDeferLoading[1] : g.iDeferLoading);
                    var v = p.oLanguage;
                    h.extend(!0, v, g.oLanguage);
                    v.sUrl && (h.ajax({
                        dataType: "json",
                        url: v.sUrl,
                        success: function(a) {
                            Ca(a);
                            J(l.oLanguage, a);
                            h.extend(true, v, a);
                            ha(p)
                        },
                        error: function() {
                            ha(p)
                        }
                    }), m = !0);
                    null === g.asStripeClasses && (p.asStripeClasses = [u.sStripeOdd, u.sStripeEven]);
                    var e = p.asStripeClasses,
                        x = q.children("tbody").find("tr").eq(0); - 1 !== h.inArray(!0, h.map(e, function(a) {
                        return x.hasClass(a)
                    })) && (h("tbody tr", this).removeClass(e.join(" ")), p.asDestroyStripes = e.slice());
                    e = [];
                    t = this.getElementsByTagName("thead");
                    0 !== t.length && (ea(p.aoHeader, t[0]), e = ra(p));
                    if (null === g.aoColumns) {
                        t = [];
                        j = 0;
                        for (i = e.length; j < i; j++) t.push(null)
                    } else t =
                        g.aoColumns;
                    j = 0;
                    for (i = t.length; j < i; j++) Ea(p, e ? e[j] : null);
                    ib(p, g.aoColumnDefs, t, function(a, b) {
                        ka(p, a, b)
                    });
                    if (x.length) {
                        var w = function(a, b) {
                            return a.getAttribute("data-" + b) !== null ? b : null
                        };
                        h(x[0]).children("th, td").each(function(a, b) {
                            var c = p.aoColumns[a];
                            if (c.mData === a) {
                                var d = w(b, "sort") || w(b, "order"),
                                    e = w(b, "filter") || w(b, "search");
                                if (d !== null || e !== null) {
                                    c.mData = {
                                        _: a + ".display",
                                        sort: d !== null ? a + ".@data-" + d : k,
                                        type: d !== null ? a + ".@data-" + d : k,
                                        filter: e !== null ? a + ".@data-" + e : k
                                    };
                                    ka(p, a)
                                }
                            }
                        })
                    }
                    var U = p.oFeatures,
                        e = function() {
                            if (g.aaSorting === k) {
                                var a = p.aaSorting;
                                j = 0;
                                for (i = a.length; j < i; j++) a[j][1] = p.aoColumns[j].asSorting[0]
                            }
                            wa(p);
                            U.bSort && z(p, "aoDrawCallback", function() {
                                if (p.bSorted) {
                                    var a = X(p),
                                        b = {};
                                    h.each(a, function(a, c) {
                                        b[c.src] = c.dir
                                    });
                                    r(p, null, "order", [p, a, b]);
                                    Ib(p)
                                }
                            });
                            z(p, "aoDrawCallback", function() {
                                (p.bSorted || y(p) === "ssp" || U.bDeferRender) && wa(p)
                            }, "sc");
                            var a = q.children("caption").each(function() {
                                    this._captionSide = h(this).css("caption-side")
                                }),
                                b = q.children("thead");
                            b.length === 0 && (b = h("<thead/>").appendTo(q));
                            p.nTHead = b[0];
                            b = q.children("tbody");
                            b.length === 0 && (b = h("<tbody/>").appendTo(q));
                            p.nTBody = b[0];
                            b = q.children("tfoot");
                            if (b.length === 0 && a.length > 0 && (p.oScroll.sX !== "" || p.oScroll.sY !== "")) b = h("<tfoot/>").appendTo(q);
                            if (b.length === 0 || b.children().length === 0) q.addClass(u.sNoFooter);
                            else if (b.length > 0) {
                                p.nTFoot = b[0];
                                ea(p.aoFooter, p.nTFoot)
                            }
                            if (g.aaData)
                                for (j = 0; j < g.aaData.length; j++) O(p, g.aaData[j]);
                            else(p.bDeferLoading || y(p) == "dom") && na(p, h(p.nTBody).children("tr"));
                            p.aiDisplay = p.aiDisplayMaster.slice();
                            p.bInitialised = true;
                            m === false && ha(p)
                        };
                    g.bStateSave ? (U.bStateSave = !0, z(p, "aoDrawCallback", xa, "state_save"), Jb(p, g, e)) : e()
                }
            });
            b = null;
            return this
        },
        x, s, o, u, Za = {},
        Mb = /[\r\n]/g,
        Aa = /<.*?>/g,
        Zb = /^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/,
        $b = RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)", "g"),
        Ya = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi,
        M = function(a) {
            return !a || !0 === a || "-" === a ? !0 : !1
        },
        Nb = function(a) {
            var b = parseInt(a, 10);
            return !isNaN(b) &&
                isFinite(a) ? b : null
        },
        Ob = function(a, b) {
            Za[b] || (Za[b] = RegExp(Qa(b), "g"));
            return "string" === typeof a && "." !== b ? a.replace(/\./g, "").replace(Za[b], ".") : a
        },
        $a = function(a, b, c) {
            var d = "string" === typeof a;
            if (M(a)) return !0;
            b && d && (a = Ob(a, b));
            c && d && (a = a.replace(Ya, ""));
            return !isNaN(parseFloat(a)) && isFinite(a)
        },
        Pb = function(a, b, c) {
            return M(a) ? !0 : !(M(a) || "string" === typeof a) ? null : $a(a.replace(Aa, ""), b, c) ? !0 : null
        },
        D = function(a, b, c) {
            var d = [],
                e = 0,
                f = a.length;
            if (c !== k)
                for (; e < f; e++) a[e] && a[e][b] && d.push(a[e][b][c]);
            else
                for (; e <
                    f; e++) a[e] && d.push(a[e][b]);
            return d
        },
        ja = function(a, b, c, d) {
            var e = [],
                f = 0,
                g = b.length;
            if (d !== k)
                for (; f < g; f++) a[b[f]][c] && e.push(a[b[f]][c][d]);
            else
                for (; f < g; f++) e.push(a[b[f]][c]);
            return e
        },
        Y = function(a, b) {
            var c = [],
                d;
            b === k ? (b = 0, d = a) : (d = b, b = a);
            for (var e = b; e < d; e++) c.push(e);
            return c
        },
        Qb = function(a) {
            for (var b = [], c = 0, d = a.length; c < d; c++) a[c] && b.push(a[c]);
            return b
        },
        qa = function(a) {
            var b;
            a: {
                if (!(2 > a.length)) {
                    b = a.slice().sort();
                    for (var c = b[0], d = 1, e = b.length; d < e; d++) {
                        if (b[d] === c) {
                            b = !1;
                            break a
                        }
                        c = b[d]
                    }
                }
                b = !0
            }
            if (b) return a.slice();
            b = [];
            var e = a.length,
                f, g = 0,
                d = 0;
            a: for (; d < e; d++) {
                c = a[d];
                for (f = 0; f < g; f++)
                    if (b[f] === c) continue a;
                b.push(c);
                g++
            }
            return b
        };
    n.util = {
        throttle: function(a, b) {
            var c = b !== k ? b : 200,
                d, e;
            return function() {
                var b = this,
                    g = +new Date,
                    j = arguments;
                d && g < d + c ? (clearTimeout(e), e = setTimeout(function() {
                    d = k;
                    a.apply(b, j)
                }, c)) : (d = g, a.apply(b, j))
            }
        },
        escapeRegex: function(a) {
            return a.replace($b, "\\$1")
        }
    };
    var A = function(a, b, c) {
            a[b] !== k && (a[c] = a[b])
        },
        ca = /\[.*?\]$/,
        W = /\(\)$/,
        Qa = n.util.escapeRegex,
        va = h("<div>")[0],
        Wb = va.textContent !== k,
        Yb =
        /<.*?>/g,
        Oa = n.util.throttle,
        Rb = [],
        w = Array.prototype,
        ac = function(a) {
            var b, c, d = n.settings,
                e = h.map(d, function(a) {
                    return a.nTable
                });
            if (a) {
                if (a.nTable && a.oApi) return [a];
                if (a.nodeName && "table" === a.nodeName.toLowerCase()) return b = h.inArray(a, e), -1 !== b ? [d[b]] : null;
                if (a && "function" === typeof a.settings) return a.settings().toArray();
                "string" === typeof a ? c = h(a) : a instanceof h && (c = a)
            } else return [];
            if (c) return c.map(function() {
                b = h.inArray(this, e);
                return -1 !== b ? d[b] : null
            }).toArray()
        };
    s = function(a, b) {
        if (!(this instanceof s)) return new s(a, b);
        var c = [],
            d = function(a) {
                (a = ac(a)) && (c = c.concat(a))
            };
        if (h.isArray(a))
            for (var e = 0, f = a.length; e < f; e++) d(a[e]);
        else d(a);
        this.context = qa(c);
        b && h.merge(this, b);
        this.selector = {
            rows: null,
            cols: null,
            opts: null
        };
        s.extend(this, this, Rb)
    };
    n.Api = s;
    h.extend(s.prototype, {
        any: function() {
            return 0 !== this.count()
        },
        concat: w.concat,
        context: [],
        count: function() {
            return this.flatten().length
        },
        each: function(a) {
            for (var b = 0, c = this.length; b < c; b++) a.call(this, this[b], b, this);
            return this
        },
        eq: function(a) {
            var b =
                this.context;
            return b.length > a ? new s(b[a], this[a]) : null
        },
        filter: function(a) {
            var b = [];
            if (w.filter) b = w.filter.call(this, a, this);
            else
                for (var c = 0, d = this.length; c < d; c++) a.call(this, this[c], c, this) && b.push(this[c]);
            return new s(this.context, b)
        },
        flatten: function() {
            var a = [];
            return new s(this.context, a.concat.apply(a, this.toArray()))
        },
        join: w.join,
        indexOf: w.indexOf || function(a, b) {
            for (var c = b || 0, d = this.length; c < d; c++)
                if (this[c] === a) return c;
            return -1
        },
        iterator: function(a, b, c, d) {
            var e = [],
                f, g, j, h, m, l = this.context,
                n, o, u = this.selector;
            "string" === typeof a && (d = c, c = b, b = a, a = !1);
            g = 0;
            for (j = l.length; g < j; g++) {
                var r = new s(l[g]);
                if ("table" === b) f = c.call(r, l[g], g), f !== k && e.push(f);
                else if ("columns" === b || "rows" === b) f = c.call(r, l[g], this[g], g), f !== k && e.push(f);
                else if ("column" === b || "column-rows" === b || "row" === b || "cell" === b) {
                    o = this[g];
                    "column-rows" === b && (n = Ba(l[g], u.opts));
                    h = 0;
                    for (m = o.length; h < m; h++) f = o[h], f = "cell" === b ? c.call(r, l[g], f.row, f.column, g, h) : c.call(r, l[g], f, g, h, n), f !== k && e.push(f)
                }
            }
            return e.length || d ? (a = new s(l, a ?
                e.concat.apply([], e) : e), b = a.selector, b.rows = u.rows, b.cols = u.cols, b.opts = u.opts, a) : this
        },
        lastIndexOf: w.lastIndexOf || function(a, b) {
            return this.indexOf.apply(this.toArray.reverse(), arguments)
        },
        length: 0,
        map: function(a) {
            var b = [];
            if (w.map) b = w.map.call(this, a, this);
            else
                for (var c = 0, d = this.length; c < d; c++) b.push(a.call(this, this[c], c));
            return new s(this.context, b)
        },
        pluck: function(a) {
            return this.map(function(b) {
                return b[a]
            })
        },
        pop: w.pop,
        push: w.push,
        reduce: w.reduce || function(a, b) {
            return hb(this, a, b, 0, this.length,
                1)
        },
        reduceRight: w.reduceRight || function(a, b) {
            return hb(this, a, b, this.length - 1, -1, -1)
        },
        reverse: w.reverse,
        selector: null,
        shift: w.shift,
        slice: function() {
            return new s(this.context, this)
        },
        sort: w.sort,
        splice: w.splice,
        toArray: function() {
            return w.slice.call(this)
        },
        to$: function() {
            return h(this)
        },
        toJQuery: function() {
            return h(this)
        },
        unique: function() {
            return new s(this.context, qa(this))
        },
        unshift: w.unshift
    });
    s.extend = function(a, b, c) {
        if (c.length && b && (b instanceof s || b.__dt_wrapper)) {
            var d, e, f, g = function(a, b, c) {
                return function() {
                    var d =
                        b.apply(a, arguments);
                    s.extend(d, d, c.methodExt);
                    return d
                }
            };
            d = 0;
            for (e = c.length; d < e; d++) f = c[d], b[f.name] = "function" === typeof f.val ? g(a, f.val, f) : h.isPlainObject(f.val) ? {} : f.val, b[f.name].__dt_wrapper = !0, s.extend(a, b[f.name], f.propExt)
        }
    };
    s.register = o = function(a, b) {
        if (h.isArray(a))
            for (var c = 0, d = a.length; c < d; c++) s.register(a[c], b);
        else
            for (var e = a.split("."), f = Rb, g, j, c = 0, d = e.length; c < d; c++) {
                g = (j = -1 !== e[c].indexOf("()")) ? e[c].replace("()", "") : e[c];
                var i;
                a: {
                    i = 0;
                    for (var m = f.length; i < m; i++)
                        if (f[i].name === g) {
                            i =
                                f[i];
                            break a
                        }
                    i = null
                }
                i || (i = {
                    name: g,
                    val: {},
                    methodExt: [],
                    propExt: []
                }, f.push(i));
                c === d - 1 ? i.val = b : f = j ? i.methodExt : i.propExt
            }
    };
    s.registerPlural = u = function(a, b, c) {
        s.register(a, c);
        s.register(b, function() {
            var a = c.apply(this, arguments);
            return a === this ? this : a instanceof s ? a.length ? h.isArray(a[0]) ? new s(a.context, a[0]) : a[0] : k : a
        })
    };
    o("tables()", function(a) {
        var b;
        if (a) {
            b = s;
            var c = this.context;
            if ("number" === typeof a) a = [c[a]];
            else var d = h.map(c, function(a) {
                    return a.nTable
                }),
                a = h(d).filter(a).map(function() {
                    var a = h.inArray(this,
                        d);
                    return c[a]
                }).toArray();
            b = new b(a)
        } else b = this;
        return b
    });
    o("table()", function(a) {
        var a = this.tables(a),
            b = a.context;
        return b.length ? new s(b[0]) : a
    });
    u("tables().nodes()", "table().node()", function() {
        return this.iterator("table", function(a) {
            return a.nTable
        }, 1)
    });
    u("tables().body()", "table().body()", function() {
        return this.iterator("table", function(a) {
            return a.nTBody
        }, 1)
    });
    u("tables().header()", "table().header()", function() {
        return this.iterator("table", function(a) {
            return a.nTHead
        }, 1)
    });
    u("tables().footer()",
        "table().footer()",
        function() {
            return this.iterator("table", function(a) {
                return a.nTFoot
            }, 1)
        });
    u("tables().containers()", "table().container()", function() {
        return this.iterator("table", function(a) {
            return a.nTableWrapper
        }, 1)
    });
    o("draw()", function(a) {
        return this.iterator("table", function(b) {
            "page" === a ? P(b) : ("string" === typeof a && (a = "full-hold" === a ? !1 : !0), T(b, !1 === a))
        })
    });
    o("page()", function(a) {
        return a === k ? this.page.info().page : this.iterator("table", function(b) {
            Ta(b, a)
        })
    });
    o("page.info()", function() {
        if (0 ===
            this.context.length) return k;
        var a = this.context[0],
            b = a._iDisplayStart,
            c = a.oFeatures.bPaginate ? a._iDisplayLength : -1,
            d = a.fnRecordsDisplay(),
            e = -1 === c;
        return {
            page: e ? 0 : Math.floor(b / c),
            pages: e ? 1 : Math.ceil(d / c),
            start: b,
            end: a.fnDisplayEnd(),
            length: c,
            recordsTotal: a.fnRecordsTotal(),
            recordsDisplay: d,
            serverSide: "ssp" === y(a)
        }
    });
    o("page.len()", function(a) {
        return a === k ? 0 !== this.context.length ? this.context[0]._iDisplayLength : k : this.iterator("table", function(b) {
            Ra(b, a)
        })
    });
    var Sb = function(a, b, c) {
        if (c) {
            var d = new s(a);
            d.one("draw", function() {
                c(d.ajax.json())
            })
        }
        if ("ssp" == y(a)) T(a, b);
        else {
            C(a, !0);
            var e = a.jqXHR;
            e && 4 !== e.readyState && e.abort();
            sa(a, [], function(c) {
                oa(a);
                for (var c = ta(a, c), d = 0, e = c.length; d < e; d++) O(a, c[d]);
                T(a, b);
                C(a, !1)
            })
        }
    };
    o("ajax.json()", function() {
        var a = this.context;
        if (0 < a.length) return a[0].json
    });
    o("ajax.params()", function() {
        var a = this.context;
        if (0 < a.length) return a[0].oAjaxData
    });
    o("ajax.reload()", function(a, b) {
        return this.iterator("table", function(c) {
            Sb(c, !1 === b, a)
        })
    });
    o("ajax.url()", function(a) {
        var b =
            this.context;
        if (a === k) {
            if (0 === b.length) return k;
            b = b[0];
            return b.ajax ? h.isPlainObject(b.ajax) ? b.ajax.url : b.ajax : b.sAjaxSource
        }
        return this.iterator("table", function(b) {
            h.isPlainObject(b.ajax) ? b.ajax.url = a : b.ajax = a
        })
    });
    o("ajax.url().load()", function(a, b) {
        return this.iterator("table", function(c) {
            Sb(c, !1 === b, a)
        })
    });
    var ab = function(a, b, c, d, e) {
            var f = [],
                g, j, i, m, l, n;
            i = typeof b;
            if (!b || "string" === i || "function" === i || b.length === k) b = [b];
            i = 0;
            for (m = b.length; i < m; i++) {
                j = b[i] && b[i].split && !b[i].match(/[\[\(:]/) ? b[i].split(",") : [b[i]];
                l = 0;
                for (n = j.length; l < n; l++)(g = c("string" === typeof j[l] ? h.trim(j[l]) : j[l])) && g.length && (f = f.concat(g))
            }
            a = x.selector[a];
            if (a.length) {
                i = 0;
                for (m = a.length; i < m; i++) f = a[i](d, e, f)
            }
            return qa(f)
        },
        bb = function(a) {
            a || (a = {});
            a.filter && a.search === k && (a.search = a.filter);
            return h.extend({
                search: "none",
                order: "current",
                page: "all"
            }, a)
        },
        cb = function(a) {
            for (var b = 0, c = a.length; b < c; b++)
                if (0 < a[b].length) return a[0] = a[b], a[0].length = 1, a.length = 1, a.context = [a.context[b]], a;
            a.length = 0;
            return a
        },
        Ba = function(a, b) {
            var c,
                d, e, f = [],
                g = a.aiDisplay;
            e = a.aiDisplayMaster;
            var j = b.search;
            c = b.order;
            d = b.page;
            if ("ssp" == y(a)) return "removed" === j ? [] : Y(0, e.length);
            if ("current" == d) {
                c = a._iDisplayStart;
                for (d = a.fnDisplayEnd(); c < d; c++) f.push(g[c])
            } else if ("current" == c || "applied" == c)
                if ("none" == j) f = e.slice();
                else if ("applied" == j) f = g.slice();
            else {
                if ("removed" == j) {
                    var i = {};
                    c = 0;
                    for (d = g.length; c < d; c++) i[g[c]] = null;
                    f = h.map(e, function(a) {
                        return !i.hasOwnProperty(a) ? a : null
                    })
                }
            } else if ("index" == c || "original" == c) {
                c = 0;
                for (d = a.aoData.length; c < d; c++) "none" ==
                    j ? f.push(c) : (e = h.inArray(c, g), (-1 === e && "removed" == j || 0 <= e && "applied" == j) && f.push(c))
            }
            return f
        };
    o("rows()", function(a, b) {
        a === k ? a = "" : h.isPlainObject(a) && (b = a, a = "");
        var b = bb(b),
            c = this.iterator("table", function(c) {
                var e = b,
                    f;
                return ab("row", a, function(a) {
                    var b = Nb(a),
                        i = c.aoData;
                    if (b !== null && !e) return [b];
                    f || (f = Ba(c, e));
                    if (b !== null && h.inArray(b, f) !== -1) return [b];
                    if (a === null || a === k || a === "") return f;
                    if (typeof a === "function") return h.map(f, function(b) {
                        var c = i[b];
                        return a(b, c._aData, c.nTr) ? b : null
                    });
                    if (a.nodeName) {
                        var b =
                            a._DT_RowIndex,
                            m = a._DT_CellIndex;
                        if (b !== k) return i[b] && i[b].nTr === a ? [b] : [];
                        if (m) return i[m.row] && i[m.row].nTr === a ? [m.row] : [];
                        b = h(a).closest("*[data-dt-row]");
                        return b.length ? [b.data("dt-row")] : []
                    }
                    if (typeof a === "string" && a.charAt(0) === "#") {
                        b = c.aIds[a.replace(/^#/, "")];
                        if (b !== k) return [b.idx]
                    }
                    b = Qb(ja(c.aoData, f, "nTr"));
                    return h(b).filter(a).map(function() {
                        return this._DT_RowIndex
                    }).toArray()
                }, c, e)
            }, 1);
        c.selector.rows = a;
        c.selector.opts = b;
        return c
    });
    o("rows().nodes()", function() {
        return this.iterator("row",
            function(a, b) {
                return a.aoData[b].nTr || k
            }, 1)
    });
    o("rows().data()", function() {
        return this.iterator(!0, "rows", function(a, b) {
            return ja(a.aoData, b, "_aData")
        }, 1)
    });
    u("rows().cache()", "row().cache()", function(a) {
        return this.iterator("row", function(b, c) {
            var d = b.aoData[c];
            return "search" === a ? d._aFilterData : d._aSortData
        }, 1)
    });
    u("rows().invalidate()", "row().invalidate()", function(a) {
        return this.iterator("row", function(b, c) {
            da(b, c, a)
        })
    });
    u("rows().indexes()", "row().index()", function() {
        return this.iterator("row",
            function(a, b) {
                return b
            }, 1)
    });
    u("rows().ids()", "row().id()", function(a) {
        for (var b = [], c = this.context, d = 0, e = c.length; d < e; d++)
            for (var f = 0, g = this[d].length; f < g; f++) {
                var h = c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);
                b.push((!0 === a ? "#" : "") + h)
            }
        return new s(c, b)
    });
    u("rows().remove()", "row().remove()", function() {
        var a = this;
        this.iterator("row", function(b, c, d) {
            var e = b.aoData,
                f = e[c],
                g, h, i, m, l;
            e.splice(c, 1);
            g = 0;
            for (h = e.length; g < h; g++)
                if (i = e[g], l = i.anCells, null !== i.nTr && (i.nTr._DT_RowIndex = g), null !== l) {
                    i = 0;
                    for (m =
                        l.length; i < m; i++) l[i]._DT_CellIndex.row = g
                }
            pa(b.aiDisplayMaster, c);
            pa(b.aiDisplay, c);
            pa(a[d], c, !1);
            0 < b._iRecordsDisplay && b._iRecordsDisplay--;
            Sa(b);
            c = b.rowIdFn(f._aData);
            c !== k && delete b.aIds[c]
        });
        this.iterator("table", function(a) {
            for (var c = 0, d = a.aoData.length; c < d; c++) a.aoData[c].idx = c
        });
        return this
    });
    o("rows.add()", function(a) {
        var b = this.iterator("table", function(b) {
                    var c, f, g, h = [];
                    f = 0;
                    for (g = a.length; f < g; f++) c = a[f], c.nodeName && "TR" === c.nodeName.toUpperCase() ? h.push(na(b, c)[0]) : h.push(O(b, c));
                    return h
                },
                1),
            c = this.rows(-1);
        c.pop();
        h.merge(c, b);
        return c
    });
    o("row()", function(a, b) {
        return cb(this.rows(a, b))
    });
    o("row().data()", function(a) {
        var b = this.context;
        if (a === k) return b.length && this.length ? b[0].aoData[this[0]]._aData : k;
        var c = b[0].aoData[this[0]];
        c._aData = a;
        h.isArray(a) && c.nTr.id && N(b[0].rowId)(a, c.nTr.id);
        da(b[0], this[0], "data");
        return this
    });
    o("row().node()", function() {
        var a = this.context;
        return a.length && this.length ? a[0].aoData[this[0]].nTr || null : null
    });
    o("row.add()", function(a) {
        a instanceof h &&
            a.length && (a = a[0]);
        var b = this.iterator("table", function(b) {
            return a.nodeName && "TR" === a.nodeName.toUpperCase() ? na(b, a)[0] : O(b, a)
        });
        return this.row(b[0])
    });
    var db = function(a, b) {
            var c = a.context;
            if (c.length && (c = c[0].aoData[b !== k ? b : a[0]]) && c._details) c._details.remove(), c._detailsShow = k, c._details = k
        },
        Tb = function(a, b) {
            var c = a.context;
            if (c.length && a.length) {
                var d = c[0].aoData[a[0]];
                if (d._details) {
                    (d._detailsShow = b) ? d._details.insertAfter(d.nTr): d._details.detach();
                    var e = c[0],
                        f = new s(e),
                        g = e.aoData;
                    f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");
                    0 < D(g, "_details").length && (f.on("draw.dt.DT_details", function(a, b) {
                        e === b && f.rows({
                            page: "current"
                        }).eq(0).each(function(a) {
                            a = g[a];
                            a._detailsShow && a._details.insertAfter(a.nTr)
                        })
                    }), f.on("column-visibility.dt.DT_details", function(a, b) {
                        if (e === b)
                            for (var c, d = V(b), f = 0, h = g.length; f < h; f++) c = g[f], c._details && c._details.children("td[colspan]").attr("colspan", d)
                    }), f.on("destroy.dt.DT_details", function(a, b) {
                        if (e === b)
                            for (var c = 0, d = g.length; c < d; c++) g[c]._details && db(f, c)
                    }))
                }
            }
        };
    o("row().child()", function(a, b) {
        var c =
            this.context;
        if (a === k) return c.length && this.length ? c[0].aoData[this[0]]._details : k;
        if (!0 === a) this.child.show();
        else if (!1 === a) db(this);
        else if (c.length && this.length) {
            var d = c[0],
                c = c[0].aoData[this[0]],
                e = [],
                f = function(a, b) {
                    if (h.isArray(a) || a instanceof h)
                        for (var c = 0, k = a.length; c < k; c++) f(a[c], b);
                    else a.nodeName && "tr" === a.nodeName.toLowerCase() ? e.push(a) : (c = h("<tr><td/></tr>").addClass(b), h("td", c).addClass(b).html(a)[0].colSpan = V(d), e.push(c[0]))
                };
            f(a, b);
            c._details && c._details.detach();
            c._details = h(e);
            c._detailsShow && c._details.insertAfter(c.nTr)
        }
        return this
    });
    o(["row().child.show()", "row().child().show()"], function() {
        Tb(this, !0);
        return this
    });
    o(["row().child.hide()", "row().child().hide()"], function() {
        Tb(this, !1);
        return this
    });
    o(["row().child.remove()", "row().child().remove()"], function() {
        db(this);
        return this
    });
    o("row().child.isShown()", function() {
        var a = this.context;
        return a.length && this.length ? a[0].aoData[this[0]]._detailsShow || !1 : !1
    });
    var bc = /^([^:]+):(name|visIdx|visible)$/,
        Ub = function(a, b,
            c, d, e) {
            for (var c = [], d = 0, f = e.length; d < f; d++) c.push(B(a, e[d], b));
            return c
        };
    o("columns()", function(a, b) {
        a === k ? a = "" : h.isPlainObject(a) && (b = a, a = "");
        var b = bb(b),
            c = this.iterator("table", function(c) {
                    var e = a,
                        f = b,
                        g = c.aoColumns,
                        j = D(g, "sName"),
                        i = D(g, "nTh");
                    return ab("column", e, function(a) {
                        var b = Nb(a);
                        if (a === "") return Y(g.length);
                        if (b !== null) return [b >= 0 ? b : g.length + b];
                        if (typeof a === "function") {
                            var e = Ba(c, f);
                            return h.map(g, function(b, f) {
                                return a(f, Ub(c, f, 0, 0, e), i[f]) ? f : null
                            })
                        }
                        var k = typeof a === "string" ? a.match(bc) :
                            "";
                        if (k) switch (k[2]) {
                            case "visIdx":
                            case "visible":
                                b = parseInt(k[1], 10);
                                if (b < 0) {
                                    var n = h.map(g, function(a, b) {
                                        return a.bVisible ? b : null
                                    });
                                    return [n[n.length + b]]
                                }
                                return [aa(c, b)];
                            case "name":
                                return h.map(j, function(a, b) {
                                    return a === k[1] ? b : null
                                });
                            default:
                                return []
                        }
                        if (a.nodeName && a._DT_CellIndex) return [a._DT_CellIndex.column];
                        b = h(i).filter(a).map(function() {
                            return h.inArray(this, i)
                        }).toArray();
                        if (b.length || !a.nodeName) return b;
                        b = h(a).closest("*[data-dt-column]");
                        return b.length ? [b.data("dt-column")] : []
                    }, c, f)
                },
                1);
        c.selector.cols = a;
        c.selector.opts = b;
        return c
    });
    u("columns().header()", "column().header()", function() {
        return this.iterator("column", function(a, b) {
            return a.aoColumns[b].nTh
        }, 1)
    });
    u("columns().footer()", "column().footer()", function() {
        return this.iterator("column", function(a, b) {
            return a.aoColumns[b].nTf
        }, 1)
    });
    u("columns().data()", "column().data()", function() {
        return this.iterator("column-rows", Ub, 1)
    });
    u("columns().dataSrc()", "column().dataSrc()", function() {
        return this.iterator("column", function(a, b) {
                return a.aoColumns[b].mData
            },
            1)
    });
    u("columns().cache()", "column().cache()", function(a) {
        return this.iterator("column-rows", function(b, c, d, e, f) {
            return ja(b.aoData, f, "search" === a ? "_aFilterData" : "_aSortData", c)
        }, 1)
    });
    u("columns().nodes()", "column().nodes()", function() {
        return this.iterator("column-rows", function(a, b, c, d, e) {
            return ja(a.aoData, e, "anCells", b)
        }, 1)
    });
    u("columns().visible()", "column().visible()", function(a, b) {
        var c = this.iterator("column", function(b, c) {
            if (a === k) return b.aoColumns[c].bVisible;
            var f = b.aoColumns,
                g = f[c],
                j = b.aoData,
                i, m, l;
            if (a !== k && g.bVisible !== a) {
                if (a) {
                    var n = h.inArray(!0, D(f, "bVisible"), c + 1);
                    i = 0;
                    for (m = j.length; i < m; i++) l = j[i].nTr, f = j[i].anCells, l && l.insertBefore(f[c], f[n] || null)
                } else h(D(b.aoData, "anCells", c)).detach();
                g.bVisible = a;
                fa(b, b.aoHeader);
                fa(b, b.aoFooter);
                b.aiDisplay.length || h(b.nTBody).find("td[colspan]").attr("colspan", V(b));
                xa(b)
            }
        });
        a !== k && (this.iterator("column", function(c, e) {
            r(c, null, "column-visibility", [c, e, a, b])
        }), (b === k || b) && this.columns.adjust());
        return c
    });
    u("columns().indexes()", "column().index()",
        function(a) {
            return this.iterator("column", function(b, c) {
                return "visible" === a ? ba(b, c) : c
            }, 1)
        });
    o("columns.adjust()", function() {
        return this.iterator("table", function(a) {
            $(a)
        }, 1)
    });
    o("column.index()", function(a, b) {
        if (0 !== this.context.length) {
            var c = this.context[0];
            if ("fromVisible" === a || "toData" === a) return aa(c, b);
            if ("fromData" === a || "toVisible" === a) return ba(c, b)
        }
    });
    o("column()", function(a, b) {
        return cb(this.columns(a, b))
    });
    o("cells()", function(a, b, c) {
        h.isPlainObject(a) && (a.row === k ? (c = a, a = null) : (c = b, b = null));
        h.isPlainObject(b) && (c = b, b = null);
        if (null === b || b === k) return this.iterator("table", function(b) {
            var d = a,
                e = bb(c),
                f = b.aoData,
                g = Ba(b, e),
                j = Qb(ja(f, g, "anCells")),
                i = h([].concat.apply([], j)),
                l, m = b.aoColumns.length,
                n, o, u, s, r, v;
            return ab("cell", d, function(a) {
                var c = typeof a === "function";
                if (a === null || a === k || c) {
                    n = [];
                    o = 0;
                    for (u = g.length; o < u; o++) {
                        l = g[o];
                        for (s = 0; s < m; s++) {
                            r = {
                                row: l,
                                column: s
                            };
                            if (c) {
                                v = f[l];
                                a(r, B(b, l, s), v.anCells ? v.anCells[s] : null) && n.push(r)
                            } else n.push(r)
                        }
                    }
                    return n
                }
                if (h.isPlainObject(a)) return a.column !==
                    k && a.row !== k && h.inArray(a.row, g) !== -1 ? [a] : [];
                c = i.filter(a).map(function(a, b) {
                    return {
                        row: b._DT_CellIndex.row,
                        column: b._DT_CellIndex.column
                    }
                }).toArray();
                if (c.length || !a.nodeName) return c;
                v = h(a).closest("*[data-dt-row]");
                return v.length ? [{
                    row: v.data("dt-row"),
                    column: v.data("dt-column")
                }] : []
            }, b, e)
        });
        var d = this.columns(b),
            e = this.rows(a),
            f, g, j, i, m;
        this.iterator("table", function(a, b) {
            f = [];
            g = 0;
            for (j = e[b].length; g < j; g++) {
                i = 0;
                for (m = d[b].length; i < m; i++) f.push({
                    row: e[b][g],
                    column: d[b][i]
                })
            }
        }, 1);
        var l = this.cells(f,
            c);
        h.extend(l.selector, {
            cols: b,
            rows: a,
            opts: c
        });
        return l
    });
    u("cells().nodes()", "cell().node()", function() {
        return this.iterator("cell", function(a, b, c) {
            return (a = a.aoData[b]) && a.anCells ? a.anCells[c] : k
        }, 1)
    });
    o("cells().data()", function() {
        return this.iterator("cell", function(a, b, c) {
            return B(a, b, c)
        }, 1)
    });
    u("cells().cache()", "cell().cache()", function(a) {
        a = "search" === a ? "_aFilterData" : "_aSortData";
        return this.iterator("cell", function(b, c, d) {
            return b.aoData[c][a][d]
        }, 1)
    });
    u("cells().render()", "cell().render()",
        function(a) {
            return this.iterator("cell", function(b, c, d) {
                return B(b, c, d, a)
            }, 1)
        });
    u("cells().indexes()", "cell().index()", function() {
        return this.iterator("cell", function(a, b, c) {
            return {
                row: b,
                column: c,
                columnVisible: ba(a, c)
            }
        }, 1)
    });
    u("cells().invalidate()", "cell().invalidate()", function(a) {
        return this.iterator("cell", function(b, c, d) {
            da(b, c, a, d)
        })
    });
    o("cell()", function(a, b, c) {
        return cb(this.cells(a, b, c))
    });
    o("cell().data()", function(a) {
        var b = this.context,
            c = this[0];
        if (a === k) return b.length && c.length ? B(b[0],
            c[0].row, c[0].column) : k;
        jb(b[0], c[0].row, c[0].column, a);
        da(b[0], c[0].row, "data", c[0].column);
        return this
    });
    o("order()", function(a, b) {
        var c = this.context;
        if (a === k) return 0 !== c.length ? c[0].aaSorting : k;
        "number" === typeof a ? a = [
            [a, b]
        ] : a.length && !h.isArray(a[0]) && (a = Array.prototype.slice.call(arguments));
        return this.iterator("table", function(b) {
            b.aaSorting = a.slice()
        })
    });
    o("order.listener()", function(a, b, c) {
        return this.iterator("table", function(d) {
            Ma(d, a, b, c)
        })
    });
    o("order.fixed()", function(a) {
        if (!a) {
            var b =
                this.context,
                b = b.length ? b[0].aaSortingFixed : k;
            return h.isArray(b) ? {
                pre: b
            } : b
        }
        return this.iterator("table", function(b) {
            b.aaSortingFixed = h.extend(!0, {}, a)
        })
    });
    o(["columns().order()", "column().order()"], function(a) {
        var b = this;
        return this.iterator("table", function(c, d) {
            var e = [];
            h.each(b[d], function(b, c) {
                e.push([c, a])
            });
            c.aaSorting = e
        })
    });
    o("search()", function(a, b, c, d) {
        var e = this.context;
        return a === k ? 0 !== e.length ? e[0].oPreviousSearch.sSearch : k : this.iterator("table", function(e) {
            e.oFeatures.bFilter && ga(e,
                h.extend({}, e.oPreviousSearch, {
                    sSearch: a + "",
                    bRegex: null === b ? !1 : b,
                    bSmart: null === c ? !0 : c,
                    bCaseInsensitive: null === d ? !0 : d
                }), 1)
        })
    });
    u("columns().search()", "column().search()", function(a, b, c, d) {
        return this.iterator("column", function(e, f) {
            var g = e.aoPreSearchCols;
            if (a === k) return g[f].sSearch;
            e.oFeatures.bFilter && (h.extend(g[f], {
                sSearch: a + "",
                bRegex: null === b ? !1 : b,
                bSmart: null === c ? !0 : c,
                bCaseInsensitive: null === d ? !0 : d
            }), ga(e, e.oPreviousSearch, 1))
        })
    });
    o("state()", function() {
        return this.context.length ? this.context[0].oSavedState :
            null
    });
    o("state.clear()", function() {
        return this.iterator("table", function(a) {
            a.fnStateSaveCallback.call(a.oInstance, a, {})
        })
    });
    o("state.loaded()", function() {
        return this.context.length ? this.context[0].oLoadedState : null
    });
    o("state.save()", function() {
        return this.iterator("table", function(a) {
            xa(a)
        })
    });
    n.versionCheck = n.fnVersionCheck = function(a) {
        for (var b = n.version.split("."), a = a.split("."), c, d, e = 0, f = a.length; e < f; e++)
            if (c = parseInt(b[e], 10) || 0, d = parseInt(a[e], 10) || 0, c !== d) return c > d;
        return !0
    };
    n.isDataTable =
        n.fnIsDataTable = function(a) {
            var b = h(a).get(0),
                c = !1;
            if (a instanceof n.Api) return !0;
            h.each(n.settings, function(a, e) {
                var f = e.nScrollHead ? h("table", e.nScrollHead)[0] : null,
                    g = e.nScrollFoot ? h("table", e.nScrollFoot)[0] : null;
                if (e.nTable === b || f === b || g === b) c = !0
            });
            return c
        };
    n.tables = n.fnTables = function(a) {
        var b = !1;
        h.isPlainObject(a) && (b = a.api, a = a.visible);
        var c = h.map(n.settings, function(b) {
            if (!a || a && h(b.nTable).is(":visible")) return b.nTable
        });
        return b ? new s(c) : c
    };
    n.camelToHungarian = J;
    o("$()", function(a, b) {
        var c =
            this.rows(b).nodes(),
            c = h(c);
        return h([].concat(c.filter(a).toArray(), c.find(a).toArray()))
    });
    h.each(["on", "one", "off"], function(a, b) {
        o(b + "()", function() {
            var a = Array.prototype.slice.call(arguments);
            a[0] = h.map(a[0].split(/\s/), function(a) {
                return !a.match(/\.dt\b/) ? a + ".dt" : a
            }).join(" ");
            var d = h(this.tables().nodes());
            d[b].apply(d, a);
            return this
        })
    });
    o("clear()", function() {
        return this.iterator("table", function(a) {
            oa(a)
        })
    });
    o("settings()", function() {
        return new s(this.context, this.context)
    });
    o("init()", function() {
        var a =
            this.context;
        return a.length ? a[0].oInit : null
    });
    o("data()", function() {
        return this.iterator("table", function(a) {
            return D(a.aoData, "_aData")
        }).flatten()
    });
    o("destroy()", function(a) {
        a = a || !1;
        return this.iterator("table", function(b) {
            var c = b.nTableWrapper.parentNode,
                d = b.oClasses,
                e = b.nTable,
                f = b.nTBody,
                g = b.nTHead,
                j = b.nTFoot,
                i = h(e),
                f = h(f),
                k = h(b.nTableWrapper),
                l = h.map(b.aoData, function(a) {
                    return a.nTr
                }),
                o;
            b.bDestroying = !0;
            r(b, "aoDestroyCallback", "destroy", [b]);
            a || (new s(b)).columns().visible(!0);
            k.off(".DT").find(":not(tbody *)").off(".DT");
            h(E).off(".DT-" + b.sInstance);
            e != g.parentNode && (i.children("thead").detach(), i.append(g));
            j && e != j.parentNode && (i.children("tfoot").detach(), i.append(j));
            b.aaSorting = [];
            b.aaSortingFixed = [];
            wa(b);
            h(l).removeClass(b.asStripeClasses.join(" "));
            h("th, td", g).removeClass(d.sSortable + " " + d.sSortableAsc + " " + d.sSortableDesc + " " + d.sSortableNone);
            f.children().detach();
            f.append(l);
            g = a ? "remove" : "detach";
            i[g]();
            k[g]();
            !a && c && (c.insertBefore(e, b.nTableReinsertBefore), i.css("width", b.sDestroyWidth).removeClass(d.sTable),
                (o = b.asDestroyStripes.length) && f.children().each(function(a) {
                    h(this).addClass(b.asDestroyStripes[a % o])
                }));
            c = h.inArray(b, n.settings); - 1 !== c && n.settings.splice(c, 1)
        })
    });
    h.each(["column", "row", "cell"], function(a, b) {
        o(b + "s().every()", function(a) {
            var d = this.selector.opts,
                e = this;
            return this.iterator(b, function(f, g, h, i, m) {
                a.call(e[b](g, "cell" === b ? h : d, "cell" === b ? d : k), g, h, i, m)
            })
        })
    });
    o("i18n()", function(a, b, c) {
        var d = this.context[0],
            a = S(a)(d.oLanguage);
        a === k && (a = b);
        c !== k && h.isPlainObject(a) && (a = a[c] !== k ? a[c] :
            a._);
        return a.replace("%d", c)
    });
    n.version = "1.10.18";
    n.settings = [];
    n.models = {};
    n.models.oSearch = {
        bCaseInsensitive: !0,
        sSearch: "",
        bRegex: !1,
        bSmart: !0
    };
    n.models.oRow = {
        nTr: null,
        anCells: null,
        _aData: [],
        _aSortData: null,
        _aFilterData: null,
        _sFilterRow: null,
        _sRowStripe: "",
        src: null,
        idx: -1
    };
    n.models.oColumn = {
        idx: null,
        aDataSort: null,
        asSorting: null,
        bSearchable: null,
        bSortable: null,
        bVisible: null,
        _sManualType: null,
        _bAttrSrc: !1,
        fnCreatedCell: null,
        fnGetData: null,
        fnSetData: null,
        mData: null,
        mRender: null,
        nTh: null,
        nTf: null,
        sClass: null,
        sContentPadding: null,
        sDefaultContent: null,
        sName: null,
        sSortDataType: "std",
        sSortingClass: null,
        sSortingClassJUI: null,
        sTitle: null,
        sType: null,
        sWidth: null,
        sWidthOrig: null
    };
    n.defaults = {
        aaData: null,
        aaSorting: [
            [0, "asc"]
        ],
        aaSortingFixed: [],
        ajax: null,
        aLengthMenu: [10, 25, 50, 100],
        aoColumns: null,
        aoColumnDefs: null,
        aoSearchCols: [],
        asStripeClasses: null,
        bAutoWidth: !0,
        bDeferRender: !1,
        bDestroy: !1,
        bFilter: !0,
        bInfo: !0,
        bLengthChange: !0,
        bPaginate: !0,
        bProcessing: !1,
        bRetrieve: !1,
        bScrollCollapse: !1,
        bServerSide: !1,
        bSort: !0,
        bSortMulti: !0,
        bSortCellsTop: !1,
        bSortClasses: !0,
        bStateSave: !1,
        fnCreatedRow: null,
        fnDrawCallback: null,
        fnFooterCallback: null,
        fnFormatNumber: function(a) {
            return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g, this.oLanguage.sThousands)
        },
        fnHeaderCallback: null,
        fnInfoCallback: null,
        fnInitComplete: null,
        fnPreDrawCallback: null,
        fnRowCallback: null,
        fnServerData: null,
        fnServerParams: null,
        fnStateLoadCallback: function(a) {
            try {
                return JSON.parse((-1 === a.iStateDuration ? sessionStorage : localStorage).getItem("DataTables_" +
                    a.sInstance + "_" + location.pathname))
            } catch (b) {}
        },
        fnStateLoadParams: null,
        fnStateLoaded: null,
        fnStateSaveCallback: function(a, b) {
            try {
                (-1 === a.iStateDuration ? sessionStorage : localStorage).setItem("DataTables_" + a.sInstance + "_" + location.pathname, JSON.stringify(b))
            } catch (c) {}
        },
        fnStateSaveParams: null,
        iStateDuration: 7200,
        iDeferLoading: null,
        iDisplayLength: 10,
        iDisplayStart: 0,
        iTabIndex: 0,
        oClasses: {},
        oLanguage: {
            oAria: {
                sSortAscending: ": activate to sort column ascending",
                sSortDescending: ": activate to sort column descending"
            },
            oPaginate: {
                sFirst: "First",
                sLast: "Last",
                sNext: "Next",
                sPrevious: "Previous"
            },
            sEmptyTable: "No data available in table",
            sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
            sInfoEmpty: "Showing 0 to 0 of 0 entries",
            sInfoFiltered: "(filtered from _MAX_ total entries)",
            sInfoPostFix: "",
            sDecimal: "",
            sThousands: ",",
            sLengthMenu: "Show _MENU_ entries",
            sLoadingRecords: "Loading...",
            sProcessing: "Processing...",
            sSearch: "Search:",
            sSearchPlaceholder: "",
            sUrl: "",
            sZeroRecords: "No matching records found"
        },
        oSearch: h.extend({},
            n.models.oSearch),
        sAjaxDataProp: "data",
        sAjaxSource: null,
        sDom: "lfrtip",
        searchDelay: null,
        sPaginationType: "simple_numbers",
        sScrollX: "",
        sScrollXInner: "",
        sScrollY: "",
        sServerMethod: "GET",
        renderer: null,
        rowId: "DT_RowId"
    };
    Z(n.defaults);
    n.defaults.column = {
        aDataSort: null,
        iDataSort: -1,
        asSorting: ["asc", "desc"],
        bSearchable: !0,
        bSortable: !0,
        bVisible: !0,
        fnCreatedCell: null,
        mData: null,
        mRender: null,
        sCellType: "td",
        sClass: "",
        sContentPadding: "",
        sDefaultContent: null,
        sName: "",
        sSortDataType: "std",
        sTitle: null,
        sType: null,
        sWidth: null
    };
    Z(n.defaults.column);
    n.models.oSettings = {
        oFeatures: {
            bAutoWidth: null,
            bDeferRender: null,
            bFilter: null,
            bInfo: null,
            bLengthChange: null,
            bPaginate: null,
            bProcessing: null,
            bServerSide: null,
            bSort: null,
            bSortMulti: null,
            bSortClasses: null,
            bStateSave: null
        },
        oScroll: {
            bCollapse: null,
            iBarWidth: 0,
            sX: null,
            sXInner: null,
            sY: null
        },
        oLanguage: {
            fnInfoCallback: null
        },
        oBrowser: {
            bScrollOversize: !1,
            bScrollbarLeft: !1,
            bBounding: !1,
            barWidth: 0
        },
        ajax: null,
        aanFeatures: [],
        aoData: [],
        aiDisplay: [],
        aiDisplayMaster: [],
        aIds: {},
        aoColumns: [],
        aoHeader: [],
        aoFooter: [],
        oPreviousSearch: {},
        aoPreSearchCols: [],
        aaSorting: null,
        aaSortingFixed: [],
        asStripeClasses: null,
        asDestroyStripes: [],
        sDestroyWidth: 0,
        aoRowCallback: [],
        aoHeaderCallback: [],
        aoFooterCallback: [],
        aoDrawCallback: [],
        aoRowCreatedCallback: [],
        aoPreDrawCallback: [],
        aoInitComplete: [],
        aoStateSaveParams: [],
        aoStateLoadParams: [],
        aoStateLoaded: [],
        sTableId: "",
        nTable: null,
        nTHead: null,
        nTFoot: null,
        nTBody: null,
        nTableWrapper: null,
        bDeferLoading: !1,
        bInitialised: !1,
        aoOpenRows: [],
        sDom: null,
        searchDelay: null,
        sPaginationType: "two_button",
        iStateDuration: 0,
        aoStateSave: [],
        aoStateLoad: [],
        oSavedState: null,
        oLoadedState: null,
        sAjaxSource: null,
        sAjaxDataProp: null,
        bAjaxDataGet: !0,
        jqXHR: null,
        json: k,
        oAjaxData: k,
        fnServerData: null,
        aoServerParams: [],
        sServerMethod: null,
        fnFormatNumber: null,
        aLengthMenu: null,
        iDraw: 0,
        bDrawing: !1,
        iDrawError: -1,
        _iDisplayLength: 10,
        _iDisplayStart: 0,
        _iRecordsTotal: 0,
        _iRecordsDisplay: 0,
        oClasses: {},
        bFiltered: !1,
        bSorted: !1,
        bSortCellsTop: null,
        oInit: null,
        aoDestroyCallback: [],
        fnRecordsTotal: function() {
            return "ssp" == y(this) ? 1 * this._iRecordsTotal :
                this.aiDisplayMaster.length
        },
        fnRecordsDisplay: function() {
            return "ssp" == y(this) ? 1 * this._iRecordsDisplay : this.aiDisplay.length
        },
        fnDisplayEnd: function() {
            var a = this._iDisplayLength,
                b = this._iDisplayStart,
                c = b + a,
                d = this.aiDisplay.length,
                e = this.oFeatures,
                f = e.bPaginate;
            return e.bServerSide ? !1 === f || -1 === a ? b + d : Math.min(b + a, this._iRecordsDisplay) : !f || c > d || -1 === a ? d : c
        },
        oInstance: null,
        sInstance: null,
        iTabIndex: 0,
        nScrollHead: null,
        nScrollFoot: null,
        aLastSort: [],
        oPlugins: {},
        rowIdFn: null,
        rowId: null
    };
    n.ext = x = {
        buttons: {},
        classes: {},
        builder: "-source-",
        errMode: "alert",
        feature: [],
        search: [],
        selector: {
            cell: [],
            column: [],
            row: []
        },
        internal: {},
        legacy: {
            ajax: null
        },
        pager: {},
        renderer: {
            pageButton: {},
            header: {}
        },
        order: {},
        type: {
            detect: [],
            search: {},
            order: {}
        },
        _unique: 0,
        fnVersionCheck: n.fnVersionCheck,
        iApiIndex: 0,
        oJUIClasses: {},
        sVersion: n.version
    };
    h.extend(x, {
        afnFiltering: x.search,
        aTypes: x.type.detect,
        ofnSearch: x.type.search,
        oSort: x.type.order,
        afnSortData: x.order,
        aoFeatures: x.feature,
        oApi: x.internal,
        oStdClasses: x.classes,
        oPagination: x.pager
    });
    h.extend(n.ext.classes, {
        sTable: "dataTable",
        sNoFooter: "no-footer",
        sPageButton: "paginate_button",
        sPageButtonActive: "current",
        sPageButtonDisabled: "disabled",
        sStripeOdd: "odd",
        sStripeEven: "even",
        sRowEmpty: "dataTables_empty",
        sWrapper: "dataTables_wrapper",
        sFilter: "dataTables_filter",
        sInfo: "dataTables_info",
        sPaging: "dataTables_paginate paging_",
        sLength: "dataTables_length",
        sProcessing: "dataTables_processing",
        sSortAsc: "sorting_asc",
        sSortDesc: "sorting_desc",
        sSortable: "sorting",
        sSortableAsc: "sorting_asc_disabled",
        sSortableDesc: "sorting_desc_disabled",
        sSortableNone: "sorting_disabled",
        sSortColumn: "sorting_",
        sFilterInput: "",
        sLengthSelect: "",
        sScrollWrapper: "dataTables_scroll",
        sScrollHead: "dataTables_scrollHead",
        sScrollHeadInner: "dataTables_scrollHeadInner",
        sScrollBody: "dataTables_scrollBody",
        sScrollFoot: "dataTables_scrollFoot",
        sScrollFootInner: "dataTables_scrollFootInner",
        sHeaderTH: "",
        sFooterTH: "",
        sSortJUIAsc: "",
        sSortJUIDesc: "",
        sSortJUI: "",
        sSortJUIAscAllowed: "",
        sSortJUIDescAllowed: "",
        sSortJUIWrapper: "",
        sSortIcon: "",
        sJUIHeader: "",
        sJUIFooter: ""
    });
    var Kb = n.ext.pager;
    h.extend(Kb, {
        simple: function() {
            return ["previous", "next"]
        },
        full: function() {
            return ["first", "previous", "next", "last"]
        },
        numbers: function(a, b) {
            return [ia(a, b)]
        },
        simple_numbers: function(a, b) {
            return ["previous", ia(a, b), "next"]
        },
        full_numbers: function(a, b) {
            return ["first", "previous", ia(a, b), "next", "last"]
        },
        first_last_numbers: function(a, b) {
            return ["first", ia(a, b), "last"]
        },
        _numbers: ia,
        numbers_length: 7
    });
    h.extend(!0, n.ext.renderer, {
        pageButton: {
            _: function(a, b, c, d, e,
                f) {
                var g = a.oClasses,
                    j = a.oLanguage.oPaginate,
                    i = a.oLanguage.oAria.paginate || {},
                    m, l, n = 0,
                    o = function(b, d) {
                        var k, s, u, r, v = function(b) {
                            Ta(a, b.data.action, true)
                        };
                        k = 0;
                        for (s = d.length; k < s; k++) {
                            r = d[k];
                            if (h.isArray(r)) {
                                u = h("<" + (r.DT_el || "div") + "/>").appendTo(b);
                                o(u, r)
                            } else {
                                m = null;
                                l = "";
                                switch (r) {
                                    case "ellipsis":
                                        b.append('<span class="ellipsis">&#x2026;</span>');
                                        break;
                                    case "first":
                                        m = j.sFirst;
                                        l = r + (e > 0 ? "" : " " + g.sPageButtonDisabled);
                                        break;
                                    case "previous":
                                        m = j.sPrevious;
                                        l = r + (e > 0 ? "" : " " + g.sPageButtonDisabled);
                                        break;
                                    case "next":
                                        m =
                                            j.sNext;
                                        l = r + (e < f - 1 ? "" : " " + g.sPageButtonDisabled);
                                        break;
                                    case "last":
                                        m = j.sLast;
                                        l = r + (e < f - 1 ? "" : " " + g.sPageButtonDisabled);
                                        break;
                                    default:
                                        m = r + 1;
                                        l = e === r ? g.sPageButtonActive : ""
                                }
                                if (m !== null) {
                                    u = h("<a>", {
                                        "class": g.sPageButton + " " + l,
                                        "aria-controls": a.sTableId,
                                        "aria-label": i[r],
                                        "data-dt-idx": n,
                                        tabindex: a.iTabIndex,
                                        id: c === 0 && typeof r === "string" ? a.sTableId + "_" + r : null
                                    }).html(m).appendTo(b);
                                    Wa(u, {
                                        action: r
                                    }, v);
                                    n++
                                }
                            }
                        }
                    },
                    s;
                try {
                    s = h(b).find(H.activeElement).data("dt-idx")
                } catch (u) {}
                o(h(b).empty(), d);
                s !== k && h(b).find("[data-dt-idx=" +
                    s + "]").focus()
            }
        }
    });
    h.extend(n.ext.type.detect, [function(a, b) {
        var c = b.oLanguage.sDecimal;
        return $a(a, c) ? "num" + c : null
    }, function(a) {
        if (a && !(a instanceof Date) && !Zb.test(a)) return null;
        var b = Date.parse(a);
        return null !== b && !isNaN(b) || M(a) ? "date" : null
    }, function(a, b) {
        var c = b.oLanguage.sDecimal;
        return $a(a, c, !0) ? "num-fmt" + c : null
    }, function(a, b) {
        var c = b.oLanguage.sDecimal;
        return Pb(a, c) ? "html-num" + c : null
    }, function(a, b) {
        var c = b.oLanguage.sDecimal;
        return Pb(a, c, !0) ? "html-num-fmt" + c : null
    }, function(a) {
        return M(a) ||
            "string" === typeof a && -1 !== a.indexOf("<") ? "html" : null
    }]);
    h.extend(n.ext.type.search, {
        html: function(a) {
            return M(a) ? a : "string" === typeof a ? a.replace(Mb, " ").replace(Aa, "") : ""
        },
        string: function(a) {
            return M(a) ? a : "string" === typeof a ? a.replace(Mb, " ") : a
        }
    });
    var za = function(a, b, c, d) {
        if (0 !== a && (!a || "-" === a)) return -Infinity;
        b && (a = Ob(a, b));
        a.replace && (c && (a = a.replace(c, "")), d && (a = a.replace(d, "")));
        return 1 * a
    };
    h.extend(x.type.order, {
        "date-pre": function(a) {
            a = Date.parse(a);
            return isNaN(a) ? -Infinity : a
        },
        "html-pre": function(a) {
            return M(a) ?
                "" : a.replace ? a.replace(/<.*?>/g, "").toLowerCase() : a + ""
        },
        "string-pre": function(a) {
            return M(a) ? "" : "string" === typeof a ? a.toLowerCase() : !a.toString ? "" : a.toString()
        },
        "string-asc": function(a, b) {
            return a < b ? -1 : a > b ? 1 : 0
        },
        "string-desc": function(a, b) {
            return a < b ? 1 : a > b ? -1 : 0
        }
    });
    Da("");
    h.extend(!0, n.ext.renderer, {
        header: {
            _: function(a, b, c, d) {
                h(a.nTable).on("order.dt.DT", function(e, f, g, h) {
                    if (a === f) {
                        e = c.idx;
                        b.removeClass(c.sSortingClass + " " + d.sSortAsc + " " + d.sSortDesc).addClass(h[e] == "asc" ? d.sSortAsc : h[e] == "desc" ? d.sSortDesc :
                            c.sSortingClass)
                    }
                })
            },
            jqueryui: function(a, b, c, d) {
                h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon + " " + c.sSortingClassJUI)).appendTo(b);
                h(a.nTable).on("order.dt.DT", function(e, f, g, h) {
                    if (a === f) {
                        e = c.idx;
                        b.removeClass(d.sSortAsc + " " + d.sSortDesc).addClass(h[e] == "asc" ? d.sSortAsc : h[e] == "desc" ? d.sSortDesc : c.sSortingClass);
                        b.find("span." + d.sSortIcon).removeClass(d.sSortJUIAsc + " " + d.sSortJUIDesc + " " + d.sSortJUI + " " + d.sSortJUIAscAllowed + " " + d.sSortJUIDescAllowed).addClass(h[e] ==
                            "asc" ? d.sSortJUIAsc : h[e] == "desc" ? d.sSortJUIDesc : c.sSortingClassJUI)
                    }
                })
            }
        }
    });
    var Vb = function(a) {
        return "string" === typeof a ? a.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : a
    };
    n.render = {
        number: function(a, b, c, d, e) {
            return {
                display: function(f) {
                    if ("number" !== typeof f && "string" !== typeof f) return f;
                    var g = 0 > f ? "-" : "",
                        h = parseFloat(f);
                    if (isNaN(h)) return Vb(f);
                    h = h.toFixed(c);
                    f = Math.abs(h);
                    h = parseInt(f, 10);
                    f = c ? b + (f - h).toFixed(c).substring(2) : "";
                    return g + (d || "") + h.toString().replace(/\B(?=(\d{3})+(?!\d))/g,
                        a) + f + (e || "")
                }
            }
        },
        text: function() {
            return {
                display: Vb
            }
        }
    };
    h.extend(n.ext.internal, {
        _fnExternApiFunc: Lb,
        _fnBuildAjax: sa,
        _fnAjaxUpdate: lb,
        _fnAjaxParameters: ub,
        _fnAjaxUpdateDraw: vb,
        _fnAjaxDataSrc: ta,
        _fnAddColumn: Ea,
        _fnColumnOptions: ka,
        _fnAdjustColumnSizing: $,
        _fnVisibleToColumnIndex: aa,
        _fnColumnIndexToVisible: ba,
        _fnVisbleColumns: V,
        _fnGetColumns: ma,
        _fnColumnTypes: Ga,
        _fnApplyColumnDefs: ib,
        _fnHungarianMap: Z,
        _fnCamelToHungarian: J,
        _fnLanguageCompat: Ca,
        _fnBrowserDetect: gb,
        _fnAddData: O,
        _fnAddTr: na,
        _fnNodeToDataIndex: function(a,
            b) {
            return b._DT_RowIndex !== k ? b._DT_RowIndex : null
        },
        _fnNodeToColumnIndex: function(a, b, c) {
            return h.inArray(c, a.aoData[b].anCells)
        },
        _fnGetCellData: B,
        _fnSetCellData: jb,
        _fnSplitObjNotation: Ja,
        _fnGetObjectDataFn: S,
        _fnSetObjectDataFn: N,
        _fnGetDataMaster: Ka,
        _fnClearTable: oa,
        _fnDeleteIndex: pa,
        _fnInvalidate: da,
        _fnGetRowElements: Ia,
        _fnCreateTr: Ha,
        _fnBuildHead: kb,
        _fnDrawHead: fa,
        _fnDraw: P,
        _fnReDraw: T,
        _fnAddOptionsHtml: nb,
        _fnDetectHeader: ea,
        _fnGetUniqueThs: ra,
        _fnFeatureHtmlFilter: pb,
        _fnFilterComplete: ga,
        _fnFilterCustom: yb,
        _fnFilterColumn: xb,
        _fnFilter: wb,
        _fnFilterCreateSearch: Pa,
        _fnEscapeRegex: Qa,
        _fnFilterData: zb,
        _fnFeatureHtmlInfo: sb,
        _fnUpdateInfo: Cb,
        _fnInfoMacros: Db,
        _fnInitialise: ha,
        _fnInitComplete: ua,
        _fnLengthChange: Ra,
        _fnFeatureHtmlLength: ob,
        _fnFeatureHtmlPaginate: tb,
        _fnPageChange: Ta,
        _fnFeatureHtmlProcessing: qb,
        _fnProcessingDisplay: C,
        _fnFeatureHtmlTable: rb,
        _fnScrollDraw: la,
        _fnApplyToChildren: I,
        _fnCalculateColumnWidths: Fa,
        _fnThrottle: Oa,
        _fnConvertToWidth: Eb,
        _fnGetWidestNode: Fb,
        _fnGetMaxLenString: Gb,
        _fnStringToCss: v,
        _fnSortFlatten: X,
        _fnSort: mb,
        _fnSortAria: Ib,
        _fnSortListener: Va,
        _fnSortAttachListener: Ma,
        _fnSortingClasses: wa,
        _fnSortData: Hb,
        _fnSaveState: xa,
        _fnLoadState: Jb,
        _fnSettingsFromNode: ya,
        _fnLog: K,
        _fnMap: F,
        _fnBindAction: Wa,
        _fnCallbackReg: z,
        _fnCallbackFire: r,
        _fnLengthOverflow: Sa,
        _fnRenderer: Na,
        _fnDataSource: y,
        _fnRowAttributes: La,
        _fnExtend: Xa,
        _fnCalculateEnd: function() {}
    });
    h.fn.dataTable = n;
    n.$ = h;
    h.fn.dataTableSettings = n.settings;
    h.fn.dataTableExt = n.ext;
    h.fn.DataTable = function(a) {
        return h(this).dataTable(a).api()
    };
    h.each(n, function(a, b) {
        h.fn.DataTable[a] = b
    });
    return h.fn.dataTable
});

// Datatables Bootstrap Pagination Integration
(jQuery.fn.dataTableExt.oApi.fnPagingInfo = function(e) {
    return {
        iStart: e._iDisplayStart,
        iEnd: e.fnDisplayEnd(),
        iLength: e._iDisplayLength,
        iTotal: e.fnRecordsTotal(),
        iFilteredTotal: e.fnRecordsDisplay(),
        iPage: Math.ceil(e._iDisplayStart / e._iDisplayLength),
        iTotalPages: Math.ceil(e.fnRecordsDisplay() / e._iDisplayLength),
    };
}),
jQuery.extend(jQuery.fn.dataTableExt.oPagination, {
    bootstrap: {
        fnInit: function(e, t, n) {
            var i = e.oLanguage.oPaginate,
                r = function(t) {
                    t.preventDefault(), e.oApi._fnPageChange(e, t.data.action) && n(e);
                };
            jQuery(t).append(
                '<ul class="pagination pagination-sm remove-margin"><li class="prev disabled"><a href="javascript:void(0)"><i class="fa fa-chevron-left"></i> ' +
                i.sPrevious +
                "</a></li>" +
                '<li class="next disabled"><a href="javascript:void(0)">' +
                i.sNext +
                ' <i class="fa fa-chevron-right"></i></a></li>' +
                "</ul>"
            );
            var o = jQuery("a", t);
            jQuery(o[0]).bind("click.DT", {
                    action: "previous"
                }, r),
                jQuery(o[1]).bind("click.DT", {
                    action: "next"
                }, r);
        },
        fnUpdate: function(e, t) {
            var n,
                i,
                r,
                o,
                a,
                s = 5,
                l = e.oInstance.fnPagingInfo(),
                c = e.aanFeatures.p,
                u = Math.floor(s / 2);
            for (
                l.iTotalPages < s ?
                ((o = 1), (a = l.iTotalPages)) :
                l.iPage <= u ?
                ((o = 1), (a = s)) :
                l.iPage >= l.iTotalPages - u ?
                ((o = l.iTotalPages - s + 1), (a = l.iTotalPages)) :
                ((o = l.iPage - u + 1), (a = o + s - 1)),
                n = 0,
                iLen = c.length; iLen > n; n++
            ) {
                for (
                    jQuery("li:gt(0)", c[n]).filter(":not(:last)").remove(), i = o; a >= i; i++
                )
                    (r = i === l.iPage + 1 ? 'class="active"' : ""),
                    jQuery(
                        "<li " + r + '><a href="javascript:void(0)">' + i + "</a></li>"
                    )
                    .insertBefore(jQuery("li:last", c[n])[0])
                    .bind("click", function(n) {
                        n.preventDefault(),
                            (e._iDisplayStart =
                                (parseInt(jQuery("a", this).text(), 10) - 1) * l.iLength),
                            t(e);
                    });
                0 === l.iPage ?
                    jQuery("li:first", c[n]).addClass("disabled") :
                    jQuery("li:first", c[n]).removeClass("disabled"),
                    l.iPage === l.iTotalPages - 1 || 0 === l.iTotalPages ?
                    jQuery("li:last", c[n]).addClass("disabled") :
                    jQuery("li:last", c[n]).removeClass("disabled");
            }
        },
    },
});

//! moment.js
//! version : 2.9.0
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
(function(a) {
    function b(a, b, c) {
        switch (arguments.length) {
            case 2:
                return null != a ? a : b;
            case 3:
                return null != a ? a : null != b ? b : c;
            default:
                throw new Error("Implement me");
        }
    }

    function c(a, b) {
        return Bb.call(a, b);
    }

    function d() {
        return {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1,
        };
    }

    function e(a) {
        vb.suppressDeprecationWarnings === !1 &&
            "undefined" != typeof console &&
            console.warn &&
            console.warn("Deprecation warning: " + a);
    }

    function f(a, b) {
        var c = !0;
        return o(function() {
            return c && (e(a), (c = !1)), b.apply(this, arguments);
        }, b);
    }

    function g(a, b) {
        sc[a] || (e(b), (sc[a] = !0));
    }

    function h(a, b) {
        return function(c) {
            return r(a.call(this, c), b);
        };
    }

    function i(a, b) {
        return function(c) {
            return this.localeData().ordinal(a.call(this, c), b);
        };
    }

    function j(a, b) {
        var c,
            d,
            e = 12 * (b.year() - a.year()) + (b.month() - a.month()),
            f = a.clone().add(e, "months");
        return (
            0 > b - f ?
            ((c = a.clone().add(e - 1, "months")), (d = (b - f) / (f - c))) :
            ((c = a.clone().add(e + 1, "months")), (d = (b - f) / (c - f))), -(e + d)
        );
    }

    function k(a, b, c) {
        var d;
        return null == c ?
            b :
            null != a.meridiemHour ?
            a.meridiemHour(b, c) :
            null != a.isPM ?
            ((d = a.isPM(c)), d && 12 > b && (b += 12), d || 12 !== b || (b = 0), b) :
            b;
    }

    function l() {}

    function m(a, b) {
        b !== !1 && H(a),
            p(this, a),
            (this._d = new Date(+a._d)),
            uc === !1 && ((uc = !0), vb.updateOffset(this), (uc = !1));
    }

    function n(a) {
        var b = A(a),
            c = b.year || 0,
            d = b.quarter || 0,
            e = b.month || 0,
            f = b.week || 0,
            g = b.day || 0,
            h = b.hour || 0,
            i = b.minute || 0,
            j = b.second || 0,
            k = b.millisecond || 0;
        (this._milliseconds = +k + 1e3 * j + 6e4 * i + 36e5 * h),
        (this._days = +g + 7 * f),
        (this._months = +e + 3 * d + 12 * c),
        (this._data = {}),
        (this._locale = vb.localeData()),
        this._bubble();
    }

    function o(a, b) {
        for (var d in b) c(b, d) && (a[d] = b[d]);
        return (
            c(b, "toString") && (a.toString = b.toString),
            c(b, "valueOf") && (a.valueOf = b.valueOf),
            a
        );
    }

    function p(a, b) {
        var c, d, e;
        if (
            ("undefined" != typeof b._isAMomentObject &&
                (a._isAMomentObject = b._isAMomentObject),
                "undefined" != typeof b._i && (a._i = b._i),
                "undefined" != typeof b._f && (a._f = b._f),
                "undefined" != typeof b._l && (a._l = b._l),
                "undefined" != typeof b._strict && (a._strict = b._strict),
                "undefined" != typeof b._tzm && (a._tzm = b._tzm),
                "undefined" != typeof b._isUTC && (a._isUTC = b._isUTC),
                "undefined" != typeof b._offset && (a._offset = b._offset),
                "undefined" != typeof b._pf && (a._pf = b._pf),
                "undefined" != typeof b._locale && (a._locale = b._locale),
                Kb.length > 0)
        )
            for (c in Kb)
                (d = Kb[c]), (e = b[d]), "undefined" != typeof e && (a[d] = e);
        return a;
    }

    function q(a) {
        return 0 > a ? Math.ceil(a) : Math.floor(a);
    }

    function r(a, b, c) {
        for (var d = "" + Math.abs(a), e = a >= 0; d.length < b;) d = "0" + d;
        return (e ? (c ? "+" : "") : "-") + d;
    }

    function s(a, b) {
        var c = {
            milliseconds: 0,
            months: 0
        };
        return (
            (c.months = b.month() - a.month() + 12 * (b.year() - a.year())),
            a.clone().add(c.months, "M").isAfter(b) && --c.months,
            (c.milliseconds = +b - +a.clone().add(c.months, "M")),
            c
        );
    }

    function t(a, b) {
        var c;
        return (
            (b = M(b, a)),
            a.isBefore(b) ?
            (c = s(a, b)) :
            ((c = s(b, a)),
                (c.milliseconds = -c.milliseconds),
                (c.months = -c.months)),
            c
        );
    }

    function u(a, b) {
        return function(c, d) {
            var e, f;
            return (
                null === d ||
                isNaN(+d) ||
                (g(
                        b,
                        "moment()." +
                        b +
                        "(period, number) is deprecated. Please use moment()." +
                        b +
                        "(number, period)."
                    ),
                    (f = c),
                    (c = d),
                    (d = f)),
                (c = "string" == typeof c ? +c : c),
                (e = vb.duration(c, d)),
                v(this, e, a),
                this
            );
        };
    }

    function v(a, b, c, d) {
        var e = b._milliseconds,
            f = b._days,
            g = b._months;
        (d = null == d ? !0 : d),
        e && a._d.setTime(+a._d + e * c),
            f && pb(a, "Date", ob(a, "Date") + f * c),
            g && nb(a, ob(a, "Month") + g * c),
            d && vb.updateOffset(a, f || g);
    }

    function w(a) {
        return "[object Array]" === Object.prototype.toString.call(a);
    }

    function x(a) {
        return (
            "[object Date]" === Object.prototype.toString.call(a) || a instanceof Date
        );
    }

    function y(a, b, c) {
        var d,
            e = Math.min(a.length, b.length),
            f = Math.abs(a.length - b.length),
            g = 0;
        for (d = 0; e > d; d++)
            ((c && a[d] !== b[d]) || (!c && C(a[d]) !== C(b[d]))) && g++;
        return g + f;
    }

    function z(a) {
        if (a) {
            var b = a.toLowerCase().replace(/(.)s$/, "$1");
            a = lc[a] || mc[b] || b;
        }
        return a;
    }

    function A(a) {
        var b,
            d,
            e = {};
        for (d in a) c(a, d) && ((b = z(d)), b && (e[b] = a[d]));
        return e;
    }

    function B(b) {
        var c, d;
        if (0 === b.indexOf("week"))(c = 7), (d = "day");
        else {
            if (0 !== b.indexOf("month")) return;
            (c = 12), (d = "month");
        }
        vb[b] = function(e, f) {
            var g,
                h,
                i = vb._locale[b],
                j = [];
            if (
                ("number" == typeof e && ((f = e), (e = a)),
                    (h = function(a) {
                        var b = vb().utc().set(d, a);
                        return i.call(vb._locale, b, e || "");
                    }),
                    null != f)
            )
                return h(f);
            for (g = 0; c > g; g++) j.push(h(g));
            return j;
        };
    }

    function C(a) {
        var b = +a,
            c = 0;
        return (
            0 !== b && isFinite(b) && (c = b >= 0 ? Math.floor(b) : Math.ceil(b)), c
        );
    }

    function D(a, b) {
        return new Date(Date.UTC(a, b + 1, 0)).getUTCDate();
    }

    function E(a, b, c) {
        return jb(vb([a, 11, 31 + b - c]), b, c).week;
    }

    function F(a) {
        return G(a) ? 366 : 365;
    }

    function G(a) {
        return (a % 4 === 0 && a % 100 !== 0) || a % 400 === 0;
    }

    function H(a) {
        var b;
        a._a &&
            -2 === a._pf.overflow &&
            ((b =
                    a._a[Db] < 0 || a._a[Db] > 11 ?
                    Db :
                    a._a[Eb] < 1 || a._a[Eb] > D(a._a[Cb], a._a[Db]) ?
                    Eb :
                    a._a[Fb] < 0 ||
                    a._a[Fb] > 24 ||
                    (24 === a._a[Fb] &&
                        (0 !== a._a[Gb] || 0 !== a._a[Hb] || 0 !== a._a[Ib])) ?
                    Fb :
                    a._a[Gb] < 0 || a._a[Gb] > 59 ?
                    Gb :
                    a._a[Hb] < 0 || a._a[Hb] > 59 ?
                    Hb :
                    a._a[Ib] < 0 || a._a[Ib] > 999 ?
                    Ib :
                    -1),
                a._pf._overflowDayOfYear && (Cb > b || b > Eb) && (b = Eb),
                (a._pf.overflow = b));
    }

    function I(b) {
        return (
            null == b._isValid &&
            ((b._isValid = !isNaN(b._d.getTime()) &&
                    b._pf.overflow < 0 &&
                    !b._pf.empty &&
                    !b._pf.invalidMonth &&
                    !b._pf.nullInput &&
                    !b._pf.invalidFormat &&
                    !b._pf.userInvalidated),
                b._strict &&
                (b._isValid =
                    b._isValid &&
                    0 === b._pf.charsLeftOver &&
                    0 === b._pf.unusedTokens.length &&
                    b._pf.bigHour === a)),
            b._isValid
        );
    }

    function J(a) {
        return a ? a.toLowerCase().replace("_", "-") : a;
    }

    function K(a) {
        for (var b, c, d, e, f = 0; f < a.length;) {
            for (
                e = J(a[f]).split("-"),
                b = e.length,
                c = J(a[f + 1]),
                c = c ? c.split("-") : null; b > 0;

            ) {
                if ((d = L(e.slice(0, b).join("-")))) return d;
                if (c && c.length >= b && y(e, c, !0) >= b - 1) break;
                b--;
            }
            f++;
        }
        return null;
    }

    function L(a) {
        var b = null;
        if (!Jb[a] && Lb)
            try {
                (b = vb.locale()), require("./locale/" + a), vb.locale(b);
            } catch (c) {}
        return Jb[a];
    }

    function M(a, b) {
        var c, d;
        return b._isUTC ?
            ((c = b.clone()),
                (d = (vb.isMoment(a) || x(a) ? +a : +vb(a)) - +c),
                c._d.setTime(+c._d + d),
                vb.updateOffset(c, !1),
                c) :
            vb(a).local();
    }

    function N(a) {
        return a.match(/\[[\s\S]/) ?
            a.replace(/^\[|\]$/g, "") :
            a.replace(/\\/g, "");
    }

    function O(a) {
        var b,
            c,
            d = a.match(Pb);
        for (b = 0, c = d.length; c > b; b++) d[b] = rc[d[b]] ? rc[d[b]] : N(d[b]);
        return function(e) {
            var f = "";
            for (b = 0; c > b; b++)
                f += d[b] instanceof Function ? d[b].call(e, a) : d[b];
            return f;
        };
    }

    function P(a, b) {
        return a.isValid() ?
            ((b = Q(b, a.localeData())), nc[b] || (nc[b] = O(b)), nc[b](a)) :
            a.localeData().invalidDate();
    }

    function Q(a, b) {
        function c(a) {
            return b.longDateFormat(a) || a;
        }
        var d = 5;
        for (Qb.lastIndex = 0; d >= 0 && Qb.test(a);)
            (a = a.replace(Qb, c)), (Qb.lastIndex = 0), (d -= 1);
        return a;
    }

    function R(a, b) {
        var c,
            d = b._strict;
        switch (a) {
            case "Q":
                return _b;
            case "DDDD":
                return bc;
            case "YYYY":
            case "GGGG":
            case "gggg":
                return d ? cc : Tb;
            case "Y":
            case "G":
            case "g":
                return ec;
            case "YYYYYY":
            case "YYYYY":
            case "GGGGG":
            case "ggggg":
                return d ? dc : Ub;
            case "S":
                if (d) return _b;
            case "SS":
                if (d) return ac;
            case "SSS":
                if (d) return bc;
            case "DDD":
                return Sb;
            case "MMM":
            case "MMMM":
            case "dd":
            case "ddd":
            case "dddd":
                return Wb;
            case "a":
            case "A":
                return b._locale._meridiemParse;
            case "x":
                return Zb;
            case "X":
                return $b;
            case "Z":
            case "ZZ":
                return Xb;
            case "T":
                return Yb;
            case "SSSS":
                return Vb;
            case "MM":
            case "DD":
            case "YY":
            case "GG":
            case "gg":
            case "HH":
            case "hh":
            case "mm":
            case "ss":
            case "ww":
            case "WW":
                return d ? ac : Rb;
            case "M":
            case "D":
            case "d":
            case "H":
            case "h":
            case "m":
            case "s":
            case "w":
            case "W":
            case "e":
            case "E":
                return Rb;
            case "Do":
                return d ? b._locale._ordinalParse : b._locale._ordinalParseLenient;
            default:
                return (c = new RegExp($(Z(a.replace("\\", "")), "i")));
        }
    }

    function S(a) {
        a = a || "";
        var b = a.match(Xb) || [],
            c = b[b.length - 1] || [],
            d = (c + "").match(jc) || ["-", 0, 0],
            e = +(60 * d[1]) + C(d[2]);
        return "+" === d[0] ? e : -e;
    }

    function T(a, b, c) {
        var d,
            e = c._a;
        switch (a) {
            case "Q":
                null != b && (e[Db] = 3 * (C(b) - 1));
                break;
            case "M":
            case "MM":
                null != b && (e[Db] = C(b) - 1);
                break;
            case "MMM":
            case "MMMM":
                (d = c._locale.monthsParse(b, a, c._strict)),
                null != d ? (e[Db] = d) : (c._pf.invalidMonth = b);
                break;
            case "D":
            case "DD":
                null != b && (e[Eb] = C(b));
                break;
            case "Do":
                null != b && (e[Eb] = C(parseInt(b.match(/\d{1,2}/)[0], 10)));
                break;
            case "DDD":
            case "DDDD":
                null != b && (c._dayOfYear = C(b));
                break;
            case "YY":
                e[Cb] = vb.parseTwoDigitYear(b);
                break;
            case "YYYY":
            case "YYYYY":
            case "YYYYYY":
                e[Cb] = C(b);
                break;
            case "a":
            case "A":
                c._meridiem = b;
                break;
            case "h":
            case "hh":
                c._pf.bigHour = !0;
            case "H":
            case "HH":
                e[Fb] = C(b);
                break;
            case "m":
            case "mm":
                e[Gb] = C(b);
                break;
            case "s":
            case "ss":
                e[Hb] = C(b);
                break;
            case "S":
            case "SS":
            case "SSS":
            case "SSSS":
                e[Ib] = C(1e3 * ("0." + b));
                break;
            case "x":
                c._d = new Date(C(b));
                break;
            case "X":
                c._d = new Date(1e3 * parseFloat(b));
                break;
            case "Z":
            case "ZZ":
                (c._useUTC = !0), (c._tzm = S(b));
                break;
            case "dd":
            case "ddd":
            case "dddd":
                (d = c._locale.weekdaysParse(b)),
                null != d ?
                    ((c._w = c._w || {}), (c._w.d = d)) :
                    (c._pf.invalidWeekday = b);
                break;
            case "w":
            case "ww":
            case "W":
            case "WW":
            case "d":
            case "e":
            case "E":
                a = a.substr(0, 1);
            case "gggg":
            case "GGGG":
            case "GGGGG":
                (a = a.substr(0, 2)), b && ((c._w = c._w || {}), (c._w[a] = C(b)));
                break;
            case "gg":
            case "GG":
                (c._w = c._w || {}), (c._w[a] = vb.parseTwoDigitYear(b));
        }
    }

    function U(a) {
        var c, d, e, f, g, h, i;
        (c = a._w),
        null != c.GG || null != c.W || null != c.E ?
            ((g = 1),
                (h = 4),
                (d = b(c.GG, a._a[Cb], jb(vb(), 1, 4).year)),
                (e = b(c.W, 1)),
                (f = b(c.E, 1))) :
            ((g = a._locale._week.dow),
                (h = a._locale._week.doy),
                (d = b(c.gg, a._a[Cb], jb(vb(), g, h).year)),
                (e = b(c.w, 1)),
                null != c.d ?
                ((f = c.d), g > f && ++e) :
                (f = null != c.e ? c.e + g : g)),
            (i = kb(d, e, f, h, g)),
            (a._a[Cb] = i.year),
            (a._dayOfYear = i.dayOfYear);
    }

    function V(a) {
        var c,
            d,
            e,
            f,
            g = [];
        if (!a._d) {
            for (
                e = X(a),
                a._w && null == a._a[Eb] && null == a._a[Db] && U(a),
                a._dayOfYear &&
                ((f = b(a._a[Cb], e[Cb])),
                    a._dayOfYear > F(f) && (a._pf._overflowDayOfYear = !0),
                    (d = fb(f, 0, a._dayOfYear)),
                    (a._a[Db] = d.getUTCMonth()),
                    (a._a[Eb] = d.getUTCDate())),
                c = 0; 3 > c && null == a._a[c];
                ++c
            )
                a._a[c] = g[c] = e[c];
            for (; 7 > c; c++)
                a._a[c] = g[c] = null == a._a[c] ? (2 === c ? 1 : 0) : a._a[c];
            24 === a._a[Fb] &&
                0 === a._a[Gb] &&
                0 === a._a[Hb] &&
                0 === a._a[Ib] &&
                ((a._nextDay = !0), (a._a[Fb] = 0)),
                (a._d = (a._useUTC ? fb : eb).apply(null, g)),
                null != a._tzm && a._d.setUTCMinutes(a._d.getUTCMinutes() - a._tzm),
                a._nextDay && (a._a[Fb] = 24);
        }
    }

    function W(a) {
        var b;
        a._d ||
            ((b = A(a._i)),
                (a._a = [
                    b.year,
                    b.month,
                    b.day || b.date,
                    b.hour,
                    b.minute,
                    b.second,
                    b.millisecond,
                ]),
                V(a));
    }

    function X(a) {
        var b = new Date();
        return a._useUTC ?
            [b.getUTCFullYear(), b.getUTCMonth(), b.getUTCDate()] :
            [b.getFullYear(), b.getMonth(), b.getDate()];
    }

    function Y(b) {
        if (b._f === vb.ISO_8601) return void ab(b);
        (b._a = []), (b._pf.empty = !0);
        var c,
            d,
            e,
            f,
            g,
            h = "" + b._i,
            i = h.length,
            j = 0;
        for (e = Q(b._f, b._locale).match(Pb) || [], c = 0; c < e.length; c++)
            (f = e[c]),
            (d = (h.match(R(f, b)) || [])[0]),
            d &&
            ((g = h.substr(0, h.indexOf(d))),
                g.length > 0 && b._pf.unusedInput.push(g),
                (h = h.slice(h.indexOf(d) + d.length)),
                (j += d.length)),
            rc[f] ?
            (d ? (b._pf.empty = !1) : b._pf.unusedTokens.push(f), T(f, d, b)) :
            b._strict && !d && b._pf.unusedTokens.push(f);
        (b._pf.charsLeftOver = i - j),
        h.length > 0 && b._pf.unusedInput.push(h),
            b._pf.bigHour === !0 && b._a[Fb] <= 12 && (b._pf.bigHour = a),
            (b._a[Fb] = k(b._locale, b._a[Fb], b._meridiem)),
            V(b),
            H(b);
    }

    function Z(a) {
        return a.replace(
            /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
            function(a, b, c, d, e) {
                return b || c || d || e;
            }
        );
    }

    function $(a) {
        return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
    }

    function _(a) {
        var b, c, e, f, g;
        if (0 === a._f.length)
            return (a._pf.invalidFormat = !0), void(a._d = new Date(0 / 0));
        for (f = 0; f < a._f.length; f++)
            (g = 0),
            (b = p({}, a)),
            null != a._useUTC && (b._useUTC = a._useUTC),
            (b._pf = d()),
            (b._f = a._f[f]),
            Y(b),
            I(b) &&
            ((g += b._pf.charsLeftOver),
                (g += 10 * b._pf.unusedTokens.length),
                (b._pf.score = g),
                (null == e || e > g) && ((e = g), (c = b)));
        o(a, c || b);
    }

    function ab(a) {
        var b,
            c,
            d = a._i,
            e = fc.exec(d);
        if (e) {
            for (a._pf.iso = !0, b = 0, c = hc.length; c > b; b++)
                if (hc[b][1].exec(d)) {
                    a._f = hc[b][0] + (e[6] || " ");
                    break;
                }
            for (b = 0, c = ic.length; c > b; b++)
                if (ic[b][1].exec(d)) {
                    a._f += ic[b][0];
                    break;
                }
            d.match(Xb) && (a._f += "Z"), Y(a);
        } else a._isValid = !1;
    }

    function bb(a) {
        ab(a),
            a._isValid === !1 && (delete a._isValid, vb.createFromInputFallback(a));
    }

    function cb(a, b) {
        var c,
            d = [];
        for (c = 0; c < a.length; ++c) d.push(b(a[c], c));
        return d;
    }

    function db(b) {
        var c,
            d = b._i;
        d === a ?
            (b._d = new Date()) :
            x(d) ?
            (b._d = new Date(+d)) :
            null !== (c = Mb.exec(d)) ?
            (b._d = new Date(+c[1])) :
            "string" == typeof d ?
            bb(b) :
            w(d) ?
            ((b._a = cb(d.slice(0), function(a) {
                    return parseInt(a, 10);
                })),
                V(b)) :
            "object" == typeof d ?
            W(b) :
            "number" == typeof d ?
            (b._d = new Date(d)) :
            vb.createFromInputFallback(b);
    }

    function eb(a, b, c, d, e, f, g) {
        var h = new Date(a, b, c, d, e, f, g);
        return 1970 > a && h.setFullYear(a), h;
    }

    function fb(a) {
        var b = new Date(Date.UTC.apply(null, arguments));
        return 1970 > a && b.setUTCFullYear(a), b;
    }

    function gb(a, b) {
        if ("string" == typeof a)
            if (isNaN(a)) {
                if (((a = b.weekdaysParse(a)), "number" != typeof a)) return null;
            } else a = parseInt(a, 10);
        return a;
    }

    function hb(a, b, c, d, e) {
        return e.relativeTime(b || 1, !!c, a, d);
    }

    function ib(a, b, c) {
        var d = vb.duration(a).abs(),
            e = Ab(d.as("s")),
            f = Ab(d.as("m")),
            g = Ab(d.as("h")),
            h = Ab(d.as("d")),
            i = Ab(d.as("M")),
            j = Ab(d.as("y")),
            k = (e < oc.s && ["s", e]) ||
            (1 === f && ["m"]) ||
            (f < oc.m && ["mm", f]) ||
            (1 === g && ["h"]) ||
            (g < oc.h && ["hh", g]) ||
            (1 === h && ["d"]) ||
            (h < oc.d && ["dd", h]) ||
            (1 === i && ["M"]) ||
            (i < oc.M && ["MM", i]) ||
            (1 === j && ["y"]) || ["yy", j];
        return (k[2] = b), (k[3] = +a > 0), (k[4] = c), hb.apply({}, k);
    }

    function jb(a, b, c) {
        var d,
            e = c - b,
            f = c - a.day();
        return (
            f > e && (f -= 7),
            e - 7 > f && (f += 7),
            (d = vb(a).add(f, "d")), {
                week: Math.ceil(d.dayOfYear() / 7),
                year: d.year()
            }
        );
    }

    function kb(a, b, c, d, e) {
        var f,
            g,
            h = fb(a, 0, 1).getUTCDay();
        return (
            (h = 0 === h ? 7 : h),
            (c = null != c ? c : e),
            (f = e - h + (h > d ? 7 : 0) - (e > h ? 7 : 0)),
            (g = 7 * (b - 1) + (c - e) + f + 1), {
                year: g > 0 ? a : a - 1,
                dayOfYear: g > 0 ? g : F(a - 1) + g
            }
        );
    }

    function lb(b) {
        var c,
            d = b._i,
            e = b._f;
        return (
            (b._locale = b._locale || vb.localeData(b._l)),
            null === d || (e === a && "" === d) ?
            vb.invalid({
                nullInput: !0
            }) :
            ("string" == typeof d && (b._i = d = b._locale.preparse(d)),
                vb.isMoment(d) ?
                new m(d, !0) :
                (e ? (w(e) ? _(b) : Y(b)) : db(b),
                    (c = new m(b)),
                    c._nextDay && (c.add(1, "d"), (c._nextDay = a)),
                    c))
        );
    }

    function mb(a, b) {
        var c, d;
        if ((1 === b.length && w(b[0]) && (b = b[0]), !b.length)) return vb();
        for (c = b[0], d = 1; d < b.length; ++d) b[d][a](c) && (c = b[d]);
        return c;
    }

    function nb(a, b) {
        var c;
        return "string" == typeof b &&
            ((b = a.localeData().monthsParse(b)), "number" != typeof b) ?
            a :
            ((c = Math.min(a.date(), D(a.year(), b))),
                a._d["set" + (a._isUTC ? "UTC" : "") + "Month"](b, c),
                a);
    }

    function ob(a, b) {
        return a._d["get" + (a._isUTC ? "UTC" : "") + b]();
    }

    function pb(a, b, c) {
        return "Month" === b ?
            nb(a, c) :
            a._d["set" + (a._isUTC ? "UTC" : "") + b](c);
    }

    function qb(a, b) {
        return function(c) {
            return null != c ?
                (pb(this, a, c), vb.updateOffset(this, b), this) :
                ob(this, a);
        };
    }

    function rb(a) {
        return (400 * a) / 146097;
    }

    function sb(a) {
        return (146097 * a) / 400;
    }

    function tb(a) {
        vb.duration.fn[a] = function() {
            return this._data[a];
        };
    }

    function ub(a) {
        "undefined" == typeof ender &&
            ((wb = zb.moment),
                (zb.moment = a ?
                    f(
                        "Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",
                        vb
                    ) :
                    vb));
    }
    for (
        var vb,
            wb,
            xb,
            yb = "2.9.0",
            zb =
            "undefined" == typeof global ||
            ("undefined" != typeof window && window !== global.window) ?
            this :
            global,
            Ab = Math.round,
            Bb = Object.prototype.hasOwnProperty,
            Cb = 0,
            Db = 1,
            Eb = 2,
            Fb = 3,
            Gb = 4,
            Hb = 5,
            Ib = 6,
            Jb = {},
            Kb = [],
            Lb = "undefined" != typeof module && module && module.exports,
            Mb = /^\/?Date\((\-?\d+)/i,
            Nb = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
            Ob =
            /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,
            Pb =
            /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,
            Qb = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
            Rb = /\d\d?/,
            Sb = /\d{1,3}/,
            Tb = /\d{1,4}/,
            Ub = /[+\-]?\d{1,6}/,
            Vb = /\d+/,
            Wb =
            /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
            Xb = /Z|[\+\-]\d\d:?\d\d/gi,
            Yb = /T/i,
            Zb = /[\+\-]?\d+/,
            $b = /[\+\-]?\d+(\.\d{1,3})?/,
            _b = /\d/,
            ac = /\d\d/,
            bc = /\d{3}/,
            cc = /\d{4}/,
            dc = /[+-]?\d{6}/,
            ec = /[+-]?\d+/,
            fc =
            /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            gc = "YYYY-MM-DDTHH:mm:ssZ",
            hc = [
                ["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/],
                ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/],
                ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/],
                ["GGGG-[W]WW", /\d{4}-W\d{2}/],
                ["YYYY-DDD", /\d{4}-\d{3}/],
            ],
            ic = [
                ["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/],
                ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
                ["HH:mm", /(T| )\d\d:\d\d/],
                ["HH", /(T| )\d\d/],
            ],
            jc = /([\+\-]|\d\d)/gi,
            kc =
            ("Date|Hours|Minutes|Seconds|Milliseconds".split("|"), {
                Milliseconds: 1,
                Seconds: 1e3,
                Minutes: 6e4,
                Hours: 36e5,
                Days: 864e5,
                Months: 2592e6,
                Years: 31536e6,
            }),
            lc = {
                ms: "millisecond",
                s: "second",
                m: "minute",
                h: "hour",
                d: "day",
                D: "date",
                w: "week",
                W: "isoWeek",
                M: "month",
                Q: "quarter",
                y: "year",
                DDD: "dayOfYear",
                e: "weekday",
                E: "isoWeekday",
                gg: "weekYear",
                GG: "isoWeekYear",
            },
            mc = {
                dayofyear: "dayOfYear",
                isoweekday: "isoWeekday",
                isoweek: "isoWeek",
                weekyear: "weekYear",
                isoweekyear: "isoWeekYear",
            },
            nc = {},
            oc = {
                s: 45,
                m: 45,
                h: 22,
                d: 26,
                M: 11
            },
            pc = "DDD w W M D d".split(" "),
            qc = "M D H h m s w W".split(" "),
            rc = {
                M: function() {
                    return this.month() + 1;
                },
                MMM: function(a) {
                    return this.localeData().monthsShort(this, a);
                },
                MMMM: function(a) {
                    return this.localeData().months(this, a);
                },
                D: function() {
                    return this.date();
                },
                DDD: function() {
                    return this.dayOfYear();
                },
                d: function() {
                    return this.day();
                },
                dd: function(a) {
                    return this.localeData().weekdaysMin(this, a);
                },
                ddd: function(a) {
                    return this.localeData().weekdaysShort(this, a);
                },
                dddd: function(a) {
                    return this.localeData().weekdays(this, a);
                },
                w: function() {
                    return this.week();
                },
                W: function() {
                    return this.isoWeek();
                },
                YY: function() {
                    return r(this.year() % 100, 2);
                },
                YYYY: function() {
                    return r(this.year(), 4);
                },
                YYYYY: function() {
                    return r(this.year(), 5);
                },
                YYYYYY: function() {
                    var a = this.year(),
                        b = a >= 0 ? "+" : "-";
                    return b + r(Math.abs(a), 6);
                },
                gg: function() {
                    return r(this.weekYear() % 100, 2);
                },
                gggg: function() {
                    return r(this.weekYear(), 4);
                },
                ggggg: function() {
                    return r(this.weekYear(), 5);
                },
                GG: function() {
                    return r(this.isoWeekYear() % 100, 2);
                },
                GGGG: function() {
                    return r(this.isoWeekYear(), 4);
                },
                GGGGG: function() {
                    return r(this.isoWeekYear(), 5);
                },
                e: function() {
                    return this.weekday();
                },
                E: function() {
                    return this.isoWeekday();
                },
                a: function() {
                    return this.localeData().meridiem(this.hours(), this.minutes(), !0);
                },
                A: function() {
                    return this.localeData().meridiem(this.hours(), this.minutes(), !1);
                },
                H: function() {
                    return this.hours();
                },
                h: function() {
                    return this.hours() % 12 || 12;
                },
                m: function() {
                    return this.minutes();
                },
                s: function() {
                    return this.seconds();
                },
                S: function() {
                    return C(this.milliseconds() / 100);
                },
                SS: function() {
                    return r(C(this.milliseconds() / 10), 2);
                },
                SSS: function() {
                    return r(this.milliseconds(), 3);
                },
                SSSS: function() {
                    return r(this.milliseconds(), 3);
                },
                Z: function() {
                    var a = this.utcOffset(),
                        b = "+";
                    return (
                        0 > a && ((a = -a), (b = "-")),
                        b + r(C(a / 60), 2) + ":" + r(C(a) % 60, 2)
                    );
                },
                ZZ: function() {
                    var a = this.utcOffset(),
                        b = "+";
                    return (
                        0 > a && ((a = -a), (b = "-")),
                        b + r(C(a / 60), 2) + r(C(a) % 60, 2)
                    );
                },
                z: function() {
                    return this.zoneAbbr();
                },
                zz: function() {
                    return this.zoneName();
                },
                x: function() {
                    return this.valueOf();
                },
                X: function() {
                    return this.unix();
                },
                Q: function() {
                    return this.quarter();
                },
            },
            sc = {},
            tc = [
                "months",
                "monthsShort",
                "weekdays",
                "weekdaysShort",
                "weekdaysMin",
            ],
            uc = !1; pc.length;

    )
        (xb = pc.pop()), (rc[xb + "o"] = i(rc[xb], xb));
    for (; qc.length;)(xb = qc.pop()), (rc[xb + xb] = h(rc[xb], 2));
    (rc.DDDD = h(rc.DDD, 3)),
    o(l.prototype, {
            set: function(a) {
                var b, c;
                for (c in a)
                    (b = a[c]),
                    "function" == typeof b ? (this[c] = b) : (this["_" + c] = b);
                this._ordinalParseLenient = new RegExp(
                    this._ordinalParse.source + "|" + /\d{1,2}/.source
                );
            },
            _months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
            ),
            months: function(a) {
                return this._months[a.month()];
            },
            _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
            ),
            monthsShort: function(a) {
                return this._monthsShort[a.month()];
            },
            monthsParse: function(a, b, c) {
                var d, e, f;
                for (
                    this._monthsParse ||
                    ((this._monthsParse = []),
                        (this._longMonthsParse = []),
                        (this._shortMonthsParse = [])),
                    d = 0; 12 > d; d++
                ) {
                    if (
                        ((e = vb.utc([2e3, d])),
                            c &&
                            !this._longMonthsParse[d] &&
                            ((this._longMonthsParse[d] = new RegExp(
                                    "^" + this.months(e, "").replace(".", "") + "$",
                                    "i"
                                )),
                                (this._shortMonthsParse[d] = new RegExp(
                                    "^" + this.monthsShort(e, "").replace(".", "") + "$",
                                    "i"
                                ))),
                            c ||
                            this._monthsParse[d] ||
                            ((f = "^" + this.months(e, "") + "|^" + this.monthsShort(e, "")),
                                (this._monthsParse[d] = new RegExp(f.replace(".", ""), "i"))),
                            c && "MMMM" === b && this._longMonthsParse[d].test(a))
                    )
                        return d;
                    if (c && "MMM" === b && this._shortMonthsParse[d].test(a)) return d;
                    if (!c && this._monthsParse[d].test(a)) return d;
                }
            },
            _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdays: function(a) {
                return this._weekdays[a.day()];
            },
            _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysShort: function(a) {
                return this._weekdaysShort[a.day()];
            },
            _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            weekdaysMin: function(a) {
                return this._weekdaysMin[a.day()];
            },
            weekdaysParse: function(a) {
                var b, c, d;
                for (
                    this._weekdaysParse || (this._weekdaysParse = []), b = 0; 7 > b; b++
                )
                    if (
                        (this._weekdaysParse[b] ||
                            ((c = vb([2e3, 1]).day(b)),
                                (d =
                                    "^" +
                                    this.weekdays(c, "") +
                                    "|^" +
                                    this.weekdaysShort(c, "") +
                                    "|^" +
                                    this.weekdaysMin(c, "")),
                                (this._weekdaysParse[b] = new RegExp(d.replace(".", ""), "i"))),
                            this._weekdaysParse[b].test(a))
                    )
                        return b;
            },
            _longDateFormat: {
                LTS: "h:mm:ss A",
                LT: "h:mm A",
                L: "MM/DD/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY LT",
                LLLL: "dddd, MMMM D, YYYY LT",
            },
            longDateFormat: function(a) {
                var b = this._longDateFormat[a];
                return (!b &&
                    this._longDateFormat[a.toUpperCase()] &&
                    ((b = this._longDateFormat[a.toUpperCase()].replace(
                            /MMMM|MM|DD|dddd/g,
                            function(a) {
                                return a.slice(1);
                            }
                        )),
                        (this._longDateFormat[a] = b)),
                    b
                );
            },
            isPM: function(a) {
                return "p" === (a + "").toLowerCase().charAt(0);
            },
            _meridiemParse: /[ap]\.?m?\.?/i,
            meridiem: function(a, b, c) {
                return a > 11 ? (c ? "pm" : "PM") : c ? "am" : "AM";
            },
            _calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L",
            },
            calendar: function(a, b, c) {
                var d = this._calendar[a];
                return "function" == typeof d ? d.apply(b, [c]) : d;
            },
            _relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years",
            },
            relativeTime: function(a, b, c, d) {
                var e = this._relativeTime[c];
                return "function" == typeof e ? e(a, b, c, d) : e.replace(/%d/i, a);
            },
            pastFuture: function(a, b) {
                var c = this._relativeTime[a > 0 ? "future" : "past"];
                return "function" == typeof c ? c(b) : c.replace(/%s/i, b);
            },
            ordinal: function(a) {
                return this._ordinal.replace("%d", a);
            },
            _ordinal: "%d",
            _ordinalParse: /\d{1,2}/,
            preparse: function(a) {
                return a;
            },
            postformat: function(a) {
                return a;
            },
            week: function(a) {
                return jb(a, this._week.dow, this._week.doy).week;
            },
            _week: {
                dow: 0,
                doy: 6
            },
            firstDayOfWeek: function() {
                return this._week.dow;
            },
            firstDayOfYear: function() {
                return this._week.doy;
            },
            _invalidDate: "Invalid date",
            invalidDate: function() {
                return this._invalidDate;
            },
        }),
        (vb = function(b, c, e, f) {
            var g;
            return (
                "boolean" == typeof e && ((f = e), (e = a)),
                (g = {}),
                (g._isAMomentObject = !0),
                (g._i = b),
                (g._f = c),
                (g._l = e),
                (g._strict = f),
                (g._isUTC = !1),
                (g._pf = d()),
                lb(g)
            );
        }),
        (vb.suppressDeprecationWarnings = !1),
        (vb.createFromInputFallback = f(
            "moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",
            function(a) {
                a._d = new Date(a._i + (a._useUTC ? " UTC" : ""));
            }
        )),
        (vb.min = function() {
            var a = [].slice.call(arguments, 0);
            return mb("isBefore", a);
        }),
        (vb.max = function() {
            var a = [].slice.call(arguments, 0);
            return mb("isAfter", a);
        }),
        (vb.utc = function(b, c, e, f) {
            var g;
            return (
                "boolean" == typeof e && ((f = e), (e = a)),
                (g = {}),
                (g._isAMomentObject = !0),
                (g._useUTC = !0),
                (g._isUTC = !0),
                (g._l = e),
                (g._i = b),
                (g._f = c),
                (g._strict = f),
                (g._pf = d()),
                lb(g).utc()
            );
        }),
        (vb.unix = function(a) {
            return vb(1e3 * a);
        }),
        (vb.duration = function(a, b) {
            var d,
                e,
                f,
                g,
                h = a,
                i = null;
            return (
                vb.isDuration(a) ?
                (h = {
                    ms: a._milliseconds,
                    d: a._days,
                    M: a._months
                }) :
                "number" == typeof a ?
                ((h = {}), b ? (h[b] = a) : (h.milliseconds = a)) :
                (i = Nb.exec(a)) ?
                ((d = "-" === i[1] ? -1 : 1),
                    (h = {
                        y: 0,
                        d: C(i[Eb]) * d,
                        h: C(i[Fb]) * d,
                        m: C(i[Gb]) * d,
                        s: C(i[Hb]) * d,
                        ms: C(i[Ib]) * d,
                    })) :
                (i = Ob.exec(a)) ?
                ((d = "-" === i[1] ? -1 : 1),
                    (f = function(a) {
                        var b = a && parseFloat(a.replace(",", "."));
                        return (isNaN(b) ? 0 : b) * d;
                    }),
                    (h = {
                        y: f(i[2]),
                        M: f(i[3]),
                        d: f(i[4]),
                        h: f(i[5]),
                        m: f(i[6]),
                        s: f(i[7]),
                        w: f(i[8]),
                    })) :
                null == h ?
                (h = {}) :
                "object" == typeof h &&
                ("from" in h || "to" in h) &&
                ((g = t(vb(h.from), vb(h.to))),
                    (h = {}),
                    (h.ms = g.milliseconds),
                    (h.M = g.months)),
                (e = new n(h)),
                vb.isDuration(a) && c(a, "_locale") && (e._locale = a._locale),
                e
            );
        }),
        (vb.version = yb),
        (vb.defaultFormat = gc),
        (vb.ISO_8601 = function() {}),
        (vb.momentProperties = Kb),
        (vb.updateOffset = function() {}),
        (vb.relativeTimeThreshold = function(b, c) {
            return oc[b] === a ? !1 : c === a ? oc[b] : ((oc[b] = c), !0);
        }),
        (vb.lang = f(
            "moment.lang is deprecated. Use moment.locale instead.",
            function(a, b) {
                return vb.locale(a, b);
            }
        )),
        (vb.locale = function(a, b) {
            var c;
            return (
                a &&
                ((c =
                        "undefined" != typeof b ? vb.defineLocale(a, b) : vb.localeData(a)),
                    c && (vb.duration._locale = vb._locale = c)),
                vb._locale._abbr
            );
        }),
        (vb.defineLocale = function(a, b) {
            return null !== b ?
                ((b.abbr = a),
                    Jb[a] || (Jb[a] = new l()),
                    Jb[a].set(b),
                    vb.locale(a),
                    Jb[a]) :
                (delete Jb[a], null);
        }),
        (vb.langData = f(
            "moment.langData is deprecated. Use moment.localeData instead.",
            function(a) {
                return vb.localeData(a);
            }
        )),
        (vb.localeData = function(a) {
            var b;
            if ((a && a._locale && a._locale._abbr && (a = a._locale._abbr), !a))
                return vb._locale;
            if (!w(a)) {
                if ((b = L(a))) return b;
                a = [a];
            }
            return K(a);
        }),
        (vb.isMoment = function(a) {
            return a instanceof m || (null != a && c(a, "_isAMomentObject"));
        }),
        (vb.isDuration = function(a) {
            return a instanceof n;
        });
    for (xb = tc.length - 1; xb >= 0; --xb) B(tc[xb]);
    (vb.normalizeUnits = function(a) {
        return z(a);
    }),
    (vb.invalid = function(a) {
        var b = vb.utc(0 / 0);
        return null != a ? o(b._pf, a) : (b._pf.userInvalidated = !0), b;
    }),
    (vb.parseZone = function() {
        return vb.apply(null, arguments).parseZone();
    }),
    (vb.parseTwoDigitYear = function(a) {
        return C(a) + (C(a) > 68 ? 1900 : 2e3);
    }),
    (vb.isDate = x),
    o((vb.fn = m.prototype), {
            clone: function() {
                return vb(this);
            },
            valueOf: function() {
                return +this._d - 6e4 * (this._offset || 0);
            },
            unix: function() {
                return Math.floor(+this / 1e3);
            },
            toString: function() {
                return this.clone()
                    .locale("en")
                    .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
            },
            toDate: function() {
                return this._offset ? new Date(+this) : this._d;
            },
            toISOString: function() {
                var a = vb(this).utc();
                return 0 < a.year() && a.year() <= 9999 ?
                    "function" == typeof Date.prototype.toISOString ?
                    this.toDate().toISOString() :
                    P(a, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") :
                    P(a, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
            },
            toArray: function() {
                var a = this;
                return [
                    a.year(),
                    a.month(),
                    a.date(),
                    a.hours(),
                    a.minutes(),
                    a.seconds(),
                    a.milliseconds(),
                ];
            },
            isValid: function() {
                return I(this);
            },
            isDSTShifted: function() {
                return this._a ?
                    this.isValid() &&
                    y(
                        this._a,
                        (this._isUTC ? vb.utc(this._a) : vb(this._a)).toArray()
                    ) > 0 :
                    !1;
            },
            parsingFlags: function() {
                return o({}, this._pf);
            },
            invalidAt: function() {
                return this._pf.overflow;
            },
            utc: function(a) {
                return this.utcOffset(0, a);
            },
            local: function(a) {
                return (
                    this._isUTC &&
                    (this.utcOffset(0, a),
                        (this._isUTC = !1),
                        a && this.subtract(this._dateUtcOffset(), "m")),
                    this
                );
            },
            format: function(a) {
                var b = P(this, a || vb.defaultFormat);
                return this.localeData().postformat(b);
            },
            add: u(1, "add"),
            subtract: u(-1, "subtract"),
            diff: function(a, b, c) {
                var d,
                    e,
                    f = M(a, this),
                    g = 6e4 * (f.utcOffset() - this.utcOffset());
                return (
                    (b = z(b)),
                    "year" === b || "month" === b || "quarter" === b ?
                    ((e = j(this, f)),
                        "quarter" === b ? (e /= 3) : "year" === b && (e /= 12)) :
                    ((d = this - f),
                        (e =
                            "second" === b ?
                            d / 1e3 :
                            "minute" === b ?
                            d / 6e4 :
                            "hour" === b ?
                            d / 36e5 :
                            "day" === b ?
                            (d - g) / 864e5 :
                            "week" === b ?
                            (d - g) / 6048e5 :
                            d)),
                    c ? e : q(e)
                );
            },
            from: function(a, b) {
                return vb
                    .duration({
                        to: this,
                        from: a
                    })
                    .locale(this.locale())
                    .humanize(!b);
            },
            fromNow: function(a) {
                return this.from(vb(), a);
            },
            calendar: function(a) {
                var b = a || vb(),
                    c = M(b, this).startOf("day"),
                    d = this.diff(c, "days", !0),
                    e = -6 > d ?
                    "sameElse" :
                    -1 > d ?
                    "lastWeek" :
                    0 > d ?
                    "lastDay" :
                    1 > d ?
                    "sameDay" :
                    2 > d ?
                    "nextDay" :
                    7 > d ?
                    "nextWeek" :
                    "sameElse";
                return this.format(this.localeData().calendar(e, this, vb(b)));
            },
            isLeapYear: function() {
                return G(this.year());
            },
            isDST: function() {
                return (
                    this.utcOffset() > this.clone().month(0).utcOffset() ||
                    this.utcOffset() > this.clone().month(5).utcOffset()
                );
            },
            day: function(a) {
                var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                return null != a ?
                    ((a = gb(a, this.localeData())), this.add(a - b, "d")) :
                    b;
            },
            month: qb("Month", !0),
            startOf: function(a) {
                switch ((a = z(a))) {
                    case "year":
                        this.month(0);
                    case "quarter":
                    case "month":
                        this.date(1);
                    case "week":
                    case "isoWeek":
                    case "day":
                        this.hours(0);
                    case "hour":
                        this.minutes(0);
                    case "minute":
                        this.seconds(0);
                    case "second":
                        this.milliseconds(0);
                }
                return (
                    "week" === a ?
                    this.weekday(0) :
                    "isoWeek" === a && this.isoWeekday(1),
                    "quarter" === a && this.month(3 * Math.floor(this.month() / 3)),
                    this
                );
            },
            endOf: function(b) {
                return (
                    (b = z(b)),
                    b === a || "millisecond" === b ?
                    this :
                    this.startOf(b)
                    .add(1, "isoWeek" === b ? "week" : b)
                    .subtract(1, "ms")
                );
            },
            isAfter: function(a, b) {
                var c;
                return (
                    (b = z("undefined" != typeof b ? b : "millisecond")),
                    "millisecond" === b ?
                    ((a = vb.isMoment(a) ? a : vb(a)), +this > +a) :
                    ((c = vb.isMoment(a) ? +a : +vb(a)), c < +this.clone().startOf(b))
                );
            },
            isBefore: function(a, b) {
                var c;
                return (
                    (b = z("undefined" != typeof b ? b : "millisecond")),
                    "millisecond" === b ?
                    ((a = vb.isMoment(a) ? a : vb(a)), +a > +this) :
                    ((c = vb.isMoment(a) ? +a : +vb(a)), +this.clone().endOf(b) < c)
                );
            },
            isBetween: function(a, b, c) {
                return this.isAfter(a, c) && this.isBefore(b, c);
            },
            isSame: function(a, b) {
                var c;
                return (
                    (b = z(b || "millisecond")),
                    "millisecond" === b ?
                    ((a = vb.isMoment(a) ? a : vb(a)), +this === +a) :
                    ((c = +vb(a)), +this.clone().startOf(b) <= c && c <= +this.clone().endOf(b))
                );
            },
            min: f(
                "moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",
                function(a) {
                    return (a = vb.apply(null, arguments)), this > a ? this : a;
                }
            ),
            max: f(
                "moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",
                function(a) {
                    return (a = vb.apply(null, arguments)), a > this ? this : a;
                }
            ),
            zone: f(
                "moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",
                function(a, b) {
                    return null != a ?
                        ("string" != typeof a && (a = -a), this.utcOffset(a, b), this) :
                        -this.utcOffset();
                }
            ),
            utcOffset: function(a, b) {
                var c,
                    d = this._offset || 0;
                return null != a ?
                    ("string" == typeof a && (a = S(a)),
                        Math.abs(a) < 16 && (a = 60 * a), !this._isUTC && b && (c = this._dateUtcOffset()),
                        (this._offset = a),
                        (this._isUTC = !0),
                        null != c && this.add(c, "m"),
                        d !== a &&
                        (!b || this._changeInProgress ?
                            v(this, vb.duration(a - d, "m"), 1, !1) :
                            this._changeInProgress ||
                            ((this._changeInProgress = !0),
                                vb.updateOffset(this, !0),
                                (this._changeInProgress = null))),
                        this) :
                    this._isUTC ?
                    d :
                    this._dateUtcOffset();
            },
            isLocal: function() {
                return !this._isUTC;
            },
            isUtcOffset: function() {
                return this._isUTC;
            },
            isUtc: function() {
                return this._isUTC && 0 === this._offset;
            },
            zoneAbbr: function() {
                return this._isUTC ? "UTC" : "";
            },
            zoneName: function() {
                return this._isUTC ? "Coordinated Universal Time" : "";
            },
            parseZone: function() {
                return (
                    this._tzm ?
                    this.utcOffset(this._tzm) :
                    "string" == typeof this._i && this.utcOffset(S(this._i)),
                    this
                );
            },
            hasAlignedHourOffset: function(a) {
                return (
                    (a = a ? vb(a).utcOffset() : 0), (this.utcOffset() - a) % 60 === 0
                );
            },
            daysInMonth: function() {
                return D(this.year(), this.month());
            },
            dayOfYear: function(a) {
                var b =
                    Ab((vb(this).startOf("day") - vb(this).startOf("year")) / 864e5) + 1;
                return null == a ? b : this.add(a - b, "d");
            },
            quarter: function(a) {
                return null == a ?
                    Math.ceil((this.month() + 1) / 3) :
                    this.month(3 * (a - 1) + (this.month() % 3));
            },
            weekYear: function(a) {
                var b = jb(
                    this,
                    this.localeData()._week.dow,
                    this.localeData()._week.doy
                ).year;
                return null == a ? b : this.add(a - b, "y");
            },
            isoWeekYear: function(a) {
                var b = jb(this, 1, 4).year;
                return null == a ? b : this.add(a - b, "y");
            },
            week: function(a) {
                var b = this.localeData().week(this);
                return null == a ? b : this.add(7 * (a - b), "d");
            },
            isoWeek: function(a) {
                var b = jb(this, 1, 4).week;
                return null == a ? b : this.add(7 * (a - b), "d");
            },
            weekday: function(a) {
                var b = (this.day() + 7 - this.localeData()._week.dow) % 7;
                return null == a ? b : this.add(a - b, "d");
            },
            isoWeekday: function(a) {
                return null == a ?
                    this.day() || 7 :
                    this.day(this.day() % 7 ? a : a - 7);
            },
            isoWeeksInYear: function() {
                return E(this.year(), 1, 4);
            },
            weeksInYear: function() {
                var a = this.localeData()._week;
                return E(this.year(), a.dow, a.doy);
            },
            get: function(a) {
                return (a = z(a)), this[a]();
            },
            set: function(a, b) {
                var c;
                if ("object" == typeof a)
                    for (c in a) this.set(c, a[c]);
                else(a = z(a)), "function" == typeof this[a] && this[a](b);
                return this;
            },
            locale: function(b) {
                var c;
                return b === a ?
                    this._locale._abbr :
                    ((c = vb.localeData(b)), null != c && (this._locale = c), this);
            },
            lang: f(
                "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
                function(b) {
                    return b === a ? this.localeData() : this.locale(b);
                }
            ),
            localeData: function() {
                return this._locale;
            },
            _dateUtcOffset: function() {
                return 15 * -Math.round(this._d.getTimezoneOffset() / 15);
            },
        }),
        (vb.fn.millisecond = vb.fn.milliseconds = qb("Milliseconds", !1)),
        (vb.fn.second = vb.fn.seconds = qb("Seconds", !1)),
        (vb.fn.minute = vb.fn.minutes = qb("Minutes", !1)),
        (vb.fn.hour = vb.fn.hours = qb("Hours", !0)),
        (vb.fn.date = qb("Date", !0)),
        (vb.fn.dates = f(
            "dates accessor is deprecated. Use date instead.",
            qb("Date", !0)
        )),
        (vb.fn.year = qb("FullYear", !0)),
        (vb.fn.years = f(
            "years accessor is deprecated. Use year instead.",
            qb("FullYear", !0)
        )),
        (vb.fn.days = vb.fn.day),
        (vb.fn.months = vb.fn.month),
        (vb.fn.weeks = vb.fn.week),
        (vb.fn.isoWeeks = vb.fn.isoWeek),
        (vb.fn.quarters = vb.fn.quarter),
        (vb.fn.toJSON = vb.fn.toISOString),
        (vb.fn.isUTC = vb.fn.isUtc),
        o((vb.duration.fn = n.prototype), {
            _bubble: function() {
                var a,
                    b,
                    c,
                    d = this._milliseconds,
                    e = this._days,
                    f = this._months,
                    g = this._data,
                    h = 0;
                (g.milliseconds = d % 1e3),
                (a = q(d / 1e3)),
                (g.seconds = a % 60),
                (b = q(a / 60)),
                (g.minutes = b % 60),
                (c = q(b / 60)),
                (g.hours = c % 24),
                (e += q(c / 24)),
                (h = q(rb(e))),
                (e -= q(sb(h))),
                (f += q(e / 30)),
                (e %= 30),
                (h += q(f / 12)),
                (f %= 12),
                (g.days = e),
                (g.months = f),
                (g.years = h);
            },
            abs: function() {
                return (
                    (this._milliseconds = Math.abs(this._milliseconds)),
                    (this._days = Math.abs(this._days)),
                    (this._months = Math.abs(this._months)),
                    (this._data.milliseconds = Math.abs(this._data.milliseconds)),
                    (this._data.seconds = Math.abs(this._data.seconds)),
                    (this._data.minutes = Math.abs(this._data.minutes)),
                    (this._data.hours = Math.abs(this._data.hours)),
                    (this._data.months = Math.abs(this._data.months)),
                    (this._data.years = Math.abs(this._data.years)),
                    this
                );
            },
            weeks: function() {
                return q(this.days() / 7);
            },
            valueOf: function() {
                return (
                    this._milliseconds +
                    864e5 * this._days +
                    (this._months % 12) * 2592e6 +
                    31536e6 * C(this._months / 12)
                );
            },
            humanize: function(a) {
                var b = ib(this, !a, this.localeData());
                return (
                    a && (b = this.localeData().pastFuture(+this, b)),
                    this.localeData().postformat(b)
                );
            },
            add: function(a, b) {
                var c = vb.duration(a, b);
                return (
                    (this._milliseconds += c._milliseconds),
                    (this._days += c._days),
                    (this._months += c._months),
                    this._bubble(),
                    this
                );
            },
            subtract: function(a, b) {
                var c = vb.duration(a, b);
                return (
                    (this._milliseconds -= c._milliseconds),
                    (this._days -= c._days),
                    (this._months -= c._months),
                    this._bubble(),
                    this
                );
            },
            get: function(a) {
                return (a = z(a)), this[a.toLowerCase() + "s"]();
            },
            as: function(a) {
                var b, c;
                if (((a = z(a)), "month" === a || "year" === a))
                    return (
                        (b = this._days + this._milliseconds / 864e5),
                        (c = this._months + 12 * rb(b)),
                        "month" === a ? c : c / 12
                    );
                switch (((b = this._days + Math.round(sb(this._months / 12))), a)) {
                    case "week":
                        return b / 7 + this._milliseconds / 6048e5;
                    case "day":
                        return b + this._milliseconds / 864e5;
                    case "hour":
                        return 24 * b + this._milliseconds / 36e5;
                    case "minute":
                        return 24 * b * 60 + this._milliseconds / 6e4;
                    case "second":
                        return 24 * b * 60 * 60 + this._milliseconds / 1e3;
                    case "millisecond":
                        return Math.floor(24 * b * 60 * 60 * 1e3) + this._milliseconds;
                    default:
                        throw new Error("Unknown unit " + a);
                }
            },
            lang: vb.fn.lang,
            locale: vb.fn.locale,
            toIsoString: f(
                "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
                function() {
                    return this.toISOString();
                }
            ),
            toISOString: function() {
                var a = Math.abs(this.years()),
                    b = Math.abs(this.months()),
                    c = Math.abs(this.days()),
                    d = Math.abs(this.hours()),
                    e = Math.abs(this.minutes()),
                    f = Math.abs(this.seconds() + this.milliseconds() / 1e3);
                return this.asSeconds() ?
                    (this.asSeconds() < 0 ? "-" : "") +
                    "P" +
                    (a ? a + "Y" : "") +
                    (b ? b + "M" : "") +
                    (c ? c + "D" : "") +
                    (d || e || f ? "T" : "") +
                    (d ? d + "H" : "") +
                    (e ? e + "M" : "") +
                    (f ? f + "S" : "") :
                    "P0D";
            },
            localeData: function() {
                return this._locale;
            },
            toJSON: function() {
                return this.toISOString();
            },
        }),
        (vb.duration.fn.toString = vb.duration.fn.toISOString);
    for (xb in kc) c(kc, xb) && tb(xb.toLowerCase());
    (vb.duration.fn.asMilliseconds = function() {
        return this.as("ms");
    }),
    (vb.duration.fn.asSeconds = function() {
        return this.as("s");
    }),
    (vb.duration.fn.asMinutes = function() {
        return this.as("m");
    }),
    (vb.duration.fn.asHours = function() {
        return this.as("h");
    }),
    (vb.duration.fn.asDays = function() {
        return this.as("d");
    }),
    (vb.duration.fn.asWeeks = function() {
        return this.as("weeks");
    }),
    (vb.duration.fn.asMonths = function() {
        return this.as("M");
    }),
    (vb.duration.fn.asYears = function() {
        return this.as("y");
    }),
    vb.locale("en", {
            ordinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function(a) {
                var b = a % 10,
                    c =
                    1 === C((a % 100) / 10) ?
                    "th" :
                    1 === b ?
                    "st" :
                    2 === b ?
                    "nd" :
                    3 === b ?
                    "rd" :
                    "th";
                return a + c;
            },
        }),
        Lb ?
        (module.exports = vb) :
        "function" == typeof define && define.amd ?
        (define(function(a, b, c) {
                return (
                    c.config &&
                    c.config() &&
                    c.config().noGlobal === !0 &&
                    (zb.moment = wb),
                    vb
                );
            }),
            ub(!0)) :
        ub();
}.call(this));

/*!
 * FullCalendar v2.3.2 + Google Calendar Plugin
 * Docs & License: http://fullcalendar.io/
 * (c) 2015 Adam Shaw
 */
!(function(a) {
    "function" == typeof define && define.amd ?
        define(["jquery", "moment"], a) :
        "object" == typeof exports ?
        (module.exports = a(require("jquery"), require("moment"))) :
        a(jQuery, moment);
})(function(a, b) {
    function c(a) {
        return J(a, La);
    }

    function d(b) {
        var c,
            d = {
                views: b.views || {}
            };
        return (
            a.each(b, function(b, e) {
                "views" != b &&
                    (a.isPlainObject(e) &&
                        !/(time|duration|interval)$/i.test(b) &&
                        -1 == a.inArray(b, La) ?
                        ((c = null),
                            a.each(e, function(a, e) {
                                /^(month|week|day|default|basic(Week|Day)?|agenda(Week|Day)?)$/.test(
                                        a
                                    ) ?
                                    (d.views[a] || (d.views[a] = {}), (d.views[a][b] = e)) :
                                    (c || (c = {}), (c[a] = e));
                            }),
                            c && (d[b] = c)) :
                        (d[b] = e));
            }),
            d
        );
    }

    function e(a, b) {
        b.left && a.css({
                "border-left-width": 1,
                "margin-left": b.left - 1
            }),
            b.right &&
            a.css({
                "border-right-width": 1,
                "margin-right": b.right - 1
            });
    }

    function f(a) {
        a.css({
            "margin-left": "",
            "margin-right": "",
            "border-left-width": "",
            "border-right-width": "",
        });
    }

    function g() {
        a("body").addClass("fc-not-allowed");
    }

    function h() {
        a("body").removeClass("fc-not-allowed");
    }

    function i(b, c, d) {
        var e = Math.floor(c / b.length),
            f = Math.floor(c - e * (b.length - 1)),
            g = [],
            h = [],
            i = [],
            k = 0;
        j(b),
            b.each(function(c, d) {
                var j = c === b.length - 1 ? f : e,
                    l = a(d).outerHeight(!0);
                j > l ? (g.push(d), h.push(l), i.push(a(d).height())) : (k += l);
            }),
            d &&
            ((c -= k),
                (e = Math.floor(c / g.length)),
                (f = Math.floor(c - e * (g.length - 1)))),
            a(g).each(function(b, c) {
                var d = b === g.length - 1 ? f : e,
                    j = h[b],
                    k = i[b],
                    l = d - (j - k);
                d > j && a(c).height(l);
            });
    }

    function j(a) {
        a.height("");
    }

    function k(b) {
        var c = 0;
        return (
            b.find("> *").each(function(b, d) {
                var e = a(d).outerWidth();
                e > c && (c = e);
            }),
            c++,
            b.width(c),
            c
        );
    }

    function l(a, b) {
        return (
            a.height(b).addClass("fc-scroller"),
            a[0].scrollHeight - 1 > a[0].clientHeight ? !0 : (m(a), !1)
        );
    }

    function m(a) {
        a.height("").removeClass("fc-scroller");
    }

    function n(b) {
        var c = b.css("position"),
            d = b
            .parents()
            .filter(function() {
                var b = a(this);
                return /(auto|scroll)/.test(
                    b.css("overflow") + b.css("overflow-y") + b.css("overflow-x")
                );
            })
            .eq(0);
        return "fixed" !== c && d.length ? d : a(b[0].ownerDocument || document);
    }

    function o(a) {
        var b = a.offset();
        return {
            left: b.left,
            right: b.left + a.outerWidth(),
            top: b.top,
            bottom: b.top + a.outerHeight(),
        };
    }

    function p(a) {
        var b = a.offset(),
            c = r(a),
            d = b.left + u(a, "border-left-width") + c.left,
            e = b.top + u(a, "border-top-width") + c.top;
        return {
            left: d,
            right: d + a[0].clientWidth,
            top: e,
            bottom: e + a[0].clientHeight,
        };
    }

    function q(a) {
        var b = a.offset(),
            c = b.left + u(a, "border-left-width") + u(a, "padding-left"),
            d = b.top + u(a, "border-top-width") + u(a, "padding-top");
        return {
            left: c,
            right: c + a.width(),
            top: d,
            bottom: d + a.height()
        };
    }

    function r(a) {
        var b = a.innerWidth() - a[0].clientWidth,
            c = {
                left: 0,
                right: 0,
                top: 0,
                bottom: a.innerHeight() - a[0].clientHeight,
            };
        return s() && "rtl" == a.css("direction") ? (c.left = b) : (c.right = b), c;
    }

    function s() {
        return null === Ma && (Ma = t()), Ma;
    }

    function t() {
        var b = a("<div><div/></div>")
            .css({
                position: "absolute",
                top: -1e3,
                left: 0,
                border: 0,
                padding: 0,
                overflow: "scroll",
                direction: "rtl",
            })
            .appendTo("body"),
            c = b.children(),
            d = c.offset().left > b.offset().left;
        return b.remove(), d;
    }

    function u(a, b) {
        return parseFloat(a.css(b)) || 0;
    }

    function v(a) {
        return 1 == a.which && !a.ctrlKey;
    }

    function w(a, b) {
        var c = {
            left: Math.max(a.left, b.left),
            right: Math.min(a.right, b.right),
            top: Math.max(a.top, b.top),
            bottom: Math.min(a.bottom, b.bottom),
        };
        return c.left < c.right && c.top < c.bottom ? c : !1;
    }

    function x(a, b) {
        return {
            left: Math.min(Math.max(a.left, b.left), b.right),
            top: Math.min(Math.max(a.top, b.top), b.bottom),
        };
    }

    function y(a) {
        return {
            left: (a.left + a.right) / 2,
            top: (a.top + a.bottom) / 2
        };
    }

    function z(a, b) {
        return {
            left: a.left - b.left,
            top: a.top - b.top
        };
    }

    function A(a, b) {
        var c,
            d,
            e,
            f,
            g = a.start,
            h = a.end,
            i = b.start,
            j = b.end;
        return h > i && j > g ?
            (g >= i ? ((c = g.clone()), (e = !0)) : ((c = i.clone()), (e = !1)),
                j >= h ? ((d = h.clone()), (f = !0)) : ((d = j.clone()), (f = !1)), {
                    start: c,
                    end: d,
                    isStart: e,
                    isEnd: f
                }) :
            void 0;
    }

    function B(a, c) {
        return b.duration({
            days: a.clone().stripTime().diff(c.clone().stripTime(), "days"),
            ms: a.time() - c.time(),
        });
    }

    function C(a, c) {
        return b.duration({
            days: a.clone().stripTime().diff(c.clone().stripTime(), "days"),
        });
    }

    function D(a, c, d) {
        return b.duration(Math.round(a.diff(c, d, !0)), d);
    }

    function E(a, b) {
        var c, d, e;
        for (
            c = 0; c < Ra.length && ((d = Ra[c]), (e = F(d, a, b)), !(e >= 1 && W(e))); c++
        );
        return d;
    }

    function F(a, c, d) {
        return null != d ?
            d.diff(c, a, !0) :
            b.isDuration(c) ?
            c.as(a) :
            c.end.diff(c.start, a, !0);
    }

    function G(a) {
        return Boolean(a.hours() || a.minutes() || a.seconds() || a.milliseconds());
    }

    function H(a) {
        return (
            "[object Date]" === Object.prototype.toString.call(a) || a instanceof Date
        );
    }

    function I(a) {
        return /^\d+\:\d+(?:\:\d+\.?(?:\d{3})?)?$/.test(a);
    }

    function J(a, b) {
        var c,
            d,
            e,
            f,
            g,
            h,
            i = {};
        if (b)
            for (c = 0; c < b.length; c++) {
                for (d = b[c], e = [], f = a.length - 1; f >= 0; f--)
                    if (((g = a[f][d]), "object" == typeof g)) e.unshift(g);
                    else if (void 0 !== g) {
                    i[d] = g;
                    break;
                }
                e.length && (i[d] = J(e));
            }
        for (c = a.length - 1; c >= 0; c--) {
            h = a[c];
            for (d in h) d in i || (i[d] = h[d]);
        }
        return i;
    }

    function K(a) {
        var b = function() {};
        return (b.prototype = a), new b();
    }

    function L(a, b) {
        for (var c in a) N(a, c) && (b[c] = a[c]);
    }

    function M(a, b) {
        var c,
            d,
            e = ["constructor", "toString", "valueOf"];
        for (c = 0; c < e.length; c++)
            (d = e[c]), a[d] !== Object.prototype[d] && (b[d] = a[d]);
    }

    function N(a, b) {
        return Sa.call(a, b);
    }

    function O(b) {
        return /undefined|null|boolean|number|string/.test(a.type(b));
    }

    function P(b, c, d) {
        if ((a.isFunction(b) && (b = [b]), b)) {
            var e, f;
            for (e = 0; e < b.length; e++) f = b[e].apply(c, d) || f;
            return f;
        }
    }

    function Q() {
        for (var a = 0; a < arguments.length; a++)
            if (void 0 !== arguments[a]) return arguments[a];
    }

    function R(a) {
        return (a + "")
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/'/g, "&#039;")
            .replace(/"/g, "&quot;")
            .replace(/\n/g, "<br />");
    }

    function S(a) {
        return a.replace(/&.*?;/g, "");
    }

    function T(b) {
        var c = [];
        return (
            a.each(b, function(a, b) {
                null != b && c.push(a + ":" + b);
            }),
            c.join(";")
        );
    }

    function U(a) {
        return a.charAt(0).toUpperCase() + a.slice(1);
    }

    function V(a, b) {
        return a - b;
    }

    function W(a) {
        return a % 1 === 0;
    }

    function X(a, b) {
        var c = a[b];
        return function() {
            return c.apply(a, arguments);
        };
    }

    function Y(a, b) {
        var c,
            d,
            e,
            f,
            g = function() {
                var h = +new Date() - f;
                b > h && h > 0 ?
                    (c = setTimeout(g, b - h)) :
                    ((c = null), a.apply(e, d), c || (e = d = null));
            };
        return function() {
            (e = this),
            (d = arguments),
            (f = +new Date()),
            c || (c = setTimeout(g, b));
        };
    }

    function Z(c, d, e) {
        var f,
            g,
            h,
            i,
            j = c[0],
            k = 1 == c.length && "string" == typeof j;
        return (
            b.isMoment(j) ?
            ((i = b.apply(null, c)), _(j, i)) :
            H(j) || void 0 === j ?
            (i = b.apply(null, c)) :
            ((f = !1),
                (g = !1),
                k ?
                Ta.test(j) ?
                ((j += "-01"), (c = [j]), (f = !0), (g = !0)) :
                (h = Ua.exec(j)) && ((f = !h[5]), (g = !0)) :
                a.isArray(j) && (g = !0),
                (i = d || f ? b.utc.apply(b, c) : b.apply(null, c)),
                f ?
                ((i._ambigTime = !0), (i._ambigZone = !0)) :
                e &&
                (g ?
                    (i._ambigZone = !0) :
                    k && (i.utcOffset ? i.utcOffset(j) : i.zone(j)))),
            (i._fullCalendar = !0),
            i
        );
    }

    function $(a, c) {
        var d,
            e,
            f = !1,
            g = !1,
            h = a.length,
            i = [];
        for (d = 0; h > d; d++)
            (e = a[d]),
            b.isMoment(e) || (e = Ja.moment.parseZone(e)),
            (f = f || e._ambigTime),
            (g = g || e._ambigZone),
            i.push(e);
        for (d = 0; h > d; d++)
            (e = i[d]),
            c || !f || e._ambigTime ?
            g && !e._ambigZone && (i[d] = e.clone().stripZone()) :
            (i[d] = e.clone().stripTime());
        return i;
    }

    function _(a, b) {
        a._ambigTime ? (b._ambigTime = !0) : b._ambigTime && (b._ambigTime = !1),
            a._ambigZone ? (b._ambigZone = !0) : b._ambigZone && (b._ambigZone = !1);
    }

    function aa(a, b) {
        a.year(b[0] || 0)
            .month(b[1] || 0)
            .date(b[2] || 0)
            .hours(b[3] || 0)
            .minutes(b[4] || 0)
            .seconds(b[5] || 0)
            .milliseconds(b[6] || 0);
    }

    function ba(a, b) {
        return Wa.format.call(a, b);
    }

    function ca(a, b) {
        return da(a, ia(b));
    }

    function da(a, b) {
        var c,
            d = "";
        for (c = 0; c < b.length; c++) d += ea(a, b[c]);
        return d;
    }

    function ea(a, b) {
        var c, d;
        return "string" == typeof b ?
            b :
            (c = b.token) ?
            Xa[c] ?
            Xa[c](a) :
            ba(a, c) :
            b.maybe && ((d = da(a, b.maybe)), d.match(/[1-9]/)) ?
            d :
            "";
    }

    function fa(a, b, c, d, e) {
        var f;
        return (
            (a = Ja.moment.parseZone(a)),
            (b = Ja.moment.parseZone(b)),
            (f = (a.localeData || a.lang).call(a)),
            (c = f.longDateFormat(c) || c),
            (d = d || " - "),
            ga(a, b, ia(c), d, e)
        );
    }

    function ga(a, b, c, d, e) {
        var f,
            g,
            h,
            i,
            j = "",
            k = "",
            l = "",
            m = "",
            n = "";
        for (g = 0; g < c.length && ((f = ha(a, b, c[g])), f !== !1); g++) j += f;
        for (h = c.length - 1; h > g && ((f = ha(a, b, c[h])), f !== !1); h--)
            k = f + k;
        for (i = g; h >= i; i++)(l += ea(a, c[i])), (m += ea(b, c[i]));
        return (l || m) && (n = e ? m + d + l : l + d + m), j + n + k;
    }

    function ha(a, b, c) {
        var d, e;
        return "string" == typeof c ?
            c :
            (d = c.token) && ((e = Ya[d.charAt(0)]), e && a.isSame(b, e)) ?
            ba(a, d) :
            !1;
    }

    function ia(a) {
        return a in Za ? Za[a] : (Za[a] = ja(a));
    }

    function ja(a) {
        for (
            var b,
                c = [],
                d = /\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g;
            (b = d.exec(a));

        )
            b[1] ?
            c.push(b[1]) :
            b[2] ?
            c.push({
                maybe: ja(b[2])
            }) :
            b[3] ?
            c.push({
                token: b[3]
            }) :
            b[5] && c.push(b[5]);
        return c;
    }

    function ka() {}

    function la(a, b) {
        return a || b ?
            a && b ?
            a.grid === b.grid && a.row === b.row && a.col === b.col :
            !1 :
            !0;
    }

    function ma(a) {
        var b = oa(a);
        return "background" === b || "inverse-background" === b;
    }

    function na(a) {
        return "inverse-background" === oa(a);
    }

    function oa(a) {
        return Q((a.source || {}).rendering, a.rendering);
    }

    function pa(a) {
        var b,
            c,
            d = {};
        for (b = 0; b < a.length; b++)
            (c = a[b]), (d[c._id] || (d[c._id] = [])).push(c);
        return d;
    }

    function qa(a, b) {
        return a.eventStartMS - b.eventStartMS;
    }

    function ra(a, b) {
        return (
            a.eventStartMS - b.eventStartMS ||
            b.eventDurationMS - a.eventDurationMS ||
            b.event.allDay - a.event.allDay ||
            (a.event.title || "").localeCompare(b.event.title)
        );
    }

    function sa(c) {
        var d,
            e,
            f,
            g,
            h = Ja.dataAttrPrefix;
        return (
            h && (h += "-"),
            (d = c.data(h + "event") || null),
            d &&
            ((d = "object" == typeof d ? a.extend({}, d) : {}),
                (e = d.start),
                null == e && (e = d.time),
                (f = d.duration),
                (g = d.stick),
                delete d.start,
                delete d.time,
                delete d.duration,
                delete d.stick),
            null == e && (e = c.data(h + "start")),
            null == e && (e = c.data(h + "time")),
            null == f && (f = c.data(h + "duration")),
            null == g && (g = c.data(h + "stick")),
            (e = null != e ? b.duration(e) : null),
            (f = null != f ? b.duration(f) : null),
            (g = Boolean(g)), {
                eventProps: d,
                startTime: e,
                duration: f,
                stick: g
            }
        );
    }

    function ta(a, b) {
        var c, d;
        for (c = 0; c < b.length; c++)
            if (((d = b[c]), d.leftCol <= a.rightCol && d.rightCol >= a.leftCol))
                return !0;
        return !1;
    }

    function ua(a, b) {
        return a.leftCol - b.leftCol;
    }

    function va(a) {
        var b, c, d;
        if ((a.sort(ra), (b = wa(a)), xa(b), (c = b[0]))) {
            for (d = 0; d < c.length; d++) ya(c[d]);
            for (d = 0; d < c.length; d++) za(c[d], 0, 0);
        }
    }

    function wa(a) {
        var b,
            c,
            d,
            e = [];
        for (b = 0; b < a.length; b++) {
            for (c = a[b], d = 0; d < e.length && Aa(c, e[d]).length; d++);
            (c.level = d), (e[d] || (e[d] = [])).push(c);
        }
        return e;
    }

    function xa(a) {
        var b, c, d, e, f;
        for (b = 0; b < a.length; b++)
            for (c = a[b], d = 0; d < c.length; d++)
                for (e = c[d], e.forwardSegs = [], f = b + 1; f < a.length; f++)
                    Aa(e, a[f], e.forwardSegs);
    }

    function ya(a) {
        var b,
            c,
            d = a.forwardSegs,
            e = 0;
        if (void 0 === a.forwardPressure) {
            for (b = 0; b < d.length; b++)
                (c = d[b]), ya(c), (e = Math.max(e, 1 + c.forwardPressure));
            a.forwardPressure = e;
        }
    }

    function za(a, b, c) {
        var d,
            e = a.forwardSegs;
        if (void 0 === a.forwardCoord)
            for (
                e.length ?
                (e.sort(Ca),
                    za(e[0], b + 1, c),
                    (a.forwardCoord = e[0].backwardCoord)) :
                (a.forwardCoord = 1),
                a.backwardCoord = a.forwardCoord - (a.forwardCoord - c) / (b + 1),
                d = 0; d < e.length; d++
            )
                za(e[d], 0, a.forwardCoord);
    }

    function Aa(a, b, c) {
        c = c || [];
        for (var d = 0; d < b.length; d++) Ba(a, b[d]) && c.push(b[d]);
        return c;
    }

    function Ba(a, b) {
        return a.bottom > b.top && a.top < b.bottom;
    }

    function Ca(a, b) {
        return (
            b.forwardPressure - a.forwardPressure ||
            (a.backwardCoord || 0) - (b.backwardCoord || 0) ||
            ra(a, b)
        );
    }

    function Da(c, d) {
        function e() {
            U ? h() && (k(), i()) : f();
        }

        function f() {
            (V = P.theme ? "ui" : "fc"),
            c.addClass("fc"),
                P.isRTL ? c.addClass("fc-rtl") : c.addClass("fc-ltr"),
                P.theme ? c.addClass("ui-widget") : c.addClass("fc-unthemed"),
                (U = a("<div class='fc-view-container'/>").prependTo(c)),
                (S = O.header = new Ga(O, P)),
                (T = S.render()),
                T && c.prepend(T),
                i(P.defaultView),
                P.handleWindowResize &&
                ((Z = Y(m, P.windowResizeDelay)), a(window).resize(Z));
        }

        function g() {
            W && W.removeElement(),
                S.removeElement(),
                U.remove(),
                c.removeClass("fc fc-ltr fc-rtl fc-unthemed ui-widget"),
                Z && a(window).unbind("resize", Z);
        }

        function h() {
            return c.is(":visible");
        }

        function i(b) {
            da++,
            W &&
                b &&
                W.type !== b &&
                (S.deactivateButton(W.type),
                    H(),
                    W.removeElement(),
                    (W = O.view = null)), !W &&
                b &&
                ((W = O.view = ca[b] || (ca[b] = O.instantiateView(b))),
                    W.setElement(
                        a("<div class='fc-view fc-" + b + "-view' />").appendTo(U)
                    ),
                    S.activateButton(b)),
                W &&
                (($ = W.massageCurrentDate($)),
                    (W.displaying && $.isWithin(W.intervalStart, W.intervalEnd)) ||
                    (h() && (H(), W.display($), I(), u(), v(), q()))),
                I(),
                da--;
        }

        function j(a) {
            return h() ? (a && l(), da++, W.updateSize(!0), da--, !0) : void 0;
        }

        function k() {
            h() && l();
        }

        function l() {
            X =
                "number" == typeof P.contentHeight ?
                P.contentHeight :
                "number" == typeof P.height ?
                P.height - (T ? T.outerHeight(!0) : 0) :
                Math.round(U.width() / Math.max(P.aspectRatio, 0.5));
        }

        function m(a) {
            !da &&
                a.target === window &&
                W.start &&
                j(!0) &&
                W.trigger("windowResize", ba);
        }

        function n() {
            p(), r();
        }

        function o() {
            h() && (H(), W.displayEvents(ea), I());
        }

        function p() {
            H(), W.clearEvents(), I();
        }

        function q() {
            !P.lazyFetching || _(W.start, W.end) ? r() : o();
        }

        function r() {
            aa(W.start, W.end);
        }

        function s(a) {
            (ea = a), o();
        }

        function t() {
            o();
        }

        function u() {
            S.updateTitle(W.title);
        }

        function v() {
            var a = O.getNow();
            a.isWithin(W.intervalStart, W.intervalEnd) ?
                S.disableButton("today") :
                S.enableButton("today");
        }

        function w(a, b) {
            W.select(O.buildSelectRange.apply(O, arguments));
        }

        function x() {
            W && W.unselect();
        }

        function y() {
            ($ = W.computePrevDate($)), i();
        }

        function z() {
            ($ = W.computeNextDate($)), i();
        }

        function A() {
            $.add(-1, "years"), i();
        }

        function B() {
            $.add(1, "years"), i();
        }

        function C() {
            ($ = O.getNow()), i();
        }

        function D(a) {
            ($ = O.moment(a)), i();
        }

        function E(a) {
            $.add(b.duration(a)), i();
        }

        function F(a, b) {
            var c;
            (b = b || "day"),
            (c = O.getViewSpec(b) || O.getUnitViewSpec(b)),
            ($ = a),
            i(c ? c.type : null);
        }

        function G() {
            return $.clone();
        }

        function H() {
            U.css({
                width: "100%",
                height: U.height(),
                overflow: "hidden"
            });
        }

        function I() {
            U.css({
                width: "",
                height: "",
                overflow: ""
            });
        }

        function J() {
            return O;
        }

        function L() {
            return W;
        }

        function M(a, b) {
            return void 0 === b ?
                P[a] :
                void(
                    ("height" == a || "contentHeight" == a || "aspectRatio" == a) &&
                    ((P[a] = b), j(!0))
                );
        }

        function N(a, b) {
            return P[a] ?
                P[a].apply(b || ba, Array.prototype.slice.call(arguments, 2)) :
                void 0;
        }
        var O = this;
        O.initOptions(d || {});
        var P = this.options;
        (O.render = e),
        (O.destroy = g),
        (O.refetchEvents = n),
        (O.reportEvents = s),
        (O.reportEventChange = t),
        (O.rerenderEvents = o),
        (O.changeView = i),
        (O.select = w),
        (O.unselect = x),
        (O.prev = y),
        (O.next = z),
        (O.prevYear = A),
        (O.nextYear = B),
        (O.today = C),
        (O.gotoDate = D),
        (O.incrementDate = E),
        (O.zoomTo = F),
        (O.getDate = G),
        (O.getCalendar = J),
        (O.getView = L),
        (O.option = M),
        (O.trigger = N);
        var Q = K(Fa(P.lang));
        if (
            (P.monthNames && (Q._months = P.monthNames),
                P.monthNamesShort && (Q._monthsShort = P.monthNamesShort),
                P.dayNames && (Q._weekdays = P.dayNames),
                P.dayNamesShort && (Q._weekdaysShort = P.dayNamesShort),
                null != P.firstDay)
        ) {
            var R = K(Q._week);
            (R.dow = P.firstDay), (Q._week = R);
        }
        (Q._fullCalendar_weekCalc = (function(a) {
            return "function" == typeof a ?
                a :
                "local" === a ?
                a :
                "iso" === a || "ISO" === a ?
                "ISO" :
                void 0;
        })(P.weekNumberCalculation)),
        (O.defaultAllDayEventDuration = b.duration(P.defaultAllDayEventDuration)),
        (O.defaultTimedEventDuration = b.duration(P.defaultTimedEventDuration)),
        (O.moment = function() {
            var a;
            return (
                "local" === P.timezone ?
                ((a = Ja.moment.apply(null, arguments)), a.hasTime() && a.local()) :
                (a =
                    "UTC" === P.timezone ?
                    Ja.moment.utc.apply(null, arguments) :
                    Ja.moment.parseZone.apply(null, arguments)),
                "_locale" in a ? (a._locale = Q) : (a._lang = Q),
                a
            );
        }),
        (O.getIsAmbigTimezone = function() {
            return "local" !== P.timezone && "UTC" !== P.timezone;
        }),
        (O.rezoneDate = function(a) {
            return O.moment(a.toArray());
        }),
        (O.getNow = function() {
            var a = P.now;
            return "function" == typeof a && (a = a()), O.moment(a);
        }),
        (O.getEventEnd = function(a) {
            return a.end ? a.end.clone() : O.getDefaultEventEnd(a.allDay, a.start);
        }),
        (O.getDefaultEventEnd = function(a, b) {
            var c = b.clone();
            return (
                a ?
                c.stripTime().add(O.defaultAllDayEventDuration) :
                c.add(O.defaultTimedEventDuration),
                O.getIsAmbigTimezone() && c.stripZone(),
                c
            );
        }),
        (O.humanizeDuration = function(a) {
            return (a.locale || a.lang).call(a, P.lang).humanize();
        }),
        Ha.call(O, P);
        var S,
            T,
            U,
            V,
            W,
            X,
            Z,
            $,
            _ = O.isFetchNeeded,
            aa = O.fetchEvents,
            ba = c[0],
            ca = {},
            da = 0,
            ea = [];
        ($ = null != P.defaultDate ? O.moment(P.defaultDate) : O.getNow()),
        (O.getSuggestedViewHeight = function() {
            return void 0 === X && k(), X;
        }),
        (O.isHeightAuto = function() {
            return "auto" === P.contentHeight || "auto" === P.height;
        }),
        O.initialize();
    }

    function Ea(b) {
        a.each(nb, function(a, c) {
            null == b[a] && (b[a] = c(b));
        });
    }

    function Fa(a) {
        var c = b.localeData || b.langData;
        return c.call(b, a) || c.call(b, "en");
    }

    function Ga(b, c) {
        function d() {
            var b = c.header;
            return (
                (n = c.theme ? "ui" : "fc"),
                b ?
                (o = a("<div class='fc-toolbar'/>")
                    .append(f("left"))
                    .append(f("right"))
                    .append(f("center"))
                    .append('<div class="fc-clear"/>')) :
                void 0
            );
        }

        function e() {
            o.remove(), (o = a());
        }

        function f(d) {
            var e = a('<div class="fc-' + d + '"/>'),
                f = c.header[d];
            return (
                f &&
                a.each(f.split(" "), function(d) {
                    var f,
                        g = a(),
                        h = !0;
                    a.each(this.split(","), function(d, e) {
                            var f, i, j, k, l, m, o, q, r;
                            "title" == e
                                ?
                                ((g = g.add(a("<h2>&nbsp;</h2>"))), (h = !1)) :
                                ((f = b.getViewSpec(e)),
                                    f ?
                                    ((i = function() {
                                            b.changeView(e);
                                        }),
                                        p.push(e),
                                        (j = f.buttonTextOverride),
                                        (k = f.buttonTextDefault)) :
                                    b[e] &&
                                    ((i = function() {
                                            b[e]();
                                        }),
                                        (j = (b.overrides.buttonText || {})[e]),
                                        (k = c.buttonText[e])),
                                    i &&
                                    ((l = c.themeButtonIcons[e]),
                                        (m = c.buttonIcons[e]),
                                        (o = j ?
                                            R(j) :
                                            l && c.theme ?
                                            "<span class='ui-icon ui-icon-" + l + "'></span>" :
                                            m && !c.theme ?
                                            "<span class='fc-icon fc-icon-" + m + "'></span>" :
                                            R(k)),
                                        (q = [
                                            "fc-" + e + "-button",
                                            n + "-button",
                                            n + "-state-default",
                                        ]),
                                        (r = a(
                                                '<button type="button" class="' +
                                                q.join(" ") +
                                                '">' +
                                                o +
                                                "</button>"
                                            )
                                            .click(function() {
                                                r.hasClass(n + "-state-disabled") ||
                                                    (i(),
                                                        (r.hasClass(n + "-state-active") ||
                                                            r.hasClass(n + "-state-disabled")) &&
                                                        r.removeClass(n + "-state-hover"));
                                            })
                                            .mousedown(function() {
                                                r.not("." + n + "-state-active")
                                                    .not("." + n + "-state-disabled")
                                                    .addClass(n + "-state-down");
                                            })
                                            .mouseup(function() {
                                                r.removeClass(n + "-state-down");
                                            })
                                            .hover(
                                                function() {
                                                    r.not("." + n + "-state-active")
                                                        .not("." + n + "-state-disabled")
                                                        .addClass(n + "-state-hover");
                                                },
                                                function() {
                                                    r.removeClass(n + "-state-hover").removeClass(
                                                        n + "-state-down"
                                                    );
                                                }
                                            )),
                                        (g = g.add(r))));
                        }),
                        h &&
                        g
                        .first()
                        .addClass(n + "-corner-left")
                        .end()
                        .last()
                        .addClass(n + "-corner-right")
                        .end(),
                        g.length > 1 ?
                        ((f = a("<div/>")),
                            h && f.addClass("fc-button-group"),
                            f.append(g),
                            e.append(f)) :
                        e.append(g);
                }),
                e
            );
        }

        function g(a) {
            o.find("h2").text(a);
        }

        function h(a) {
            o.find(".fc-" + a + "-button").addClass(n + "-state-active");
        }

        function i(a) {
            o.find(".fc-" + a + "-button").removeClass(n + "-state-active");
        }

        function j(a) {
            o.find(".fc-" + a + "-button")
                .attr("disabled", "disabled")
                .addClass(n + "-state-disabled");
        }

        function k(a) {
            o.find(".fc-" + a + "-button")
                .removeAttr("disabled")
                .removeClass(n + "-state-disabled");
        }

        function l() {
            return p;
        }
        var m = this;
        (m.render = d),
        (m.removeElement = e),
        (m.updateTitle = g),
        (m.activateButton = h),
        (m.deactivateButton = i),
        (m.disableButton = j),
        (m.enableButton = k),
        (m.getViewsWithButtons = l);
        var n,
            o = a(),
            p = [];
    }

    function Ha(c) {
        function d(a, b) {
            return (!N ||
                a.clone().stripZone() < N.clone().stripZone() ||
                b.clone().stripZone() > R.clone().stripZone()
            );
        }

        function e(a, b) {
            (N = a), (R = b), (X = []);
            var c = ++V,
                d = U.length;
            W = d;
            for (var e = 0; d > e; e++) f(U[e], c);
        }

        function f(b, c) {
            g(b, function(d) {
                var e,
                    f,
                    g,
                    h = a.isArray(b.events);
                if (c == V) {
                    if (d)
                        for (e = 0; e < d.length; e++)
                            (f = d[e]), (g = h ? f : s(f, b)), g && X.push.apply(X, x(g));
                    W--, W || S(X);
                }
            });
        }

        function g(b, d) {
            var e,
                f,
                h = Ja.sourceFetchers;
            for (e = 0; e < h.length; e++) {
                if (
                    ((f = h[e].call(M, b, N.clone(), R.clone(), c.timezone, d)), f === !0)
                )
                    return;
                if ("object" == typeof f) return void g(f, d);
            }
            var i = b.events;
            if (i)
                a.isFunction(i) ?
                (M.pushLoading(),
                    i.call(M, N.clone(), R.clone(), c.timezone, function(a) {
                        d(a), M.popLoading();
                    })) :
                a.isArray(i) ?
                d(i) :
                d();
            else {
                var j = b.url;
                if (j) {
                    var k,
                        l = b.success,
                        m = b.error,
                        n = b.complete;
                    k = a.isFunction(b.data) ? b.data() : b.data;
                    var o = a.extend({}, k || {}),
                        p = Q(b.startParam, c.startParam),
                        q = Q(b.endParam, c.endParam),
                        r = Q(b.timezoneParam, c.timezoneParam);
                    p && (o[p] = N.format()),
                        q && (o[q] = R.format()),
                        c.timezone && "local" != c.timezone && (o[r] = c.timezone),
                        M.pushLoading(),
                        a.ajax(
                            a.extend({}, ob, b, {
                                data: o,
                                success: function(b) {
                                    b = b || [];
                                    var c = P(l, this, arguments);
                                    a.isArray(c) && (b = c), d(b);
                                },
                                error: function() {
                                    P(m, this, arguments), d();
                                },
                                complete: function() {
                                    P(n, this, arguments), M.popLoading();
                                },
                            })
                        );
                } else d();
            }
        }

        function h(a) {
            var b = i(a);
            b && (U.push(b), W++, f(b, V));
        }

        function i(b) {
            var c,
                d,
                e = Ja.sourceNormalizers;
            if (
                (a.isFunction(b) || a.isArray(b) ?
                    (c = {
                        events: b
                    }) :
                    "string" == typeof b ?
                    (c = {
                        url: b
                    }) :
                    "object" == typeof b && (c = a.extend({}, b)),
                    c)
            ) {
                for (
                    c.className ?
                    "string" == typeof c.className &&
                    (c.className = c.className.split(/\s+/)) :
                    (c.className = []),
                    a.isArray(c.events) &&
                    ((c.origArray = c.events),
                        (c.events = a.map(c.events, function(a) {
                            return s(a, c);
                        }))),
                    d = 0; d < e.length; d++
                )
                    e[d].call(M, c);
                return c;
            }
        }

        function j(b) {
            (U = a.grep(U, function(a) {
                return !k(a, b);
            })),
            (X = a.grep(X, function(a) {
                return !k(a.source, b);
            })),
            S(X);
        }

        function k(a, b) {
            return a && b && l(a) == l(b);
        }

        function l(a) {
            return (
                ("object" == typeof a ?
                    a.origArray || a.googleCalendarId || a.url || a.events :
                    null) || a
            );
        }

        function m(a) {
            (a.start = M.moment(a.start)),
            a.end ? (a.end = M.moment(a.end)) : (a.end = null),
                y(a, n(a)),
                S(X);
        }

        function n(b) {
            var c = {};
            return (
                a.each(b, function(a, b) {
                    o(a) && void 0 !== b && O(b) && (c[a] = b);
                }),
                c
            );
        }

        function o(a) {
            return !/^_|^(id|allDay|start|end)$/.test(a);
        }

        function p(a, b) {
            var c,
                d,
                e,
                f = s(a);
            if (f) {
                for (c = x(f), d = 0; d < c.length; d++)
                    (e = c[d]),
                    e.source || (b && (T.events.push(e), (e.source = T)), X.push(e));
                return S(X), c;
            }
            return [];
        }

        function q(b) {
            var c, d;
            for (
                null == b ?
                (b = function() {
                    return !0;
                }) :
                a.isFunction(b) ||
                ((c = b + ""),
                    (b = function(a) {
                        return a._id == c;
                    })),
                X = a.grep(X, b, !0),
                d = 0; d < U.length; d++
            )
                a.isArray(U[d].events) && (U[d].events = a.grep(U[d].events, b, !0));
            S(X);
        }

        function r(b) {
            return a.isFunction(b) ?
                a.grep(X, b) :
                null != b ?
                ((b += ""),
                    a.grep(X, function(a) {
                        return a._id == b;
                    })) :
                X;
        }

        function s(d, e) {
            var f,
                g,
                h,
                i = {};
            if (
                (c.eventDataTransform && (d = c.eventDataTransform(d)),
                    e && e.eventDataTransform && (d = e.eventDataTransform(d)),
                    a.extend(i, d),
                    e && (i.source = e),
                    (i._id = d._id || (void 0 === d.id ? "_fc" + pb++ : d.id + "")),
                    d.className ?
                    "string" == typeof d.className ?
                    (i.className = d.className.split(/\s+/)) :
                    (i.className = d.className) :
                    (i.className = []),
                    (f = d.start || d.date),
                    (g = d.end),
                    I(f) && (f = b.duration(f)),
                    I(g) && (g = b.duration(g)),
                    d.dow || b.isDuration(f) || b.isDuration(g))
            )
                (i.start = f ? b.duration(f) : null),
                (i.end = g ? b.duration(g) : null),
                (i._recurring = !0);
            else {
                if (f && ((f = M.moment(f)), !f.isValid())) return !1;
                g && ((g = M.moment(g)), g.isValid() || (g = null)),
                    (h = d.allDay),
                    void 0 === h &&
                    (h = Q(e ? e.allDayDefault : void 0, c.allDayDefault)),
                    t(f, g, h, i);
            }
            return i;
        }

        function t(a, b, c, d) {
            (d.start = a), (d.end = b), (d.allDay = c), u(d), Ia(d);
        }

        function u(a) {
            v(a),
                a.end && !a.end.isAfter(a.start) && (a.end = null),
                a.end ||
                (c.forceEventDuration ?
                    (a.end = M.getDefaultEventEnd(a.allDay, a.start)) :
                    (a.end = null));
        }

        function v(a) {
            null == a.allDay &&
                (a.allDay = !(a.start.hasTime() || (a.end && a.end.hasTime()))),
                a.allDay ?
                (a.start.stripTime(), a.end && a.end.stripTime()) :
                (a.start.hasTime() || (a.start = M.rezoneDate(a.start)),
                    a.end && !a.end.hasTime() && (a.end = M.rezoneDate(a.end)));
        }

        function w(b) {
            var c;
            return (
                b.end ||
                ((c = b.allDay),
                    null == c && (c = !b.start.hasTime()),
                    (b = a.extend({}, b)),
                    (b.end = M.getDefaultEventEnd(c, b.start))),
                b
            );
        }

        function x(b, c, d) {
            var e,
                f,
                g,
                h,
                i,
                j,
                k,
                l,
                m,
                n = [];
            if (((c = c || N), (d = d || R), b))
                if (b._recurring) {
                    if ((f = b.dow))
                        for (e = {}, g = 0; g < f.length; g++) e[f[g]] = !0;
                    for (h = c.clone().stripTime(); h.isBefore(d);)
                        (!e || e[h.day()]) &&
                        ((i = b.start),
                            (j = b.end),
                            (k = h.clone()),
                            (l = null),
                            i && (k = k.time(i)),
                            j && (l = h.clone().time(j)),
                            (m = a.extend({}, b)),
                            t(k, l, !i && !j, m),
                            n.push(m)),
                        h.add(1, "days");
                } else n.push(b);
            return n;
        }

        function y(b, c, d) {
            function e(a, b) {
                return d ? D(a, b, d) : c.allDay ? C(a, b) : B(a, b);
            }
            var f,
                g,
                h,
                i,
                j,
                k,
                l = {};
            return (
                (c = c || {}),
                c.start || (c.start = b.start.clone()),
                void 0 === c.end && (c.end = b.end ? b.end.clone() : null),
                null == c.allDay && (c.allDay = b.allDay),
                u(c),
                (f = {
                    start: b._start.clone(),
                    end: b._end ?
                        b._end.clone() :
                        M.getDefaultEventEnd(b._allDay, b._start),
                    allDay: c.allDay,
                }),
                u(f),
                (g = null !== b._end && null === c.end),
                (h = e(c.start, f.start)),
                c.end ? ((i = e(c.end, f.end)), (j = i.subtract(h))) : (j = null),
                a.each(c, function(a, b) {
                    o(a) && void 0 !== b && (l[a] = b);
                }),
                (k = z(r(b._id), g, c.allDay, h, j, l)), {
                    dateDelta: h,
                    durationDelta: j,
                    undo: k
                }
            );
        }

        function z(b, c, d, e, f, g) {
            var h = M.getIsAmbigTimezone(),
                i = [];
            return (
                e && !e.valueOf() && (e = null),
                f && !f.valueOf() && (f = null),
                a.each(b, function(b, j) {
                    var k, l;
                    (k = {
                        start: j.start.clone(),
                        end: j.end ? j.end.clone() : null,
                        allDay: j.allDay,
                    }),
                    a.each(g, function(a) {
                            k[a] = j[a];
                        }),
                        (l = {
                            start: j._start,
                            end: j._end,
                            allDay: d
                        }),
                        u(l),
                        c ?
                        (l.end = null) :
                        f &&
                        !l.end &&
                        (l.end = M.getDefaultEventEnd(l.allDay, l.start)),
                        e && (l.start.add(e), l.end && l.end.add(e)),
                        f && l.end.add(f),
                        h &&
                        !l.allDay &&
                        (e || f) &&
                        (l.start.stripZone(), l.end && l.end.stripZone()),
                        a.extend(j, g, l),
                        Ia(j),
                        i.push(function() {
                            a.extend(j, k), Ia(j);
                        });
                }),
                function() {
                    for (var a = 0; a < i.length; a++) i[a]();
                }
            );
        }

        function A(b) {
            var d,
                e = c.businessHours,
                f = {
                    className: "fc-nonbusiness",
                    start: "09:00",
                    end: "17:00",
                    dow: [1, 2, 3, 4, 5],
                    rendering: "inverse-background",
                },
                g = M.getView();
            return (
                e && (d = a.extend({}, f, "object" == typeof e ? e : {})),
                d ?
                (b && ((d.start = null), (d.end = null)), x(s(d), g.start, g.end)) :
                []
            );
        }

        function E(a, b) {
            var d = b.source || {},
                e = Q(b.constraint, d.constraint, c.eventConstraint),
                f = Q(b.overlap, d.overlap, c.eventOverlap);
            return (a = w(a)), H(a, e, f, b);
        }

        function F(a) {
            return H(a, c.selectConstraint, c.selectOverlap);
        }

        function G(b, c) {
            var d, e;
            return (
                c && ((d = a.extend({}, c, b)), (e = x(s(d))[0])),
                e ? E(b, e) : ((b = w(b)), F(b))
            );
        }

        function H(b, c, d, e) {
            var f, g, h, i, j, k;
            if (
                ((b = a.extend({}, b)),
                    (b.start = b.start.clone().stripZone()),
                    (b.end = b.end.clone().stripZone()),
                    null != c)
            ) {
                for (f = J(c), g = !1, i = 0; i < f.length; i++)
                    if (K(f[i], b)) {
                        g = !0;
                        break;
                    }
                if (!g) return !1;
            }
            for (h = M.getPeerEvents(e, b), i = 0; i < h.length; i++)
                if (((j = h[i]), L(j, b))) {
                    if (d === !1) return !1;
                    if ("function" == typeof d && !d(j, e)) return !1;
                    if (e) {
                        if (((k = Q(j.overlap, (j.source || {}).overlap)), k === !1))
                            return !1;
                        if ("function" == typeof k && !k(e, j)) return !1;
                    }
                }
            return !0;
        }

        function J(a) {
            return "businessHours" === a ?
                A() :
                "object" == typeof a ?
                x(s(a)) :
                r(a);
        }

        function K(a, b) {
            var c = a.start.clone().stripZone(),
                d = M.getEventEnd(a).stripZone();
            return b.start >= c && b.end <= d;
        }

        function L(a, b) {
            var c = a.start.clone().stripZone(),
                d = M.getEventEnd(a).stripZone();
            return b.start < d && b.end > c;
        }
        var M = this;
        (M.isFetchNeeded = d),
        (M.fetchEvents = e),
        (M.addEventSource = h),
        (M.removeEventSource = j),
        (M.updateEvent = m),
        (M.renderEvent = p),
        (M.removeEvents = q),
        (M.clientEvents = r),
        (M.mutateEvent = y),
        (M.normalizeEventRange = u),
        (M.normalizeEventRangeTimes = v),
        (M.ensureVisibleEventRange = w);
        var N,
            R,
            S = M.reportEvents,
            T = {
                events: []
            },
            U = [T],
            V = 0,
            W = 0,
            X = [];
        a.each(
                (c.events ? [c.events] : []).concat(c.eventSources || []),
                function(a, b) {
                    var c = i(b);
                    c && U.push(c);
                }
            ),
            (M.getBusinessHoursEvents = A),
            (M.isEventRangeAllowed = E),
            (M.isSelectionRangeAllowed = F),
            (M.isExternalDropRangeAllowed = G),
            (M.getEventCache = function() {
                return X;
            });
    }

    function Ia(a) {
        (a._allDay = a.allDay),
        (a._start = a.start.clone()),
        (a._end = a.end ? a.end.clone() : null);
    }
    var Ja = (a.fullCalendar = {
            version: "2.3.2"
        }),
        Ka = (Ja.views = {});
    a.fn.fullCalendar = function(b) {
        var c = Array.prototype.slice.call(arguments, 1),
            d = this;
        return (
            this.each(function(e, f) {
                var g,
                    h = a(f),
                    i = h.data("fullCalendar");
                "string" == typeof b
                    ?
                    i &&
                    a.isFunction(i[b]) &&
                    ((g = i[b].apply(i, c)),
                        e || (d = g),
                        "destroy" === b && h.removeData("fullCalendar")) :
                    i || ((i = new jb(h, b)), h.data("fullCalendar", i), i.render());
            }),
            d
        );
    };
    var La = ["header", "buttonText", "buttonIcons", "themeButtonIcons"];
    (Ja.intersectionToSeg = A),
    (Ja.applyAll = P),
    (Ja.debounce = Y),
    (Ja.isInt = W),
    (Ja.htmlEscape = R),
    (Ja.cssToStr = T),
    (Ja.proxy = X),
    (Ja.capitaliseFirstLetter = U),
    (Ja.getClientRect = p),
    (Ja.getContentRect = q),
    (Ja.getScrollbarWidths = r);
    var Ma = null;
    (Ja.computeIntervalUnit = E), (Ja.durationHasTime = G);
    var Na,
        Oa,
        Pa,
        Qa = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"],
        Ra = [
            "year",
            "month",
            "week",
            "day",
            "hour",
            "minute",
            "second",
            "millisecond",
        ],
        Sa = {}.hasOwnProperty,
        Ta = /^\s*\d{4}-\d\d$/,
        Ua =
        /^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/,
        Va = b.fn,
        Wa = a.extend({}, Va);
    (Ja.moment = function() {
        return Z(arguments);
    }),
    (Ja.moment.utc = function() {
        var a = Z(arguments, !0);
        return a.hasTime() && a.utc(), a;
    }),
    (Ja.moment.parseZone = function() {
        return Z(arguments, !0, !0);
    }),
    (Va.clone = function() {
        var a = Wa.clone.apply(this, arguments);
        return _(this, a), this._fullCalendar && (a._fullCalendar = !0), a;
    }),
    (Va.week = Va.weeks =
        function(a) {
            var b = (this._locale || this._lang)._fullCalendar_weekCalc;
            return null == a && "function" == typeof b ?
                b(this) :
                "ISO" === b ?
                Wa.isoWeek.apply(this, arguments) :
                Wa.week.apply(this, arguments);
        }),
    (Va.time = function(a) {
        if (!this._fullCalendar) return Wa.time.apply(this, arguments);
        if (null == a)
            return b.duration({
                hours: this.hours(),
                minutes: this.minutes(),
                seconds: this.seconds(),
                milliseconds: this.milliseconds(),
            });
        (this._ambigTime = !1),
        b.isDuration(a) || b.isMoment(a) || (a = b.duration(a));
        var c = 0;
        return (
            b.isDuration(a) && (c = 24 * Math.floor(a.asDays())),
            this.hours(c + a.hours())
            .minutes(a.minutes())
            .seconds(a.seconds())
            .milliseconds(a.milliseconds())
        );
    }),
    (Va.stripTime = function() {
        var a;
        return (
            this._ambigTime ||
            ((a = this.toArray()),
                this.utc(),
                Oa(this, a.slice(0, 3)),
                (this._ambigTime = !0),
                (this._ambigZone = !0)),
            this
        );
    }),
    (Va.hasTime = function() {
        return !this._ambigTime;
    }),
    (Va.stripZone = function() {
        var a, b;
        return (
            this._ambigZone ||
            ((a = this.toArray()),
                (b = this._ambigTime),
                this.utc(),
                Oa(this, a),
                (this._ambigTime = b || !1),
                (this._ambigZone = !0)),
            this
        );
    }),
    (Va.hasZone = function() {
        return !this._ambigZone;
    }),
    (Va.local = function() {
        var a = this.toArray(),
            b = this._ambigZone;
        return (
            Wa.local.apply(this, arguments),
            (this._ambigTime = !1),
            (this._ambigZone = !1),
            b && Pa(this, a),
            this
        );
    }),
    (Va.utc = function() {
        return (
            Wa.utc.apply(this, arguments),
            (this._ambigTime = !1),
            (this._ambigZone = !1),
            this
        );
    }),
    a.each(["zone", "utcOffset"], function(a, b) {
            Wa[b] &&
                (Va[b] = function(a) {
                    return (
                        null != a && ((this._ambigTime = !1), (this._ambigZone = !1)),
                        Wa[b].apply(this, arguments)
                    );
                });
        }),
        (Va.format = function() {
            return this._fullCalendar && arguments[0] ?
                ca(this, arguments[0]) :
                this._ambigTime ?
                ba(this, "YYYY-MM-DD") :
                this._ambigZone ?
                ba(this, "YYYY-MM-DD[T]HH:mm:ss") :
                Wa.format.apply(this, arguments);
        }),
        (Va.toISOString = function() {
            return this._ambigTime ?
                ba(this, "YYYY-MM-DD") :
                this._ambigZone ?
                ba(this, "YYYY-MM-DD[T]HH:mm:ss") :
                Wa.toISOString.apply(this, arguments);
        }),
        (Va.isWithin = function(a, b) {
            var c = $([this, a, b]);
            return c[0] >= c[1] && c[0] < c[2];
        }),
        (Va.isSame = function(a, b) {
            var c;
            return this._fullCalendar ?
                b ?
                ((c = $([this, a], !0)), Wa.isSame.call(c[0], c[1], b)) :
                ((a = Ja.moment.parseZone(a)),
                    Wa.isSame.call(this, a) &&
                    Boolean(this._ambigTime) === Boolean(a._ambigTime) &&
                    Boolean(this._ambigZone) === Boolean(a._ambigZone)) :
                Wa.isSame.apply(this, arguments);
        }),
        a.each(["isBefore", "isAfter"], function(a, b) {
            Va[b] = function(a, c) {
                var d;
                return this._fullCalendar ?
                    ((d = $([this, a])), Wa[b].call(d[0], d[1], c)) :
                    Wa[b].apply(this, arguments);
            };
        }),
        (Na = "_d" in b() && "updateOffset" in b),
        (Oa = Na ?
            function(a, c) {
                a._d.setTime(Date.UTC.apply(Date, c)), b.updateOffset(a, !1);
            } :
            aa),
        (Pa = Na ?
            function(a, c) {
                a._d.setTime(+new Date(
                        c[0] || 0,
                        c[1] || 0,
                        c[2] || 0,
                        c[3] || 0,
                        c[4] || 0,
                        c[5] || 0,
                        c[6] || 0
                    )),
                    b.updateOffset(a, !1);
            } :
            aa);
    var Xa = {
        t: function(a) {
            return ba(a, "a").charAt(0);
        },
        T: function(a) {
            return ba(a, "A").charAt(0);
        },
    };
    Ja.formatRange = fa;
    var Ya = {
            Y: "year",
            M: "month",
            D: "day",
            d: "day",
            A: "second",
            a: "second",
            T: "second",
            t: "second",
            H: "second",
            h: "second",
            m: "second",
            s: "second",
        },
        Za = {};
    (Ja.Class = ka),
    (ka.extend = function(a) {
        var b,
            c = this;
        return (
            (a = a || {}),
            N(a, "constructor") && (b = a.constructor),
            "function" != typeof b &&
            (b = a.constructor =
                function() {
                    c.apply(this, arguments);
                }),
            (b.prototype = K(c.prototype)),
            L(a, b.prototype),
            M(a, b.prototype),
            L(c, b),
            b
        );
    }),
    (ka.mixin = function(a) {
        L(a.prototype || a, this.prototype);
    });
    var $a = ka.extend({
            isHidden: !0,
            options: null,
            el: null,
            documentMousedownProxy: null,
            margin: 10,
            constructor: function(a) {
                this.options = a || {};
            },
            show: function() {
                this.isHidden &&
                    (this.el || this.render(),
                        this.el.show(),
                        this.position(),
                        (this.isHidden = !1),
                        this.trigger("show"));
            },
            hide: function() {
                this.isHidden ||
                    (this.el.hide(), (this.isHidden = !0), this.trigger("hide"));
            },
            render: function() {
                var b = this,
                    c = this.options;
                (this.el = a('<div class="fc-popover"/>')
                    .addClass(c.className || "")
                    .css({
                        top: 0,
                        left: 0
                    })
                    .append(c.content)
                    .appendTo(c.parentEl)),
                this.el.on("click", ".fc-close", function() {
                        b.hide();
                    }),
                    c.autoHide &&
                    a(document).on(
                        "mousedown",
                        (this.documentMousedownProxy = X(this, "documentMousedown"))
                    );
            },
            documentMousedown: function(b) {
                this.el && !a(b.target).closest(this.el).length && this.hide();
            },
            removeElement: function() {
                this.hide(),
                    this.el && (this.el.remove(), (this.el = null)),
                    a(document).off("mousedown", this.documentMousedownProxy);
            },
            position: function() {
                var b,
                    c,
                    d,
                    e,
                    f,
                    g = this.options,
                    h = this.el.offsetParent().offset(),
                    i = this.el.outerWidth(),
                    j = this.el.outerHeight(),
                    k = a(window),
                    l = n(this.el);
                (e = g.top || 0),
                (f =
                    void 0 !== g.left ? g.left : void 0 !== g.right ? g.right - i : 0),
                l.is(window) || l.is(document) ?
                    ((l = k), (b = 0), (c = 0)) :
                    ((d = l.offset()), (b = d.top), (c = d.left)),
                    (b += k.scrollTop()),
                    (c += k.scrollLeft()),
                    g.viewportConstrain !== !1 &&
                    ((e = Math.min(e, b + l.outerHeight() - j - this.margin)),
                        (e = Math.max(e, b + this.margin)),
                        (f = Math.min(f, c + l.outerWidth() - i - this.margin)),
                        (f = Math.max(f, c + this.margin))),
                    this.el.css({
                        top: e - h.top,
                        left: f - h.left
                    });
            },
            trigger: function(a) {
                this.options[a] &&
                    this.options[a].apply(this, Array.prototype.slice.call(arguments, 1));
            },
        }),
        _a = ka.extend({
            grid: null,
            rowCoords: null,
            colCoords: null,
            containerEl: null,
            bounds: null,
            constructor: function(a) {
                this.grid = a;
            },
            build: function() {
                this.grid.build(),
                    (this.rowCoords = this.grid.computeRowCoords()),
                    (this.colCoords = this.grid.computeColCoords()),
                    this.computeBounds();
            },
            clear: function() {
                this.grid.clear(), (this.rowCoords = null), (this.colCoords = null);
            },
            getCell: function(b, c) {
                var d,
                    e,
                    f,
                    g = this.rowCoords,
                    h = g.length,
                    i = this.colCoords,
                    j = i.length,
                    k = null,
                    l = null;
                if (this.inBounds(b, c)) {
                    for (d = 0; h > d; d++)
                        if (((e = g[d]), c >= e.top && c < e.bottom)) {
                            k = d;
                            break;
                        }
                    for (d = 0; j > d; d++)
                        if (((e = i[d]), b >= e.left && b < e.right)) {
                            l = d;
                            break;
                        }
                    if (null !== k && null !== l)
                        return (
                            (f = this.grid.getCell(k, l)),
                            (f.grid = this.grid),
                            a.extend(f, g[k], i[l]),
                            f
                        );
                }
                return null;
            },
            computeBounds: function() {
                this.bounds = this.containerEl ? p(this.containerEl) : null;
            },
            inBounds: function(a, b) {
                var c = this.bounds;
                return c ?
                    a >= c.left && a < c.right && b >= c.top && b < c.bottom :
                    !0;
            },
        }),
        ab = ka.extend({
            coordMaps: null,
            constructor: function(a) {
                this.coordMaps = a;
            },
            build: function() {
                var a,
                    b = this.coordMaps;
                for (a = 0; a < b.length; a++) b[a].build();
            },
            getCell: function(a, b) {
                var c,
                    d = this.coordMaps,
                    e = null;
                for (c = 0; c < d.length && !e; c++) e = d[c].getCell(a, b);
                return e;
            },
            clear: function() {
                var a,
                    b = this.coordMaps;
                for (a = 0; a < b.length; a++) b[a].clear();
            },
        }),
        bb = (Ja.DragListener = ka.extend({
            options: null,
            isListening: !1,
            isDragging: !1,
            originX: null,
            originY: null,
            mousemoveProxy: null,
            mouseupProxy: null,
            subjectEl: null,
            subjectHref: null,
            scrollEl: null,
            scrollBounds: null,
            scrollTopVel: null,
            scrollLeftVel: null,
            scrollIntervalId: null,
            scrollHandlerProxy: null,
            scrollSensitivity: 30,
            scrollSpeed: 200,
            scrollIntervalMs: 50,
            constructor: function(a) {
                (a = a || {}), (this.options = a), (this.subjectEl = a.subjectEl);
            },
            mousedown: function(a) {
                v(a) &&
                    (a.preventDefault(),
                        this.startListening(a),
                        this.options.distance || this.startDrag(a));
            },
            startListening: function(b) {
                var c;
                this.isListening ||
                    (b &&
                        this.options.scroll &&
                        ((c = n(a(b.target))),
                            c.is(window) ||
                            c.is(document) ||
                            ((this.scrollEl = c),
                                (this.scrollHandlerProxy = Y(X(this, "scrollHandler"), 100)),
                                this.scrollEl.on("scroll", this.scrollHandlerProxy))),
                        a(document)
                        .on("mousemove", (this.mousemoveProxy = X(this, "mousemove")))
                        .on("mouseup", (this.mouseupProxy = X(this, "mouseup")))
                        .on("selectstart", this.preventDefault),
                        b ?
                        ((this.originX = b.pageX), (this.originY = b.pageY)) :
                        ((this.originX = 0), (this.originY = 0)),
                        (this.isListening = !0),
                        this.listenStart(b));
            },
            listenStart: function(a) {
                this.trigger("listenStart", a);
            },
            mousemove: function(a) {
                var b,
                    c,
                    d = a.pageX - this.originX,
                    e = a.pageY - this.originY;
                this.isDragging ||
                    ((b = this.options.distance || 1),
                        (c = d * d + e * e),
                        c >= b * b && this.startDrag(a)),
                    this.isDragging && this.drag(d, e, a);
            },
            startDrag: function(a) {
                this.isListening || this.startListening(),
                    this.isDragging || ((this.isDragging = !0), this.dragStart(a));
            },
            dragStart: function(a) {
                var b = this.subjectEl;
                this.trigger("dragStart", a),
                    (this.subjectHref = b ? b.attr("href") : null) &&
                    b.removeAttr("href");
            },
            drag: function(a, b, c) {
                this.trigger("drag", a, b, c), this.updateScroll(c);
            },
            mouseup: function(a) {
                this.stopListening(a);
            },
            stopDrag: function(a) {
                this.isDragging &&
                    (this.stopScrolling(), this.dragStop(a), (this.isDragging = !1));
            },
            dragStop: function(a) {
                var b = this;
                this.trigger("dragStop", a),
                    setTimeout(function() {
                        b.subjectHref && b.subjectEl.attr("href", b.subjectHref);
                    }, 0);
            },
            stopListening: function(b) {
                this.stopDrag(b),
                    this.isListening &&
                    (this.scrollEl &&
                        (this.scrollEl.off("scroll", this.scrollHandlerProxy),
                            (this.scrollHandlerProxy = null)),
                        a(document)
                        .off("mousemove", this.mousemoveProxy)
                        .off("mouseup", this.mouseupProxy)
                        .off("selectstart", this.preventDefault),
                        (this.mousemoveProxy = null),
                        (this.mouseupProxy = null),
                        (this.isListening = !1),
                        this.listenStop(b));
            },
            listenStop: function(a) {
                this.trigger("listenStop", a);
            },
            trigger: function(a) {
                this.options[a] &&
                    this.options[a].apply(this, Array.prototype.slice.call(arguments, 1));
            },
            preventDefault: function(a) {
                a.preventDefault();
            },
            computeScrollBounds: function() {
                var a = this.scrollEl;
                this.scrollBounds = a ? o(a) : null;
            },
            updateScroll: function(a) {
                var b,
                    c,
                    d,
                    e,
                    f = this.scrollSensitivity,
                    g = this.scrollBounds,
                    h = 0,
                    i = 0;
                g &&
                    ((b = (f - (a.pageY - g.top)) / f),
                        (c = (f - (g.bottom - a.pageY)) / f),
                        (d = (f - (a.pageX - g.left)) / f),
                        (e = (f - (g.right - a.pageX)) / f),
                        b >= 0 && 1 >= b ?
                        (h = b * this.scrollSpeed * -1) :
                        c >= 0 && 1 >= c && (h = c * this.scrollSpeed),
                        d >= 0 && 1 >= d ?
                        (i = d * this.scrollSpeed * -1) :
                        e >= 0 && 1 >= e && (i = e * this.scrollSpeed)),
                    this.setScrollVel(h, i);
            },
            setScrollVel: function(a, b) {
                (this.scrollTopVel = a),
                (this.scrollLeftVel = b),
                this.constrainScrollVel(),
                    (!this.scrollTopVel && !this.scrollLeftVel) ||
                    this.scrollIntervalId ||
                    (this.scrollIntervalId = setInterval(
                        X(this, "scrollIntervalFunc"),
                        this.scrollIntervalMs
                    ));
            },
            constrainScrollVel: function() {
                var a = this.scrollEl;
                this.scrollTopVel < 0 ?
                    a.scrollTop() <= 0 && (this.scrollTopVel = 0) :
                    this.scrollTopVel > 0 &&
                    a.scrollTop() + a[0].clientHeight >= a[0].scrollHeight &&
                    (this.scrollTopVel = 0),
                    this.scrollLeftVel < 0 ?
                    a.scrollLeft() <= 0 && (this.scrollLeftVel = 0) :
                    this.scrollLeftVel > 0 &&
                    a.scrollLeft() + a[0].clientWidth >= a[0].scrollWidth &&
                    (this.scrollLeftVel = 0);
            },
            scrollIntervalFunc: function() {
                var a = this.scrollEl,
                    b = this.scrollIntervalMs / 1e3;
                this.scrollTopVel && a.scrollTop(a.scrollTop() + this.scrollTopVel * b),
                    this.scrollLeftVel &&
                    a.scrollLeft(a.scrollLeft() + this.scrollLeftVel * b),
                    this.constrainScrollVel(),
                    this.scrollTopVel || this.scrollLeftVel || this.stopScrolling();
            },
            stopScrolling: function() {
                this.scrollIntervalId &&
                    (clearInterval(this.scrollIntervalId),
                        (this.scrollIntervalId = null),
                        this.scrollStop());
            },
            scrollHandler: function() {
                this.scrollIntervalId || this.scrollStop();
            },
            scrollStop: function() {},
        })),
        cb = bb.extend({
            coordMap: null,
            origCell: null,
            cell: null,
            coordAdjust: null,
            constructor: function(a, b) {
                bb.prototype.constructor.call(this, b), (this.coordMap = a);
            },
            listenStart: function(a) {
                var b,
                    c,
                    d,
                    e = this.subjectEl;
                bb.prototype.listenStart.apply(this, arguments),
                    this.computeCoords(),
                    a ?
                    ((c = {
                            left: a.pageX,
                            top: a.pageY
                        }),
                        (d = c),
                        e && ((b = o(e)), (d = x(d, b))),
                        (this.origCell = this.getCell(d.left, d.top)),
                        e &&
                        this.options.subjectCenter &&
                        (this.origCell && (b = w(this.origCell, b) || b), (d = y(b))),
                        (this.coordAdjust = z(d, c))) :
                    ((this.origCell = null), (this.coordAdjust = null));
            },
            computeCoords: function() {
                this.coordMap.build(), this.computeScrollBounds();
            },
            dragStart: function(a) {
                var b;
                bb.prototype.dragStart.apply(this, arguments),
                    (b = this.getCell(a.pageX, a.pageY)),
                    b && this.cellOver(b);
            },
            drag: function(a, b, c) {
                var d;
                bb.prototype.drag.apply(this, arguments),
                    (d = this.getCell(c.pageX, c.pageY)),
                    la(d, this.cell) ||
                    (this.cell && this.cellOut(), d && this.cellOver(d));
            },
            dragStop: function() {
                this.cellDone(), bb.prototype.dragStop.apply(this, arguments);
            },
            cellOver: function(a) {
                (this.cell = a),
                this.trigger("cellOver", a, la(a, this.origCell), this.origCell);
            },
            cellOut: function() {
                this.cell &&
                    (this.trigger("cellOut", this.cell),
                        this.cellDone(),
                        (this.cell = null));
            },
            cellDone: function() {
                this.cell && this.trigger("cellDone", this.cell);
            },
            listenStop: function() {
                bb.prototype.listenStop.apply(this, arguments),
                    (this.origCell = this.cell = null),
                    this.coordMap.clear();
            },
            scrollStop: function() {
                bb.prototype.scrollStop.apply(this, arguments), this.computeCoords();
            },
            getCell: function(a, b) {
                return (
                    this.coordAdjust &&
                    ((a += this.coordAdjust.left), (b += this.coordAdjust.top)),
                    this.coordMap.getCell(a, b)
                );
            },
        }),
        db = ka.extend({
            options: null,
            sourceEl: null,
            el: null,
            parentEl: null,
            top0: null,
            left0: null,
            mouseY0: null,
            mouseX0: null,
            topDelta: null,
            leftDelta: null,
            mousemoveProxy: null,
            isFollowing: !1,
            isHidden: !1,
            isAnimating: !1,
            constructor: function(b, c) {
                (this.options = c = c || {}),
                (this.sourceEl = b),
                (this.parentEl = c.parentEl ? a(c.parentEl) : b.parent());
            },
            start: function(b) {
                this.isFollowing ||
                    ((this.isFollowing = !0),
                        (this.mouseY0 = b.pageY),
                        (this.mouseX0 = b.pageX),
                        (this.topDelta = 0),
                        (this.leftDelta = 0),
                        this.isHidden || this.updatePosition(),
                        a(document).on(
                            "mousemove",
                            (this.mousemoveProxy = X(this, "mousemove"))
                        ));
            },
            stop: function(b, c) {
                function d() {
                    (this.isAnimating = !1),
                    e.removeElement(),
                        (this.top0 = this.left0 = null),
                        c && c();
                }
                var e = this,
                    f = this.options.revertDuration;
                this.isFollowing &&
                    !this.isAnimating &&
                    ((this.isFollowing = !1),
                        a(document).off("mousemove", this.mousemoveProxy),
                        b && f && !this.isHidden ?
                        ((this.isAnimating = !0),
                            this.el.animate({
                                top: this.top0,
                                left: this.left0
                            }, {
                                duration: f,
                                complete: d
                            })) :
                        d());
            },
            getEl: function() {
                var a = this.el;
                return (
                    a ||
                    (this.sourceEl.width(),
                        (a = this.el =
                            this.sourceEl
                            .clone()
                            .css({
                                position: "absolute",
                                visibility: "",
                                display: this.isHidden ? "none" : "",
                                margin: 0,
                                right: "auto",
                                bottom: "auto",
                                width: this.sourceEl.width(),
                                height: this.sourceEl.height(),
                                opacity: this.options.opacity || "",
                                zIndex: this.options.zIndex,
                            })
                            .appendTo(this.parentEl))),
                    a
                );
            },
            removeElement: function() {
                this.el && (this.el.remove(), (this.el = null));
            },
            updatePosition: function() {
                var a, b;
                this.getEl(),
                    null === this.top0 &&
                    (this.sourceEl.width(),
                        (a = this.sourceEl.offset()),
                        (b = this.el.offsetParent().offset()),
                        (this.top0 = a.top - b.top),
                        (this.left0 = a.left - b.left)),
                    this.el.css({
                        top: this.top0 + this.topDelta,
                        left: this.left0 + this.leftDelta,
                    });
            },
            mousemove: function(a) {
                (this.topDelta = a.pageY - this.mouseY0),
                (this.leftDelta = a.pageX - this.mouseX0),
                this.isHidden || this.updatePosition();
            },
            hide: function() {
                this.isHidden || ((this.isHidden = !0), this.el && this.el.hide());
            },
            show: function() {
                this.isHidden &&
                    ((this.isHidden = !1), this.updatePosition(), this.getEl().show());
            },
        }),
        eb = ka.extend({
            view: null,
            isRTL: null,
            cellHtml: "<td/>",
            constructor: function(a) {
                (this.view = a), (this.isRTL = a.opt("isRTL"));
            },
            rowHtml: function(a, b) {
                var c,
                    d,
                    e = this.getHtmlRenderer("cell", a),
                    f = "";
                for (b = b || 0, c = 0; c < this.colCnt; c++)
                    (d = this.getCell(b, c)), (f += e(d));
                return (f = this.bookendCells(f, a, b)), "<tr>" + f + "</tr>";
            },
            bookendCells: function(a, b, c) {
                var d = this.getHtmlRenderer("intro", b)(c || 0),
                    e = this.getHtmlRenderer("outro", b)(c || 0),
                    f = this.isRTL ? e : d,
                    g = this.isRTL ? d : e;
                return "string" == typeof a ? f + a + g : a.prepend(f).append(g);
            },
            getHtmlRenderer: function(a, b) {
                var c,
                    d,
                    e,
                    f,
                    g = this.view;
                return (
                    (c = a + "Html"),
                    b && (d = b + U(a) + "Html"),
                    d && (f = g[d]) ?
                    (e = g) :
                    d && (f = this[d]) ?
                    (e = this) :
                    (f = g[c]) ?
                    (e = g) :
                    (f = this[c]) && (e = this),
                    "function" == typeof f ?
                    function() {
                        return f.apply(e, arguments) || "";
                    } :
                    function() {
                        return f || "";
                    }
                );
            },
        }),
        fb = (Ja.Grid = eb.extend({
            start: null,
            end: null,
            rowCnt: 0,
            colCnt: 0,
            el: null,
            coordMap: null,
            elsByFill: null,
            externalDragStartProxy: null,
            colHeadFormat: null,
            eventTimeFormat: null,
            displayEventTime: null,
            displayEventEnd: null,
            cellDuration: null,
            largeUnit: null,
            constructor: function() {
                eb.apply(this, arguments),
                    (this.coordMap = new _a(this)),
                    (this.elsByFill = {}),
                    (this.externalDragStartProxy = X(this, "externalDragStart"));
            },
            computeColHeadFormat: function() {},
            computeEventTimeFormat: function() {
                return this.view.opt("smallTimeFormat");
            },
            computeDisplayEventTime: function() {
                return !0;
            },
            computeDisplayEventEnd: function() {
                return !0;
            },
            setRange: function(a) {
                (this.start = a.start.clone()),
                (this.end = a.end.clone()),
                this.rangeUpdated(),
                    this.processRangeOptions();
            },
            rangeUpdated: function() {},
            processRangeOptions: function() {
                var a,
                    b,
                    c = this.view;
                (this.colHeadFormat =
                    c.opt("columnFormat") || this.computeColHeadFormat()),
                (this.eventTimeFormat =
                    c.opt("eventTimeFormat") ||
                    c.opt("timeFormat") ||
                    this.computeEventTimeFormat()),
                (a = c.opt("displayEventTime")),
                null == a && (a = this.computeDisplayEventTime()),
                    (b = c.opt("displayEventEnd")),
                    null == b && (b = this.computeDisplayEventEnd()),
                    (this.displayEventTime = a),
                    (this.displayEventEnd = b);
            },
            build: function() {},
            clear: function() {},
            rangeToSegs: function(a) {},
            diffDates: function(a, b) {
                return this.largeUnit ? D(a, b, this.largeUnit) : B(a, b);
            },
            getCell: function(b, c) {
                var d;
                return (
                    null == c &&
                    ("number" == typeof b ?
                        ((c = b % this.colCnt), (b = Math.floor(b / this.colCnt))) :
                        ((c = b.col), (b = b.row))),
                    (d = {
                        row: b,
                        col: c
                    }),
                    a.extend(d, this.getRowData(b), this.getColData(c)),
                    a.extend(d, this.computeCellRange(d)),
                    d
                );
            },
            computeCellRange: function(a) {
                var b = this.computeCellDate(a);
                return {
                    start: b,
                    end: b.clone().add(this.cellDuration)
                };
            },
            computeCellDate: function(a) {},
            getRowData: function(a) {
                return {};
            },
            getColData: function(a) {
                return {};
            },
            getRowEl: function(a) {},
            getColEl: function(a) {},
            getCellDayEl: function(a) {
                return this.getColEl(a.col) || this.getRowEl(a.row);
            },
            computeRowCoords: function() {
                var a,
                    b,
                    c,
                    d = [];
                for (a = 0; a < this.rowCnt; a++)
                    (b = this.getRowEl(a)),
                    (c = b.offset().top),
                    d.push({
                        top: c,
                        bottom: c + b.outerHeight()
                    });
                return d;
            },
            computeColCoords: function() {
                var a,
                    b,
                    c,
                    d = [];
                for (a = 0; a < this.colCnt; a++)
                    (b = this.getColEl(a)),
                    (c = b.offset().left),
                    d.push({
                        left: c,
                        right: c + b.outerWidth()
                    });
                return d;
            },
            setElement: function(b) {
                var c = this;
                (this.el = b),
                b.on("mousedown", function(b) {
                        a(b.target).is(".fc-event-container *, .fc-more") ||
                            a(b.target).closest(".fc-popover").length ||
                            c.dayMousedown(b);
                    }),
                    this.bindSegHandlers(),
                    this.bindGlobalHandlers();
            },
            removeElement: function() {
                this.unbindGlobalHandlers(), this.el.remove();
            },
            renderSkeleton: function() {},
            renderDates: function() {},
            unrenderDates: function() {},
            bindGlobalHandlers: function() {
                a(document).on("dragstart sortstart", this.externalDragStartProxy);
            },
            unbindGlobalHandlers: function() {
                a(document).off("dragstart sortstart", this.externalDragStartProxy);
            },
            dayMousedown: function(a) {
                var b,
                    c,
                    d = this,
                    e = this.view,
                    f = e.opt("selectable"),
                    i = new cb(this.coordMap, {
                        scroll: e.opt("dragScroll"),
                        dragStart: function() {
                            e.unselect();
                        },
                        cellOver: function(a, e, h) {
                            h &&
                                ((b = e ? a : null),
                                    f &&
                                    ((c = d.computeSelection(h, a)),
                                        c ? d.renderSelection(c) : g()));
                        },
                        cellOut: function(a) {
                            (b = null), (c = null), d.unrenderSelection(), h();
                        },
                        listenStop: function(a) {
                            b && e.triggerDayClick(b, d.getCellDayEl(b), a),
                                c && e.reportSelection(c, a),
                                h();
                        },
                    });
                i.mousedown(a);
            },
            renderRangeHelper: function(a, b) {
                var c = this.fabricateHelperEvent(a, b);
                this.renderHelper(c, b);
            },
            fabricateHelperEvent: function(a, b) {
                var c = b ? K(b.event) : {};
                return (
                    (c.start = a.start.clone()),
                    (c.end = a.end ? a.end.clone() : null),
                    (c.allDay = null),
                    this.view.calendar.normalizeEventRange(c),
                    (c.className = (c.className || []).concat("fc-helper")),
                    b || (c.editable = !1),
                    c
                );
            },
            renderHelper: function(a, b) {},
            unrenderHelper: function() {},
            renderSelection: function(a) {
                this.renderHighlight(this.selectionRangeToSegs(a));
            },
            unrenderSelection: function() {
                this.unrenderHighlight();
            },
            computeSelection: function(a, b) {
                var c,
                    d = [a.start, a.end, b.start, b.end];
                return (
                    d.sort(V),
                    (c = {
                        start: d[0].clone(),
                        end: d[3].clone()
                    }),
                    this.view.calendar.isSelectionRangeAllowed(c) ? c : null
                );
            },
            selectionRangeToSegs: function(a) {
                return this.rangeToSegs(a);
            },
            renderHighlight: function(a) {
                this.renderFill("highlight", a);
            },
            unrenderHighlight: function() {
                this.unrenderFill("highlight");
            },
            highlightSegClasses: function() {
                return ["fc-highlight"];
            },
            renderFill: function(a, b) {},
            unrenderFill: function(a) {
                var b = this.elsByFill[a];
                b && (b.remove(), delete this.elsByFill[a]);
            },
            renderFillSegEls: function(b, c) {
                var d,
                    e = this,
                    f = this[b + "SegEl"],
                    g = "",
                    h = [];
                if (c.length) {
                    for (d = 0; d < c.length; d++) g += this.fillSegHtml(b, c[d]);
                    a(g).each(function(b, d) {
                        var g = c[b],
                            i = a(d);
                        f && (i = f.call(e, g, i)),
                            i && ((i = a(i)), i.is(e.fillSegTag) && ((g.el = i), h.push(g)));
                    });
                }
                return h;
            },
            fillSegTag: "div",
            fillSegHtml: function(a, b) {
                var c = this[a + "SegClasses"],
                    d = this[a + "SegCss"],
                    e = c ? c.call(this, b) : [],
                    f = T(d ? d.call(this, b) : {});
                return (
                    "<" +
                    this.fillSegTag +
                    (e.length ? ' class="' + e.join(" ") + '"' : "") +
                    (f ? ' style="' + f + '"' : "") +
                    " />"
                );
            },
            headHtml: function() {
                return (
                    '<div class="fc-row ' +
                    this.view.widgetHeaderClass +
                    '"><table><thead>' +
                    this.rowHtml("head") +
                    "</thead></table></div>"
                );
            },
            headCellHtml: function(a) {
                var b = this.view,
                    c = a.start;
                return (
                    '<th class="fc-day-header ' +
                    b.widgetHeaderClass +
                    " fc-" +
                    Qa[c.day()] +
                    '">' +
                    R(c.format(this.colHeadFormat)) +
                    "</th>"
                );
            },
            bgCellHtml: function(a) {
                var b = this.view,
                    c = a.start,
                    d = this.getDayClasses(c);
                return (
                    d.unshift("fc-day", b.widgetContentClass),
                    '<td class="' +
                    d.join(" ") +
                    '" data-date="' +
                    c.format("YYYY-MM-DD") +
                    '"></td>'
                );
            },
            getDayClasses: function(a) {
                var b = this.view,
                    c = b.calendar.getNow().stripTime(),
                    d = ["fc-" + Qa[a.day()]];
                return (
                    1 == b.intervalDuration.as("months") &&
                    a.month() != b.intervalStart.month() &&
                    d.push("fc-other-month"),
                    a.isSame(c, "day") ?
                    d.push("fc-today", b.highlightStateClass) :
                    c > a ?
                    d.push("fc-past") :
                    d.push("fc-future"),
                    d
                );
            },
        }));
    fb.mixin({
            mousedOverSeg: null,
            isDraggingSeg: !1,
            isResizingSeg: !1,
            isDraggingExternal: !1,
            segs: null,
            renderEvents: function(a) {
                var b,
                    c,
                    d = this.eventsToSegs(a),
                    e = [],
                    f = [];
                for (b = 0; b < d.length; b++)
                    (c = d[b]), ma(c.event) ? e.push(c) : f.push(c);
                (e = this.renderBgSegs(e) || e),
                (f = this.renderFgSegs(f) || f),
                (this.segs = e.concat(f));
            },
            unrenderEvents: function() {
                this.triggerSegMouseout(),
                    this.unrenderFgSegs(),
                    this.unrenderBgSegs(),
                    (this.segs = null);
            },
            getEventSegs: function() {
                return this.segs || [];
            },
            renderFgSegs: function(a) {},
            unrenderFgSegs: function() {},
            renderFgSegEls: function(b, c) {
                var d,
                    e = this.view,
                    f = "",
                    g = [];
                if (b.length) {
                    for (d = 0; d < b.length; d++) f += this.fgSegHtml(b[d], c);
                    a(f).each(function(c, d) {
                        var f = b[c],
                            h = e.resolveEventEl(f.event, a(d));
                        h && (h.data("fc-seg", f), (f.el = h), g.push(f));
                    });
                }
                return g;
            },
            fgSegHtml: function(a, b) {},
            renderBgSegs: function(a) {
                return this.renderFill("bgEvent", a);
            },
            unrenderBgSegs: function() {
                this.unrenderFill("bgEvent");
            },
            bgEventSegEl: function(a, b) {
                return this.view.resolveEventEl(a.event, b);
            },
            bgEventSegClasses: function(a) {
                var b = a.event,
                    c = b.source || {};
                return ["fc-bgevent"].concat(b.className, c.className || []);
            },
            bgEventSegCss: function(a) {
                var b = this.view,
                    c = a.event,
                    d = c.source || {};
                return {
                    "background-color": c.backgroundColor ||
                        c.color ||
                        d.backgroundColor ||
                        d.color ||
                        b.opt("eventBackgroundColor") ||
                        b.opt("eventColor"),
                };
            },
            businessHoursSegClasses: function(a) {
                return ["fc-nonbusiness", "fc-bgevent"];
            },
            bindSegHandlers: function() {
                var b = this,
                    c = this.view;
                a.each({
                        mouseenter: function(a, c) {
                            b.triggerSegMouseover(a, c);
                        },
                        mouseleave: function(a, c) {
                            b.triggerSegMouseout(a, c);
                        },
                        click: function(a, b) {
                            return c.trigger("eventClick", this, a.event, b);
                        },
                        mousedown: function(d, e) {
                            a(e.target).is(".fc-resizer") && c.isEventResizable(d.event) ?
                                b.segResizeMousedown(d, e, a(e.target).is(".fc-start-resizer")) :
                                c.isEventDraggable(d.event) && b.segDragMousedown(d, e);
                        },
                    },
                    function(c, d) {
                        b.el.on(c, ".fc-event-container > *", function(c) {
                            var e = a(this).data("fc-seg");
                            return !e || b.isDraggingSeg || b.isResizingSeg ?
                                void 0 :
                                d.call(this, e, c);
                        });
                    }
                );
            },
            triggerSegMouseover: function(a, b) {
                this.mousedOverSeg ||
                    ((this.mousedOverSeg = a),
                        this.view.trigger("eventMouseover", a.el[0], a.event, b));
            },
            triggerSegMouseout: function(a, b) {
                (b = b || {}),
                this.mousedOverSeg &&
                    ((a = a || this.mousedOverSeg),
                        (this.mousedOverSeg = null),
                        this.view.trigger("eventMouseout", a.el[0], a.event, b));
            },
            segDragMousedown: function(a, b) {
                var c,
                    d = this,
                    e = this.view,
                    f = e.calendar,
                    i = a.el,
                    j = a.event,
                    k = new db(a.el, {
                        parentEl: e.el,
                        opacity: e.opt("dragOpacity"),
                        revertDuration: e.opt("dragRevertDuration"),
                        zIndex: 2,
                    }),
                    l = new cb(e.coordMap, {
                        distance: 5,
                        scroll: e.opt("dragScroll"),
                        subjectEl: i,
                        subjectCenter: !0,
                        listenStart: function(a) {
                            k.hide(), k.start(a);
                        },
                        dragStart: function(b) {
                            d.triggerSegMouseout(a, b), d.segDragStart(a, b), e.hideEvent(j);
                        },
                        cellOver: function(b, h, i) {
                            a.cell && (i = a.cell),
                                (c = d.computeEventDrop(i, b, j)),
                                c && !f.isEventRangeAllowed(c, j) && (g(), (c = null)),
                                c && e.renderDrag(c, a) ? k.hide() : k.show(),
                                h && (c = null);
                        },
                        cellOut: function() {
                            e.unrenderDrag(), k.show(), (c = null);
                        },
                        cellDone: function() {
                            h();
                        },
                        dragStop: function(b) {
                            k.stop(!c, function() {
                                e.unrenderDrag(),
                                    e.showEvent(j),
                                    d.segDragStop(a, b),
                                    c && e.reportEventDrop(j, c, this.largeUnit, i, b);
                            });
                        },
                        listenStop: function() {
                            k.stop();
                        },
                    });
                l.mousedown(b);
            },
            segDragStart: function(a, b) {
                (this.isDraggingSeg = !0),
                this.view.trigger("eventDragStart", a.el[0], a.event, b, {});
            },
            segDragStop: function(a, b) {
                (this.isDraggingSeg = !1),
                this.view.trigger("eventDragStop", a.el[0], a.event, b, {});
            },
            computeEventDrop: function(a, b, c) {
                var d,
                    e,
                    f = this.view.calendar,
                    g = a.start,
                    h = b.start;
                return (
                    g.hasTime() === h.hasTime() ?
                    ((d = this.diffDates(h, g)),
                        c.allDay && G(d) ?
                        ((e = {
                                start: c.start.clone(),
                                end: f.getEventEnd(c),
                                allDay: !1,
                            }),
                            f.normalizeEventRangeTimes(e)) :
                        (e = {
                            start: c.start.clone(),
                            end: c.end ? c.end.clone() : null,
                            allDay: c.allDay,
                        }),
                        e.start.add(d),
                        e.end && e.end.add(d)) :
                    (e = {
                        start: h.clone(),
                        end: null,
                        allDay: !h.hasTime()
                    }),
                    e
                );
            },
            applyDragOpacity: function(a) {
                var b = this.view.opt("dragOpacity");
                null != b &&
                    a.each(function(a, c) {
                        c.style.opacity = b;
                    });
            },
            externalDragStart: function(b, c) {
                var d,
                    e,
                    f = this.view;
                f.opt("droppable") &&
                    ((d = a((c ? c.item : null) || b.target)),
                        (e = f.opt("dropAccept")),
                        (a.isFunction(e) ? e.call(d[0], d) : d.is(e)) &&
                        (this.isDraggingExternal || this.listenToExternalDrag(d, b, c)));
            },
            listenToExternalDrag: function(a, b, c) {
                var d,
                    e,
                    f = this,
                    i = sa(a);
                (d = new cb(this.coordMap, {
                    listenStart: function() {
                        f.isDraggingExternal = !0;
                    },
                    cellOver: function(a) {
                        (e = f.computeExternalDrop(a, i)), e ? f.renderDrag(e) : g();
                    },
                    cellOut: function() {
                        (e = null), f.unrenderDrag(), h();
                    },
                    dragStop: function() {
                        f.unrenderDrag(), h(), e && f.view.reportExternalDrop(i, e, a, b, c);
                    },
                    listenStop: function() {
                        f.isDraggingExternal = !1;
                    },
                })),
                d.startDrag(b);
            },
            computeExternalDrop: function(a, b) {
                var c = {
                    start: a.start.clone(),
                    end: null
                };
                return (
                    b.startTime && !c.start.hasTime() && c.start.time(b.startTime),
                    b.duration && (c.end = c.start.clone().add(b.duration)),
                    this.view.calendar.isExternalDropRangeAllowed(c, b.eventProps) ?
                    c :
                    null
                );
            },
            renderDrag: function(a, b) {},
            unrenderDrag: function() {},
            segResizeMousedown: function(a, b, c) {
                var d,
                    e,
                    f = this,
                    i = this.view,
                    j = i.calendar,
                    k = a.el,
                    l = a.event,
                    m = j.getEventEnd(l);
                (d = new cb(this.coordMap, {
                    distance: 5,
                    scroll: i.opt("dragScroll"),
                    subjectEl: k,
                    dragStart: function(b) {
                        f.triggerSegMouseout(a, b), f.segResizeStart(a, b);
                    },
                    cellOver: function(b, d, h) {
                        (e = c ?
                            f.computeEventStartResize(h, b, l) :
                            f.computeEventEndResize(h, b, l)),
                        e &&
                            (j.isEventRangeAllowed(e, l) ?
                                e.start.isSame(l.start) && e.end.isSame(m) && (e = null) :
                                (g(), (e = null))),
                            e && (i.hideEvent(l), f.renderEventResize(e, a));
                    },
                    cellOut: function() {
                        e = null;
                    },
                    cellDone: function() {
                        f.unrenderEventResize(), i.showEvent(l), h();
                    },
                    dragStop: function(b) {
                        f.segResizeStop(a, b),
                            e && i.reportEventResize(l, e, this.largeUnit, k, b);
                    },
                })),
                d.mousedown(b);
            },
            segResizeStart: function(a, b) {
                (this.isResizingSeg = !0),
                this.view.trigger("eventResizeStart", a.el[0], a.event, b, {});
            },
            segResizeStop: function(a, b) {
                (this.isResizingSeg = !1),
                this.view.trigger("eventResizeStop", a.el[0], a.event, b, {});
            },
            computeEventStartResize: function(a, b, c) {
                return this.computeEventResize("start", a, b, c);
            },
            computeEventEndResize: function(a, b, c) {
                return this.computeEventResize("end", a, b, c);
            },
            computeEventResize: function(a, b, c, d) {
                var e,
                    f,
                    g = this.view.calendar,
                    h = this.diffDates(c[a], b[a]);
                return (
                    (e = {
                        start: d.start.clone(),
                        end: g.getEventEnd(d),
                        allDay: d.allDay,
                    }),
                    e.allDay && G(h) && ((e.allDay = !1), g.normalizeEventRangeTimes(e)),
                    e[a].add(h),
                    e.start.isBefore(e.end) ||
                    ((f = d.allDay ?
                            g.defaultAllDayEventDuration :
                            g.defaultTimedEventDuration),
                        this.cellDuration && this.cellDuration < f && (f = this.cellDuration),
                        "start" == a ?
                        (e.start = e.end.clone().subtract(f)) :
                        (e.end = e.start.clone().add(f))),
                    e
                );
            },
            renderEventResize: function(a, b) {},
            unrenderEventResize: function() {},
            getEventTimeText: function(a, b, c) {
                return (
                    null == b && (b = this.eventTimeFormat),
                    null == c && (c = this.displayEventEnd),
                    this.displayEventTime && a.start.hasTime() ?
                    c && a.end ?
                    this.view.formatRange(a, b) :
                    a.start.format(b) :
                    ""
                );
            },
            getSegClasses: function(a, b, c) {
                var d = a.event,
                    e = [
                        "fc-event",
                        a.isStart ? "fc-start" : "fc-not-start",
                        a.isEnd ? "fc-end" : "fc-not-end",
                    ].concat(d.className, d.source ? d.source.className : []);
                return b && e.push("fc-draggable"), c && e.push("fc-resizable"), e;
            },
            getEventSkinCss: function(a) {
                var b = this.view,
                    c = a.source || {},
                    d = a.color,
                    e = c.color,
                    f = b.opt("eventColor");
                return {
                    "background-color": a.backgroundColor ||
                        d ||
                        c.backgroundColor ||
                        e ||
                        b.opt("eventBackgroundColor") ||
                        f,
                    "border-color": a.borderColor ||
                        d ||
                        c.borderColor ||
                        e ||
                        b.opt("eventBorderColor") ||
                        f,
                    color: a.textColor || c.textColor || b.opt("eventTextColor"),
                };
            },
            eventsToSegs: function(a, b) {
                var c,
                    d = this.eventsToRanges(a),
                    e = [];
                for (c = 0; c < d.length; c++)
                    e.push.apply(e, this.eventRangeToSegs(d[c], b));
                return e;
            },
            eventsToRanges: function(b) {
                var c = this,
                    d = pa(b),
                    e = [];
                return (
                    a.each(d, function(a, b) {
                        b.length &&
                            e.push.apply(
                                e,
                                na(b[0]) ? c.eventsToInverseRanges(b) : c.eventsToNormalRanges(b)
                            );
                    }),
                    e
                );
            },
            eventsToNormalRanges: function(a) {
                var b,
                    c,
                    d,
                    e,
                    f = this.view.calendar,
                    g = [];
                for (b = 0; b < a.length; b++)
                    (c = a[b]),
                    (d = c.start.clone().stripZone()),
                    (e = f.getEventEnd(c).stripZone()),
                    g.push({
                        event: c,
                        start: d,
                        end: e,
                        eventStartMS: +d,
                        eventDurationMS: e - d,
                    });
                return g;
            },
            eventsToInverseRanges: function(a) {
                var b,
                    c,
                    d = this.view,
                    e = d.start.clone().stripZone(),
                    f = d.end.clone().stripZone(),
                    g = this.eventsToNormalRanges(a),
                    h = [],
                    i = a[0],
                    j = e;
                for (g.sort(qa), b = 0; b < g.length; b++)
                    (c = g[b]),
                    c.start > j && h.push({
                        event: i,
                        start: j,
                        end: c.start
                    }),
                    (j = c.end);
                return f > j && h.push({
                    event: i,
                    start: j,
                    end: f
                }), h;
            },
            eventRangeToSegs: function(a, b) {
                var c, d, e;
                for (
                    a = this.view.calendar.ensureVisibleEventRange(a),
                    c = b ? b(a) : this.rangeToSegs(a),
                    d = 0; d < c.length; d++
                )
                    (e = c[d]),
                    (e.event = a.event),
                    (e.eventStartMS = a.eventStartMS),
                    (e.eventDurationMS = a.eventDurationMS);
                return c;
            },
        }),
        (Ja.compareSegs = ra),
        (Ja.dataAttrPrefix = "");
    var gb = fb.extend({
        numbersVisible: !1,
        bottomCoordPadding: 0,
        breakOnWeeks: null,
        cellDates: null,
        dayToCellOffsets: null,
        rowEls: null,
        dayEls: null,
        helperEls: null,
        constructor: function() {
            fb.apply(this, arguments), (this.cellDuration = b.duration(1, "day"));
        },
        renderDates: function(a) {
            var b,
                c,
                d,
                e = this.view,
                f = this.rowCnt,
                g = this.colCnt,
                h = f * g,
                i = "";
            for (b = 0; f > b; b++) i += this.dayRowHtml(b, a);
            for (
                this.el.html(i),
                this.rowEls = this.el.find(".fc-row"),
                this.dayEls = this.el.find(".fc-day"),
                c = 0; h > c; c++
            )
                (d = this.getCell(c)),
                e.trigger("dayRender", null, d.start, this.dayEls.eq(c));
        },
        unrenderDates: function() {
            this.removeSegPopover();
        },
        renderBusinessHours: function() {
            var a = this.view.calendar.getBusinessHoursEvents(!0),
                b = this.eventsToSegs(a);
            this.renderFill("businessHours", b, "bgevent");
        },
        dayRowHtml: function(a, b) {
            var c = this.view,
                d = ["fc-row", "fc-week", c.widgetContentClass];
            return (
                b && d.push("fc-rigid"),
                '<div class="' +
                d.join(" ") +
                '"><div class="fc-bg"><table>' +
                this.rowHtml("day", a) +
                '</table></div><div class="fc-content-skeleton"><table>' +
                (this.numbersVisible ?
                    "<thead>" + this.rowHtml("number", a) + "</thead>" :
                    "") +
                "</table></div></div>"
            );
        },
        dayCellHtml: function(a) {
            return this.bgCellHtml(a);
        },
        computeColHeadFormat: function() {
            return this.rowCnt > 1 ?
                "ddd" :
                this.colCnt > 1 ?
                this.view.opt("dayOfMonthFormat") :
                "dddd";
        },
        computeEventTimeFormat: function() {
            return this.view.opt("extraSmallTimeFormat");
        },
        computeDisplayEventEnd: function() {
            return 1 == this.colCnt;
        },
        rangeUpdated: function() {
            var a, b, c, d;
            if ((this.updateCellDates(), (a = this.cellDates), this.breakOnWeeks)) {
                for (b = a[0].day(), d = 1; d < a.length && a[d].day() != b; d++);
                c = Math.ceil(a.length / d);
            } else(c = 1), (d = a.length);
            (this.rowCnt = c), (this.colCnt = d);
        },
        updateCellDates: function() {
            for (
                var a = this.view, b = this.start.clone(), c = [], d = -1, e = []; b.isBefore(this.end);

            )
                a.isHiddenDay(b) ?
                e.push(d + 0.5) :
                (d++, e.push(d), c.push(b.clone())),
                b.add(1, "days");
            (this.cellDates = c), (this.dayToCellOffsets = e);
        },
        computeCellDate: function(a) {
            var b = this.colCnt,
                c = a.row * b + (this.isRTL ? b - a.col - 1 : a.col);
            return this.cellDates[c].clone();
        },
        getRowEl: function(a) {
            return this.rowEls.eq(a);
        },
        getColEl: function(a) {
            return this.dayEls.eq(a);
        },
        getCellDayEl: function(a) {
            return this.dayEls.eq(a.row * this.colCnt + a.col);
        },
        computeRowCoords: function() {
            var a = fb.prototype.computeRowCoords.call(this);
            return (a[a.length - 1].bottom += this.bottomCoordPadding), a;
        },
        rangeToSegs: function(a) {
            var b,
                c,
                d,
                e,
                f,
                g,
                h,
                i,
                j,
                k,
                l = this.isRTL,
                m = this.rowCnt,
                n = this.colCnt,
                o = [];
            for (
                a = this.view.computeDayRange(a),
                b = this.dateToCellOffset(a.start),
                c = this.dateToCellOffset(a.end.subtract(1, "days")),
                d = 0; m > d; d++
            )
                (e = d * n),
                (f = e + n - 1),
                (i = Math.max(e, b)),
                (j = Math.min(f, c)),
                (i = Math.ceil(i)),
                (j = Math.floor(j)),
                j >= i &&
                ((g = i === b),
                    (h = j === c),
                    (i -= e),
                    (j -= e),
                    (k = {
                        row: d,
                        isStart: g,
                        isEnd: h
                    }),
                    l ?
                    ((k.leftCol = n - j - 1), (k.rightCol = n - i - 1)) :
                    ((k.leftCol = i), (k.rightCol = j)),
                    o.push(k));
            return o;
        },
        dateToCellOffset: function(a) {
            var b = this.dayToCellOffsets,
                c = a.diff(this.start, "days");
            return 0 > c ? b[0] - 1 : c >= b.length ? b[b.length - 1] + 1 : b[c];
        },
        renderDrag: function(a, b) {
            return (
                this.renderHighlight(this.eventRangeToSegs(a)),
                b && !b.el.closest(this.el).length ?
                (this.renderRangeHelper(a, b),
                    this.applyDragOpacity(this.helperEls), !0) :
                void 0
            );
        },
        unrenderDrag: function() {
            this.unrenderHighlight(), this.unrenderHelper();
        },
        renderEventResize: function(a, b) {
            this.renderHighlight(this.eventRangeToSegs(a)),
                this.renderRangeHelper(a, b);
        },
        unrenderEventResize: function() {
            this.unrenderHighlight(), this.unrenderHelper();
        },
        renderHelper: function(b, c) {
            var d,
                e = [],
                f = this.eventsToSegs([b]);
            (f = this.renderFgSegEls(f)),
            (d = this.renderSegRows(f)),
            this.rowEls.each(function(b, f) {
                    var g,
                        h = a(f),
                        i = a('<div class="fc-helper-skeleton"><table/></div>');
                    (g =
                        c && c.row === b ?
                        c.el.position().top :
                        h.find(".fc-content-skeleton tbody").position().top),
                    i.css("top", g).find("table").append(d[b].tbodyEl),
                        h.append(i),
                        e.push(i[0]);
                }),
                (this.helperEls = a(e));
        },
        unrenderHelper: function() {
            this.helperEls && (this.helperEls.remove(), (this.helperEls = null));
        },
        fillSegTag: "td",
        renderFill: function(b, c, d) {
            var e,
                f,
                g,
                h = [];
            for (c = this.renderFillSegEls(b, c), e = 0; e < c.length; e++)
                (f = c[e]),
                (g = this.renderFillRow(b, f, d)),
                this.rowEls.eq(f.row).append(g),
                h.push(g[0]);
            return (this.elsByFill[b] = a(h)), c;
        },
        renderFillRow: function(b, c, d) {
            var e,
                f,
                g = this.colCnt,
                h = c.leftCol,
                i = c.rightCol + 1;
            return (
                (d = d || b.toLowerCase()),
                (e = a(
                    '<div class="fc-' + d + '-skeleton"><table><tr/></table></div>'
                )),
                (f = e.find("tr")),
                h > 0 && f.append('<td colspan="' + h + '"/>'),
                f.append(c.el.attr("colspan", i - h)),
                g > i && f.append('<td colspan="' + (g - i) + '"/>'),
                this.bookendCells(f, b),
                e
            );
        },
    });
    gb.mixin({
            rowStructs: null,
            unrenderEvents: function() {
                this.removeSegPopover(),
                    fb.prototype.unrenderEvents.apply(this, arguments);
            },
            getEventSegs: function() {
                return fb.prototype.getEventSegs
                    .call(this)
                    .concat(this.popoverSegs || []);
            },
            renderBgSegs: function(b) {
                var c = a.grep(b, function(a) {
                    return a.event.allDay;
                });
                return fb.prototype.renderBgSegs.call(this, c);
            },
            renderFgSegs: function(b) {
                var c;
                return (
                    (b = this.renderFgSegEls(b)),
                    (c = this.rowStructs = this.renderSegRows(b)),
                    this.rowEls.each(function(b, d) {
                        a(d).find(".fc-content-skeleton > table").append(c[b].tbodyEl);
                    }),
                    b
                );
            },
            unrenderFgSegs: function() {
                for (var a, b = this.rowStructs || [];
                    (a = b.pop());)
                    a.tbodyEl.remove();
                this.rowStructs = null;
            },
            renderSegRows: function(a) {
                var b,
                    c,
                    d = [];
                for (b = this.groupSegRows(a), c = 0; c < b.length; c++)
                    d.push(this.renderSegRow(c, b[c]));
                return d;
            },
            fgSegHtml: function(a, b) {
                var c,
                    d,
                    e = this.view,
                    f = a.event,
                    g = e.isEventDraggable(f),
                    h = !b && f.allDay && a.isStart && e.isEventResizableFromStart(f),
                    i = !b && f.allDay && a.isEnd && e.isEventResizableFromEnd(f),
                    j = this.getSegClasses(a, g, h || i),
                    k = T(this.getEventSkinCss(f)),
                    l = "";
                return (
                    j.unshift("fc-day-grid-event", "fc-h-event"),
                    a.isStart &&
                    ((c = this.getEventTimeText(f)),
                        c && (l = '<span class="fc-time">' + R(c) + "</span>")),
                    (d =
                        '<span class="fc-title">' +
                        (R(f.title || "") || "&nbsp;") +
                        "</span>"),
                    '<a class="' +
                    j.join(" ") +
                    '"' +
                    (f.url ? ' href="' + R(f.url) + '"' : "") +
                    (k ? ' style="' + k + '"' : "") +
                    '><div class="fc-content">' +
                    (this.isRTL ? d + " " + l : l + " " + d) +
                    "</div>" +
                    (h ? '<div class="fc-resizer fc-start-resizer" />' : "") +
                    (i ? '<div class="fc-resizer fc-end-resizer" />' : "") +
                    "</a>"
                );
            },
            renderSegRow: function(b, c) {
                function d(b) {
                    for (; b > g;)
                        (k = (r[e - 1] || [])[g]),
                        k ?
                        k.attr("rowspan", parseInt(k.attr("rowspan") || 1, 10) + 1) :
                        ((k = a("<td/>")), h.append(k)),
                        (q[e][g] = k),
                        (r[e][g] = k),
                        g++;
                }
                var e,
                    f,
                    g,
                    h,
                    i,
                    j,
                    k,
                    l = this.colCnt,
                    m = this.buildSegLevels(c),
                    n = Math.max(1, m.length),
                    o = a("<tbody/>"),
                    p = [],
                    q = [],
                    r = [];
                for (e = 0; n > e; e++) {
                    if (
                        ((f = m[e]),
                            (g = 0),
                            (h = a("<tr/>")),
                            p.push([]),
                            q.push([]),
                            r.push([]),
                            f)
                    )
                        for (i = 0; i < f.length; i++) {
                            for (
                                j = f[i],
                                d(j.leftCol),
                                k = a('<td class="fc-event-container"/>').append(j.el),
                                j.leftCol != j.rightCol ?
                                k.attr("colspan", j.rightCol - j.leftCol + 1) :
                                (r[e][g] = k); g <= j.rightCol;

                            )
                                (q[e][g] = k), (p[e][g] = j), g++;
                            h.append(k);
                        }
                    d(l), this.bookendCells(h, "eventSkeleton"), o.append(h);
                }
                return {
                    row: b,
                    tbodyEl: o,
                    cellMatrix: q,
                    segMatrix: p,
                    segLevels: m,
                    segs: c,
                };
            },
            buildSegLevels: function(a) {
                var b,
                    c,
                    d,
                    e = [];
                for (a.sort(ra), b = 0; b < a.length; b++) {
                    for (c = a[b], d = 0; d < e.length && ta(c, e[d]); d++);
                    (c.level = d), (e[d] || (e[d] = [])).push(c);
                }
                for (d = 0; d < e.length; d++) e[d].sort(ua);
                return e;
            },
            groupSegRows: function(a) {
                var b,
                    c = [];
                for (b = 0; b < this.rowCnt; b++) c.push([]);
                for (b = 0; b < a.length; b++) c[a[b].row].push(a[b]);
                return c;
            },
        }),
        gb.mixin({
            segPopover: null,
            popoverSegs: null,
            removeSegPopover: function() {
                this.segPopover && this.segPopover.hide();
            },
            limitRows: function(a) {
                var b,
                    c,
                    d = this.rowStructs || [];
                for (b = 0; b < d.length; b++)
                    this.unlimitRow(b),
                    (c = a ?
                        "number" == typeof a ?
                        a :
                        this.computeRowLevelLimit(b) :
                        !1),
                    c !== !1 && this.limitRow(b, c);
            },
            computeRowLevelLimit: function(b) {
                function c(b, c) {
                    f = Math.max(f, a(c).outerHeight());
                }
                var d,
                    e,
                    f,
                    g = this.rowEls.eq(b),
                    h = g.height(),
                    i = this.rowStructs[b].tbodyEl.children();
                for (d = 0; d < i.length; d++)
                    if (
                        ((e = i.eq(d).removeClass("fc-limited")),
                            (f = 0),
                            e.find("> td > :first-child").each(c),
                            e.position().top + f > h)
                    )
                        return d;
                return !1;
            },
            limitRow: function(b, c) {
                function d(d) {
                    for (; d > x;)
                        (e = u.getCell(b, x)),
                        (k = u.getCellSegs(e, c)),
                        k.length &&
                        ((n = g[c - 1][x]),
                            (t = u.renderMoreLink(e, k)),
                            (s = a("<div/>").append(t)),
                            n.append(s),
                            w.push(s[0])),
                        x++;
                }
                var e,
                    f,
                    g,
                    h,
                    i,
                    j,
                    k,
                    l,
                    m,
                    n,
                    o,
                    p,
                    q,
                    r,
                    s,
                    t,
                    u = this,
                    v = this.rowStructs[b],
                    w = [],
                    x = 0;
                if (c && c < v.segLevels.length) {
                    for (
                        f = v.segLevels[c - 1],
                        g = v.cellMatrix,
                        h = v.tbodyEl.children().slice(c).addClass("fc-limited").get(),
                        i = 0; i < f.length; i++
                    ) {
                        for (j = f[i], d(j.leftCol), m = [], l = 0; x <= j.rightCol;)
                            (e = this.getCell(b, x)),
                            (k = this.getCellSegs(e, c)),
                            m.push(k),
                            (l += k.length),
                            x++;
                        if (l) {
                            for (
                                n = g[c - 1][j.leftCol],
                                o = n.attr("rowspan") || 1,
                                p = [],
                                q = 0; q < m.length; q++
                            )
                                (r = a('<td class="fc-more-cell"/>').attr("rowspan", o)),
                                (k = m[q]),
                                (e = this.getCell(b, j.leftCol + q)),
                                (t = this.renderMoreLink(e, [j].concat(k))),
                                (s = a("<div/>").append(t)),
                                r.append(s),
                                p.push(r[0]),
                                w.push(r[0]);
                            n.addClass("fc-limited").after(a(p)), h.push(n[0]);
                        }
                    }
                    d(this.colCnt), (v.moreEls = a(w)), (v.limitedEls = a(h));
                }
            },
            unlimitRow: function(a) {
                var b = this.rowStructs[a];
                b.moreEls && (b.moreEls.remove(), (b.moreEls = null)),
                    b.limitedEls &&
                    (b.limitedEls.removeClass("fc-limited"), (b.limitedEls = null));
            },
            renderMoreLink: function(b, c) {
                var d = this,
                    e = this.view;
                return a('<a class="fc-more"/>')
                    .text(this.getMoreLinkText(c.length))
                    .on("click", function(f) {
                        var g = e.opt("eventLimitClick"),
                            h = b.start,
                            i = a(this),
                            j = d.getCellDayEl(b),
                            k = d.getCellSegs(b),
                            l = d.resliceDaySegs(k, h),
                            m = d.resliceDaySegs(c, h);
                        "function" == typeof g &&
                            (g = e.trigger(
                                "eventLimitClick",
                                null, {
                                    date: h,
                                    dayEl: j,
                                    moreEl: i,
                                    segs: l,
                                    hiddenSegs: m
                                },
                                f
                            )),
                            "popover" === g ?
                            d.showSegPopover(b, i, l) :
                            "string" == typeof g && e.calendar.zoomTo(h, g);
                    });
            },
            showSegPopover: function(a, b, c) {
                var d,
                    e,
                    f = this,
                    g = this.view,
                    h = b.parent();
                (d = 1 == this.rowCnt ? g.el : this.rowEls.eq(a.row)),
                (e = {
                    className: "fc-more-popover",
                    content: this.renderSegPopoverContent(a, c),
                    parentEl: this.el,
                    top: d.offset().top,
                    autoHide: !0,
                    viewportConstrain: g.opt("popoverViewportConstrain"),
                    hide: function() {
                        f.segPopover.removeElement(),
                            (f.segPopover = null),
                            (f.popoverSegs = null);
                    },
                }),
                this.isRTL ?
                    (e.right = h.offset().left + h.outerWidth() + 1) :
                    (e.left = h.offset().left - 1),
                    (this.segPopover = new $a(e)),
                    this.segPopover.show();
            },
            renderSegPopoverContent: function(b, c) {
                var d,
                    e = this.view,
                    f = e.opt("theme"),
                    g = b.start.format(e.opt("dayPopoverFormat")),
                    h = a(
                        '<div class="fc-header ' +
                        e.widgetHeaderClass +
                        '"><span class="fc-close ' +
                        (f ? "ui-icon ui-icon-closethick" : "fc-icon fc-icon-x") +
                        '"></span><span class="fc-title">' +
                        R(g) +
                        '</span><div class="fc-clear"/></div><div class="fc-body ' +
                        e.widgetContentClass +
                        '"><div class="fc-event-container"></div></div>'
                    ),
                    i = h.find(".fc-event-container");
                for (
                    c = this.renderFgSegEls(c, !0), this.popoverSegs = c, d = 0; d < c.length; d++
                )
                    (c[d].cell = b), i.append(c[d].el);
                return h;
            },
            resliceDaySegs: function(b, c) {
                var d = a.map(b, function(a) {
                        return a.event;
                    }),
                    e = c.clone().stripTime(),
                    f = e.clone().add(1, "days"),
                    g = {
                        start: e,
                        end: f
                    };
                return (
                    (b = this.eventsToSegs(d, function(a) {
                        var b = A(a, g);
                        return b ? [b] : [];
                    })),
                    b.sort(ra),
                    b
                );
            },
            getMoreLinkText: function(a) {
                var b = this.view.opt("eventLimitText");
                return "function" == typeof b ? b(a) : "+" + a + " " + b;
            },
            getCellSegs: function(a, b) {
                for (
                    var c, d = this.rowStructs[a.row].segMatrix, e = b || 0, f = []; e < d.length;

                )
                    (c = d[e][a.col]), c && f.push(c), e++;
                return f;
            },
        });
    var hb = fb.extend({
        slotDuration: null,
        snapDuration: null,
        minTime: null,
        maxTime: null,
        colDates: null,
        axisFormat: null,
        dayEls: null,
        slatEls: null,
        slatTops: null,
        helperEl: null,
        businessHourSegs: null,
        constructor: function() {
            fb.apply(this, arguments), this.processOptions();
        },
        renderDates: function() {
            this.el.html(this.renderHtml()),
                (this.dayEls = this.el.find(".fc-day")),
                (this.slatEls = this.el.find(".fc-slats tr"));
        },
        renderBusinessHours: function() {
            var a = this.view.calendar.getBusinessHoursEvents();
            this.businessHourSegs = this.renderFill(
                "businessHours",
                this.eventsToSegs(a),
                "bgevent"
            );
        },
        renderHtml: function() {
            return (
                '<div class="fc-bg"><table>' +
                this.rowHtml("slotBg") +
                '</table></div><div class="fc-slats"><table>' +
                this.slatRowHtml() +
                "</table></div>"
            );
        },
        slotBgCellHtml: function(a) {
            return this.bgCellHtml(a);
        },
        slatRowHtml: function() {
            for (
                var a,
                    c,
                    d,
                    e = this.view,
                    f = this.isRTL,
                    g = "",
                    h = this.slotDuration.asMinutes() % 15 === 0,
                    i = b.duration(+this.minTime); i < this.maxTime;

            )
                (a = this.start.clone().time(i)),
                (c = a.minutes()),
                (d =
                    '<td class="fc-axis fc-time ' +
                    e.widgetContentClass +
                    '" ' +
                    e.axisStyleAttr() +
                    ">" +
                    (h && c ?
                        "" :
                        "<span>" + R(a.format(this.axisFormat)) + "</span>") +
                    "</td>"),
                (g +=
                    "<tr " +
                    (c ? 'class="fc-minor"' : "") +
                    ">" +
                    (f ? "" : d) +
                    '<td class="' +
                    e.widgetContentClass +
                    '"/>' +
                    (f ? d : "") +
                    "</tr>"),
                i.add(this.slotDuration);
            return g;
        },
        processOptions: function() {
            var a = this.view,
                c = a.opt("slotDuration"),
                d = a.opt("snapDuration");
            (c = b.duration(c)),
            (d = d ? b.duration(d) : c),
            (this.slotDuration = c),
            (this.snapDuration = d),
            (this.cellDuration = d),
            (this.minTime = b.duration(a.opt("minTime"))),
            (this.maxTime = b.duration(a.opt("maxTime"))),
            (this.axisFormat = a.opt("axisFormat") || a.opt("smallTimeFormat"));
        },
        computeColHeadFormat: function() {
            return this.colCnt > 1 ? this.view.opt("dayOfMonthFormat") : "dddd";
        },
        computeEventTimeFormat: function() {
            return this.view.opt("noMeridiemTimeFormat");
        },
        computeDisplayEventEnd: function() {
            return !0;
        },
        rangeUpdated: function() {
            var a,
                b = this.view,
                c = [];
            for (a = this.start.clone(); a.isBefore(this.end);)
                c.push(a.clone()), a.add(1, "day"), (a = b.skipHiddenDays(a));
            this.isRTL && c.reverse(),
                (this.colDates = c),
                (this.colCnt = c.length),
                (this.rowCnt = Math.ceil(
                    (this.maxTime - this.minTime) / this.snapDuration
                ));
        },
        computeCellDate: function(a) {
            var b = this.colDates[a.col],
                c = this.computeSnapTime(a.row);
            return (b = this.view.calendar.rezoneDate(b)), b.time(c), b;
        },
        getColEl: function(a) {
            return this.dayEls.eq(a);
        },
        computeSnapTime: function(a) {
            return b.duration(this.minTime + this.snapDuration * a);
        },
        rangeToSegs: function(a) {
            var b,
                c,
                d,
                e,
                f = this.colCnt,
                g = [];
            for (
                a = {
                    start: a.start.clone().stripZone(),
                    end: a.end.clone().stripZone(),
                },
                c = 0; f > c; c++
            )
                (d = this.colDates[c]),
                (e = {
                    start: d.clone().time(this.minTime),
                    end: d.clone().time(this.maxTime),
                }),
                (b = A(a, e)),
                b && ((b.col = c), g.push(b));
            return g;
        },
        updateSize: function(a) {
            this.computeSlatTops(), a && this.updateSegVerticals();
        },
        computeRowCoords: function() {
            var a,
                b,
                c = this.el.offset().top,
                d = [];
            for (a = 0; a < this.rowCnt; a++)
                (b = {
                    top: c + this.computeTimeTop(this.computeSnapTime(a))
                }),
                a > 0 && (d[a - 1].bottom = b.top),
                d.push(b);
            return (
                (b.bottom = b.top + this.computeTimeTop(this.computeSnapTime(a))), d
            );
        },
        computeDateTop: function(a, c) {
            return this.computeTimeTop(
                b.duration(a.clone().stripZone() - c.clone().stripTime())
            );
        },
        computeTimeTop: function(a) {
            var b,
                c,
                d,
                e,
                f = (a - this.minTime) / this.slotDuration;
            return (
                (f = Math.max(0, f)),
                (f = Math.min(this.slatEls.length, f)),
                (b = Math.floor(f)),
                (c = f - b),
                (d = this.slatTops[b]),
                c ? ((e = this.slatTops[b + 1]), d + (e - d) * c) : d
            );
        },
        computeSlatTops: function() {
            var b,
                c = [];
            this.slatEls.each(function(d, e) {
                    (b = a(e).position().top), c.push(b);
                }),
                c.push(b + this.slatEls.last().outerHeight()),
                (this.slatTops = c);
        },
        renderDrag: function(a, b) {
            return b ?
                (this.renderRangeHelper(a, b),
                    this.applyDragOpacity(this.helperEl), !0) :
                void this.renderHighlight(this.eventRangeToSegs(a));
        },
        unrenderDrag: function() {
            this.unrenderHelper(), this.unrenderHighlight();
        },
        renderEventResize: function(a, b) {
            this.renderRangeHelper(a, b);
        },
        unrenderEventResize: function() {
            this.unrenderHelper();
        },
        renderHelper: function(b, c) {
            var d,
                e,
                f,
                g,
                h = this.eventsToSegs([b]);
            for (
                h = this.renderFgSegEls(h), d = this.renderSegTable(h), e = 0; e < h.length; e++
            )
                (f = h[e]),
                c &&
                c.col === f.col &&
                ((g = c.el),
                    f.el.css({
                        left: g.css("left"),
                        right: g.css("right"),
                        "margin-left": g.css("margin-left"),
                        "margin-right": g.css("margin-right"),
                    }));
            this.helperEl = a('<div class="fc-helper-skeleton"/>')
                .append(d)
                .appendTo(this.el);
        },
        unrenderHelper: function() {
            this.helperEl && (this.helperEl.remove(), (this.helperEl = null));
        },
        renderSelection: function(a) {
            this.view.opt("selectHelper") ?
                this.renderRangeHelper(a) :
                this.renderHighlight(this.selectionRangeToSegs(a));
        },
        unrenderSelection: function() {
            this.unrenderHelper(), this.unrenderHighlight();
        },
        renderFill: function(b, c, d) {
            var e, f, g, h, i, j, k, l, m, n;
            if (c.length) {
                for (
                    c = this.renderFillSegEls(b, c),
                    e = this.groupSegCols(c),
                    d = d || b.toLowerCase(),
                    f = a(
                        '<div class="fc-' + d + '-skeleton"><table><tr/></table></div>'
                    ),
                    g = f.find("tr"),
                    h = 0; h < e.length; h++
                )
                    if (((i = e[h]), (j = a("<td/>").appendTo(g)), i.length))
                        for (
                            k = a('<div class="fc-' + d + '-container"/>').appendTo(j),
                            l = this.colDates[h],
                            m = 0; m < i.length; m++
                        )
                            (n = i[m]),
                            k.append(
                                n.el.css({
                                    top: this.computeDateTop(n.start, l),
                                    bottom: -this.computeDateTop(n.end, l),
                                })
                            );
                this.bookendCells(g, b), this.el.append(f), (this.elsByFill[b] = f);
            }
            return c;
        },
    });
    hb.mixin({
        eventSkeletonEl: null,
        renderFgSegs: function(b) {
            return (
                (b = this.renderFgSegEls(b)),
                this.el.append(
                    (this.eventSkeletonEl = a(
                        '<div class="fc-content-skeleton"/>'
                    ).append(this.renderSegTable(b)))
                ),
                b
            );
        },
        unrenderFgSegs: function(a) {
            this.eventSkeletonEl &&
                (this.eventSkeletonEl.remove(), (this.eventSkeletonEl = null));
        },
        renderSegTable: function(b) {
            var c,
                d,
                e,
                f,
                g,
                h,
                i = a("<table><tr/></table>"),
                j = i.find("tr");
            for (
                c = this.groupSegCols(b), this.computeSegVerticals(b), f = 0; f < c.length; f++
            ) {
                for (
                    g = c[f], va(g), h = a('<div class="fc-event-container"/>'), d = 0; d < g.length; d++
                )
                    (e = g[d]),
                    e.el.css(this.generateSegPositionCss(e)),
                    e.bottom - e.top < 30 && e.el.addClass("fc-short"),
                    h.append(e.el);
                j.append(a("<td/>").append(h));
            }
            return this.bookendCells(j, "eventSkeleton"), i;
        },
        updateSegVerticals: function() {
            var a,
                b = (this.segs || []).concat(this.businessHourSegs || []);
            for (this.computeSegVerticals(b), a = 0; a < b.length; a++)
                b[a].el.css(this.generateSegVerticalCss(b[a]));
        },
        computeSegVerticals: function(a) {
            var b, c;
            for (b = 0; b < a.length; b++)
                (c = a[b]),
                (c.top = this.computeDateTop(c.start, c.start)),
                (c.bottom = this.computeDateTop(c.end, c.start));
        },
        fgSegHtml: function(a, b) {
            var c,
                d,
                e,
                f = this.view,
                g = a.event,
                h = f.isEventDraggable(g),
                i = !b && a.isStart && f.isEventResizableFromStart(g),
                j = !b && a.isEnd && f.isEventResizableFromEnd(g),
                k = this.getSegClasses(a, h, i || j),
                l = T(this.getEventSkinCss(g));
            return (
                k.unshift("fc-time-grid-event", "fc-v-event"),
                f.isMultiDayEvent(g) ?
                (a.isStart || a.isEnd) &&
                ((c = this.getEventTimeText(a)),
                    (d = this.getEventTimeText(a, "LT")),
                    (e = this.getEventTimeText(a, null, !1))) :
                ((c = this.getEventTimeText(g)),
                    (d = this.getEventTimeText(g, "LT")),
                    (e = this.getEventTimeText(g, null, !1))),
                '<a class="' +
                k.join(" ") +
                '"' +
                (g.url ? ' href="' + R(g.url) + '"' : "") +
                (l ? ' style="' + l + '"' : "") +
                '><div class="fc-content">' +
                (c ?
                    '<div class="fc-time" data-start="' +
                    R(e) +
                    '" data-full="' +
                    R(d) +
                    '"><span>' +
                    R(c) +
                    "</span></div>" :
                    "") +
                (g.title ? '<div class="fc-title">' + R(g.title) + "</div>" : "") +
                '</div><div class="fc-bg"/>' +
                (j ? '<div class="fc-resizer fc-end-resizer" />' : "") +
                "</a>"
            );
        },
        generateSegPositionCss: function(a) {
            var b,
                c,
                d = this.view.opt("slotEventOverlap"),
                e = a.backwardCoord,
                f = a.forwardCoord,
                g = this.generateSegVerticalCss(a);
            return (
                d && (f = Math.min(1, e + 2 * (f - e))),
                this.isRTL ? ((b = 1 - f), (c = e)) : ((b = e), (c = 1 - f)),
                (g.zIndex = a.level + 1),
                (g.left = 100 * b + "%"),
                (g.right = 100 * c + "%"),
                d &&
                a.forwardPressure &&
                (g[this.isRTL ? "marginLeft" : "marginRight"] = 20),
                g
            );
        },
        generateSegVerticalCss: function(a) {
            return {
                top: a.top,
                bottom: -a.bottom
            };
        },
        groupSegCols: function(a) {
            var b,
                c = [];
            for (b = 0; b < this.colCnt; b++) c.push([]);
            for (b = 0; b < a.length; b++) c[a[b].col].push(a[b]);
            return c;
        },
    });
    var ib = (Ja.View = ka.extend({
            type: null,
            name: null,
            title: null,
            calendar: null,
            options: null,
            coordMap: null,
            el: null,
            displaying: null,
            isSkeletonRendered: !1,
            isEventsRendered: !1,
            start: null,
            end: null,
            intervalStart: null,
            intervalEnd: null,
            intervalDuration: null,
            intervalUnit: null,
            isRTL: !1,
            isSelected: !1,
            scrollerEl: null,
            scrollTop: null,
            widgetHeaderClass: null,
            widgetContentClass: null,
            highlightStateClass: null,
            nextDayThreshold: null,
            isHiddenDayHash: null,
            documentMousedownProxy: null,
            constructor: function(a, c, d, e) {
                (this.calendar = a),
                (this.type = this.name = c),
                (this.options = d),
                (this.intervalDuration = e || b.duration(1, "day")),
                (this.nextDayThreshold = b.duration(this.opt("nextDayThreshold"))),
                this.initThemingProps(),
                    this.initHiddenDays(),
                    (this.isRTL = this.opt("isRTL")),
                    (this.documentMousedownProxy = X(this, "documentMousedown")),
                    this.initialize();
            },
            initialize: function() {},
            opt: function(a) {
                return this.options[a];
            },
            trigger: function(a, b) {
                var c = this.calendar;
                return c.trigger.apply(
                    c, [a, b || this].concat(Array.prototype.slice.call(arguments, 2), [
                        this,
                    ])
                );
            },
            setDate: function(a) {
                this.setRange(this.computeRange(a));
            },
            setRange: function(b) {
                a.extend(this, b), this.updateTitle();
            },
            computeRange: function(a) {
                var b,
                    c,
                    d = E(this.intervalDuration),
                    e = a.clone().startOf(d),
                    f = e.clone().add(this.intervalDuration);
                return (
                    /year|month|week|day/.test(d) ?
                    (e.stripTime(), f.stripTime()) :
                    (e.hasTime() || (e = this.calendar.rezoneDate(e)),
                        f.hasTime() || (f = this.calendar.rezoneDate(f))),
                    (b = e.clone()),
                    (b = this.skipHiddenDays(b)),
                    (c = f.clone()),
                    (c = this.skipHiddenDays(c, -1, !0)), {
                        intervalUnit: d,
                        intervalStart: e,
                        intervalEnd: f,
                        start: b,
                        end: c,
                    }
                );
            },
            computePrevDate: function(a) {
                return this.massageCurrentDate(
                    a.clone().startOf(this.intervalUnit).subtract(this.intervalDuration), -1
                );
            },
            computeNextDate: function(a) {
                return this.massageCurrentDate(
                    a.clone().startOf(this.intervalUnit).add(this.intervalDuration)
                );
            },
            massageCurrentDate: function(a, b) {
                return (
                    this.intervalDuration.as("days") <= 1 &&
                    this.isHiddenDay(a) &&
                    ((a = this.skipHiddenDays(a, b)), a.startOf("day")),
                    a
                );
            },
            updateTitle: function() {
                this.title = this.computeTitle();
            },
            computeTitle: function() {
                return this.formatRange({
                        start: this.intervalStart,
                        end: this.intervalEnd
                    },
                    this.opt("titleFormat") || this.computeTitleFormat(),
                    this.opt("titleRangeSeparator")
                );
            },
            computeTitleFormat: function() {
                return "year" == this.intervalUnit ?
                    "YYYY" :
                    "month" == this.intervalUnit ?
                    this.opt("monthYearFormat") :
                    this.intervalDuration.as("days") > 1 ?
                    "ll" :
                    "LL";
            },
            formatRange: function(a, b, c) {
                var d = a.end;
                return (
                    d.hasTime() || (d = d.clone().subtract(1)),
                    fa(a.start, d, b, c, this.opt("isRTL"))
                );
            },
            setElement: function(a) {
                (this.el = a), this.bindGlobalHandlers();
            },
            removeElement: function() {
                this.clear(),
                    this.isSkeletonRendered &&
                    (this.unrenderSkeleton(), (this.isSkeletonRendered = !1)),
                    this.unbindGlobalHandlers(),
                    this.el.remove();
            },
            display: function(b) {
                var c = this,
                    d = null;
                return (
                    this.displaying && (d = this.queryScroll()),
                    this.clear().then(function() {
                        return (c.displaying = a.when(c.displayView(b)).then(function() {
                            c.forceScroll(c.computeInitialScroll(d)), c.triggerRender();
                        }));
                    })
                );
            },
            clear: function() {
                var b = this,
                    c = this.displaying;
                return c ?
                    c.then(function() {
                        return (b.displaying = null), b.clearEvents(), b.clearView();
                    }) :
                    a.when();
            },
            displayView: function(a) {
                this.isSkeletonRendered ||
                    (this.renderSkeleton(), (this.isSkeletonRendered = !0)),
                    this.setDate(a),
                    this.render && this.render(),
                    this.renderDates(),
                    this.updateSize(),
                    this.renderBusinessHours();
            },
            clearView: function() {
                this.unselect(),
                    this.triggerUnrender(),
                    this.unrenderBusinessHours(),
                    this.unrenderDates(),
                    this.destroy && this.destroy();
            },
            renderSkeleton: function() {},
            unrenderSkeleton: function() {},
            renderDates: function() {},
            unrenderDates: function() {},
            renderBusinessHours: function() {},
            unrenderBusinessHours: function() {},
            triggerRender: function() {
                this.trigger("viewRender", this, this, this.el);
            },
            triggerUnrender: function() {
                this.trigger("viewDestroy", this, this, this.el);
            },
            bindGlobalHandlers: function() {
                a(document).on("mousedown", this.documentMousedownProxy);
            },
            unbindGlobalHandlers: function() {
                a(document).off("mousedown", this.documentMousedownProxy);
            },
            initThemingProps: function() {
                var a = this.opt("theme") ? "ui" : "fc";
                (this.widgetHeaderClass = a + "-widget-header"),
                (this.widgetContentClass = a + "-widget-content"),
                (this.highlightStateClass = a + "-state-highlight");
            },
            updateSize: function(a) {
                var b;
                a && (b = this.queryScroll()),
                    this.updateHeight(a),
                    this.updateWidth(a),
                    a && this.setScroll(b);
            },
            updateWidth: function(a) {},
            updateHeight: function(a) {
                var b = this.calendar;
                this.setHeight(b.getSuggestedViewHeight(), b.isHeightAuto());
            },
            setHeight: function(a, b) {},
            computeScrollerHeight: function(a) {
                var b,
                    c,
                    d = this.scrollerEl;
                return (
                    (b = this.el.add(d)),
                    b.css({
                        position: "relative",
                        left: -1
                    }),
                    (c = this.el.outerHeight() - d.height()),
                    b.css({
                        position: "",
                        left: ""
                    }),
                    a - c
                );
            },
            computeInitialScroll: function(a) {
                return 0;
            },
            queryScroll: function() {
                return this.scrollerEl ? this.scrollerEl.scrollTop() : void 0;
            },
            setScroll: function(a) {
                return this.scrollerEl ? this.scrollerEl.scrollTop(a) : void 0;
            },
            forceScroll: function(a) {
                var b = this;
                this.setScroll(a),
                    setTimeout(function() {
                        b.setScroll(a);
                    }, 0);
            },
            displayEvents: function(a) {
                var b = this.queryScroll();
                this.clearEvents(),
                    this.renderEvents(a),
                    (this.isEventsRendered = !0),
                    this.setScroll(b),
                    this.triggerEventRender();
            },
            clearEvents: function() {
                this.isEventsRendered &&
                    (this.triggerEventUnrender(),
                        this.destroyEvents && this.destroyEvents(),
                        this.unrenderEvents(),
                        (this.isEventsRendered = !1));
            },
            renderEvents: function(a) {},
            unrenderEvents: function() {},
            triggerEventRender: function() {
                this.renderedEventSegEach(function(a) {
                        this.trigger("eventAfterRender", a.event, a.event, a.el);
                    }),
                    this.trigger("eventAfterAllRender");
            },
            triggerEventUnrender: function() {
                this.renderedEventSegEach(function(a) {
                    this.trigger("eventDestroy", a.event, a.event, a.el);
                });
            },
            resolveEventEl: function(b, c) {
                var d = this.trigger("eventRender", b, b, c);
                return d === !1 ? (c = null) : d && d !== !0 && (c = a(d)), c;
            },
            showEvent: function(a) {
                this.renderedEventSegEach(function(a) {
                    a.el.css("visibility", "");
                }, a);
            },
            hideEvent: function(a) {
                this.renderedEventSegEach(function(a) {
                    a.el.css("visibility", "hidden");
                }, a);
            },
            renderedEventSegEach: function(a, b) {
                var c,
                    d = this.getEventSegs();
                for (c = 0; c < d.length; c++)
                    (b && d[c].event._id !== b._id) || (d[c].el && a.call(this, d[c]));
            },
            getEventSegs: function() {
                return [];
            },
            isEventDraggable: function(a) {
                var b = a.source || {};
                return Q(
                    a.startEditable,
                    b.startEditable,
                    this.opt("eventStartEditable"),
                    a.editable,
                    b.editable,
                    this.opt("editable")
                );
            },
            reportEventDrop: function(a, b, c, d, e) {
                var f = this.calendar,
                    g = f.mutateEvent(a, b, c),
                    h = function() {
                        g.undo(), f.reportEventChange();
                    };
                this.triggerEventDrop(a, g.dateDelta, h, d, e), f.reportEventChange();
            },
            triggerEventDrop: function(a, b, c, d, e) {
                this.trigger("eventDrop", d[0], a, b, c, e, {});
            },
            reportExternalDrop: function(b, c, d, e, f) {
                var g,
                    h,
                    i = b.eventProps;
                i &&
                    ((g = a.extend({}, i, c)),
                        (h = this.calendar.renderEvent(g, b.stick)[0])),
                    this.triggerExternalDrop(h, c, d, e, f);
            },
            triggerExternalDrop: function(a, b, c, d, e) {
                this.trigger("drop", c[0], b.start, d, e),
                    a && this.trigger("eventReceive", null, a);
            },
            renderDrag: function(a, b) {},
            unrenderDrag: function() {},
            isEventResizableFromStart: function(a) {
                return this.opt("eventResizableFromStart") && this.isEventResizable(a);
            },
            isEventResizableFromEnd: function(a) {
                return this.isEventResizable(a);
            },
            isEventResizable: function(a) {
                var b = a.source || {};
                return Q(
                    a.durationEditable,
                    b.durationEditable,
                    this.opt("eventDurationEditable"),
                    a.editable,
                    b.editable,
                    this.opt("editable")
                );
            },
            reportEventResize: function(a, b, c, d, e) {
                var f = this.calendar,
                    g = f.mutateEvent(a, b, c),
                    h = function() {
                        g.undo(), f.reportEventChange();
                    };
                this.triggerEventResize(a, g.durationDelta, h, d, e),
                    f.reportEventChange();
            },
            triggerEventResize: function(a, b, c, d, e) {
                this.trigger("eventResize", d[0], a, b, c, e, {});
            },
            select: function(a, b) {
                this.unselect(b), this.renderSelection(a), this.reportSelection(a, b);
            },
            renderSelection: function(a) {},
            reportSelection: function(a, b) {
                (this.isSelected = !0), this.triggerSelect(a, b);
            },
            triggerSelect: function(a, b) {
                this.trigger("select", null, a.start, a.end, b);
            },
            unselect: function(a) {
                this.isSelected &&
                    ((this.isSelected = !1),
                        this.destroySelection && this.destroySelection(),
                        this.unrenderSelection(),
                        this.trigger("unselect", null, a));
            },
            unrenderSelection: function() {},
            documentMousedown: function(b) {
                var c;
                this.isSelected &&
                    this.opt("unselectAuto") &&
                    v(b) &&
                    ((c = this.opt("unselectCancel")),
                        (c && a(b.target).closest(c).length) || this.unselect(b));
            },
            triggerDayClick: function(a, b, c) {
                this.trigger("dayClick", b, a.start, c);
            },
            initHiddenDays: function() {
                var b,
                    c = this.opt("hiddenDays") || [],
                    d = [],
                    e = 0;
                for (this.opt("weekends") === !1 && c.push(0, 6), b = 0; 7 > b; b++)
                    (d[b] = -1 !== a.inArray(b, c)) || e++;
                if (!e) throw "invalid hiddenDays";
                this.isHiddenDayHash = d;
            },
            isHiddenDay: function(a) {
                return b.isMoment(a) && (a = a.day()), this.isHiddenDayHash[a];
            },
            skipHiddenDays: function(a, b, c) {
                var d = a.clone();
                for (
                    b = b || 1; this.isHiddenDayHash[(d.day() + (c ? b : 0) + 7) % 7];

                )
                    d.add(b, "days");
                return d;
            },
            computeDayRange: function(a) {
                var b,
                    c = a.start.clone().stripTime(),
                    d = a.end,
                    e = null;
                return (
                    d &&
                    ((e = d.clone().stripTime()),
                        (b = +d.time()),
                        b && b >= this.nextDayThreshold && e.add(1, "days")),
                    (!d || c >= e) && (e = c.clone().add(1, "days")), {
                        start: c,
                        end: e
                    }
                );
            },
            isMultiDayEvent: function(a) {
                var b = this.computeDayRange(a);
                return b.end.diff(b.start, "days") > 1;
            },
        })),
        jb = (Ja.Calendar = ka.extend({
            dirDefaults: null,
            langDefaults: null,
            overrides: null,
            options: null,
            viewSpecCache: null,
            view: null,
            header: null,
            loadingLevel: 0,
            constructor: Da,
            initialize: function() {},
            initOptions: function(a) {
                var b, e, f, g;
                (a = d(a)),
                (b = a.lang),
                (e = kb[b]),
                e || ((b = jb.defaults.lang), (e = kb[b] || {})),
                    (f = Q(a.isRTL, e.isRTL, jb.defaults.isRTL)),
                    (g = f ? jb.rtlDefaults : {}),
                    (this.dirDefaults = g),
                    (this.langDefaults = e),
                    (this.overrides = a),
                    (this.options = c([jb.defaults, g, e, a])),
                    Ea(this.options),
                    (this.viewSpecCache = {});
            },
            getViewSpec: function(a) {
                var b = this.viewSpecCache;
                return b[a] || (b[a] = this.buildViewSpec(a));
            },
            getUnitViewSpec: function(b) {
                var c, d, e;
                if (-1 != a.inArray(b, Ra))
                    for (
                        c = this.header.getViewsWithButtons(),
                        a.each(Ja.views, function(a) {
                            c.push(a);
                        }),
                        d = 0; d < c.length; d++
                    )
                        if (((e = this.getViewSpec(c[d])), e && e.singleUnit == b))
                            return e;
            },
            buildViewSpec: function(a) {
                for (
                    var d,
                        e,
                        f,
                        g,
                        h = this.overrides.views || {},
                        i = [],
                        j = [],
                        k = [],
                        l = a; l;

                )
                    (d = Ka[l]),
                    (e = h[l]),
                    (l = null),
                    "function" == typeof d && (d = {
                        class: d
                    }),
                    d &&
                    (i.unshift(d),
                        j.unshift(d.defaults || {}),
                        (f = f || d.duration),
                        (l = l || d.type)),
                    e && (k.unshift(e), (f = f || e.duration), (l = l || e.type));
                return (
                    (d = J(i)),
                    (d.type = a),
                    d["class"] ?
                    (f &&
                        ((f = b.duration(f)),
                            f.valueOf() &&
                            ((d.duration = f),
                                (g = E(f)),
                                1 === f.as(g) &&
                                ((d.singleUnit = g), k.unshift(h[g] || {})))),
                        (d.defaults = c(j)),
                        (d.overrides = c(k)),
                        this.buildViewSpecOptions(d),
                        this.buildViewSpecButtonText(d, a),
                        d) :
                    !1
                );
            },
            buildViewSpecOptions: function(a) {
                (a.options = c([
                    jb.defaults,
                    a.defaults,
                    this.dirDefaults,
                    this.langDefaults,
                    this.overrides,
                    a.overrides,
                ])),
                Ea(a.options);
            },
            buildViewSpecButtonText: function(a, b) {
                function c(c) {
                    var d = c.buttonText || {};
                    return d[b] || (a.singleUnit ? d[a.singleUnit] : null);
                }
                (a.buttonTextOverride = c(this.overrides) || a.overrides.buttonText),
                (a.buttonTextDefault =
                    c(this.langDefaults) ||
                    c(this.dirDefaults) ||
                    a.defaults.buttonText ||
                    c(jb.defaults) ||
                    (a.duration ? this.humanizeDuration(a.duration) : null) ||
                    b);
            },
            instantiateView: function(a) {
                var b = this.getViewSpec(a);
                return new b["class"](this, a, b.options, b.duration);
            },
            isValidViewType: function(a) {
                return Boolean(this.getViewSpec(a));
            },
            pushLoading: function() {
                this.loadingLevel++ || this.trigger("loading", null, !0, this.view);
            },
            popLoading: function() {
                --this.loadingLevel || this.trigger("loading", null, !1, this.view);
            },
            buildSelectRange: function(a, b) {
                return (
                    (a = this.moment(a)),
                    (b = b ?
                        this.moment(b) :
                        a.hasTime() ?
                        a.clone().add(this.defaultTimedEventDuration) :
                        a.clone().add(this.defaultAllDayEventDuration)), {
                        start: a,
                        end: b
                    }
                );
            },
        }));
    (jb.defaults = {
        titleRangeSeparator: " — ",
        monthYearFormat: "MMMM YYYY",
        defaultTimedEventDuration: "02:00:00",
        defaultAllDayEventDuration: {
            days: 1
        },
        forceEventDuration: !1,
        nextDayThreshold: "09:00:00",
        defaultView: "month",
        aspectRatio: 1.35,
        header: {
            left: "title",
            center: "",
            right: "today prev,next"
        },
        weekends: !0,
        weekNumbers: !1,
        weekNumberTitle: "W",
        weekNumberCalculation: "local",
        scrollTime: "06:00:00",
        lazyFetching: !0,
        startParam: "start",
        endParam: "end",
        timezoneParam: "timezone",
        timezone: !1,
        isRTL: !1,
        buttonText: {
            prev: "prev",
            next: "next",
            prevYear: "prev year",
            nextYear: "next year",
            year: "year",
            today: "today",
            month: "month",
            week: "week",
            day: "day",
        },
        buttonIcons: {
            prev: "left-single-arrow",
            next: "right-single-arrow",
            prevYear: "left-double-arrow",
            nextYear: "right-double-arrow",
        },
        theme: !1,
        themeButtonIcons: {
            prev: "circle-triangle-w",
            next: "circle-triangle-e",
            prevYear: "seek-prev",
            nextYear: "seek-next",
        },
        dragOpacity: 0.75,
        dragRevertDuration: 500,
        dragScroll: !0,
        unselectAuto: !0,
        dropAccept: "*",
        eventLimit: !1,
        eventLimitText: "more",
        eventLimitClick: "popover",
        dayPopoverFormat: "LL",
        handleWindowResize: !0,
        windowResizeDelay: 200,
    }),
    (jb.englishDefaults = {
        dayPopoverFormat: "dddd, MMMM D"
    }),
    (jb.rtlDefaults = {
        header: {
            left: "next,prev today",
            center: "",
            right: "title"
        },
        buttonIcons: {
            prev: "right-single-arrow",
            next: "left-single-arrow",
            prevYear: "right-double-arrow",
            nextYear: "left-double-arrow",
        },
        themeButtonIcons: {
            prev: "circle-triangle-e",
            next: "circle-triangle-w",
            nextYear: "seek-prev",
            prevYear: "seek-next",
        },
    });
    var kb = (Ja.langs = {});
    (Ja.datepickerLang = function(b, c, d) {
        var e = kb[b] || (kb[b] = {});
        (e.isRTL = d.isRTL),
        (e.weekNumberTitle = d.weekHeader),
        a.each(lb, function(a, b) {
                e[a] = b(d);
            }),
            a.datepicker &&
            ((a.datepicker.regional[c] = a.datepicker.regional[b] = d),
                (a.datepicker.regional.en = a.datepicker.regional[""]),
                a.datepicker.setDefaults(d));
    }),
    (Ja.lang = function(b, d) {
        var e, f;
        (e = kb[b] || (kb[b] = {})),
        d && (e = kb[b] = c([e, d])),
            (f = Fa(b)),
            a.each(mb, function(a, b) {
                null == e[a] && (e[a] = b(f, e));
            }),
            (jb.defaults.lang = b);
    });
    var lb = {
            buttonText: function(a) {
                return {
                    prev: S(a.prevText),
                    next: S(a.nextText),
                    today: S(a.currentText),
                };
            },
            monthYearFormat: function(a) {
                return a.showMonthAfterYear ?
                    "YYYY[" + a.yearSuffix + "] MMMM" :
                    "MMMM YYYY[" + a.yearSuffix + "]";
            },
        },
        mb = {
            dayOfMonthFormat: function(a, b) {
                var c = a.longDateFormat("l");
                return (
                    (c = c.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g, "")),
                    b.isRTL ? (c += " ddd") : (c = "ddd " + c),
                    c
                );
            },
            mediumTimeFormat: function(a) {
                return a.longDateFormat("LT").replace(/\s*a$/i, "a");
            },
            smallTimeFormat: function(a) {
                return a
                    .longDateFormat("LT")
                    .replace(":mm", "(:mm)")
                    .replace(/(\Wmm)$/, "($1)")
                    .replace(/\s*a$/i, "a");
            },
            extraSmallTimeFormat: function(a) {
                return a
                    .longDateFormat("LT")
                    .replace(":mm", "(:mm)")
                    .replace(/(\Wmm)$/, "($1)")
                    .replace(/\s*a$/i, "t");
            },
            hourFormat: function(a) {
                return a
                    .longDateFormat("LT")
                    .replace(":mm", "")
                    .replace(/(\Wmm)$/, "")
                    .replace(/\s*a$/i, "a");
            },
            noMeridiemTimeFormat: function(a) {
                return a.longDateFormat("LT").replace(/\s*a$/i, "");
            },
        },
        nb = {
            smallDayDateFormat: function(a) {
                return a.isRTL ? "D dd" : "dd D";
            },
            weekFormat: function(a) {
                return a.isRTL ?
                    "w[ " + a.weekNumberTitle + "]" :
                    "[" + a.weekNumberTitle + " ]w";
            },
            smallWeekFormat: function(a) {
                return a.isRTL ?
                    "w[" + a.weekNumberTitle + "]" :
                    "[" + a.weekNumberTitle + "]w";
            },
        };
    Ja.lang("en", jb.englishDefaults),
        (Ja.sourceNormalizers = []),
        (Ja.sourceFetchers = []);
    var ob = {
            dataType: "json",
            cache: !1
        },
        pb = 1;
    jb.prototype.getPeerEvents = function(a, b) {
        var c,
            d,
            e = this.getEventCache(),
            f = [];
        for (c = 0; c < e.length; c++)
            (d = e[c]), (a && a._id === d._id) || f.push(d);
        return f;
    };
    var qb = ib.extend({
            dayGrid: null,
            dayNumbersVisible: !1,
            weekNumbersVisible: !1,
            weekNumberWidth: null,
            headRowEl: null,
            initialize: function() {
                (this.dayGrid = new gb(this)), (this.coordMap = this.dayGrid.coordMap);
            },
            setRange: function(a) {
                ib.prototype.setRange.call(this, a),
                    (this.dayGrid.breakOnWeeks = /year|month|week/.test(
                        this.intervalUnit
                    )),
                    this.dayGrid.setRange(a);
            },
            computeRange: function(a) {
                var b = ib.prototype.computeRange.call(this, a);
                return (
                    /year|month/.test(b.intervalUnit) &&
                    (b.start.startOf("week"),
                        (b.start = this.skipHiddenDays(b.start)),
                        b.end.weekday() &&
                        (b.end.add(1, "week").startOf("week"),
                            (b.end = this.skipHiddenDays(b.end, -1, !0)))),
                    b
                );
            },
            renderDates: function() {
                (this.dayNumbersVisible = this.dayGrid.rowCnt > 1),
                (this.weekNumbersVisible = this.opt("weekNumbers")),
                (this.dayGrid.numbersVisible =
                    this.dayNumbersVisible || this.weekNumbersVisible),
                this.el.addClass("fc-basic-view").html(this.renderHtml()),
                    (this.headRowEl = this.el.find("thead .fc-row")),
                    (this.scrollerEl = this.el.find(".fc-day-grid-container")),
                    (this.dayGrid.coordMap.containerEl = this.scrollerEl),
                    this.dayGrid.setElement(this.el.find(".fc-day-grid")),
                    this.dayGrid.renderDates(this.hasRigidRows());
            },
            unrenderDates: function() {
                this.dayGrid.unrenderDates(), this.dayGrid.removeElement();
            },
            renderBusinessHours: function() {
                this.dayGrid.renderBusinessHours();
            },
            renderHtml: function() {
                return (
                    '<table><thead class="fc-head"><tr><td class="' +
                    this.widgetHeaderClass +
                    '">' +
                    this.dayGrid.headHtml() +
                    '</td></tr></thead><tbody class="fc-body"><tr><td class="' +
                    this.widgetContentClass +
                    '"><div class="fc-day-grid-container"><div class="fc-day-grid"/></div></td></tr></tbody></table>'
                );
            },
            headIntroHtml: function() {
                return this.weekNumbersVisible ?
                    '<th class="fc-week-number ' +
                    this.widgetHeaderClass +
                    '" ' +
                    this.weekNumberStyleAttr() +
                    "><span>" +
                    R(this.opt("weekNumberTitle")) +
                    "</span></th>" :
                    void 0;
            },
            numberIntroHtml: function(a) {
                return this.weekNumbersVisible ?
                    '<td class="fc-week-number" ' +
                    this.weekNumberStyleAttr() +
                    "><span>" +
                    this.dayGrid.getCell(a, 0).start.format("w") +
                    "</span></td>" :
                    void 0;
            },
            dayIntroHtml: function() {
                return this.weekNumbersVisible ?
                    '<td class="fc-week-number ' +
                    this.widgetContentClass +
                    '" ' +
                    this.weekNumberStyleAttr() +
                    "></td>" :
                    void 0;
            },
            introHtml: function() {
                return this.weekNumbersVisible ?
                    '<td class="fc-week-number" ' +
                    this.weekNumberStyleAttr() +
                    "></td>" :
                    void 0;
            },
            numberCellHtml: function(a) {
                var b,
                    c = a.start;
                return this.dayNumbersVisible ?
                    ((b = this.dayGrid.getDayClasses(c)),
                        b.unshift("fc-day-number"),
                        '<td class="' +
                        b.join(" ") +
                        '" data-date="' +
                        c.format() +
                        '">' +
                        c.date() +
                        "</td>") :
                    "<td/>";
            },
            weekNumberStyleAttr: function() {
                return null !== this.weekNumberWidth ?
                    'style="width:' + this.weekNumberWidth + 'px"' :
                    "";
            },
            hasRigidRows: function() {
                var a = this.opt("eventLimit");
                return a && "number" != typeof a;
            },
            updateWidth: function() {
                this.weekNumbersVisible &&
                    (this.weekNumberWidth = k(this.el.find(".fc-week-number")));
            },
            setHeight: function(a, b) {
                var c,
                    d = this.opt("eventLimit");
                m(this.scrollerEl),
                    f(this.headRowEl),
                    this.dayGrid.removeSegPopover(),
                    d && "number" == typeof d && this.dayGrid.limitRows(d),
                    (c = this.computeScrollerHeight(a)),
                    this.setGridHeight(c, b),
                    d && "number" != typeof d && this.dayGrid.limitRows(d), !b &&
                    l(this.scrollerEl, c) &&
                    (e(this.headRowEl, r(this.scrollerEl)),
                        (c = this.computeScrollerHeight(a)),
                        this.scrollerEl.height(c));
            },
            setGridHeight: function(a, b) {
                b ? j(this.dayGrid.rowEls) : i(this.dayGrid.rowEls, a, !0);
            },
            renderEvents: function(a) {
                this.dayGrid.renderEvents(a), this.updateHeight();
            },
            getEventSegs: function() {
                return this.dayGrid.getEventSegs();
            },
            unrenderEvents: function() {
                this.dayGrid.unrenderEvents();
            },
            renderDrag: function(a, b) {
                return this.dayGrid.renderDrag(a, b);
            },
            unrenderDrag: function() {
                this.dayGrid.unrenderDrag();
            },
            renderSelection: function(a) {
                this.dayGrid.renderSelection(a);
            },
            unrenderSelection: function() {
                this.dayGrid.unrenderSelection();
            },
        }),
        rb = qb.extend({
            computeRange: function(a) {
                var b,
                    c = qb.prototype.computeRange.call(this, a);
                return (
                    this.isFixedWeeks() &&
                    ((b = Math.ceil(c.end.diff(c.start, "weeks", !0))),
                        c.end.add(6 - b, "weeks")),
                    c
                );
            },
            setGridHeight: function(a, b) {
                (b = b || "variable" === this.opt("weekMode")),
                b && (a *= this.rowCnt / 6),
                    i(this.dayGrid.rowEls, a, !b);
            },
            isFixedWeeks: function() {
                var a = this.opt("weekMode");
                return a ? "fixed" === a : this.opt("fixedWeekCount");
            },
        });
    (Ka.basic = {
        class: qb
    }),
    (Ka.basicDay = {
        type: "basic",
        duration: {
            days: 1
        }
    }),
    (Ka.basicWeek = {
        type: "basic",
        duration: {
            weeks: 1
        }
    }),
    (Ka.month = {
        class: rb,
        duration: {
            months: 1
        },
        defaults: {
            fixedWeekCount: !0
        },
    });
    var sb = ib.extend({
            timeGrid: null,
            dayGrid: null,
            axisWidth: null,
            noScrollRowEls: null,
            bottomRuleEl: null,
            bottomRuleHeight: null,
            initialize: function() {
                (this.timeGrid = new hb(this)),
                this.opt("allDaySlot") ?
                    ((this.dayGrid = new gb(this)),
                        (this.coordMap = new ab([
                            this.dayGrid.coordMap,
                            this.timeGrid.coordMap,
                        ]))) :
                    (this.coordMap = this.timeGrid.coordMap);
            },
            setRange: function(a) {
                ib.prototype.setRange.call(this, a),
                    this.timeGrid.setRange(a),
                    this.dayGrid && this.dayGrid.setRange(a);
            },
            renderDates: function() {
                this.el.addClass("fc-agenda-view").html(this.renderHtml()),
                    (this.scrollerEl = this.el.find(".fc-time-grid-container")),
                    (this.timeGrid.coordMap.containerEl = this.scrollerEl),
                    this.timeGrid.setElement(this.el.find(".fc-time-grid")),
                    this.timeGrid.renderDates(),
                    (this.bottomRuleEl = a(
                        '<hr class="fc-divider ' + this.widgetHeaderClass + '"/>'
                    ).appendTo(this.timeGrid.el)),
                    this.dayGrid &&
                    (this.dayGrid.setElement(this.el.find(".fc-day-grid")),
                        this.dayGrid.renderDates(),
                        (this.dayGrid.bottomCoordPadding = this.dayGrid.el
                            .next("hr")
                            .outerHeight())),
                    (this.noScrollRowEls = this.el.find(".fc-row:not(.fc-scroller *)"));
            },
            unrenderDates: function() {
                this.timeGrid.unrenderDates(),
                    this.timeGrid.removeElement(),
                    this.dayGrid &&
                    (this.dayGrid.unrenderDates(), this.dayGrid.removeElement());
            },
            renderBusinessHours: function() {
                this.timeGrid.renderBusinessHours(),
                    this.dayGrid && this.dayGrid.renderBusinessHours();
            },
            renderHtml: function() {
                return (
                    '<table><thead class="fc-head"><tr><td class="' +
                    this.widgetHeaderClass +
                    '">' +
                    this.timeGrid.headHtml() +
                    '</td></tr></thead><tbody class="fc-body"><tr><td class="' +
                    this.widgetContentClass +
                    '">' +
                    (this.dayGrid ?
                        '<div class="fc-day-grid"/><hr class="fc-divider ' +
                        this.widgetHeaderClass +
                        '"/>' :
                        "") +
                    '<div class="fc-time-grid-container"><div class="fc-time-grid"/></div></td></tr></tbody></table>'
                );
            },
            headIntroHtml: function() {
                var a, b;
                return this.opt("weekNumbers") ?
                    ((a = this.timeGrid.getCell(0).start),
                        (b = a.format(this.opt("smallWeekFormat"))),
                        '<th class="fc-axis fc-week-number ' +
                        this.widgetHeaderClass +
                        '" ' +
                        this.axisStyleAttr() +
                        "><span>" +
                        R(b) +
                        "</span></th>") :
                    '<th class="fc-axis ' +
                    this.widgetHeaderClass +
                    '" ' +
                    this.axisStyleAttr() +
                    "></th>";
            },
            dayIntroHtml: function() {
                return (
                    '<td class="fc-axis ' +
                    this.widgetContentClass +
                    '" ' +
                    this.axisStyleAttr() +
                    "><span>" +
                    (this.opt("allDayHtml") || R(this.opt("allDayText"))) +
                    "</span></td>"
                );
            },
            slotBgIntroHtml: function() {
                return (
                    '<td class="fc-axis ' +
                    this.widgetContentClass +
                    '" ' +
                    this.axisStyleAttr() +
                    "></td>"
                );
            },
            introHtml: function() {
                return '<td class="fc-axis" ' + this.axisStyleAttr() + "></td>";
            },
            axisStyleAttr: function() {
                return null !== this.axisWidth ?
                    'style="width:' + this.axisWidth + 'px"' :
                    "";
            },
            updateSize: function(a) {
                this.timeGrid.updateSize(a), ib.prototype.updateSize.call(this, a);
            },
            updateWidth: function() {
                this.axisWidth = k(this.el.find(".fc-axis"));
            },
            setHeight: function(a, b) {
                var c, d;
                null === this.bottomRuleHeight &&
                    (this.bottomRuleHeight = this.bottomRuleEl.outerHeight()),
                    this.bottomRuleEl.hide(),
                    this.scrollerEl.css("overflow", ""),
                    m(this.scrollerEl),
                    f(this.noScrollRowEls),
                    this.dayGrid &&
                    (this.dayGrid.removeSegPopover(),
                        (c = this.opt("eventLimit")),
                        c && "number" != typeof c && (c = tb),
                        c && this.dayGrid.limitRows(c)),
                    b ||
                    ((d = this.computeScrollerHeight(a)),
                        l(this.scrollerEl, d) ?
                        (e(this.noScrollRowEls, r(this.scrollerEl)),
                            (d = this.computeScrollerHeight(a)),
                            this.scrollerEl.height(d)) :
                        (this.scrollerEl.height(d).css("overflow", "hidden"),
                            this.bottomRuleEl.show()));
            },
            computeInitialScroll: function() {
                var a = b.duration(this.opt("scrollTime")),
                    c = this.timeGrid.computeTimeTop(a);
                return (c = Math.ceil(c)), c && c++, c;
            },
            renderEvents: function(a) {
                var b,
                    c,
                    d = [],
                    e = [],
                    f = [];
                for (c = 0; c < a.length; c++)
                    a[c].allDay ? d.push(a[c]) : e.push(a[c]);
                (b = this.timeGrid.renderEvents(e)),
                this.dayGrid && (f = this.dayGrid.renderEvents(d)),
                    this.updateHeight();
            },
            getEventSegs: function() {
                return this.timeGrid
                    .getEventSegs()
                    .concat(this.dayGrid ? this.dayGrid.getEventSegs() : []);
            },
            unrenderEvents: function() {
                this.timeGrid.unrenderEvents(),
                    this.dayGrid && this.dayGrid.unrenderEvents();
            },
            renderDrag: function(a, b) {
                return a.start.hasTime() ?
                    this.timeGrid.renderDrag(a, b) :
                    this.dayGrid ?
                    this.dayGrid.renderDrag(a, b) :
                    void 0;
            },
            unrenderDrag: function() {
                this.timeGrid.unrenderDrag(),
                    this.dayGrid && this.dayGrid.unrenderDrag();
            },
            renderSelection: function(a) {
                a.start.hasTime() || a.end.hasTime() ?
                    this.timeGrid.renderSelection(a) :
                    this.dayGrid && this.dayGrid.renderSelection(a);
            },
            unrenderSelection: function() {
                this.timeGrid.unrenderSelection(),
                    this.dayGrid && this.dayGrid.unrenderSelection();
            },
        }),
        tb = 5;
    return (
        (Ka.agenda = {
            class: sb,
            defaults: {
                allDaySlot: !0,
                allDayText: "all-day",
                slotDuration: "00:30:00",
                minTime: "00:00:00",
                maxTime: "24:00:00",
                slotEventOverlap: !0,
            },
        }),
        (Ka.agendaDay = {
            type: "agenda",
            duration: {
                days: 1
            }
        }),
        (Ka.agendaWeek = {
            type: "agenda",
            duration: {
                weeks: 1
            }
        }),
        Ja
    );
});
!(function(e) {
    "function" == typeof define && define.amd ?
        define(["jquery"], e) :
        "object" == typeof exports ?
        (module.exports = e(require("jquery"))) :
        e(jQuery);
})(function(e) {
    function o(o, n, l, d, c) {
        function i(a, r) {
            var n = r || [{
                    message: a
                }],
                t = window.console,
                l = t ? t.warn || t.log : null;
            (o.googleCalendarError || e.noop).apply(c, n),
                (c.options.googleCalendarError || e.noop).apply(c, n),
                l && l.apply(t, [a].concat(r || []));
        }
        var s,
            u,
            g =
            r + "/" + encodeURIComponent(o.googleCalendarId) + "/events?callback=?",
            p = o.googleCalendarApiKey || c.options.googleCalendarApiKey,
            m = o.success;
        return p ?
            (n.hasZone() || (n = n.clone().utc().add(-1, "day")),
                l.hasZone() || (l = l.clone().utc().add(1, "day")),
                d && "local" != d && (u = d.replace(" ", "_")),
                (s = e.extend({}, o.data || {}, {
                    key: p,
                    timeMin: n.format(),
                    timeMax: l.format(),
                    timeZone: u,
                    singleEvents: !0,
                    maxResults: 9999,
                })),
                e.extend({}, o, {
                    googleCalendarId: null,
                    url: g,
                    data: s,
                    startParam: !1,
                    endParam: !1,
                    timezoneParam: !1,
                    success: function(o) {
                        var r,
                            n,
                            l = [];
                        if (o.error)
                            i("Google Calendar API: " + o.error.message, o.error.errors);
                        else if (
                            o.items &&
                            (e.each(o.items, function(e, o) {
                                    var r = o.htmlLink;
                                    u && (r = a(r, "ctz=" + u)),
                                        l.push({
                                            id: o.id,
                                            title: o.summary,
                                            start: o.start.dateTime || o.start.date,
                                            end: o.end.dateTime || o.end.date,
                                            url: r,
                                            location: o.location,
                                            description: o.description,
                                        });
                                }),
                                (r = [l].concat(Array.prototype.slice.call(arguments, 1))),
                                (n = t(m, this, r)),
                                e.isArray(n))
                        )
                            return n;
                        return l;
                    },
                })) :
            (i(
                "Specify a googleCalendarApiKey. See http://fullcalendar.io/docs/google_calendar/"
            ), {});
    }

    function a(e, o) {
        return e.replace(/(\?.*?)?(#|$)/, function(e, a, r) {
            return (a ? a + "&" : "?") + o + r;
        });
    }
    var r = "https://www.googleapis.com/calendar/v3/calendars",
        n = e.fullCalendar,
        t = n.applyAll;
    n.sourceNormalizers.push(function(e) {
            var o,
                a = e.googleCalendarId,
                r = e.url;
            !a &&
                r &&
                (/^[^\/]+@([^\/\.]+\.)*(google|googlemail|gmail)\.com$/.test(r) ?
                    (a = r) :
                    ((o =
                            /^https:\/\/www.googleapis.com\/calendar\/v3\/calendars\/([^\/]*)/.exec(
                                r
                            )) ||
                        (o = /^https?:\/\/www.google.com\/calendar\/feeds\/([^\/]*)/.exec(
                            r
                        ))) &&
                    (a = decodeURIComponent(o[1])),
                    a && (e.googleCalendarId = a)),
                a && (null == e.editable && (e.editable = !1), (e.url = a));
        }),
        n.sourceFetchers.push(function(e, a, r, n) {
            return e.googleCalendarId ? o(e, a, r, n, this) : void 0;
        });
});

/*!
 * Easy pie chart is a jquery plugin to display simple animated pie charts for only one value
 *
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Built on top of the jQuery library (http://jquery.com)
 *
 * @source: http://github.com/rendro/easy-pie-chart/
 * @autor: Robert Fleischmann
 * @version: 1.2.5
 *
 * Inspired by: http://dribbble.com/shots/631074-Simple-Pie-Charts-II?list=popular&offset=210
 * Thanks to Philip Thrasher for the jquery plugin boilerplate for coffee script
 */
!(function(e) {
    return (
        (e.easyPieChart = function(t, n) {
            var i,
                a,
                r,
                o,
                s,
                l,
                d,
                c,
                u = this;
            return (
                (this.el = t),
                (this.$el = e(t)),
                this.$el.data("easyPieChart", this),
                (this.init = function() {
                    var t, i;
                    return (
                        (u.options = e.extend({}, e.easyPieChart.defaultOptions, n)),
                        (t = parseInt(u.$el.data("percent"), 10)),
                        (u.percentage = 0),
                        (u.canvas = e(
                            "<canvas width='" +
                            u.options.size +
                            "' height='" +
                            u.options.size +
                            "'></canvas>"
                        ).get(0)),
                        u.$el.append(u.canvas),
                        "undefined" != typeof G_vmlCanvasManager &&
                        null !== G_vmlCanvasManager &&
                        G_vmlCanvasManager.initElement(u.canvas),
                        (u.ctx = u.canvas.getContext("2d")),
                        window.devicePixelRatio > 1 &&
                        ((i = window.devicePixelRatio),
                            e(u.canvas).css({
                                width: u.options.size,
                                height: u.options.size,
                            }),
                            (u.canvas.width *= i),
                            (u.canvas.height *= i),
                            u.ctx.scale(i, i)),
                        u.ctx.translate(u.options.size / 2, u.options.size / 2),
                        u.ctx.rotate((u.options.rotate * Math.PI) / 180),
                        u.$el.addClass("easyPieChart"),
                        u.$el.css({
                            width: u.options.size,
                            height: u.options.size,
                            lineHeight: "" + u.options.size + "px",
                        }),
                        u.update(t),
                        u
                    );
                }),
                (this.update = function(e) {
                    return (
                        (e = parseFloat(e) || 0),
                        u.options.animate === !1 ?
                        r(e) :
                        u.options.delay ?
                        (a(u.percentage, 0),
                            setTimeout(function() {
                                return a(u.percentage, e);
                            }, u.options.delay)) :
                        a(u.percentage, e),
                        u
                    );
                }),
                (d = function() {
                    var e, t, n;
                    for (
                        u.ctx.fillStyle = u.options.scaleColor,
                        u.ctx.lineWidth = 1,
                        n = [],
                        e = t = 0; 24 >= t; e = ++t
                    )
                        n.push(i(e));
                    return n;
                }),
                (i = function(e) {
                    var t;
                    (t = 0 === e % 6 ? 0 : 0.017 * u.options.size),
                    u.ctx.save(),
                        u.ctx.rotate((e * Math.PI) / 12),
                        u.ctx.fillRect(
                            u.options.size / 2 - t,
                            0,
                            0.05 * -u.options.size + t,
                            1
                        ),
                        u.ctx.restore();
                }),
                (c = function() {
                    var e;
                    (e = u.options.size / 2 - u.options.lineWidth / 2),
                    u.options.scaleColor !== !1 && (e -= 0.08 * u.options.size),
                        u.ctx.beginPath(),
                        u.ctx.arc(0, 0, e, 0, 2 * Math.PI, !0),
                        u.ctx.closePath(),
                        (u.ctx.strokeStyle = u.options.trackColor),
                        (u.ctx.lineWidth = u.options.lineWidth),
                        u.ctx.stroke();
                }),
                (l = function() {
                    u.options.scaleColor !== !1 && d(),
                        u.options.trackColor !== !1 && c();
                }),
                (r = function(t) {
                    var n;
                    l(),
                        (u.ctx.strokeStyle = e.isFunction(u.options.barColor) ?
                            u.options.barColor(t) :
                            u.options.barColor),
                        (u.ctx.lineCap = u.options.lineCap),
                        (u.ctx.lineWidth = u.options.lineWidth),
                        (n = u.options.size / 2 - u.options.lineWidth / 2),
                        u.options.scaleColor !== !1 && (n -= 0.08 * u.options.size),
                        u.ctx.save(),
                        u.ctx.rotate(-Math.PI / 2),
                        u.ctx.beginPath(),
                        u.ctx.arc(0, 0, n, 0, (2 * Math.PI * t) / 100, !1),
                        u.ctx.stroke(),
                        u.ctx.restore();
                }),
                (s = (function() {
                    return (
                        window.requestAnimationFrame ||
                        window.webkitRequestAnimationFrame ||
                        window.mozRequestAnimationFrame ||
                        function(e) {
                            return window.setTimeout(e, 1e3 / 60);
                        }
                    );
                })()),
                (a = function(e, t) {
                    var n, i;
                    u.options.onStart.call(u),
                        (u.percentage = t),
                        Date.now ||
                        (Date.now = function() {
                            return +new Date();
                        }),
                        (i = Date.now()),
                        (n = function() {
                            var a, d;
                            return (
                                (d = Math.min(Date.now() - i, u.options.animate)),
                                u.ctx.clearRect(-u.options.size / 2, -u.options.size / 2,
                                    u.options.size,
                                    u.options.size
                                ),
                                l.call(u),
                                (a = [o(d, e, t - e, u.options.animate)]),
                                u.options.onStep.call(u, a),
                                r.call(u, a),
                                d >= u.options.animate ? u.options.onStop.call(u, a, t) : s(n)
                            );
                        }),
                        s(n);
                }),
                (o = function(e, t, n, i) {
                    var a, r;
                    return (
                        (a = function(e) {
                            return Math.pow(e, 2);
                        }),
                        (r = function(e) {
                            return 1 > e ? a(e) : 2 - a(-2 * (e / 2) + 2);
                        }),
                        (e /= i / 2),
                        (n / 2) * r(e) + t
                    );
                }),
                this.init()
            );
        }),
        (e.easyPieChart.defaultOptions = {
            barColor: "#ef1e25",
            trackColor: "#f2f2f2",
            scaleColor: "#dfe0e0",
            lineCap: "round",
            rotate: 0,
            size: 110,
            lineWidth: 3,
            animate: !1,
            delay: !1,
            onStart: e.noop,
            onStop: e.noop,
            onStep: e.noop,
        }),
        (e.fn.easyPieChart = function(t) {
            return e.each(this, function(n, i) {
                var a, r;
                return (
                    (a = e(i)),
                    a.data("easyPieChart") ?
                    void 0 :
                    ((r = e.extend({}, t, a.data())),
                        a.data("easyPieChart", new e.easyPieChart(i, r)))
                );
            });
        }),
        void 0
    );
})(jQuery);

/*!
 * Javascript plotting library for jQuery, version 0.8.3.
 * Copyright (c) 2007-2013 IOLA and Ole Laursen.
 * Licensed under the MIT license.
 *
 * Plugin for jQuery for working with colors. Version 1.1.
 * Inspiration from jQuery color animation plugin by John Resig.
 * Released under the MIT license by Ole Laursen, October 2009.
 */
(function($) {
    $.color = {};
    $.color.make = function(r, g, b, a) {
        var o = {};
        o.r = r || 0;
        o.g = g || 0;
        o.b = b || 0;
        o.a = a != null ? a : 1;
        o.add = function(c, d) {
            for (var i = 0; i < c.length; ++i) o[c.charAt(i)] += d;
            return o.normalize();
        };
        o.scale = function(c, f) {
            for (var i = 0; i < c.length; ++i) o[c.charAt(i)] *= f;
            return o.normalize();
        };
        o.toString = function() {
            if (o.a >= 1) {
                return "rgb(" + [o.r, o.g, o.b].join(",") + ")";
            } else {
                return "rgba(" + [o.r, o.g, o.b, o.a].join(",") + ")";
            }
        };
        o.normalize = function() {
            function clamp(min, value, max) {
                return value < min ? min : value > max ? max : value;
            }
            o.r = clamp(0, parseInt(o.r), 255);
            o.g = clamp(0, parseInt(o.g), 255);
            o.b = clamp(0, parseInt(o.b), 255);
            o.a = clamp(0, o.a, 1);
            return o;
        };
        o.clone = function() {
            return $.color.make(o.r, o.b, o.g, o.a);
        };
        return o.normalize();
    };
    $.color.extract = function(elem, css) {
        var c;
        do {
            c = elem.css(css).toLowerCase();
            if (c != "" && c != "transparent") break;
            elem = elem.parent();
        } while (elem.length && !$.nodeName(elem.get(0), "body"));
        if (c == "rgba(0, 0, 0, 0)") c = "transparent";
        return $.color.parse(c);
    };
    $.color.parse = function(str) {
        var res,
            m = $.color.make;
        if (
            (res =
                /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(
                    str
                ))
        )
            return m(
                parseInt(res[1], 10),
                parseInt(res[2], 10),
                parseInt(res[3], 10)
            );
        if (
            (res =
                /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(
                    str
                ))
        )
            return m(
                parseInt(res[1], 10),
                parseInt(res[2], 10),
                parseInt(res[3], 10),
                parseFloat(res[4])
            );
        if (
            (res =
                /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(
                    str
                ))
        )
            return m(
                parseFloat(res[1]) * 2.55,
                parseFloat(res[2]) * 2.55,
                parseFloat(res[3]) * 2.55
            );
        if (
            (res =
                /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(
                    str
                ))
        )
            return m(
                parseFloat(res[1]) * 2.55,
                parseFloat(res[2]) * 2.55,
                parseFloat(res[3]) * 2.55,
                parseFloat(res[4])
            );
        if ((res = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str)))
            return m(
                parseInt(res[1], 16),
                parseInt(res[2], 16),
                parseInt(res[3], 16)
            );
        if ((res = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str)))
            return m(
                parseInt(res[1] + res[1], 16),
                parseInt(res[2] + res[2], 16),
                parseInt(res[3] + res[3], 16)
            );
        var name = $.trim(str).toLowerCase();
        if (name == "transparent") return m(255, 255, 255, 0);
        else {
            res = lookupColors[name] || [0, 0, 0];
            return m(res[0], res[1], res[2]);
        }
    };
    var lookupColors = {
        aqua: [0, 255, 255],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        black: [0, 0, 0],
        blue: [0, 0, 255],
        brown: [165, 42, 42],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgrey: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkviolet: [148, 0, 211],
        fuchsia: [255, 0, 255],
        gold: [255, 215, 0],
        green: [0, 128, 0],
        indigo: [75, 0, 130],
        khaki: [240, 230, 140],
        lightblue: [173, 216, 230],
        lightcyan: [224, 255, 255],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        navy: [0, 0, 128],
        olive: [128, 128, 0],
        orange: [255, 165, 0],
        pink: [255, 192, 203],
        purple: [128, 0, 128],
        violet: [128, 0, 128],
        red: [255, 0, 0],
        silver: [192, 192, 192],
        white: [255, 255, 255],
        yellow: [255, 255, 0],
    };
})(jQuery);
(function($) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (!$.fn.detach) {
        $.fn.detach = function() {
            return this.each(function() {
                if (this.parentNode) {
                    this.parentNode.removeChild(this);
                }
            });
        };
    }

    function Canvas(cls, container) {
        var element = container.children("." + cls)[0];
        if (element == null) {
            element = document.createElement("canvas");
            element.className = cls;
            $(element)
                .css({
                    direction: "ltr",
                    position: "absolute",
                    left: 0,
                    top: 0
                })
                .appendTo(container);
            if (!element.getContext) {
                if (window.G_vmlCanvasManager) {
                    element = window.G_vmlCanvasManager.initElement(element);
                } else {
                    throw new Error(
                        "Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode."
                    );
                }
            }
        }
        this.element = element;
        var context = (this.context = element.getContext("2d"));
        var devicePixelRatio = window.devicePixelRatio || 1,
            backingStoreRatio =
            context.webkitBackingStorePixelRatio ||
            context.mozBackingStorePixelRatio ||
            context.msBackingStorePixelRatio ||
            context.oBackingStorePixelRatio ||
            context.backingStorePixelRatio ||
            1;
        this.pixelRatio = devicePixelRatio / backingStoreRatio;
        this.resize(container.width(), container.height());
        this.textContainer = null;
        this.text = {};
        this._textCache = {};
    }
    Canvas.prototype.resize = function(width, height) {
        if (width <= 0 || height <= 0) {
            throw new Error(
                "Invalid dimensions for plot, width = " + width + ", height = " + height
            );
        }
        var element = this.element,
            context = this.context,
            pixelRatio = this.pixelRatio;
        if (this.width != width) {
            element.width = width * pixelRatio;
            element.style.width = width + "px";
            this.width = width;
        }
        if (this.height != height) {
            element.height = height * pixelRatio;
            element.style.height = height + "px";
            this.height = height;
        }
        context.restore();
        context.save();
        context.scale(pixelRatio, pixelRatio);
    };
    Canvas.prototype.clear = function() {
        this.context.clearRect(0, 0, this.width, this.height);
    };
    Canvas.prototype.render = function() {
        var cache = this._textCache;
        for (var layerKey in cache) {
            if (hasOwnProperty.call(cache, layerKey)) {
                var layer = this.getTextLayer(layerKey),
                    layerCache = cache[layerKey];
                layer.hide();
                for (var styleKey in layerCache) {
                    if (hasOwnProperty.call(layerCache, styleKey)) {
                        var styleCache = layerCache[styleKey];
                        for (var key in styleCache) {
                            if (hasOwnProperty.call(styleCache, key)) {
                                var positions = styleCache[key].positions;
                                for (var i = 0, position;
                                    (position = positions[i]); i++) {
                                    if (position.active) {
                                        if (!position.rendered) {
                                            layer.append(position.element);
                                            position.rendered = true;
                                        }
                                    } else {
                                        positions.splice(i--, 1);
                                        if (position.rendered) {
                                            position.element.detach();
                                        }
                                    }
                                }
                                if (positions.length == 0) {
                                    delete styleCache[key];
                                }
                            }
                        }
                    }
                }
                layer.show();
            }
        }
    };
    Canvas.prototype.getTextLayer = function(classes) {
        var layer = this.text[classes];
        if (layer == null) {
            if (this.textContainer == null) {
                this.textContainer = $("<div class='flot-text'></div>")
                    .css({
                        position: "absolute",
                        top: 0,
                        left: 0,
                        bottom: 0,
                        right: 0,
                        "font-size": "smaller",
                        color: "#545454",
                    })
                    .insertAfter(this.element);
            }
            layer = this.text[classes] = $("<div></div>")
                .addClass(classes)
                .css({
                    position: "absolute",
                    top: 0,
                    left: 0,
                    bottom: 0,
                    right: 0
                })
                .appendTo(this.textContainer);
        }
        return layer;
    };
    Canvas.prototype.getTextInfo = function(layer, text, font, angle, width) {
        var textStyle, layerCache, styleCache, info;
        text = "" + text;
        if (typeof font === "object") {
            textStyle =
                font.style +
                " " +
                font.variant +
                " " +
                font.weight +
                " " +
                font.size +
                "px/" +
                font.lineHeight +
                "px " +
                font.family;
        } else {
            textStyle = font;
        }
        layerCache = this._textCache[layer];
        if (layerCache == null) {
            layerCache = this._textCache[layer] = {};
        }
        styleCache = layerCache[textStyle];
        if (styleCache == null) {
            styleCache = layerCache[textStyle] = {};
        }
        info = styleCache[text];
        if (info == null) {
            var element = $("<div></div>")
                .html(text)
                .css({
                    position: "absolute",
                    "max-width": width,
                    top: -9999
                })
                .appendTo(this.getTextLayer(layer));
            if (typeof font === "object") {
                element.css({
                    font: textStyle,
                    color: font.color
                });
            } else if (typeof font === "string") {
                element.addClass(font);
            }
            info = styleCache[text] = {
                width: element.outerWidth(true),
                height: element.outerHeight(true),
                element: element,
                positions: [],
            };
            element.detach();
        }
        return info;
    };
    Canvas.prototype.addText = function(
        layer,
        x,
        y,
        text,
        font,
        angle,
        width,
        halign,
        valign
    ) {
        var info = this.getTextInfo(layer, text, font, angle, width),
            positions = info.positions;
        if (halign == "center") {
            x -= info.width / 2;
        } else if (halign == "right") {
            x -= info.width;
        }
        if (valign == "middle") {
            y -= info.height / 2;
        } else if (valign == "bottom") {
            y -= info.height;
        }
        for (var i = 0, position;
            (position = positions[i]); i++) {
            if (position.x == x && position.y == y) {
                position.active = true;
                return;
            }
        }
        position = {
            active: true,
            rendered: false,
            element: positions.length ? info.element.clone() : info.element,
            x: x,
            y: y,
        };
        positions.push(position);
        position.element.css({
            top: Math.round(y),
            left: Math.round(x),
            "text-align": halign,
        });
    };
    Canvas.prototype.removeText = function(layer, x, y, text, font, angle) {
        if (text == null) {
            var layerCache = this._textCache[layer];
            if (layerCache != null) {
                for (var styleKey in layerCache) {
                    if (hasOwnProperty.call(layerCache, styleKey)) {
                        var styleCache = layerCache[styleKey];
                        for (var key in styleCache) {
                            if (hasOwnProperty.call(styleCache, key)) {
                                var positions = styleCache[key].positions;
                                for (var i = 0, position;
                                    (position = positions[i]); i++) {
                                    position.active = false;
                                }
                            }
                        }
                    }
                }
            }
        } else {
            var positions = this.getTextInfo(layer, text, font, angle).positions;
            for (var i = 0, position;
                (position = positions[i]); i++) {
                if (position.x == x && position.y == y) {
                    position.active = false;
                }
            }
        }
    };

    function Plot(placeholder, data_, options_, plugins) {
        var series = [],
            options = {
                colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
                legend: {
                    show: true,
                    noColumns: 1,
                    labelFormatter: null,
                    labelBoxBorderColor: "#ccc",
                    container: null,
                    position: "ne",
                    margin: 5,
                    backgroundColor: null,
                    backgroundOpacity: 0.85,
                    sorted: null,
                },
                xaxis: {
                    show: null,
                    position: "bottom",
                    mode: null,
                    font: null,
                    color: null,
                    tickColor: null,
                    transform: null,
                    inverseTransform: null,
                    min: null,
                    max: null,
                    autoscaleMargin: null,
                    ticks: null,
                    tickFormatter: null,
                    labelWidth: null,
                    labelHeight: null,
                    reserveSpace: null,
                    tickLength: null,
                    alignTicksWithAxis: null,
                    tickDecimals: null,
                    tickSize: null,
                    minTickSize: null,
                },
                yaxis: {
                    autoscaleMargin: 0.02,
                    position: "left"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: false,
                        radius: 3,
                        lineWidth: 2,
                        fill: true,
                        fillColor: "#ffffff",
                        symbol: "circle",
                    },
                    lines: {
                        lineWidth: 2,
                        fill: false,
                        fillColor: null,
                        steps: false
                    },
                    bars: {
                        show: false,
                        lineWidth: 2,
                        barWidth: 1,
                        fill: true,
                        fillColor: null,
                        align: "left",
                        horizontal: false,
                        zero: true,
                    },
                    shadowSize: 3,
                    highlightColor: null,
                },
                grid: {
                    show: true,
                    aboveData: false,
                    color: "#545454",
                    backgroundColor: null,
                    borderColor: null,
                    tickColor: null,
                    margin: 0,
                    labelMargin: 5,
                    axisMargin: 8,
                    borderWidth: 2,
                    minBorderMargin: null,
                    markings: null,
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    clickable: false,
                    hoverable: false,
                    autoHighlight: true,
                    mouseActiveRadius: 10,
                },
                interaction: {
                    redrawOverlayInterval: 1e3 / 60
                },
                hooks: {},
            },
            surface = null,
            overlay = null,
            eventHolder = null,
            ctx = null,
            octx = null,
            xaxes = [],
            yaxes = [],
            plotOffset = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            },
            plotWidth = 0,
            plotHeight = 0,
            hooks = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                processOffset: [],
                drawBackground: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: [],
            },
            plot = this;
        plot.setData = setData;
        plot.setupGrid = setupGrid;
        plot.draw = draw;
        plot.getPlaceholder = function() {
            return placeholder;
        };
        plot.getCanvas = function() {
            return surface.element;
        };
        plot.getPlotOffset = function() {
            return plotOffset;
        };
        plot.width = function() {
            return plotWidth;
        };
        plot.height = function() {
            return plotHeight;
        };
        plot.offset = function() {
            var o = eventHolder.offset();
            o.left += plotOffset.left;
            o.top += plotOffset.top;
            return o;
        };
        plot.getData = function() {
            return series;
        };
        plot.getAxes = function() {
            var res = {},
                i;
            $.each(xaxes.concat(yaxes), function(_, axis) {
                if (axis)
                    res[axis.direction + (axis.n != 1 ? axis.n : "") + "axis"] = axis;
            });
            return res;
        };
        plot.getXAxes = function() {
            return xaxes;
        };
        plot.getYAxes = function() {
            return yaxes;
        };
        plot.c2p = canvasToAxisCoords;
        plot.p2c = axisToCanvasCoords;
        plot.getOptions = function() {
            return options;
        };
        plot.highlight = highlight;
        plot.unhighlight = unhighlight;
        plot.triggerRedrawOverlay = triggerRedrawOverlay;
        plot.pointOffset = function(point) {
            return {
                left: parseInt(
                    xaxes[axisNumber(point, "x") - 1].p2c(+point.x) + plotOffset.left,
                    10
                ),
                top: parseInt(
                    yaxes[axisNumber(point, "y") - 1].p2c(+point.y) + plotOffset.top,
                    10
                ),
            };
        };
        plot.shutdown = shutdown;
        plot.destroy = function() {
            shutdown();
            placeholder.removeData("plot").empty();
            series = [];
            options = null;
            surface = null;
            overlay = null;
            eventHolder = null;
            ctx = null;
            octx = null;
            xaxes = [];
            yaxes = [];
            hooks = null;
            highlights = [];
            plot = null;
        };
        plot.resize = function() {
            var width = placeholder.width(),
                height = placeholder.height();
            surface.resize(width, height);
            overlay.resize(width, height);
        };
        plot.hooks = hooks;
        initPlugins(plot);
        parseOptions(options_);
        setupCanvases();
        setData(data_);
        setupGrid();
        draw();
        bindEvents();

        function executeHooks(hook, args) {
            args = [plot].concat(args);
            for (var i = 0; i < hook.length; ++i) hook[i].apply(this, args);
        }

        function initPlugins() {
            var classes = {
                Canvas: Canvas
            };
            for (var i = 0; i < plugins.length; ++i) {
                var p = plugins[i];
                p.init(plot, classes);
                if (p.options) $.extend(true, options, p.options);
            }
        }

        function parseOptions(opts) {
            $.extend(true, options, opts);
            if (opts && opts.colors) {
                options.colors = opts.colors;
            }
            if (options.xaxis.color == null)
                options.xaxis.color = $.color
                .parse(options.grid.color)
                .scale("a", 0.22)
                .toString();
            if (options.yaxis.color == null)
                options.yaxis.color = $.color
                .parse(options.grid.color)
                .scale("a", 0.22)
                .toString();
            if (options.xaxis.tickColor == null)
                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;
            if (options.yaxis.tickColor == null)
                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;
            if (options.grid.borderColor == null)
                options.grid.borderColor = options.grid.color;
            if (options.grid.tickColor == null)
                options.grid.tickColor = $.color
                .parse(options.grid.color)
                .scale("a", 0.22)
                .toString();
            var i,
                axisOptions,
                axisCount,
                fontSize = placeholder.css("font-size"),
                fontSizeDefault = fontSize ? +fontSize.replace("px", "") : 13,
                fontDefaults = {
                    style: placeholder.css("font-style"),
                    size: Math.round(0.8 * fontSizeDefault),
                    variant: placeholder.css("font-variant"),
                    weight: placeholder.css("font-weight"),
                    family: placeholder.css("font-family"),
                };
            axisCount = options.xaxes.length || 1;
            for (i = 0; i < axisCount; ++i) {
                axisOptions = options.xaxes[i];
                if (axisOptions && !axisOptions.tickColor) {
                    axisOptions.tickColor = axisOptions.color;
                }
                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);
                options.xaxes[i] = axisOptions;
                if (axisOptions.font) {
                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);
                    if (!axisOptions.font.color) {
                        axisOptions.font.color = axisOptions.color;
                    }
                    if (!axisOptions.font.lineHeight) {
                        axisOptions.font.lineHeight = Math.round(
                            axisOptions.font.size * 1.15
                        );
                    }
                }
            }
            axisCount = options.yaxes.length || 1;
            for (i = 0; i < axisCount; ++i) {
                axisOptions = options.yaxes[i];
                if (axisOptions && !axisOptions.tickColor) {
                    axisOptions.tickColor = axisOptions.color;
                }
                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);
                options.yaxes[i] = axisOptions;
                if (axisOptions.font) {
                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);
                    if (!axisOptions.font.color) {
                        axisOptions.font.color = axisOptions.color;
                    }
                    if (!axisOptions.font.lineHeight) {
                        axisOptions.font.lineHeight = Math.round(
                            axisOptions.font.size * 1.15
                        );
                    }
                }
            }
            if (options.xaxis.noTicks && options.xaxis.ticks == null)
                options.xaxis.ticks = options.xaxis.noTicks;
            if (options.yaxis.noTicks && options.yaxis.ticks == null)
                options.yaxis.ticks = options.yaxis.noTicks;
            if (options.x2axis) {
                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);
                options.xaxes[1].position = "top";
                if (options.x2axis.min == null) {
                    options.xaxes[1].min = null;
                }
                if (options.x2axis.max == null) {
                    options.xaxes[1].max = null;
                }
            }
            if (options.y2axis) {
                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);
                options.yaxes[1].position = "right";
                if (options.y2axis.min == null) {
                    options.yaxes[1].min = null;
                }
                if (options.y2axis.max == null) {
                    options.yaxes[1].max = null;
                }
            }
            if (options.grid.coloredAreas)
                options.grid.markings = options.grid.coloredAreas;
            if (options.grid.coloredAreasColor)
                options.grid.markingsColor = options.grid.coloredAreasColor;
            if (options.lines) $.extend(true, options.series.lines, options.lines);
            if (options.points) $.extend(true, options.series.points, options.points);
            if (options.bars) $.extend(true, options.series.bars, options.bars);
            if (options.shadowSize != null)
                options.series.shadowSize = options.shadowSize;
            if (options.highlightColor != null)
                options.series.highlightColor = options.highlightColor;
            for (i = 0; i < options.xaxes.length; ++i)
                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];
            for (i = 0; i < options.yaxes.length; ++i)
                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];
            for (var n in hooks)
                if (options.hooks[n] && options.hooks[n].length)
                    hooks[n] = hooks[n].concat(options.hooks[n]);
            executeHooks(hooks.processOptions, [options]);
        }

        function setData(d) {
            series = parseData(d);
            fillInSeriesOptions();
            processData();
        }

        function parseData(d) {
            var res = [];
            for (var i = 0; i < d.length; ++i) {
                var s = $.extend(true, {}, options.series);
                if (d[i].data != null) {
                    s.data = d[i].data;
                    delete d[i].data;
                    $.extend(true, s, d[i]);
                    d[i].data = s.data;
                } else s.data = d[i];
                res.push(s);
            }
            return res;
        }

        function axisNumber(obj, coord) {
            var a = obj[coord + "axis"];
            if (typeof a == "object") a = a.n;
            if (typeof a != "number") a = 1;
            return a;
        }

        function allAxes() {
            return $.grep(xaxes.concat(yaxes), function(a) {
                return a;
            });
        }

        function canvasToAxisCoords(pos) {
            var res = {},
                i,
                axis;
            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used) res["x" + axis.n] = axis.c2p(pos.left);
            }
            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used) res["y" + axis.n] = axis.c2p(pos.top);
            }
            if (res.x1 !== undefined) res.x = res.x1;
            if (res.y1 !== undefined) res.y = res.y1;
            return res;
        }

        function axisToCanvasCoords(pos) {
            var res = {},
                i,
                axis,
                key;
            for (i = 0; i < xaxes.length; ++i) {
                axis = xaxes[i];
                if (axis && axis.used) {
                    key = "x" + axis.n;
                    if (pos[key] == null && axis.n == 1) key = "x";
                    if (pos[key] != null) {
                        res.left = axis.p2c(pos[key]);
                        break;
                    }
                }
            }
            for (i = 0; i < yaxes.length; ++i) {
                axis = yaxes[i];
                if (axis && axis.used) {
                    key = "y" + axis.n;
                    if (pos[key] == null && axis.n == 1) key = "y";
                    if (pos[key] != null) {
                        res.top = axis.p2c(pos[key]);
                        break;
                    }
                }
            }
            return res;
        }

        function getOrCreateAxis(axes, number) {
            if (!axes[number - 1])
                axes[number - 1] = {
                    n: number,
                    direction: axes == xaxes ? "x" : "y",
                    options: $.extend(
                        true, {},
                        axes == xaxes ? options.xaxis : options.yaxis
                    ),
                };
            return axes[number - 1];
        }

        function fillInSeriesOptions() {
            var neededColors = series.length,
                maxIndex = -1,
                i;
            for (i = 0; i < series.length; ++i) {
                var sc = series[i].color;
                if (sc != null) {
                    neededColors--;
                    if (typeof sc == "number" && sc > maxIndex) {
                        maxIndex = sc;
                    }
                }
            }
            if (neededColors <= maxIndex) {
                neededColors = maxIndex + 1;
            }
            var c,
                colors = [],
                colorPool = options.colors,
                colorPoolSize = colorPool.length,
                variation = 0;
            for (i = 0; i < neededColors; i++) {
                c = $.color.parse(colorPool[i % colorPoolSize] || "#666");
                if (i % colorPoolSize == 0 && i) {
                    if (variation >= 0) {
                        if (variation < 0.5) {
                            variation = -variation - 0.2;
                        } else variation = 0;
                    } else variation = -variation;
                }
                colors[i] = c.scale("rgb", 1 + variation);
            }
            var colori = 0,
                s;
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                if (s.color == null) {
                    s.color = colors[colori].toString();
                    ++colori;
                } else if (typeof s.color == "number")
                    s.color = colors[s.color].toString();
                if (s.lines.show == null) {
                    var v,
                        show = true;
                    for (v in s)
                        if (s[v] && s[v].show) {
                            show = false;
                            break;
                        }
                    if (show) s.lines.show = true;
                }
                if (s.lines.zero == null) {
                    s.lines.zero = !!s.lines.fill;
                }
                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, "x"));
                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, "y"));
            }
        }

        function processData() {
            var topSentry = Number.POSITIVE_INFINITY,
                bottomSentry = Number.NEGATIVE_INFINITY,
                fakeInfinity = Number.MAX_VALUE,
                i,
                j,
                k,
                m,
                length,
                s,
                points,
                ps,
                x,
                y,
                axis,
                val,
                f,
                p,
                data,
                format;

            function updateAxis(axis, min, max) {
                if (min < axis.datamin && min != -fakeInfinity) axis.datamin = min;
                if (max > axis.datamax && max != fakeInfinity) axis.datamax = max;
            }
            $.each(allAxes(), function(_, axis) {
                axis.datamin = topSentry;
                axis.datamax = bottomSentry;
                axis.used = false;
            });
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                s.datapoints = {
                    points: []
                };
                executeHooks(hooks.processRawData, [s, s.data, s.datapoints]);
            }
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                data = s.data;
                format = s.datapoints.format;
                if (!format) {
                    format = [];
                    format.push({
                        x: true,
                        number: true,
                        required: true
                    });
                    format.push({
                        y: true,
                        number: true,
                        required: true
                    });
                    if (s.bars.show || (s.lines.show && s.lines.fill)) {
                        var autoscale = !!(
                            (s.bars.show && s.bars.zero) ||
                            (s.lines.show && s.lines.zero)
                        );
                        format.push({
                            y: true,
                            number: true,
                            required: false,
                            defaultValue: 0,
                            autoscale: autoscale,
                        });
                        if (s.bars.horizontal) {
                            delete format[format.length - 1].y;
                            format[format.length - 1].x = true;
                        }
                    }
                    s.datapoints.format = format;
                }
                if (s.datapoints.pointsize != null) continue;
                s.datapoints.pointsize = format.length;
                ps = s.datapoints.pointsize;
                points = s.datapoints.points;
                var insertSteps = s.lines.show && s.lines.steps;
                s.xaxis.used = s.yaxis.used = true;
                for (j = k = 0; j < data.length; ++j, k += ps) {
                    p = data[j];
                    var nullify = p == null;
                    if (!nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = p[m];
                            f = format[m];
                            if (f) {
                                if (f.number && val != null) {
                                    val = +val;
                                    if (isNaN(val)) val = null;
                                    else if (val == Infinity) val = fakeInfinity;
                                    else if (val == -Infinity) val = -fakeInfinity;
                                }
                                if (val == null) {
                                    if (f.required) nullify = true;
                                    if (f.defaultValue != null) val = f.defaultValue;
                                }
                            }
                            points[k + m] = val;
                        }
                    }
                    if (nullify) {
                        for (m = 0; m < ps; ++m) {
                            val = points[k + m];
                            if (val != null) {
                                f = format[m];
                                if (f.autoscale !== false) {
                                    if (f.x) {
                                        updateAxis(s.xaxis, val, val);
                                    }
                                    if (f.y) {
                                        updateAxis(s.yaxis, val, val);
                                    }
                                }
                            }
                            points[k + m] = null;
                        }
                    } else {
                        if (
                            insertSteps &&
                            k > 0 &&
                            points[k - ps] != null &&
                            points[k - ps] != points[k] &&
                            points[k - ps + 1] != points[k + 1]
                        ) {
                            for (m = 0; m < ps; ++m) points[k + ps + m] = points[k + m];
                            points[k + 1] = points[k - ps + 1];
                            k += ps;
                        }
                    }
                }
            }
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                executeHooks(hooks.processDatapoints, [s, s.datapoints]);
            }
            for (i = 0; i < series.length; ++i) {
                s = series[i];
                points = s.datapoints.points;
                ps = s.datapoints.pointsize;
                format = s.datapoints.format;
                var xmin = topSentry,
                    ymin = topSentry,
                    xmax = bottomSentry,
                    ymax = bottomSentry;
                for (j = 0; j < points.length; j += ps) {
                    if (points[j] == null) continue;
                    for (m = 0; m < ps; ++m) {
                        val = points[j + m];
                        f = format[m];
                        if (!f ||
                            f.autoscale === false ||
                            val == fakeInfinity ||
                            val == -fakeInfinity
                        )
                            continue;
                        if (f.x) {
                            if (val < xmin) xmin = val;
                            if (val > xmax) xmax = val;
                        }
                        if (f.y) {
                            if (val < ymin) ymin = val;
                            if (val > ymax) ymax = val;
                        }
                    }
                }
                if (s.bars.show) {
                    var delta;
                    switch (s.bars.align) {
                        case "left":
                            delta = 0;
                            break;
                        case "right":
                            delta = -s.bars.barWidth;
                            break;
                        default:
                            delta = -s.bars.barWidth / 2;
                    }
                    if (s.bars.horizontal) {
                        ymin += delta;
                        ymax += delta + s.bars.barWidth;
                    } else {
                        xmin += delta;
                        xmax += delta + s.bars.barWidth;
                    }
                }
                updateAxis(s.xaxis, xmin, xmax);
                updateAxis(s.yaxis, ymin, ymax);
            }
            $.each(allAxes(), function(_, axis) {
                if (axis.datamin == topSentry) axis.datamin = null;
                if (axis.datamax == bottomSentry) axis.datamax = null;
            });
        }

        function setupCanvases() {
            placeholder
                .css("padding", 0)
                .children()
                .filter(function() {
                    return (!$(this).hasClass("flot-overlay") && !$(this).hasClass("flot-base"));
                })
                .remove();
            if (placeholder.css("position") == "static")
                placeholder.css("position", "relative");
            surface = new Canvas("flot-base", placeholder);
            overlay = new Canvas("flot-overlay", placeholder);
            ctx = surface.context;
            octx = overlay.context;
            eventHolder = $(overlay.element).unbind();
            var existing = placeholder.data("plot");
            if (existing) {
                existing.shutdown();
                overlay.clear();
            }
            placeholder.data("plot", plot);
        }

        function bindEvents() {
            if (options.grid.hoverable) {
                eventHolder.mousemove(onMouseMove);
                eventHolder.bind("mouseleave", onMouseLeave);
            }
            if (options.grid.clickable) eventHolder.click(onClick);
            executeHooks(hooks.bindEvents, [eventHolder]);
        }

        function shutdown() {
            if (redrawTimeout) clearTimeout(redrawTimeout);
            eventHolder.unbind("mousemove", onMouseMove);
            eventHolder.unbind("mouseleave", onMouseLeave);
            eventHolder.unbind("click", onClick);
            executeHooks(hooks.shutdown, [eventHolder]);
        }

        function setTransformationHelpers(axis) {
            function identity(x) {
                return x;
            }
            var s,
                m,
                t = axis.options.transform || identity,
                it = axis.options.inverseTransform;
            if (axis.direction == "x") {
                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));
                m = Math.min(t(axis.max), t(axis.min));
            } else {
                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));
                s = -s;
                m = Math.max(t(axis.max), t(axis.min));
            }
            if (t == identity)
                axis.p2c = function(p) {
                    return (p - m) * s;
                };
            else
                axis.p2c = function(p) {
                    return (t(p) - m) * s;
                };
            if (!it)
                axis.c2p = function(c) {
                    return m + c / s;
                };
            else
                axis.c2p = function(c) {
                    return it(m + c / s);
                };
        }

        function measureTickLabels(axis) {
            var opts = axis.options,
                ticks = axis.ticks || [],
                labelWidth = opts.labelWidth || 0,
                labelHeight = opts.labelHeight || 0,
                maxWidth =
                labelWidth ||
                (axis.direction == "x" ?
                    Math.floor(surface.width / (ticks.length || 1)) :
                    null),
                legacyStyles =
                axis.direction + "Axis " + axis.direction + axis.n + "Axis",
                layer =
                "flot-" +
                axis.direction +
                "-axis flot-" +
                axis.direction +
                axis.n +
                "-axis " +
                legacyStyles,
                font = opts.font || "flot-tick-label tickLabel";
            for (var i = 0; i < ticks.length; ++i) {
                var t = ticks[i];
                if (!t.label) continue;
                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);
                labelWidth = Math.max(labelWidth, info.width);
                labelHeight = Math.max(labelHeight, info.height);
            }
            axis.labelWidth = opts.labelWidth || labelWidth;
            axis.labelHeight = opts.labelHeight || labelHeight;
        }

        function allocateAxisBoxFirstPhase(axis) {
            var lw = axis.labelWidth,
                lh = axis.labelHeight,
                pos = axis.options.position,
                isXAxis = axis.direction === "x",
                tickLength = axis.options.tickLength,
                axisMargin = options.grid.axisMargin,
                padding = options.grid.labelMargin,
                innermost = true,
                outermost = true,
                first = true,
                found = false;
            $.each(isXAxis ? xaxes : yaxes, function(i, a) {
                if (a && (a.show || a.reserveSpace)) {
                    if (a === axis) {
                        found = true;
                    } else if (a.options.position === pos) {
                        if (found) {
                            outermost = false;
                        } else {
                            innermost = false;
                        }
                    }
                    if (!found) {
                        first = false;
                    }
                }
            });
            if (outermost) {
                axisMargin = 0;
            }
            if (tickLength == null) {
                tickLength = first ? "full" : 5;
            }
            if (!isNaN(+tickLength)) padding += +tickLength;
            if (isXAxis) {
                lh += padding;
                if (pos == "bottom") {
                    plotOffset.bottom += lh + axisMargin;
                    axis.box = {
                        top: surface.height - plotOffset.bottom,
                        height: lh
                    };
                } else {
                    axis.box = {
                        top: plotOffset.top + axisMargin,
                        height: lh
                    };
                    plotOffset.top += lh + axisMargin;
                }
            } else {
                lw += padding;
                if (pos == "left") {
                    axis.box = {
                        left: plotOffset.left + axisMargin,
                        width: lw
                    };
                    plotOffset.left += lw + axisMargin;
                } else {
                    plotOffset.right += lw + axisMargin;
                    axis.box = {
                        left: surface.width - plotOffset.right,
                        width: lw
                    };
                }
            }
            axis.position = pos;
            axis.tickLength = tickLength;
            axis.box.padding = padding;
            axis.innermost = innermost;
        }

        function allocateAxisBoxSecondPhase(axis) {
            if (axis.direction == "x") {
                axis.box.left = plotOffset.left - axis.labelWidth / 2;
                axis.box.width =
                    surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;
            } else {
                axis.box.top = plotOffset.top - axis.labelHeight / 2;
                axis.box.height =
                    surface.height -
                    plotOffset.bottom -
                    plotOffset.top +
                    axis.labelHeight;
            }
        }

        function adjustLayoutForThingsStickingOut() {
            var minMargin = options.grid.minBorderMargin,
                axis,
                i;
            if (minMargin == null) {
                minMargin = 0;
                for (i = 0; i < series.length; ++i)
                    minMargin = Math.max(
                        minMargin,
                        2 * (series[i].points.radius + series[i].points.lineWidth / 2)
                    );
            }
            var margins = {
                left: minMargin,
                right: minMargin,
                top: minMargin,
                bottom: minMargin,
            };
            $.each(allAxes(), function(_, axis) {
                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {
                    if (axis.direction === "x") {
                        margins.left = Math.max(margins.left, axis.labelWidth / 2);
                        margins.right = Math.max(margins.right, axis.labelWidth / 2);
                    } else {
                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);
                        margins.top = Math.max(margins.top, axis.labelHeight / 2);
                    }
                }
            });
            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));
            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));
            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));
            plotOffset.bottom = Math.ceil(
                Math.max(margins.bottom, plotOffset.bottom)
            );
        }

        function setupGrid() {
            var i,
                axes = allAxes(),
                showGrid = options.grid.show;
            for (var a in plotOffset) {
                var margin = options.grid.margin || 0;
                plotOffset[a] = typeof margin == "number" ? margin : margin[a] || 0;
            }
            executeHooks(hooks.processOffset, [plotOffset]);
            for (var a in plotOffset) {
                if (typeof options.grid.borderWidth == "object") {
                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;
                } else {
                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;
                }
            }
            $.each(axes, function(_, axis) {
                var axisOpts = axis.options;
                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;
                axis.reserveSpace =
                    axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;
                setRange(axis);
            });
            if (showGrid) {
                var allocatedAxes = $.grep(axes, function(axis) {
                    return axis.show || axis.reserveSpace;
                });
                $.each(allocatedAxes, function(_, axis) {
                    setupTickGeneration(axis);
                    setTicks(axis);
                    snapRangeToTicks(axis, axis.ticks);
                    measureTickLabels(axis);
                });
                for (i = allocatedAxes.length - 1; i >= 0; --i)
                    allocateAxisBoxFirstPhase(allocatedAxes[i]);
                adjustLayoutForThingsStickingOut();
                $.each(allocatedAxes, function(_, axis) {
                    allocateAxisBoxSecondPhase(axis);
                });
            }
            plotWidth = surface.width - plotOffset.left - plotOffset.right;
            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;
            $.each(axes, function(_, axis) {
                setTransformationHelpers(axis);
            });
            if (showGrid) {
                drawAxisLabels();
            }
            insertLegend();
        }

        function setRange(axis) {
            var opts = axis.options,
                min = +(opts.min != null ? opts.min : axis.datamin),
                max = +(opts.max != null ? opts.max : axis.datamax),
                delta = max - min;
            if (delta == 0) {
                var widen = max == 0 ? 1 : 0.01;
                if (opts.min == null) min -= widen;
                if (opts.max == null || opts.min != null) max += widen;
            } else {
                var margin = opts.autoscaleMargin;
                if (margin != null) {
                    if (opts.min == null) {
                        min -= delta * margin;
                        if (min < 0 && axis.datamin != null && axis.datamin >= 0) min = 0;
                    }
                    if (opts.max == null) {
                        max += delta * margin;
                        if (max > 0 && axis.datamax != null && axis.datamax <= 0) max = 0;
                    }
                }
            }
            axis.min = min;
            axis.max = max;
        }

        function setupTickGeneration(axis) {
            var opts = axis.options;
            var noTicks;
            if (typeof opts.ticks == "number" && opts.ticks > 0) noTicks = opts.ticks;
            else
                noTicks =
                0.3 *
                Math.sqrt(axis.direction == "x" ? surface.width : surface.height);
            var delta = (axis.max - axis.min) / noTicks,
                dec = -Math.floor(Math.log(delta) / Math.LN10),
                maxDec = opts.tickDecimals;
            if (maxDec != null && dec > maxDec) {
                dec = maxDec;
            }
            var magn = Math.pow(10, -dec),
                norm = delta / magn,
                size;
            if (norm < 1.5) {
                size = 1;
            } else if (norm < 3) {
                size = 2;
                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {
                    size = 2.5;
                    ++dec;
                }
            } else if (norm < 7.5) {
                size = 5;
            } else {
                size = 10;
            }
            size *= magn;
            if (opts.minTickSize != null && size < opts.minTickSize) {
                size = opts.minTickSize;
            }
            axis.delta = delta;
            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);
            axis.tickSize = opts.tickSize || size;
            if (opts.mode == "time" && !axis.tickGenerator) {
                throw new Error("Time mode requires the flot.time plugin.");
            }
            if (!axis.tickGenerator) {
                axis.tickGenerator = function(axis) {
                    var ticks = [],
                        start = floorInBase(axis.min, axis.tickSize),
                        i = 0,
                        v = Number.NaN,
                        prev;
                    do {
                        prev = v;
                        v = start + i * axis.tickSize;
                        ticks.push(v);
                        ++i;
                    } while (v < axis.max && v != prev);
                    return ticks;
                };
                axis.tickFormatter = function(value, axis) {
                    var factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;
                    var formatted = "" + Math.round(value * factor) / factor;
                    if (axis.tickDecimals != null) {
                        var decimal = formatted.indexOf(".");
                        var precision = decimal == -1 ? 0 : formatted.length - decimal - 1;
                        if (precision < axis.tickDecimals) {
                            return (
                                (precision ? formatted : formatted + ".") +
                                ("" + factor).substr(1, axis.tickDecimals - precision)
                            );
                        }
                    }
                    return formatted;
                };
            }
            if ($.isFunction(opts.tickFormatter))
                axis.tickFormatter = function(v, axis) {
                    return "" + opts.tickFormatter(v, axis);
                };
            if (opts.alignTicksWithAxis != null) {
                var otherAxis = (axis.direction == "x" ? xaxes : yaxes)[
                    opts.alignTicksWithAxis - 1
                ];
                if (otherAxis && otherAxis.used && otherAxis != axis) {
                    var niceTicks = axis.tickGenerator(axis);
                    if (niceTicks.length > 0) {
                        if (opts.min == null) axis.min = Math.min(axis.min, niceTicks[0]);
                        if (opts.max == null && niceTicks.length > 1)
                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);
                    }
                    axis.tickGenerator = function(axis) {
                        var ticks = [],
                            v,
                            i;
                        for (i = 0; i < otherAxis.ticks.length; ++i) {
                            v =
                                (otherAxis.ticks[i].v - otherAxis.min) /
                                (otherAxis.max - otherAxis.min);
                            v = axis.min + v * (axis.max - axis.min);
                            ticks.push(v);
                        }
                        return ticks;
                    };
                    if (!axis.mode && opts.tickDecimals == null) {
                        var extraDec = Math.max(
                                0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1
                            ),
                            ts = axis.tickGenerator(axis);
                        if (!(
                                ts.length > 1 &&
                                /\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))
                            ))
                            axis.tickDecimals = extraDec;
                    }
                }
            }
        }

        function setTicks(axis) {
            var oticks = axis.options.ticks,
                ticks = [];
            if (oticks == null || (typeof oticks == "number" && oticks > 0))
                ticks = axis.tickGenerator(axis);
            else if (oticks) {
                if ($.isFunction(oticks)) ticks = oticks(axis);
                else ticks = oticks;
            }
            var i, v;
            axis.ticks = [];
            for (i = 0; i < ticks.length; ++i) {
                var label = null;
                var t = ticks[i];
                if (typeof t == "object") {
                    v = +t[0];
                    if (t.length > 1) label = t[1];
                } else v = +t;
                if (label == null) label = axis.tickFormatter(v, axis);
                if (!isNaN(v)) axis.ticks.push({
                    v: v,
                    label: label
                });
            }
        }

        function snapRangeToTicks(axis, ticks) {
            if (axis.options.autoscaleMargin && ticks.length > 0) {
                if (axis.options.min == null) axis.min = Math.min(axis.min, ticks[0].v);
                if (axis.options.max == null && ticks.length > 1)
                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);
            }
        }

        function draw() {
            surface.clear();
            executeHooks(hooks.drawBackground, [ctx]);
            var grid = options.grid;
            if (grid.show && grid.backgroundColor) drawBackground();
            if (grid.show && !grid.aboveData) {
                drawGrid();
            }
            for (var i = 0; i < series.length; ++i) {
                executeHooks(hooks.drawSeries, [ctx, series[i]]);
                drawSeries(series[i]);
            }
            executeHooks(hooks.draw, [ctx]);
            if (grid.show && grid.aboveData) {
                drawGrid();
            }
            surface.render();
            triggerRedrawOverlay();
        }

        function extractRange(ranges, coord) {
            var axis,
                from,
                to,
                key,
                axes = allAxes();
            for (var i = 0; i < axes.length; ++i) {
                axis = axes[i];
                if (axis.direction == coord) {
                    key = coord + axis.n + "axis";
                    if (!ranges[key] && axis.n == 1) key = coord + "axis";
                    if (ranges[key]) {
                        from = ranges[key].from;
                        to = ranges[key].to;
                        break;
                    }
                }
            }
            if (!ranges[key]) {
                axis = coord == "x" ? xaxes[0] : yaxes[0];
                from = ranges[coord + "1"];
                to = ranges[coord + "2"];
            }
            if (from != null && to != null && from > to) {
                var tmp = from;
                from = to;
                to = tmp;
            }
            return {
                from: from,
                to: to,
                axis: axis
            };
        }

        function drawBackground() {
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            ctx.fillStyle = getColorOrGradient(
                options.grid.backgroundColor,
                plotHeight,
                0,
                "rgba(255, 255, 255, 0)"
            );
            ctx.fillRect(0, 0, plotWidth, plotHeight);
            ctx.restore();
        }

        function drawGrid() {
            var i, axes, bw, bc;
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            var markings = options.grid.markings;
            if (markings) {
                if ($.isFunction(markings)) {
                    axes = plot.getAxes();
                    axes.xmin = axes.xaxis.min;
                    axes.xmax = axes.xaxis.max;
                    axes.ymin = axes.yaxis.min;
                    axes.ymax = axes.yaxis.max;
                    markings = markings(axes);
                }
                for (i = 0; i < markings.length; ++i) {
                    var m = markings[i],
                        xrange = extractRange(m, "x"),
                        yrange = extractRange(m, "y");
                    if (xrange.from == null) xrange.from = xrange.axis.min;
                    if (xrange.to == null) xrange.to = xrange.axis.max;
                    if (yrange.from == null) yrange.from = yrange.axis.min;
                    if (yrange.to == null) yrange.to = yrange.axis.max;
                    if (
                        xrange.to < xrange.axis.min ||
                        xrange.from > xrange.axis.max ||
                        yrange.to < yrange.axis.min ||
                        yrange.from > yrange.axis.max
                    )
                        continue;
                    xrange.from = Math.max(xrange.from, xrange.axis.min);
                    xrange.to = Math.min(xrange.to, xrange.axis.max);
                    yrange.from = Math.max(yrange.from, yrange.axis.min);
                    yrange.to = Math.min(yrange.to, yrange.axis.max);
                    var xequal = xrange.from === xrange.to,
                        yequal = yrange.from === yrange.to;
                    if (xequal && yequal) {
                        continue;
                    }
                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));
                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));
                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));
                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));
                    if (xequal || yequal) {
                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,
                            subPixel = lineWidth % 2 ? 0.5 : 0;
                        ctx.beginPath();
                        ctx.strokeStyle = m.color || options.grid.markingsColor;
                        ctx.lineWidth = lineWidth;
                        if (xequal) {
                            ctx.moveTo(xrange.to + subPixel, yrange.from);
                            ctx.lineTo(xrange.to + subPixel, yrange.to);
                        } else {
                            ctx.moveTo(xrange.from, yrange.to + subPixel);
                            ctx.lineTo(xrange.to, yrange.to + subPixel);
                        }
                        ctx.stroke();
                    } else {
                        ctx.fillStyle = m.color || options.grid.markingsColor;
                        ctx.fillRect(
                            xrange.from,
                            yrange.to,
                            xrange.to - xrange.from,
                            yrange.from - yrange.to
                        );
                    }
                }
            }
            axes = allAxes();
            bw = options.grid.borderWidth;
            for (var j = 0; j < axes.length; ++j) {
                var axis = axes[j],
                    box = axis.box,
                    t = axis.tickLength,
                    x,
                    y,
                    xoff,
                    yoff;
                if (!axis.show || axis.ticks.length == 0) continue;
                ctx.lineWidth = 1;
                if (axis.direction == "x") {
                    x = 0;
                    if (t == "full") y = axis.position == "top" ? 0 : plotHeight;
                    else
                        y =
                        box.top -
                        plotOffset.top +
                        (axis.position == "top" ? box.height : 0);
                } else {
                    y = 0;
                    if (t == "full") x = axis.position == "left" ? 0 : plotWidth;
                    else
                        x =
                        box.left -
                        plotOffset.left +
                        (axis.position == "left" ? box.width : 0);
                }
                if (!axis.innermost) {
                    ctx.strokeStyle = axis.options.color;
                    ctx.beginPath();
                    xoff = yoff = 0;
                    if (axis.direction == "x") xoff = plotWidth + 1;
                    else yoff = plotHeight + 1;
                    if (ctx.lineWidth == 1) {
                        if (axis.direction == "x") {
                            y = Math.floor(y) + 0.5;
                        } else {
                            x = Math.floor(x) + 0.5;
                        }
                    }
                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                    ctx.stroke();
                }
                ctx.strokeStyle = axis.options.tickColor;
                ctx.beginPath();
                for (i = 0; i < axis.ticks.length; ++i) {
                    var v = axis.ticks[i].v;
                    xoff = yoff = 0;
                    if (
                        isNaN(v) ||
                        v < axis.min ||
                        v > axis.max ||
                        (t == "full" &&
                            ((typeof bw == "object" && bw[axis.position] > 0) || bw > 0) &&
                            (v == axis.min || v == axis.max))
                    )
                        continue;
                    if (axis.direction == "x") {
                        x = axis.p2c(v);
                        yoff = t == "full" ? -plotHeight : t;
                        if (axis.position == "top") yoff = -yoff;
                    } else {
                        y = axis.p2c(v);
                        xoff = t == "full" ? -plotWidth : t;
                        if (axis.position == "left") xoff = -xoff;
                    }
                    if (ctx.lineWidth == 1) {
                        if (axis.direction == "x") x = Math.floor(x) + 0.5;
                        else y = Math.floor(y) + 0.5;
                    }
                    ctx.moveTo(x, y);
                    ctx.lineTo(x + xoff, y + yoff);
                }
                ctx.stroke();
            }
            if (bw) {
                bc = options.grid.borderColor;
                if (typeof bw == "object" || typeof bc == "object") {
                    if (typeof bw !== "object") {
                        bw = {
                            top: bw,
                            right: bw,
                            bottom: bw,
                            left: bw
                        };
                    }
                    if (typeof bc !== "object") {
                        bc = {
                            top: bc,
                            right: bc,
                            bottom: bc,
                            left: bc
                        };
                    }
                    if (bw.top > 0) {
                        ctx.strokeStyle = bc.top;
                        ctx.lineWidth = bw.top;
                        ctx.beginPath();
                        ctx.moveTo(0 - bw.left, 0 - bw.top / 2);
                        ctx.lineTo(plotWidth, 0 - bw.top / 2);
                        ctx.stroke();
                    }
                    if (bw.right > 0) {
                        ctx.strokeStyle = bc.right;
                        ctx.lineWidth = bw.right;
                        ctx.beginPath();
                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);
                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);
                        ctx.stroke();
                    }
                    if (bw.bottom > 0) {
                        ctx.strokeStyle = bc.bottom;
                        ctx.lineWidth = bw.bottom;
                        ctx.beginPath();
                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);
                        ctx.lineTo(0, plotHeight + bw.bottom / 2);
                        ctx.stroke();
                    }
                    if (bw.left > 0) {
                        ctx.strokeStyle = bc.left;
                        ctx.lineWidth = bw.left;
                        ctx.beginPath();
                        ctx.moveTo(0 - bw.left / 2, plotHeight + bw.bottom);
                        ctx.lineTo(0 - bw.left / 2, 0);
                        ctx.stroke();
                    }
                } else {
                    ctx.lineWidth = bw;
                    ctx.strokeStyle = options.grid.borderColor;
                    ctx.strokeRect(-bw / 2, -bw / 2, plotWidth + bw, plotHeight + bw);
                }
            }
            ctx.restore();
        }

        function drawAxisLabels() {
            $.each(allAxes(), function(_, axis) {
                var box = axis.box,
                    legacyStyles =
                    axis.direction + "Axis " + axis.direction + axis.n + "Axis",
                    layer =
                    "flot-" +
                    axis.direction +
                    "-axis flot-" +
                    axis.direction +
                    axis.n +
                    "-axis " +
                    legacyStyles,
                    font = axis.options.font || "flot-tick-label tickLabel",
                    tick,
                    x,
                    y,
                    halign,
                    valign;
                surface.removeText(layer);
                if (!axis.show || axis.ticks.length == 0) return;
                for (var i = 0; i < axis.ticks.length; ++i) {
                    tick = axis.ticks[i];
                    if (!tick.label || tick.v < axis.min || tick.v > axis.max) continue;
                    if (axis.direction == "x") {
                        halign = "center";
                        x = plotOffset.left + axis.p2c(tick.v);
                        if (axis.position == "bottom") {
                            y = box.top + box.padding;
                        } else {
                            y = box.top + box.height - box.padding;
                            valign = "bottom";
                        }
                    } else {
                        valign = "middle";
                        y = plotOffset.top + axis.p2c(tick.v);
                        if (axis.position == "left") {
                            x = box.left + box.width - box.padding;
                            halign = "right";
                        } else {
                            x = box.left + box.padding;
                        }
                    }
                    surface.addText(
                        layer,
                        x,
                        y,
                        tick.label,
                        font,
                        null,
                        null,
                        halign,
                        valign
                    );
                }
            });
        }

        function drawSeries(series) {
            if (series.lines.show) drawSeriesLines(series);
            if (series.bars.show) drawSeriesBars(series);
            if (series.points.show) drawSeriesPoints(series);
        }

        function drawSeriesLines(series) {
            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    prevx = null,
                    prevy = null;
                ctx.beginPath();
                for (var i = ps; i < points.length; i += ps) {
                    var x1 = points[i - ps],
                        y1 = points[i - ps + 1],
                        x2 = points[i],
                        y2 = points[i + 1];
                    if (x1 == null || x2 == null) continue;
                    if (y1 <= y2 && y1 < axisy.min) {
                        if (y2 < axisy.min) continue;
                        x1 = ((axisy.min - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    } else if (y2 <= y1 && y2 < axisy.min) {
                        if (y1 < axisy.min) continue;
                        x2 = ((axisy.min - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }
                    if (y1 >= y2 && y1 > axisy.max) {
                        if (y2 > axisy.max) continue;
                        x1 = ((axisy.max - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    } else if (y2 >= y1 && y2 > axisy.max) {
                        if (y1 > axisy.max) continue;
                        x2 = ((axisy.max - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min) continue;
                        y1 = ((axisx.min - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    } else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min) continue;
                        y2 = ((axisx.min - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max) continue;
                        y1 = ((axisx.max - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    } else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max) continue;
                        y2 = ((axisx.max - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }
                    if (x1 != prevx || y1 != prevy)
                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);
                    prevx = x2;
                    prevy = y2;
                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);
                }
                ctx.stroke();
            }

            function plotLineArea(datapoints, axisx, axisy) {
                var points = datapoints.points,
                    ps = datapoints.pointsize,
                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),
                    i = 0,
                    top,
                    areaOpen = false,
                    ypos = 1,
                    segmentStart = 0,
                    segmentEnd = 0;
                while (true) {
                    if (ps > 0 && i > points.length + ps) break;
                    i += ps;
                    var x1 = points[i - ps],
                        y1 = points[i - ps + ypos],
                        x2 = points[i],
                        y2 = points[i + ypos];
                    if (areaOpen) {
                        if (ps > 0 && x1 != null && x2 == null) {
                            segmentEnd = i;
                            ps = -ps;
                            ypos = 2;
                            continue;
                        }
                        if (ps < 0 && i == segmentStart + ps) {
                            ctx.fill();
                            areaOpen = false;
                            ps = -ps;
                            ypos = 1;
                            i = segmentStart = segmentEnd + ps;
                            continue;
                        }
                    }
                    if (x1 == null || x2 == null) continue;
                    if (x1 <= x2 && x1 < axisx.min) {
                        if (x2 < axisx.min) continue;
                        y1 = ((axisx.min - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x1 = axisx.min;
                    } else if (x2 <= x1 && x2 < axisx.min) {
                        if (x1 < axisx.min) continue;
                        y2 = ((axisx.min - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x2 = axisx.min;
                    }
                    if (x1 >= x2 && x1 > axisx.max) {
                        if (x2 > axisx.max) continue;
                        y1 = ((axisx.max - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x1 = axisx.max;
                    } else if (x2 >= x1 && x2 > axisx.max) {
                        if (x1 > axisx.max) continue;
                        y2 = ((axisx.max - x1) / (x2 - x1)) * (y2 - y1) + y1;
                        x2 = axisx.max;
                    }
                    if (!areaOpen) {
                        ctx.beginPath();
                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));
                        areaOpen = true;
                    }
                    if (y1 >= axisy.max && y2 >= axisy.max) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));
                        continue;
                    } else if (y1 <= axisy.min && y2 <= axisy.min) {
                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));
                        continue;
                    }
                    var x1old = x1,
                        x2old = x2;
                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {
                        x1 = ((axisy.min - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y1 = axisy.min;
                    } else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {
                        x2 = ((axisy.min - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y2 = axisy.min;
                    }
                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {
                        x1 = ((axisy.max - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y1 = axisy.max;
                    } else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {
                        x2 = ((axisy.max - y1) / (y2 - y1)) * (x2 - x1) + x1;
                        y2 = axisy.max;
                    }
                    if (x1 != x1old) {
                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));
                    }
                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));
                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
                    if (x2 != x2old) {
                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));
                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));
                    }
                }
            }
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            ctx.lineJoin = "round";
            var lw = series.lines.lineWidth,
                sw = series.shadowSize;
            if (lw > 0 && sw > 0) {
                ctx.lineWidth = sw;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                var angle = Math.PI / 18;
                plotLine(
                    series.datapoints,
                    Math.sin(angle) * (lw / 2 + sw / 2),
                    Math.cos(angle) * (lw / 2 + sw / 2),
                    series.xaxis,
                    series.yaxis
                );
                ctx.lineWidth = sw / 2;
                plotLine(
                    series.datapoints,
                    Math.sin(angle) * (lw / 2 + sw / 4),
                    Math.cos(angle) * (lw / 2 + sw / 4),
                    series.xaxis,
                    series.yaxis
                );
            }
            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);
            if (fillStyle) {
                ctx.fillStyle = fillStyle;
                plotLineArea(series.datapoints, series.xaxis, series.yaxis);
            }
            if (lw > 0) plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);
            ctx.restore();
        }

        function drawSeriesPoints(series) {
            function plotPoints(
                datapoints,
                radius,
                fillStyle,
                offset,
                shadow,
                axisx,
                axisy,
                symbol
            ) {
                var points = datapoints.points,
                    ps = datapoints.pointsize;
                for (var i = 0; i < points.length; i += ps) {
                    var x = points[i],
                        y = points[i + 1];
                    if (
                        x == null ||
                        x < axisx.min ||
                        x > axisx.max ||
                        y < axisy.min ||
                        y > axisy.max
                    )
                        continue;
                    ctx.beginPath();
                    x = axisx.p2c(x);
                    y = axisy.p2c(y) + offset;
                    if (symbol == "circle")
                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);
                    else symbol(ctx, x, y, radius, shadow);
                    ctx.closePath();
                    if (fillStyle) {
                        ctx.fillStyle = fillStyle;
                        ctx.fill();
                    }
                    ctx.stroke();
                }
            }
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            var lw = series.points.lineWidth,
                sw = series.shadowSize,
                radius = series.points.radius,
                symbol = series.points.symbol;
            if (lw == 0) lw = 1e-4;
            if (lw > 0 && sw > 0) {
                var w = sw / 2;
                ctx.lineWidth = w;
                ctx.strokeStyle = "rgba(0,0,0,0.1)";
                plotPoints(
                    series.datapoints,
                    radius,
                    null,
                    w + w / 2,
                    true,
                    series.xaxis,
                    series.yaxis,
                    symbol
                );
                ctx.strokeStyle = "rgba(0,0,0,0.2)";
                plotPoints(
                    series.datapoints,
                    radius,
                    null,
                    w / 2,
                    true,
                    series.xaxis,
                    series.yaxis,
                    symbol
                );
            }
            ctx.lineWidth = lw;
            ctx.strokeStyle = series.color;
            plotPoints(
                series.datapoints,
                radius,
                getFillStyle(series.points, series.color),
                0,
                false,
                series.xaxis,
                series.yaxis,
                symbol
            );
            ctx.restore();
        }

        function drawBar(
            x,
            y,
            b,
            barLeft,
            barRight,
            fillStyleCallback,
            axisx,
            axisy,
            c,
            horizontal,
            lineWidth
        ) {
            var left,
                right,
                bottom,
                top,
                drawLeft,
                drawRight,
                drawTop,
                drawBottom,
                tmp;
            if (horizontal) {
                drawBottom = drawRight = drawTop = true;
                drawLeft = false;
                left = b;
                right = x;
                top = y + barLeft;
                bottom = y + barRight;
                if (right < left) {
                    tmp = right;
                    right = left;
                    left = tmp;
                    drawLeft = true;
                    drawRight = false;
                }
            } else {
                drawLeft = drawRight = drawTop = true;
                drawBottom = false;
                left = x + barLeft;
                right = x + barRight;
                bottom = b;
                top = y;
                if (top < bottom) {
                    tmp = top;
                    top = bottom;
                    bottom = tmp;
                    drawBottom = true;
                    drawTop = false;
                }
            }
            if (
                right < axisx.min ||
                left > axisx.max ||
                top < axisy.min ||
                bottom > axisy.max
            )
                return;
            if (left < axisx.min) {
                left = axisx.min;
                drawLeft = false;
            }
            if (right > axisx.max) {
                right = axisx.max;
                drawRight = false;
            }
            if (bottom < axisy.min) {
                bottom = axisy.min;
                drawBottom = false;
            }
            if (top > axisy.max) {
                top = axisy.max;
                drawTop = false;
            }
            left = axisx.p2c(left);
            bottom = axisy.p2c(bottom);
            right = axisx.p2c(right);
            top = axisy.p2c(top);
            if (fillStyleCallback) {
                c.fillStyle = fillStyleCallback(bottom, top);
                c.fillRect(left, top, right - left, bottom - top);
            }
            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {
                c.beginPath();
                c.moveTo(left, bottom);
                if (drawLeft) c.lineTo(left, top);
                else c.moveTo(left, top);
                if (drawTop) c.lineTo(right, top);
                else c.moveTo(right, top);
                if (drawRight) c.lineTo(right, bottom);
                else c.moveTo(right, bottom);
                if (drawBottom) c.lineTo(left, bottom);
                else c.moveTo(left, bottom);
                c.stroke();
            }
        }

        function drawSeriesBars(series) {
            function plotBars(
                datapoints,
                barLeft,
                barRight,
                fillStyleCallback,
                axisx,
                axisy
            ) {
                var points = datapoints.points,
                    ps = datapoints.pointsize;
                for (var i = 0; i < points.length; i += ps) {
                    if (points[i] == null) continue;
                    drawBar(
                        points[i],
                        points[i + 1],
                        points[i + 2],
                        barLeft,
                        barRight,
                        fillStyleCallback,
                        axisx,
                        axisy,
                        ctx,
                        series.bars.horizontal,
                        series.bars.lineWidth
                    );
                }
            }
            ctx.save();
            ctx.translate(plotOffset.left, plotOffset.top);
            ctx.lineWidth = series.bars.lineWidth;
            ctx.strokeStyle = series.color;
            var barLeft;
            switch (series.bars.align) {
                case "left":
                    barLeft = 0;
                    break;
                case "right":
                    barLeft = -series.bars.barWidth;
                    break;
                default:
                    barLeft = -series.bars.barWidth / 2;
            }
            var fillStyleCallback = series.bars.fill ?
                function(bottom, top) {
                    return getFillStyle(series.bars, series.color, bottom, top);
                } :
                null;
            plotBars(
                series.datapoints,
                barLeft,
                barLeft + series.bars.barWidth,
                fillStyleCallback,
                series.xaxis,
                series.yaxis
            );
            ctx.restore();
        }

        function getFillStyle(filloptions, seriesColor, bottom, top) {
            var fill = filloptions.fill;
            if (!fill) return null;
            if (filloptions.fillColor)
                return getColorOrGradient(
                    filloptions.fillColor,
                    bottom,
                    top,
                    seriesColor
                );
            var c = $.color.parse(seriesColor);
            c.a = typeof fill == "number" ? fill : 0.4;
            c.normalize();
            return c.toString();
        }

        function insertLegend() {
            if (options.legend.container != null) {
                $(options.legend.container).html("");
            } else {
                placeholder.find(".legend").remove();
            }
            if (!options.legend.show) {
                return;
            }
            var fragments = [],
                entries = [],
                rowStarted = false,
                lf = options.legend.labelFormatter,
                s,
                label;
            for (var i = 0; i < series.length; ++i) {
                s = series[i];
                if (s.label) {
                    label = lf ? lf(s.label, s) : s.label;
                    if (label) {
                        entries.push({
                            label: label,
                            color: s.color
                        });
                    }
                }
            }
            if (options.legend.sorted) {
                if ($.isFunction(options.legend.sorted)) {
                    entries.sort(options.legend.sorted);
                } else if (options.legend.sorted == "reverse") {
                    entries.reverse();
                } else {
                    var ascending = options.legend.sorted != "descending";
                    entries.sort(function(a, b) {
                        return a.label == b.label ?
                            0 :
                            a.label < b.label != ascending ?
                            1 :
                            -1;
                    });
                }
            }
            for (var i = 0; i < entries.length; ++i) {
                var entry = entries[i];
                if (i % options.legend.noColumns == 0) {
                    if (rowStarted) fragments.push("</tr>");
                    fragments.push("<tr>");
                    rowStarted = true;
                }
                fragments.push(
                    '<td class="legendColorBox"><div style="border:1px solid ' +
                    options.legend.labelBoxBorderColor +
                    ';padding:1px"><div style="width:4px;height:0;border:5px solid ' +
                    entry.color +
                    ';overflow:hidden"></div></div></td>' +
                    '<td class="legendLabel">' +
                    entry.label +
                    "</td>"
                );
            }
            if (rowStarted) fragments.push("</tr>");
            if (fragments.length == 0) return;
            var table =
                '<table style="font-size:smaller;color:' +
                options.grid.color +
                '">' +
                fragments.join("") +
                "</table>";
            if (options.legend.container != null)
                $(options.legend.container).html(table);
            else {
                var pos = "",
                    p = options.legend.position,
                    m = options.legend.margin;
                if (m[0] == null) m = [m, m];
                if (p.charAt(0) == "n") pos += "top:" + (m[1] + plotOffset.top) + "px;";
                else if (p.charAt(0) == "s")
                    pos += "bottom:" + (m[1] + plotOffset.bottom) + "px;";
                if (p.charAt(1) == "e")
                    pos += "right:" + (m[0] + plotOffset.right) + "px;";
                else if (p.charAt(1) == "w")
                    pos += "left:" + (m[0] + plotOffset.left) + "px;";
                var legend = $(
                    '<div class="legend">' +
                    table.replace('style="', 'style="position:absolute;' + pos + ";") +
                    "</div>"
                ).appendTo(placeholder);
                if (options.legend.backgroundOpacity != 0) {
                    var c = options.legend.backgroundColor;
                    if (c == null) {
                        c = options.grid.backgroundColor;
                        if (c && typeof c == "string") c = $.color.parse(c);
                        else c = $.color.extract(legend, "background-color");
                        c.a = 1;
                        c = c.toString();
                    }
                    var div = legend.children();
                    $(
                            '<div style="position:absolute;width:' +
                            div.width() +
                            "px;height:" +
                            div.height() +
                            "px;" +
                            pos +
                            "background-color:" +
                            c +
                            ';"> </div>'
                        )
                        .prependTo(legend)
                        .css("opacity", options.legend.backgroundOpacity);
                }
            }
        }
        var highlights = [],
            redrawTimeout = null;

        function findNearbyItem(mouseX, mouseY, seriesFilter) {
            var maxDistance = options.grid.mouseActiveRadius,
                smallestDistance = maxDistance * maxDistance + 1,
                item = null,
                foundPoint = false,
                i,
                j,
                ps;
            for (i = series.length - 1; i >= 0; --i) {
                if (!seriesFilter(series[i])) continue;
                var s = series[i],
                    axisx = s.xaxis,
                    axisy = s.yaxis,
                    points = s.datapoints.points,
                    mx = axisx.c2p(mouseX),
                    my = axisy.c2p(mouseY),
                    maxx = maxDistance / axisx.scale,
                    maxy = maxDistance / axisy.scale;
                ps = s.datapoints.pointsize;
                if (axisx.options.inverseTransform) maxx = Number.MAX_VALUE;
                if (axisy.options.inverseTransform) maxy = Number.MAX_VALUE;
                if (s.lines.show || s.points.show) {
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j],
                            y = points[j + 1];
                        if (x == null) continue;
                        if (
                            x - mx > maxx ||
                            x - mx < -maxx ||
                            y - my > maxy ||
                            y - my < -maxy
                        )
                            continue;
                        var dx = Math.abs(axisx.p2c(x) - mouseX),
                            dy = Math.abs(axisy.p2c(y) - mouseY),
                            dist = dx * dx + dy * dy;
                        if (dist < smallestDistance) {
                            smallestDistance = dist;
                            item = [i, j / ps];
                        }
                    }
                }
                if (s.bars.show && !item) {
                    var barLeft, barRight;
                    switch (s.bars.align) {
                        case "left":
                            barLeft = 0;
                            break;
                        case "right":
                            barLeft = -s.bars.barWidth;
                            break;
                        default:
                            barLeft = -s.bars.barWidth / 2;
                    }
                    barRight = barLeft + s.bars.barWidth;
                    for (j = 0; j < points.length; j += ps) {
                        var x = points[j],
                            y = points[j + 1],
                            b = points[j + 2];
                        if (x == null) continue;
                        if (
                            series[i].bars.horizontal ?
                            mx <= Math.max(b, x) &&
                            mx >= Math.min(b, x) &&
                            my >= y + barLeft &&
                            my <= y + barRight :
                            mx >= x + barLeft &&
                            mx <= x + barRight &&
                            my >= Math.min(b, y) &&
                            my <= Math.max(b, y)
                        )
                            item = [i, j / ps];
                    }
                }
            }
            if (item) {
                i = item[0];
                j = item[1];
                ps = series[i].datapoints.pointsize;
                return {
                    datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),
                    dataIndex: j,
                    series: series[i],
                    seriesIndex: i,
                };
            }
            return null;
        }

        function onMouseMove(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e, function(s) {
                    return s["hoverable"] != false;
                });
        }

        function onMouseLeave(e) {
            if (options.grid.hoverable)
                triggerClickHoverEvent("plothover", e, function(s) {
                    return false;
                });
        }

        function onClick(e) {
            triggerClickHoverEvent("plotclick", e, function(s) {
                return s["clickable"] != false;
            });
        }

        function triggerClickHoverEvent(eventname, event, seriesFilter) {
            var offset = eventHolder.offset(),
                canvasX = event.pageX - offset.left - plotOffset.left,
                canvasY = event.pageY - offset.top - plotOffset.top,
                pos = canvasToAxisCoords({
                    left: canvasX,
                    top: canvasY
                });
            pos.pageX = event.pageX;
            pos.pageY = event.pageY;
            var item = findNearbyItem(canvasX, canvasY, seriesFilter);
            if (item) {
                item.pageX = parseInt(
                    item.series.xaxis.p2c(item.datapoint[0]) +
                    offset.left +
                    plotOffset.left,
                    10
                );
                item.pageY = parseInt(
                    item.series.yaxis.p2c(item.datapoint[1]) +
                    offset.top +
                    plotOffset.top,
                    10
                );
            }
            if (options.grid.autoHighlight) {
                for (var i = 0; i < highlights.length; ++i) {
                    var h = highlights[i];
                    if (
                        h.auto == eventname &&
                        !(
                            item &&
                            h.series == item.series &&
                            h.point[0] == item.datapoint[0] &&
                            h.point[1] == item.datapoint[1]
                        )
                    )
                        unhighlight(h.series, h.point);
                }
                if (item) highlight(item.series, item.datapoint, eventname);
            }
            placeholder.trigger(eventname, [pos, item]);
        }

        function triggerRedrawOverlay() {
            var t = options.interaction.redrawOverlayInterval;
            if (t == -1) {
                drawOverlay();
                return;
            }
            if (!redrawTimeout) redrawTimeout = setTimeout(drawOverlay, t);
        }

        function drawOverlay() {
            redrawTimeout = null;
            octx.save();
            overlay.clear();
            octx.translate(plotOffset.left, plotOffset.top);
            var i, hi;
            for (i = 0; i < highlights.length; ++i) {
                hi = highlights[i];
                if (hi.series.bars.show) drawBarHighlight(hi.series, hi.point);
                else drawPointHighlight(hi.series, hi.point);
            }
            octx.restore();
            executeHooks(hooks.drawOverlay, [octx]);
        }

        function highlight(s, point, auto) {
            if (typeof s == "number") s = series[s];
            if (typeof point == "number") {
                var ps = s.datapoints.pointsize;
                point = s.datapoints.points.slice(ps * point, ps * (point + 1));
            }
            var i = indexOfHighlight(s, point);
            if (i == -1) {
                highlights.push({
                    series: s,
                    point: point,
                    auto: auto
                });
                triggerRedrawOverlay();
            } else if (!auto) highlights[i].auto = false;
        }

        function unhighlight(s, point) {
            if (s == null && point == null) {
                highlights = [];
                triggerRedrawOverlay();
                return;
            }
            if (typeof s == "number") s = series[s];
            if (typeof point == "number") {
                var ps = s.datapoints.pointsize;
                point = s.datapoints.points.slice(ps * point, ps * (point + 1));
            }
            var i = indexOfHighlight(s, point);
            if (i != -1) {
                highlights.splice(i, 1);
                triggerRedrawOverlay();
            }
        }

        function indexOfHighlight(s, p) {
            for (var i = 0; i < highlights.length; ++i) {
                var h = highlights[i];
                if (h.series == s && h.point[0] == p[0] && h.point[1] == p[1]) return i;
            }
            return -1;
        }

        function drawPointHighlight(series, point) {
            var x = point[0],
                y = point[1],
                axisx = series.xaxis,
                axisy = series.yaxis,
                highlightColor =
                typeof series.highlightColor === "string" ?
                series.highlightColor :
                $.color.parse(series.color).scale("a", 0.5).toString();
            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)
                return;
            var pointRadius = series.points.radius + series.points.lineWidth / 2;
            octx.lineWidth = pointRadius;
            octx.strokeStyle = highlightColor;
            var radius = 1.5 * pointRadius;
            x = axisx.p2c(x);
            y = axisy.p2c(y);
            octx.beginPath();
            if (series.points.symbol == "circle")
                octx.arc(x, y, radius, 0, 2 * Math.PI, false);
            else series.points.symbol(octx, x, y, radius, false);
            octx.closePath();
            octx.stroke();
        }

        function drawBarHighlight(series, point) {
            var highlightColor =
                typeof series.highlightColor === "string" ?
                series.highlightColor :
                $.color.parse(series.color).scale("a", 0.5).toString(),
                fillStyle = highlightColor,
                barLeft;
            switch (series.bars.align) {
                case "left":
                    barLeft = 0;
                    break;
                case "right":
                    barLeft = -series.bars.barWidth;
                    break;
                default:
                    barLeft = -series.bars.barWidth / 2;
            }
            octx.lineWidth = series.bars.lineWidth;
            octx.strokeStyle = highlightColor;
            drawBar(
                point[0],
                point[1],
                point[2] || 0,
                barLeft,
                barLeft + series.bars.barWidth,
                function() {
                    return fillStyle;
                },
                series.xaxis,
                series.yaxis,
                octx,
                series.bars.horizontal,
                series.bars.lineWidth
            );
        }

        function getColorOrGradient(spec, bottom, top, defaultColor) {
            if (typeof spec == "string") return spec;
            else {
                var gradient = ctx.createLinearGradient(0, top, 0, bottom);
                for (var i = 0, l = spec.colors.length; i < l; ++i) {
                    var c = spec.colors[i];
                    if (typeof c != "string") {
                        var co = $.color.parse(defaultColor);
                        if (c.brightness != null) co = co.scale("rgb", c.brightness);
                        if (c.opacity != null) co.a *= c.opacity;
                        c = co.toString();
                    }
                    gradient.addColorStop(i / (l - 1), c);
                }
                return gradient;
            }
        }
    }
    $.plot = function(placeholder, data, options) {
        var plot = new Plot($(placeholder), data, options, $.plot.plugins);
        return plot;
    };
    $.plot.version = "0.8.3";
    $.plot.plugins = [];
    $.fn.plot = function(data, options) {
        return this.each(function() {
            $.plot(this, data, options);
        });
    };

    function floorInBase(n, base) {
        return base * Math.floor(n / base);
    }
})(jQuery);

/*!
 * Flot plugin for rendering pie charts.
 * Copyright (c) 2007-2013 IOLA and Ole Laursen.
 * Licensed under the MIT license.
 * Created by Brian Medendorp
 * Updated with contributions from btburnett3, Anthony Aragues and Xavi Ivars
 */
(function($) {
    var REDRAW_ATTEMPTS = 10;
    var REDRAW_SHRINK = 0.95;

    function init(plot) {
        var canvas = null,
            target = null,
            options = null,
            maxRadius = null,
            centerLeft = null,
            centerTop = null,
            processed = false,
            ctx = null;
        var highlights = [];
        plot.hooks.processOptions.push(function(plot, options) {
            if (options.series.pie.show) {
                options.grid.show = false;
                if (options.series.pie.label.show == "auto") {
                    if (options.legend.show) {
                        options.series.pie.label.show = false;
                    } else {
                        options.series.pie.label.show = true;
                    }
                }
                if (options.series.pie.radius == "auto") {
                    if (options.series.pie.label.show) {
                        options.series.pie.radius = 3 / 4;
                    } else {
                        options.series.pie.radius = 1;
                    }
                }
                if (options.series.pie.tilt > 1) {
                    options.series.pie.tilt = 1;
                } else if (options.series.pie.tilt < 0) {
                    options.series.pie.tilt = 0;
                }
            }
        });
        plot.hooks.bindEvents.push(function(plot, eventHolder) {
            var options = plot.getOptions();
            if (options.series.pie.show) {
                if (options.grid.hoverable) {
                    eventHolder.unbind("mousemove").mousemove(onMouseMove);
                }
                if (options.grid.clickable) {
                    eventHolder.unbind("click").click(onClick);
                }
            }
        });
        plot.hooks.processDatapoints.push(function(
            plot,
            series,
            data,
            datapoints
        ) {
            var options = plot.getOptions();
            if (options.series.pie.show) {
                processDatapoints(plot, series, data, datapoints);
            }
        });
        plot.hooks.drawOverlay.push(function(plot, octx) {
            var options = plot.getOptions();
            if (options.series.pie.show) {
                drawOverlay(plot, octx);
            }
        });
        plot.hooks.draw.push(function(plot, newCtx) {
            var options = plot.getOptions();
            if (options.series.pie.show) {
                draw(plot, newCtx);
            }
        });

        function processDatapoints(plot, series, datapoints) {
            if (!processed) {
                processed = true;
                canvas = plot.getCanvas();
                target = $(canvas).parent();
                options = plot.getOptions();
                plot.setData(combine(plot.getData()));
            }
        }

        function combine(data) {
            var total = 0,
                combined = 0,
                numCombined = 0,
                color = options.series.pie.combine.color,
                newdata = [];
            for (var i = 0; i < data.length; ++i) {
                var value = data[i].data;
                if ($.isArray(value) && value.length == 1) {
                    value = value[0];
                }
                if ($.isArray(value)) {
                    if (!isNaN(parseFloat(value[1])) && isFinite(value[1])) {
                        value[1] = +value[1];
                    } else {
                        value[1] = 0;
                    }
                } else if (!isNaN(parseFloat(value)) && isFinite(value)) {
                    value = [1, +value];
                } else {
                    value = [1, 0];
                }
                data[i].data = [value];
            }
            for (var i = 0; i < data.length; ++i) {
                total += data[i].data[0][1];
            }
            for (var i = 0; i < data.length; ++i) {
                var value = data[i].data[0][1];
                if (value / total <= options.series.pie.combine.threshold) {
                    combined += value;
                    numCombined++;
                    if (!color) {
                        color = data[i].color;
                    }
                }
            }
            for (var i = 0; i < data.length; ++i) {
                var value = data[i].data[0][1];
                if (
                    numCombined < 2 ||
                    value / total > options.series.pie.combine.threshold
                ) {
                    newdata.push(
                        $.extend(data[i], {
                            data: [
                                [1, value]
                            ],
                            color: data[i].color,
                            label: data[i].label,
                            angle: (value * Math.PI * 2) / total,
                            percent: value / (total / 100),
                        })
                    );
                }
            }
            if (numCombined > 1) {
                newdata.push({
                    data: [
                        [1, combined]
                    ],
                    color: color,
                    label: options.series.pie.combine.label,
                    angle: (combined * Math.PI * 2) / total,
                    percent: combined / (total / 100),
                });
            }
            return newdata;
        }

        function draw(plot, newCtx) {
            if (!target) {
                return;
            }
            var canvasWidth = plot.getPlaceholder().width(),
                canvasHeight = plot.getPlaceholder().height(),
                legendWidth =
                target.children().filter(".legend").children().width() || 0;
            ctx = newCtx;
            processed = false;
            maxRadius =
                Math.min(canvasWidth, canvasHeight / options.series.pie.tilt) / 2;
            centerTop = canvasHeight / 2 + options.series.pie.offset.top;
            centerLeft = canvasWidth / 2;
            if (options.series.pie.offset.left == "auto") {
                if (options.legend.position.match("w")) {
                    centerLeft += legendWidth / 2;
                } else {
                    centerLeft -= legendWidth / 2;
                }
                if (centerLeft < maxRadius) {
                    centerLeft = maxRadius;
                } else if (centerLeft > canvasWidth - maxRadius) {
                    centerLeft = canvasWidth - maxRadius;
                }
            } else {
                centerLeft += options.series.pie.offset.left;
            }
            var slices = plot.getData(),
                attempts = 0;
            do {
                if (attempts > 0) {
                    maxRadius *= REDRAW_SHRINK;
                }
                attempts += 1;
                clear();
                if (options.series.pie.tilt <= 0.8) {
                    drawShadow();
                }
            } while (!drawPie() && attempts < REDRAW_ATTEMPTS);
            if (attempts >= REDRAW_ATTEMPTS) {
                clear();
                target.prepend(
                    "<div class='error'>Could not draw pie with labels contained inside canvas</div>"
                );
            }
            if (plot.setSeries && plot.insertLegend) {
                plot.setSeries(slices);
                plot.insertLegend();
            }

            function clear() {
                ctx.clearRect(0, 0, canvasWidth, canvasHeight);
                target.children().filter(".pieLabel, .pieLabelBackground").remove();
            }

            function drawShadow() {
                var shadowLeft = options.series.pie.shadow.left;
                var shadowTop = options.series.pie.shadow.top;
                var edge = 10;
                var alpha = options.series.pie.shadow.alpha;
                var radius =
                    options.series.pie.radius > 1 ?
                    options.series.pie.radius :
                    maxRadius * options.series.pie.radius;
                if (
                    radius >= canvasWidth / 2 - shadowLeft ||
                    radius * options.series.pie.tilt >= canvasHeight / 2 - shadowTop ||
                    radius <= edge
                ) {
                    return;
                }
                ctx.save();
                ctx.translate(shadowLeft, shadowTop);
                ctx.globalAlpha = alpha;
                ctx.fillStyle = "#000";
                ctx.translate(centerLeft, centerTop);
                ctx.scale(1, options.series.pie.tilt);
                for (var i = 1; i <= edge; i++) {
                    ctx.beginPath();
                    ctx.arc(0, 0, radius, 0, Math.PI * 2, false);
                    ctx.fill();
                    radius -= i;
                }
                ctx.restore();
            }

            function drawPie() {
                var startAngle = Math.PI * options.series.pie.startAngle;
                var radius =
                    options.series.pie.radius > 1 ?
                    options.series.pie.radius :
                    maxRadius * options.series.pie.radius;
                ctx.save();
                ctx.translate(centerLeft, centerTop);
                ctx.scale(1, options.series.pie.tilt);
                ctx.save();
                var currentAngle = startAngle;
                for (var i = 0; i < slices.length; ++i) {
                    slices[i].startAngle = currentAngle;
                    drawSlice(slices[i].angle, slices[i].color, true);
                }
                ctx.restore();
                if (options.series.pie.stroke.width > 0) {
                    ctx.save();
                    ctx.lineWidth = options.series.pie.stroke.width;
                    currentAngle = startAngle;
                    for (var i = 0; i < slices.length; ++i) {
                        drawSlice(slices[i].angle, options.series.pie.stroke.color, false);
                    }
                    ctx.restore();
                }
                drawDonutHole(ctx);
                ctx.restore();
                if (options.series.pie.label.show) {
                    return drawLabels();
                } else return true;

                function drawSlice(angle, color, fill) {
                    if (angle <= 0 || isNaN(angle)) {
                        return;
                    }
                    if (fill) {
                        ctx.fillStyle = color;
                    } else {
                        ctx.strokeStyle = color;
                        ctx.lineJoin = "round";
                    }
                    ctx.beginPath();
                    if (Math.abs(angle - Math.PI * 2) > 1e-9) {
                        ctx.moveTo(0, 0);
                    }
                    ctx.arc(0, 0, radius, currentAngle, currentAngle + angle / 2, false);
                    ctx.arc(
                        0,
                        0,
                        radius,
                        currentAngle + angle / 2,
                        currentAngle + angle,
                        false
                    );
                    ctx.closePath();
                    currentAngle += angle;
                    if (fill) {
                        ctx.fill();
                    } else {
                        ctx.stroke();
                    }
                }

                function drawLabels() {
                    var currentAngle = startAngle;
                    var radius =
                        options.series.pie.label.radius > 1 ?
                        options.series.pie.label.radius :
                        maxRadius * options.series.pie.label.radius;
                    for (var i = 0; i < slices.length; ++i) {
                        if (slices[i].percent >= options.series.pie.label.threshold * 100) {
                            if (!drawLabel(slices[i], currentAngle, i)) {
                                return false;
                            }
                        }
                        currentAngle += slices[i].angle;
                    }
                    return true;

                    function drawLabel(slice, startAngle, index) {
                        if (slice.data[0][1] == 0) {
                            return true;
                        }
                        var lf = options.legend.labelFormatter,
                            text,
                            plf = options.series.pie.label.formatter;
                        if (lf) {
                            text = lf(slice.label, slice);
                        } else {
                            text = slice.label;
                        }
                        if (plf) {
                            text = plf(text, slice);
                        }
                        var halfAngle = (startAngle + slice.angle + startAngle) / 2;
                        var x = centerLeft + Math.round(Math.cos(halfAngle) * radius);
                        var y =
                            centerTop +
                            Math.round(Math.sin(halfAngle) * radius) *
                            options.series.pie.tilt;
                        var html =
                            "<span class='pieLabel' id='pieLabel" +
                            index +
                            "' style='position:absolute;top:" +
                            y +
                            "px;left:" +
                            x +
                            "px;'>" +
                            text +
                            "</span>";
                        target.append(html);
                        var label = target.children("#pieLabel" + index);
                        var labelTop = y - label.height() / 2;
                        var labelLeft = x - label.width() / 2;
                        label.css("top", labelTop);
                        label.css("left", labelLeft);
                        if (
                            0 - labelTop > 0 ||
                            0 - labelLeft > 0 ||
                            canvasHeight - (labelTop + label.height()) < 0 ||
                            canvasWidth - (labelLeft + label.width()) < 0
                        ) {
                            return false;
                        }
                        if (options.series.pie.label.background.opacity != 0) {
                            var c = options.series.pie.label.background.color;
                            if (c == null) {
                                c = slice.color;
                            }
                            var pos = "top:" + labelTop + "px;left:" + labelLeft + "px;";
                            $(
                                    "<div class='pieLabelBackground' style='position:absolute;width:" +
                                    label.width() +
                                    "px;height:" +
                                    label.height() +
                                    "px;" +
                                    pos +
                                    "background-color:" +
                                    c +
                                    ";'></div>"
                                )
                                .css("opacity", options.series.pie.label.background.opacity)
                                .insertBefore(label);
                        }
                        return true;
                    }
                }
            }
        }

        function drawDonutHole(layer) {
            if (options.series.pie.innerRadius > 0) {
                layer.save();
                var innerRadius =
                    options.series.pie.innerRadius > 1 ?
                    options.series.pie.innerRadius :
                    maxRadius * options.series.pie.innerRadius;
                layer.globalCompositeOperation = "destination-out";
                layer.beginPath();
                layer.fillStyle = options.series.pie.stroke.color;
                layer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);
                layer.fill();
                layer.closePath();
                layer.restore();
                layer.save();
                layer.beginPath();
                layer.strokeStyle = options.series.pie.stroke.color;
                layer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);
                layer.stroke();
                layer.closePath();
                layer.restore();
            }
        }

        function isPointInPoly(poly, pt) {
            for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)
                ((poly[i][1] <= pt[1] && pt[1] < poly[j][1]) ||
                    (poly[j][1] <= pt[1] && pt[1] < poly[i][1])) &&
                pt[0] <
                ((poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1])) /
                (poly[j][1] - poly[i][1]) +
                poly[i][0] &&
                (c = !c);
            return c;
        }

        function findNearbySlice(mouseX, mouseY) {
            var slices = plot.getData(),
                options = plot.getOptions(),
                radius =
                options.series.pie.radius > 1 ?
                options.series.pie.radius :
                maxRadius * options.series.pie.radius,
                x,
                y;
            for (var i = 0; i < slices.length; ++i) {
                var s = slices[i];
                if (s.pie.show) {
                    ctx.save();
                    ctx.beginPath();
                    ctx.moveTo(0, 0);
                    ctx.arc(
                        0,
                        0,
                        radius,
                        s.startAngle,
                        s.startAngle + s.angle / 2,
                        false
                    );
                    ctx.arc(
                        0,
                        0,
                        radius,
                        s.startAngle + s.angle / 2,
                        s.startAngle + s.angle,
                        false
                    );
                    ctx.closePath();
                    x = mouseX - centerLeft;
                    y = mouseY - centerTop;
                    if (ctx.isPointInPath) {
                        if (ctx.isPointInPath(mouseX - centerLeft, mouseY - centerTop)) {
                            ctx.restore();
                            return {
                                datapoint: [s.percent, s.data],
                                dataIndex: 0,
                                series: s,
                                seriesIndex: i,
                            };
                        }
                    } else {
                        var p1X = radius * Math.cos(s.startAngle),
                            p1Y = radius * Math.sin(s.startAngle),
                            p2X = radius * Math.cos(s.startAngle + s.angle / 4),
                            p2Y = radius * Math.sin(s.startAngle + s.angle / 4),
                            p3X = radius * Math.cos(s.startAngle + s.angle / 2),
                            p3Y = radius * Math.sin(s.startAngle + s.angle / 2),
                            p4X = radius * Math.cos(s.startAngle + s.angle / 1.5),
                            p4Y = radius * Math.sin(s.startAngle + s.angle / 1.5),
                            p5X = radius * Math.cos(s.startAngle + s.angle),
                            p5Y = radius * Math.sin(s.startAngle + s.angle),
                            arrPoly = [
                                [0, 0],
                                [p1X, p1Y],
                                [p2X, p2Y],
                                [p3X, p3Y],
                                [p4X, p4Y],
                                [p5X, p5Y],
                            ],
                            arrPoint = [x, y];
                        if (isPointInPoly(arrPoly, arrPoint)) {
                            ctx.restore();
                            return {
                                datapoint: [s.percent, s.data],
                                dataIndex: 0,
                                series: s,
                                seriesIndex: i,
                            };
                        }
                    }
                    ctx.restore();
                }
            }
            return null;
        }

        function onMouseMove(e) {
            triggerClickHoverEvent("plothover", e);
        }

        function onClick(e) {
            triggerClickHoverEvent("plotclick", e);
        }

        function triggerClickHoverEvent(eventname, e) {
            var offset = plot.offset();
            var canvasX = parseInt(e.pageX - offset.left);
            var canvasY = parseInt(e.pageY - offset.top);
            var item = findNearbySlice(canvasX, canvasY);
            if (options.grid.autoHighlight) {
                for (var i = 0; i < highlights.length; ++i) {
                    var h = highlights[i];
                    if (h.auto == eventname && !(item && h.series == item.series)) {
                        unhighlight(h.series);
                    }
                }
            }
            if (item) {
                highlight(item.series, eventname);
            }
            var pos = {
                pageX: e.pageX,
                pageY: e.pageY
            };
            target.trigger(eventname, [pos, item]);
        }

        function highlight(s, auto) {
            var i = indexOfHighlight(s);
            if (i == -1) {
                highlights.push({
                    series: s,
                    auto: auto
                });
                plot.triggerRedrawOverlay();
            } else if (!auto) {
                highlights[i].auto = false;
            }
        }

        function unhighlight(s) {
            if (s == null) {
                highlights = [];
                plot.triggerRedrawOverlay();
            }
            var i = indexOfHighlight(s);
            if (i != -1) {
                highlights.splice(i, 1);
                plot.triggerRedrawOverlay();
            }
        }

        function indexOfHighlight(s) {
            for (var i = 0; i < highlights.length; ++i) {
                var h = highlights[i];
                if (h.series == s) return i;
            }
            return -1;
        }

        function drawOverlay(plot, octx) {
            var options = plot.getOptions();
            var radius =
                options.series.pie.radius > 1 ?
                options.series.pie.radius :
                maxRadius * options.series.pie.radius;
            octx.save();
            octx.translate(centerLeft, centerTop);
            octx.scale(1, options.series.pie.tilt);
            for (var i = 0; i < highlights.length; ++i) {
                drawHighlight(highlights[i].series);
            }
            drawDonutHole(octx);
            octx.restore();

            function drawHighlight(series) {
                if (series.angle <= 0 || isNaN(series.angle)) {
                    return;
                }
                octx.fillStyle =
                    "rgba(255, 255, 255, " + options.series.pie.highlight.opacity + ")";
                octx.beginPath();
                if (Math.abs(series.angle - Math.PI * 2) > 1e-9) {
                    octx.moveTo(0, 0);
                }
                octx.arc(
                    0,
                    0,
                    radius,
                    series.startAngle,
                    series.startAngle + series.angle / 2,
                    false
                );
                octx.arc(
                    0,
                    0,
                    radius,
                    series.startAngle + series.angle / 2,
                    series.startAngle + series.angle,
                    false
                );
                octx.closePath();
                octx.fill();
            }
        }
    }
    var options = {
        series: {
            pie: {
                show: false,
                radius: "auto",
                innerRadius: 0,
                startAngle: 3 / 2,
                tilt: 1,
                shadow: {
                    left: 5,
                    top: 15,
                    alpha: 0.02
                },
                offset: {
                    top: 0,
                    left: "auto"
                },
                stroke: {
                    color: "#fff",
                    width: 1
                },
                label: {
                    show: "auto",
                    formatter: function(label, slice) {
                        return (
                            "<div style='font-size:x-small;text-align:center;padding:2px;color:" +
                            slice.color +
                            ";'>" +
                            label +
                            "<br/>" +
                            Math.round(slice.percent) +
                            "%</div>"
                        );
                    },
                    radius: 1,
                    background: {
                        color: null,
                        opacity: 0
                    },
                    threshold: 0,
                },
                combine: {
                    threshold: -1,
                    color: null,
                    label: "Other"
                },
                highlight: {
                    opacity: 0.5
                },
            },
        },
    };
    $.plot.plugins.push({
        init: init,
        options: options,
        name: "pie",
        version: "1.1",
    });
})(jQuery);

/*!
 * Flot plugin for automatically redrawing plots as the placeholder resizes.
 * Copyright (c) 2007-2013 IOLA and Ole Laursen.
 * Licensed under the MIT license.
 * Inline dependency:
 * jQuery resize event - v1.1 - 3/14/2010
 * http://benalman.com/projects/jquery-resize-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function($, e, t) {
    "$:nomunge";
    var i = [],
        n = ($.resize = $.extend($.resize, {})),
        a,
        r = false,
        s = "setTimeout",
        u = "resize",
        m = u + "-special-event",
        o = "pendingDelay",
        l = "activeDelay",
        f = "throttleWindow";
    n[o] = 200;
    n[l] = 20;
    n[f] = true;
    $.event.special[u] = {
        setup: function() {
            if (!n[f] && this[s]) {
                return false;
            }
            var e = $(this);
            i.push(this);
            e.data(m, {
                w: e.width(),
                h: e.height()
            });
            if (i.length === 1) {
                a = t;
                h();
            }
        },
        teardown: function() {
            if (!n[f] && this[s]) {
                return false;
            }
            var e = $(this);
            for (var t = i.length - 1; t >= 0; t--) {
                if (i[t] == this) {
                    i.splice(t, 1);
                    break;
                }
            }
            e.removeData(m);
            if (!i.length) {
                if (r) {
                    cancelAnimationFrame(a);
                } else {
                    clearTimeout(a);
                }
                a = null;
            }
        },
        add: function(e) {
            if (!n[f] && this[s]) {
                return false;
            }
            var i;

            function a(e, n, a) {
                var r = $(this),
                    s = r.data(m) || {};
                s.w = n !== t ? n : r.width();
                s.h = a !== t ? a : r.height();
                i.apply(this, arguments);
            }
            if ($.isFunction(e)) {
                i = e;
                return a;
            } else {
                i = e.handler;
                e.handler = a;
            }
        },
    };

    function h(t) {
        if (r === true) {
            r = t || 1;
        }
        for (var s = i.length - 1; s >= 0; s--) {
            var l = $(i[s]);
            if (l[0] == e || l.is(":visible")) {
                var f = l.width(),
                    c = l.height(),
                    d = l.data(m);
                if (d && (f !== d.w || c !== d.h)) {
                    l.trigger(u, [(d.w = f), (d.h = c)]);
                    r = t || true;
                }
            } else {
                d = l.data(m);
                d.w = 0;
                d.h = 0;
            }
        }
        if (a !== null) {
            if (r && (t == null || t - r < 1e3)) {
                a = e.requestAnimationFrame(h);
            } else {
                a = setTimeout(h, n[o]);
                r = false;
            }
        }
    }
    if (!e.requestAnimationFrame) {
        e.requestAnimationFrame = (function() {
            return (
                e.webkitRequestAnimationFrame ||
                e.mozRequestAnimationFrame ||
                e.oRequestAnimationFrame ||
                e.msRequestAnimationFrame ||
                function(t, i) {
                    return e.setTimeout(function() {
                        t(new Date().getTime());
                    }, n[l]);
                }
            );
        })();
    }
    if (!e.cancelAnimationFrame) {
        e.cancelAnimationFrame = (function() {
            return (
                e.webkitCancelRequestAnimationFrame ||
                e.mozCancelRequestAnimationFrame ||
                e.oCancelRequestAnimationFrame ||
                e.msCancelRequestAnimationFrame ||
                clearTimeout
            );
        })();
    }
})(jQuery, this);
(function($) {
    var options = {};

    function init(plot) {
        function onResize() {
            var placeholder = plot.getPlaceholder();
            if (placeholder.width() == 0 || placeholder.height() == 0) return;
            plot.resize();
            plot.setupGrid();
            plot.draw();
        }

        function bindEvents(plot, eventHolder) {
            plot.getPlaceholder().resize(onResize);
        }

        function shutdown(plot, eventHolder) {
            plot.getPlaceholder().unbind("resize", onResize);
        }
        plot.hooks.bindEvents.push(bindEvents);
        plot.hooks.shutdown.push(shutdown);
    }
    $.plot.plugins.push({
        init: init,
        options: options,
        name: "resize",
        version: "1.0",
    });
})(jQuery);

/*!
 * Flot plugin for stacking data sets rather than overlyaing them.
 * Copyright (c) 2007-2013 IOLA and Ole Laursen.
 * Licensed under the MIT license.
 */
(function($) {
    var options = {
        series: {
            stack: null
        }
    };

    function init(plot) {
        function findMatchingSeries(s, allseries) {
            var res = null;
            for (var i = 0; i < allseries.length; ++i) {
                if (s == allseries[i]) break;
                if (allseries[i].stack == s.stack) res = allseries[i];
            }
            return res;
        }

        function stackData(plot, s, datapoints) {
            if (s.stack == null || s.stack === false) return;
            var other = findMatchingSeries(s, plot.getData());
            if (!other) return;
            var ps = datapoints.pointsize,
                points = datapoints.points,
                otherps = other.datapoints.pointsize,
                otherpoints = other.datapoints.points,
                newpoints = [],
                px,
                py,
                intery,
                qx,
                qy,
                bottom,
                withlines = s.lines.show,
                horizontal = s.bars.horizontal,
                withbottom =
                ps > 2 &&
                (horizontal ? datapoints.format[2].x : datapoints.format[2].y),
                withsteps = withlines && s.lines.steps,
                fromgap = true,
                keyOffset = horizontal ? 1 : 0,
                accumulateOffset = horizontal ? 0 : 1,
                i = 0,
                j = 0,
                l,
                m;
            while (true) {
                if (i >= points.length) break;
                l = newpoints.length;
                if (points[i] == null) {
                    for (m = 0; m < ps; ++m) newpoints.push(points[i + m]);
                    i += ps;
                } else if (j >= otherpoints.length) {
                    if (!withlines) {
                        for (m = 0; m < ps; ++m) newpoints.push(points[i + m]);
                    }
                    i += ps;
                } else if (otherpoints[j] == null) {
                    for (m = 0; m < ps; ++m) newpoints.push(null);
                    fromgap = true;
                    j += otherps;
                } else {
                    px = points[i + keyOffset];
                    py = points[i + accumulateOffset];
                    qx = otherpoints[j + keyOffset];
                    qy = otherpoints[j + accumulateOffset];
                    bottom = 0;
                    if (px == qx) {
                        for (m = 0; m < ps; ++m) newpoints.push(points[i + m]);
                        newpoints[l + accumulateOffset] += qy;
                        bottom = qy;
                        i += ps;
                        j += otherps;
                    } else if (px > qx) {
                        if (withlines && i > 0 && points[i - ps] != null) {
                            intery =
                                py +
                                ((points[i - ps + accumulateOffset] - py) * (qx - px)) /
                                (points[i - ps + keyOffset] - px);
                            newpoints.push(qx);
                            newpoints.push(intery + qy);
                            for (m = 2; m < ps; ++m) newpoints.push(points[i + m]);
                            bottom = qy;
                        }
                        j += otherps;
                    } else {
                        if (fromgap && withlines) {
                            i += ps;
                            continue;
                        }
                        for (m = 0; m < ps; ++m) newpoints.push(points[i + m]);
                        if (withlines && j > 0 && otherpoints[j - otherps] != null)
                            bottom =
                            qy +
                            ((otherpoints[j - otherps + accumulateOffset] - qy) *
                                (px - qx)) /
                            (otherpoints[j - otherps + keyOffset] - qx);
                        newpoints[l + accumulateOffset] += bottom;
                        i += ps;
                    }
                    fromgap = false;
                    if (l != newpoints.length && withbottom) newpoints[l + 2] += bottom;
                }
                if (
                    withsteps &&
                    l != newpoints.length &&
                    l > 0 &&
                    newpoints[l] != null &&
                    newpoints[l] != newpoints[l - ps] &&
                    newpoints[l + 1] != newpoints[l - ps + 1]
                ) {
                    for (m = 0; m < ps; ++m) newpoints[l + ps + m] = newpoints[l + m];
                    newpoints[l + 1] = newpoints[l - ps + 1];
                }
            }
            datapoints.points = newpoints;
        }
        plot.hooks.processDatapoints.push(stackData);
    }
    $.plot.plugins.push({
        init: init,
        options: options,
        name: "stack",
        version: "1.2",
    });
})(jQuery);

/*
 * Pretty handling of time axes.
 *
 * Copyright (c) 2007-2013 IOLA and Ole Laursen.
 * Licensed under the MIT license.
 *
 * Set axis.mode to "time" to enable. See the section "Time series data" in
 * API.txt for details.
 */
(function($) {
    var options = {
        xaxis: {
            timezone: null,
            timeformat: null,
            twelveHourClock: false,
            monthNames: null,
        },
    };

    function floorInBase(n, base) {
        return base * Math.floor(n / base);
    }

    function formatDate(d, fmt, monthNames, dayNames) {
        if (typeof d.strftime == "function") {
            return d.strftime(fmt);
        }
        var leftPad = function(n, pad) {
            n = "" + n;
            pad = "" + (pad == null ? "0" : pad);
            return n.length == 1 ? pad + n : n;
        };
        var r = [];
        var escape = false;
        var hours = d.getHours();
        var isAM = hours < 12;
        if (monthNames == null) {
            monthNames = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
            ];
        }
        if (dayNames == null) {
            dayNames = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        }
        var hours12;
        if (hours > 12) {
            hours12 = hours - 12;
        } else if (hours == 0) {
            hours12 = 12;
        } else {
            hours12 = hours;
        }
        for (var i = 0; i < fmt.length; ++i) {
            var c = fmt.charAt(i);
            if (escape) {
                switch (c) {
                    case "a":
                        c = "" + dayNames[d.getDay()];
                        break;
                    case "b":
                        c = "" + monthNames[d.getMonth()];
                        break;
                    case "d":
                        c = leftPad(d.getDate());
                        break;
                    case "e":
                        c = leftPad(d.getDate(), " ");
                        break;
                    case "h":
                    case "H":
                        c = leftPad(hours);
                        break;
                    case "I":
                        c = leftPad(hours12);
                        break;
                    case "l":
                        c = leftPad(hours12, " ");
                        break;
                    case "m":
                        c = leftPad(d.getMonth() + 1);
                        break;
                    case "M":
                        c = leftPad(d.getMinutes());
                        break;
                    case "q":
                        c = "" + (Math.floor(d.getMonth() / 3) + 1);
                        break;
                    case "S":
                        c = leftPad(d.getSeconds());
                        break;
                    case "y":
                        c = leftPad(d.getFullYear() % 100);
                        break;
                    case "Y":
                        c = "" + d.getFullYear();
                        break;
                    case "p":
                        c = isAM ? "" + "am" : "" + "pm";
                        break;
                    case "P":
                        c = isAM ? "" + "AM" : "" + "PM";
                        break;
                    case "w":
                        c = "" + d.getDay();
                        break;
                }
                r.push(c);
                escape = false;
            } else {
                if (c == "%") {
                    escape = true;
                } else {
                    r.push(c);
                }
            }
        }
        return r.join("");
    }

    function makeUtcWrapper(d) {
        function addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {
            sourceObj[sourceMethod] = function() {
                return targetObj[targetMethod].apply(targetObj, arguments);
            };
        }
        var utc = {
            date: d
        };
        if (d.strftime != undefined) {
            addProxyMethod(utc, "strftime", d, "strftime");
        }
        addProxyMethod(utc, "getTime", d, "getTime");
        addProxyMethod(utc, "setTime", d, "setTime");
        var props = [
            "Date",
            "Day",
            "FullYear",
            "Hours",
            "Milliseconds",
            "Minutes",
            "Month",
            "Seconds",
        ];
        for (var p = 0; p < props.length; p++) {
            addProxyMethod(utc, "get" + props[p], d, "getUTC" + props[p]);
            addProxyMethod(utc, "set" + props[p], d, "setUTC" + props[p]);
        }
        return utc;
    }

    function dateGenerator(ts, opts) {
        if (opts.timezone == "browser") {
            return new Date(ts);
        } else if (!opts.timezone || opts.timezone == "utc") {
            return makeUtcWrapper(new Date(ts));
        } else if (
            typeof timezoneJS != "undefined" &&
            typeof timezoneJS.Date != "undefined"
        ) {
            var d = new timezoneJS.Date();
            d.setTimezone(opts.timezone);
            d.setTime(ts);
            return d;
        } else {
            return makeUtcWrapper(new Date(ts));
        }
    }
    var timeUnitSize = {
        second: 1e3,
        minute: 60 * 1e3,
        hour: 60 * 60 * 1e3,
        day: 24 * 60 * 60 * 1e3,
        month: 30 * 24 * 60 * 60 * 1e3,
        quarter: 3 * 30 * 24 * 60 * 60 * 1e3,
        year: 365.2425 * 24 * 60 * 60 * 1e3,
    };
    var baseSpec = [
        [1, "second"],
        [2, "second"],
        [5, "second"],
        [10, "second"],
        [30, "second"],
        [1, "minute"],
        [2, "minute"],
        [5, "minute"],
        [10, "minute"],
        [30, "minute"],
        [1, "hour"],
        [2, "hour"],
        [4, "hour"],
        [8, "hour"],
        [12, "hour"],
        [1, "day"],
        [2, "day"],
        [3, "day"],
        [0.25, "month"],
        [0.5, "month"],
        [1, "month"],
        [2, "month"],
    ];
    var specMonths = baseSpec.concat([
        [3, "month"],
        [6, "month"],
        [1, "year"],
    ]);
    var specQuarters = baseSpec.concat([
        [1, "quarter"],
        [2, "quarter"],
        [1, "year"],
    ]);

    function init(plot) {
        plot.hooks.processOptions.push(function(plot, options) {
            $.each(plot.getAxes(), function(axisName, axis) {
                var opts = axis.options;
                if (opts.mode == "time") {
                    axis.tickGenerator = function(axis) {
                        var ticks = [];
                        var d = dateGenerator(axis.min, opts);
                        var minSize = 0;
                        var spec =
                            (opts.tickSize && opts.tickSize[1] === "quarter") ||
                            (opts.minTickSize && opts.minTickSize[1] === "quarter") ?
                            specQuarters :
                            specMonths;
                        if (opts.minTickSize != null) {
                            if (typeof opts.tickSize == "number") {
                                minSize = opts.tickSize;
                            } else {
                                minSize =
                                    opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];
                            }
                        }
                        for (var i = 0; i < spec.length - 1; ++i) {
                            if (
                                axis.delta <
                                (spec[i][0] * timeUnitSize[spec[i][1]] +
                                    spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) /
                                2 &&
                                spec[i][0] * timeUnitSize[spec[i][1]] >= minSize
                            ) {
                                break;
                            }
                        }
                        var size = spec[i][0];
                        var unit = spec[i][1];
                        if (unit == "year") {
                            if (opts.minTickSize != null && opts.minTickSize[1] == "year") {
                                size = Math.floor(opts.minTickSize[0]);
                            } else {
                                var magn = Math.pow(
                                    10,
                                    Math.floor(
                                        Math.log(axis.delta / timeUnitSize.year) / Math.LN10
                                    )
                                );
                                var norm = axis.delta / timeUnitSize.year / magn;
                                if (norm < 1.5) {
                                    size = 1;
                                } else if (norm < 3) {
                                    size = 2;
                                } else if (norm < 7.5) {
                                    size = 5;
                                } else {
                                    size = 10;
                                }
                                size *= magn;
                            }
                            if (size < 1) {
                                size = 1;
                            }
                        }
                        axis.tickSize = opts.tickSize || [size, unit];
                        var tickSize = axis.tickSize[0];
                        unit = axis.tickSize[1];
                        var step = tickSize * timeUnitSize[unit];
                        if (unit == "second") {
                            d.setSeconds(floorInBase(d.getSeconds(), tickSize));
                        } else if (unit == "minute") {
                            d.setMinutes(floorInBase(d.getMinutes(), tickSize));
                        } else if (unit == "hour") {
                            d.setHours(floorInBase(d.getHours(), tickSize));
                        } else if (unit == "month") {
                            d.setMonth(floorInBase(d.getMonth(), tickSize));
                        } else if (unit == "quarter") {
                            d.setMonth(3 * floorInBase(d.getMonth() / 3, tickSize));
                        } else if (unit == "year") {
                            d.setFullYear(floorInBase(d.getFullYear(), tickSize));
                        }
                        d.setMilliseconds(0);
                        if (step >= timeUnitSize.minute) {
                            d.setSeconds(0);
                        }
                        if (step >= timeUnitSize.hour) {
                            d.setMinutes(0);
                        }
                        if (step >= timeUnitSize.day) {
                            d.setHours(0);
                        }
                        if (step >= timeUnitSize.day * 4) {
                            d.setDate(1);
                        }
                        if (step >= timeUnitSize.month * 2) {
                            d.setMonth(floorInBase(d.getMonth(), 3));
                        }
                        if (step >= timeUnitSize.quarter * 2) {
                            d.setMonth(floorInBase(d.getMonth(), 6));
                        }
                        if (step >= timeUnitSize.year) {
                            d.setMonth(0);
                        }
                        var carry = 0;
                        var v = Number.NaN;
                        var prev;
                        do {
                            prev = v;
                            v = d.getTime();
                            ticks.push(v);
                            if (unit == "month" || unit == "quarter") {
                                if (tickSize < 1) {
                                    d.setDate(1);
                                    var start = d.getTime();
                                    d.setMonth(d.getMonth() + (unit == "quarter" ? 3 : 1));
                                    var end = d.getTime();
                                    d.setTime(
                                        v + carry * timeUnitSize.hour + (end - start) * tickSize
                                    );
                                    carry = d.getHours();
                                    d.setHours(0);
                                } else {
                                    d.setMonth(
                                        d.getMonth() + tickSize * (unit == "quarter" ? 3 : 1)
                                    );
                                }
                            } else if (unit == "year") {
                                d.setFullYear(d.getFullYear() + tickSize);
                            } else {
                                d.setTime(v + step);
                            }
                        } while (v < axis.max && v != prev);
                        return ticks;
                    };
                    axis.tickFormatter = function(v, axis) {
                        var d = dateGenerator(v, axis.options);
                        if (opts.timeformat != null) {
                            return formatDate(
                                d,
                                opts.timeformat,
                                opts.monthNames,
                                opts.dayNames
                            );
                        }
                        var useQuarters =
                            (axis.options.tickSize &&
                                axis.options.tickSize[1] == "quarter") ||
                            (axis.options.minTickSize &&
                                axis.options.minTickSize[1] == "quarter");
                        var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];
                        var span = axis.max - axis.min;
                        var suffix = opts.twelveHourClock ? " %p" : "";
                        var hourCode = opts.twelveHourClock ? "%I" : "%H";
                        var fmt;
                        if (t < timeUnitSize.minute) {
                            fmt = hourCode + ":%M:%S" + suffix;
                        } else if (t < timeUnitSize.day) {
                            if (span < 2 * timeUnitSize.day) {
                                fmt = hourCode + ":%M" + suffix;
                            } else {
                                fmt = "%b %d " + hourCode + ":%M" + suffix;
                            }
                        } else if (t < timeUnitSize.month) {
                            fmt = "%b %d";
                        } else if (
                            (useQuarters && t < timeUnitSize.quarter) ||
                            (!useQuarters && t < timeUnitSize.year)
                        ) {
                            if (span < timeUnitSize.year) {
                                fmt = "%b";
                            } else {
                                fmt = "%b %Y";
                            }
                        } else if (useQuarters && t < timeUnitSize.year) {
                            if (span < timeUnitSize.year) {
                                fmt = "Q%q";
                            } else {
                                fmt = "Q%q %Y";
                            }
                        } else {
                            fmt = "%Y";
                        }
                        var rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);
                        return rt;
                    };
                }
            });
        });
    }
    $.plot.plugins.push({
        init: init,
        options: options,
        name: "time",
        version: "1.0",
    });
    $.plot.formatDate = formatDate;
    $.plot.dateGenerator = dateGenerator;
})(jQuery);

/*!
 * Dropzone.js 4.0.1
 * http://www.dropzonejs.com/
 */
(function() {
    var a,
        b,
        c,
        d,
        e,
        f,
        g,
        h,
        i = [].slice,
        j = {}.hasOwnProperty,
        k = function(a, b) {
            function c() {
                this.constructor = a;
            }
            for (var d in b) j.call(b, d) && (a[d] = b[d]);
            return (
                (c.prototype = b.prototype),
                (a.prototype = new c()),
                (a.__super__ = b.prototype),
                a
            );
        };
    (g = function() {}),
    (b = (function() {
        function a() {}
        return (
            (a.prototype.addEventListener = a.prototype.on),
            (a.prototype.on = function(a, b) {
                return (
                    (this._callbacks = this._callbacks || {}),
                    this._callbacks[a] || (this._callbacks[a] = []),
                    this._callbacks[a].push(b),
                    this
                );
            }),
            (a.prototype.emit = function() {
                var a, b, c, d, e, f;
                if (
                    ((d = arguments[0]),
                        (a = 2 <= arguments.length ? i.call(arguments, 1) : []),
                        (this._callbacks = this._callbacks || {}),
                        (c = this._callbacks[d]))
                )
                    for (e = 0, f = c.length; f > e; e++)(b = c[e]), b.apply(this, a);
                return this;
            }),
            (a.prototype.removeListener = a.prototype.off),
            (a.prototype.removeAllListeners = a.prototype.off),
            (a.prototype.removeEventListener = a.prototype.off),
            (a.prototype.off = function(a, b) {
                var c, d, e, f, g;
                if (!this._callbacks || 0 === arguments.length)
                    return (this._callbacks = {}), this;
                if (((d = this._callbacks[a]), !d)) return this;
                if (1 === arguments.length) return delete this._callbacks[a], this;
                for (e = f = 0, g = d.length; g > f; e = ++f)
                    if (((c = d[e]), c === b)) {
                        d.splice(e, 1);
                        break;
                    }
                return this;
            }),
            a
        );
    })()),
    (a = (function(a) {
        function c(a, b) {
            var e, f, g;
            if (
                ((this.element = a),
                    (this.version = c.version),
                    (this.defaultOptions.previewTemplate =
                        this.defaultOptions.previewTemplate.replace(/\n*/g, "")),
                    (this.clickableElements = []),
                    (this.listeners = []),
                    (this.files = []),
                    "string" == typeof this.element &&
                    (this.element = document.querySelector(this.element)), !this.element || null == this.element.nodeType)
            )
                throw new Error("Invalid dropzone element.");
            if (this.element.dropzone)
                throw new Error("Dropzone already attached.");
            if (
                (c.instances.push(this),
                    (this.element.dropzone = this),
                    (e = null != (g = c.optionsForElement(this.element)) ? g : {}),
                    (this.options = d({}, this.defaultOptions, e, null != b ? b : {})),
                    this.options.forceFallback || !c.isBrowserSupported())
            )
                return this.options.fallback.call(this);
            if (
                (null == this.options.url &&
                    (this.options.url = this.element.getAttribute("action")), !this.options.url)
            )
                throw new Error("No URL provided.");
            if (this.options.acceptedFiles && this.options.acceptedMimeTypes)
                throw new Error(
                    "You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated."
                );
            this.options.acceptedMimeTypes &&
                ((this.options.acceptedFiles = this.options.acceptedMimeTypes),
                    delete this.options.acceptedMimeTypes),
                (this.options.method = this.options.method.toUpperCase()),
                (f = this.getExistingFallback()) &&
                f.parentNode &&
                f.parentNode.removeChild(f),
                this.options.previewsContainer !== !1 &&
                (this.previewsContainer = this.options.previewsContainer ?
                    c.getElement(
                        this.options.previewsContainer,
                        "previewsContainer"
                    ) :
                    this.element),
                this.options.clickable &&
                (this.clickableElements =
                    this.options.clickable === !0 ?
                    [this.element] :
                    c.getElements(this.options.clickable, "clickable")),
                this.init();
        }
        var d, e;
        return (
            k(c, a),
            (c.prototype.Emitter = b),
            (c.prototype.events = [
                "drop",
                "dragstart",
                "dragend",
                "dragenter",
                "dragover",
                "dragleave",
                "addedfile",
                "removedfile",
                "thumbnail",
                "error",
                "errormultiple",
                "processing",
                "processingmultiple",
                "uploadprogress",
                "totaluploadprogress",
                "sending",
                "sendingmultiple",
                "success",
                "successmultiple",
                "canceled",
                "canceledmultiple",
                "complete",
                "completemultiple",
                "reset",
                "maxfilesexceeded",
                "maxfilesreached",
                "queuecomplete",
            ]),
            (c.prototype.defaultOptions = {
                url: null,
                method: "post",
                withCredentials: !1,
                parallelUploads: 2,
                uploadMultiple: !1,
                maxFilesize: 256,
                paramName: "file",
                createImageThumbnails: !0,
                maxThumbnailFilesize: 10,
                thumbnailWidth: 120,
                thumbnailHeight: 120,
                filesizeBase: 1e3,
                maxFiles: null,
                filesizeBase: 1e3,
                params: {},
                clickable: !0,
                ignoreHiddenFiles: !0,
                acceptedFiles: null,
                acceptedMimeTypes: null,
                autoProcessQueue: !0,
                autoQueue: !0,
                addRemoveLinks: !1,
                previewsContainer: null,
                capture: null,
                dictDefaultMessage: "Drop files here to upload",
                dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
                dictInvalidFileType: "You can't upload files of this type.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Cancel upload",
                dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
                dictRemoveFile: "Remove file",
                dictRemoveFileConfirmation: null,
                dictMaxFilesExceeded: "You can not upload any more files.",
                accept: function(a, b) {
                    return b();
                },
                init: function() {
                    return g;
                },
                forceFallback: !1,
                fallback: function() {
                    var a, b, d, e, f, g;
                    for (
                        this.element.className =
                        "" + this.element.className + " dz-browser-not-supported",
                        g = this.element.getElementsByTagName("div"),
                        e = 0,
                        f = g.length; f > e; e++
                    )
                        (a = g[e]),
                        /(^| )dz-message($| )/.test(a.className) &&
                        ((b = a), (a.className = "dz-message"));
                    return (
                        b ||
                        ((b = c.createElement(
                                '<div class="dz-message"><span></span></div>'
                            )),
                            this.element.appendChild(b)),
                        (d = b.getElementsByTagName("span")[0]),
                        d && (d.textContent = this.options.dictFallbackMessage),
                        this.element.appendChild(this.getFallbackForm())
                    );
                },
                resize: function(a) {
                    var b, c, d;
                    return (
                        (b = {
                            srcX: 0,
                            srcY: 0,
                            srcWidth: a.width,
                            srcHeight: a.height,
                        }),
                        (c = a.width / a.height),
                        (b.optWidth = this.options.thumbnailWidth),
                        (b.optHeight = this.options.thumbnailHeight),
                        null == b.optWidth && null == b.optHeight ?
                        ((b.optWidth = b.srcWidth), (b.optHeight = b.srcHeight)) :
                        null == b.optWidth ?
                        (b.optWidth = c * b.optHeight) :
                        null == b.optHeight && (b.optHeight = (1 / c) * b.optWidth),
                        (d = b.optWidth / b.optHeight),
                        a.height < b.optHeight || a.width < b.optWidth ?
                        ((b.trgHeight = b.srcHeight), (b.trgWidth = b.srcWidth)) :
                        c > d ?
                        ((b.srcHeight = a.height), (b.srcWidth = b.srcHeight * d)) :
                        ((b.srcWidth = a.width), (b.srcHeight = b.srcWidth / d)),
                        (b.srcX = (a.width - b.srcWidth) / 2),
                        (b.srcY = (a.height - b.srcHeight) / 2),
                        b
                    );
                },
                drop: function() {
                    return this.element.classList.remove("dz-drag-hover");
                },
                dragstart: g,
                dragend: function() {
                    return this.element.classList.remove("dz-drag-hover");
                },
                dragenter: function() {
                    return this.element.classList.add("dz-drag-hover");
                },
                dragover: function() {
                    return this.element.classList.add("dz-drag-hover");
                },
                dragleave: function() {
                    return this.element.classList.remove("dz-drag-hover");
                },
                paste: g,
                reset: function() {
                    return this.element.classList.remove("dz-started");
                },
                addedfile: function(a) {
                    var b, d, e, f, g, h, i, j, k, l, m, n, o;
                    if (
                        (this.element === this.previewsContainer &&
                            this.element.classList.add("dz-started"),
                            this.previewsContainer)
                    ) {
                        for (
                            a.previewElement = c.createElement(
                                this.options.previewTemplate.trim()
                            ),
                            a.previewTemplate = a.previewElement,
                            this.previewsContainer.appendChild(a.previewElement),
                            l = a.previewElement.querySelectorAll("[data-dz-name]"),
                            f = 0,
                            i = l.length; i > f; f++
                        )
                            (b = l[f]), (b.textContent = a.name);
                        for (
                            m = a.previewElement.querySelectorAll("[data-dz-size]"),
                            g = 0,
                            j = m.length; j > g; g++
                        )
                            (b = m[g]), (b.innerHTML = this.filesize(a.size));
                        for (
                            this.options.addRemoveLinks &&
                            ((a._removeLink = c.createElement(
                                    '<a class="dz-remove" href="javascript:undefined;" data-dz-remove>' +
                                    this.options.dictRemoveFile +
                                    "</a>"
                                )),
                                a.previewElement.appendChild(a._removeLink)),
                            d = (function(b) {
                                return function(d) {
                                    return (
                                        d.preventDefault(),
                                        d.stopPropagation(),
                                        a.status === c.UPLOADING ?
                                        c.confirm(
                                            b.options.dictCancelUploadConfirmation,
                                            function() {
                                                return b.removeFile(a);
                                            }
                                        ) :
                                        b.options.dictRemoveFileConfirmation ?
                                        c.confirm(
                                            b.options.dictRemoveFileConfirmation,
                                            function() {
                                                return b.removeFile(a);
                                            }
                                        ) :
                                        b.removeFile(a)
                                    );
                                };
                            })(this),
                            n = a.previewElement.querySelectorAll("[data-dz-remove]"),
                            o = [],
                            h = 0,
                            k = n.length; k > h; h++
                        )
                            (e = n[h]), o.push(e.addEventListener("click", d));
                        return o;
                    }
                },
                removedfile: function(a) {
                    var b;
                    return (
                        a.previewElement &&
                        null != (b = a.previewElement) &&
                        b.parentNode.removeChild(a.previewElement),
                        this._updateMaxFilesReachedClass()
                    );
                },
                thumbnail: function(a, b) {
                    var c, d, e, f;
                    if (a.previewElement) {
                        for (
                            a.previewElement.classList.remove("dz-file-preview"),
                            f = a.previewElement.querySelectorAll("[data-dz-thumbnail]"),
                            d = 0,
                            e = f.length; e > d; d++
                        )
                            (c = f[d]), (c.alt = a.name), (c.src = b);
                        return setTimeout(
                            (function() {
                                return function() {
                                    return a.previewElement.classList.add("dz-image-preview");
                                };
                            })(this),
                            1
                        );
                    }
                },
                error: function(a, b) {
                    var c, d, e, f, g;
                    if (a.previewElement) {
                        for (
                            a.previewElement.classList.add("dz-error"),
                            "String" != typeof b && b.error && (b = b.error),
                            f = a.previewElement.querySelectorAll(
                                "[data-dz-errormessage]"
                            ),
                            g = [],
                            d = 0,
                            e = f.length; e > d; d++
                        )
                            (c = f[d]), g.push((c.textContent = b));
                        return g;
                    }
                },
                errormultiple: g,
                processing: function(a) {
                    return a.previewElement &&
                        (a.previewElement.classList.add("dz-processing"), a._removeLink) ?
                        (a._removeLink.textContent = this.options.dictCancelUpload) :
                        void 0;
                },
                processingmultiple: g,
                uploadprogress: function(a, b) {
                    var c, d, e, f, g;
                    if (a.previewElement) {
                        for (
                            f = a.previewElement.querySelectorAll(
                                "[data-dz-uploadprogress]"
                            ),
                            g = [],
                            d = 0,
                            e = f.length; e > d; d++
                        )
                            (c = f[d]),
                            g.push(
                                "PROGRESS" === c.nodeName ?
                                (c.value = b) :
                                (c.style.width = "" + b + "%")
                            );
                        return g;
                    }
                },
                totaluploadprogress: g,
                sending: g,
                sendingmultiple: g,
                success: function(a) {
                    return a.previewElement ?
                        a.previewElement.classList.add("dz-success") :
                        void 0;
                },
                successmultiple: g,
                canceled: function(a) {
                    return this.emit("error", a, "Upload canceled.");
                },
                canceledmultiple: g,
                complete: function(a) {
                    return (
                        a._removeLink &&
                        (a._removeLink.textContent = this.options.dictRemoveFile),
                        a.previewElement ?
                        a.previewElement.classList.add("dz-complete") :
                        void 0
                    );
                },
                completemultiple: g,
                maxfilesexceeded: g,
                maxfilesreached: g,
                queuecomplete: g,
                previewTemplate: '<div class="dz-preview dz-file-preview">\n  <div class="dz-image"><img data-dz-thumbnail /></div>\n  <div class="dz-details">\n    <div class="dz-size"><span data-dz-size></span></div>\n    <div class="dz-filename"><span data-dz-name></span></div>\n  </div>\n  <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>\n  <div class="dz-error-message"><span data-dz-errormessage></span></div>\n  <div class="dz-success-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Check</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <path d="M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" stroke-opacity="0.198794158" stroke="#747474" fill-opacity="0.816519475" fill="#FFFFFF" sketch:type="MSShapeGroup"></path>\n      </g>\n    </svg>\n  </div>\n  <div class="dz-error-mark">\n    <svg width="54px" height="54px" viewBox="0 0 54 54" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <title>Error</title>\n      <defs></defs>\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n        <g id="Check-+-Oval-2" sketch:type="MSLayerGroup" stroke="#747474" stroke-opacity="0.198794158" fill="#FFFFFF" fill-opacity="0.816519475">\n          <path d="M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z" id="Oval-2" sketch:type="MSShapeGroup"></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n</div>',
            }),
            (d = function() {
                var a, b, c, d, e, f, g;
                for (
                    d = arguments[0],
                    c = 2 <= arguments.length ? i.call(arguments, 1) : [],
                    f = 0,
                    g = c.length; g > f; f++
                ) {
                    b = c[f];
                    for (a in b)(e = b[a]), (d[a] = e);
                }
                return d;
            }),
            (c.prototype.getAcceptedFiles = function() {
                var a, b, c, d, e;
                for (d = this.files, e = [], b = 0, c = d.length; c > b; b++)
                    (a = d[b]), a.accepted && e.push(a);
                return e;
            }),
            (c.prototype.getRejectedFiles = function() {
                var a, b, c, d, e;
                for (d = this.files, e = [], b = 0, c = d.length; c > b; b++)
                    (a = d[b]), a.accepted || e.push(a);
                return e;
            }),
            (c.prototype.getFilesWithStatus = function(a) {
                var b, c, d, e, f;
                for (e = this.files, f = [], c = 0, d = e.length; d > c; c++)
                    (b = e[c]), b.status === a && f.push(b);
                return f;
            }),
            (c.prototype.getQueuedFiles = function() {
                return this.getFilesWithStatus(c.QUEUED);
            }),
            (c.prototype.getUploadingFiles = function() {
                return this.getFilesWithStatus(c.UPLOADING);
            }),
            (c.prototype.getActiveFiles = function() {
                var a, b, d, e, f;
                for (e = this.files, f = [], b = 0, d = e.length; d > b; b++)
                    (a = e[b]),
                    (a.status === c.UPLOADING || a.status === c.QUEUED) && f.push(a);
                return f;
            }),
            (c.prototype.init = function() {
                var a, b, d, e, f, g, h;
                for (
                    "form" === this.element.tagName &&
                    this.element.setAttribute("enctype", "multipart/form-data"),
                    this.element.classList.contains("dropzone") &&
                    !this.element.querySelector(".dz-message") &&
                    this.element.appendChild(
                        c.createElement(
                            '<div class="dz-default dz-message"><span>' +
                            this.options.dictDefaultMessage +
                            "</span></div>"
                        )
                    ),
                    this.clickableElements.length &&
                    (d = (function(a) {
                        return function() {
                            return (
                                a.hiddenFileInput &&
                                document.body.removeChild(a.hiddenFileInput),
                                (a.hiddenFileInput = document.createElement("input")),
                                a.hiddenFileInput.setAttribute("type", "file"),
                                (null == a.options.maxFiles || a.options.maxFiles > 1) &&
                                a.hiddenFileInput.setAttribute("multiple", "multiple"),
                                (a.hiddenFileInput.className = "dz-hidden-input"),
                                null != a.options.acceptedFiles &&
                                a.hiddenFileInput.setAttribute(
                                    "accept",
                                    a.options.acceptedFiles
                                ),
                                null != a.options.capture &&
                                a.hiddenFileInput.setAttribute(
                                    "capture",
                                    a.options.capture
                                ),
                                (a.hiddenFileInput.style.visibility = "hidden"),
                                (a.hiddenFileInput.style.position = "absolute"),
                                (a.hiddenFileInput.style.top = "0"),
                                (a.hiddenFileInput.style.left = "0"),
                                (a.hiddenFileInput.style.height = "0"),
                                (a.hiddenFileInput.style.width = "0"),
                                document.body.appendChild(a.hiddenFileInput),
                                a.hiddenFileInput.addEventListener("change", function() {
                                    var b, c, e, f;
                                    if (((c = a.hiddenFileInput.files), c.length))
                                        for (e = 0, f = c.length; f > e; e++)
                                            (b = c[e]), a.addFile(b);
                                    return d();
                                })
                            );
                        };
                    })(this))(),
                    this.URL = null != (g = window.URL) ? g : window.webkitURL,
                    h = this.events,
                    e = 0,
                    f = h.length; f > e; e++
                )
                    (a = h[e]), this.on(a, this.options[a]);
                return (
                    this.on(
                        "uploadprogress",
                        (function(a) {
                            return function() {
                                return a.updateTotalUploadProgress();
                            };
                        })(this)
                    ),
                    this.on(
                        "removedfile",
                        (function(a) {
                            return function() {
                                return a.updateTotalUploadProgress();
                            };
                        })(this)
                    ),
                    this.on(
                        "canceled",
                        (function(a) {
                            return function(b) {
                                return a.emit("complete", b);
                            };
                        })(this)
                    ),
                    this.on(
                        "complete",
                        (function(a) {
                            return function() {
                                return 0 === a.getUploadingFiles().length &&
                                    0 === a.getQueuedFiles().length ?
                                    setTimeout(function() {
                                        return a.emit("queuecomplete");
                                    }, 0) :
                                    void 0;
                            };
                        })(this)
                    ),
                    (b = function(a) {
                        return (
                            a.stopPropagation(),
                            a.preventDefault ? a.preventDefault() : (a.returnValue = !1)
                        );
                    }),
                    (this.listeners = [{
                        element: this.element,
                        events: {
                            dragstart: (function(a) {
                                return function(b) {
                                    return a.emit("dragstart", b);
                                };
                            })(this),
                            dragenter: (function(a) {
                                return function(c) {
                                    return b(c), a.emit("dragenter", c);
                                };
                            })(this),
                            dragover: (function(a) {
                                return function(c) {
                                    var d;
                                    try {
                                        d = c.dataTransfer.effectAllowed;
                                    } catch (e) {}
                                    return (
                                        (c.dataTransfer.dropEffect =
                                            "move" === d || "linkMove" === d ? "move" : "copy"),
                                        b(c),
                                        a.emit("dragover", c)
                                    );
                                };
                            })(this),
                            dragleave: (function(a) {
                                return function(b) {
                                    return a.emit("dragleave", b);
                                };
                            })(this),
                            drop: (function(a) {
                                return function(c) {
                                    return b(c), a.drop(c);
                                };
                            })(this),
                            dragend: (function(a) {
                                return function(b) {
                                    return a.emit("dragend", b);
                                };
                            })(this),
                        },
                    }, ]),
                    this.clickableElements.forEach(
                        (function(a) {
                            return function(b) {
                                return a.listeners.push({
                                    element: b,
                                    events: {
                                        click: function(d) {
                                            return b !== a.element ||
                                                d.target === a.element ||
                                                c.elementInside(
                                                    d.target,
                                                    a.element.querySelector(".dz-message")
                                                ) ?
                                                a.hiddenFileInput.click() :
                                                void 0;
                                        },
                                    },
                                });
                            };
                        })(this)
                    ),
                    this.enable(),
                    this.options.init.call(this)
                );
            }),
            (c.prototype.destroy = function() {
                var a;
                return (
                    this.disable(),
                    this.removeAllFiles(!0),
                    (null != (a = this.hiddenFileInput) ? a.parentNode : void 0) &&
                    (this.hiddenFileInput.parentNode.removeChild(
                            this.hiddenFileInput
                        ),
                        (this.hiddenFileInput = null)),
                    delete this.element.dropzone,
                    c.instances.splice(c.instances.indexOf(this), 1)
                );
            }),
            (c.prototype.updateTotalUploadProgress = function() {
                var a, b, c, d, e, f, g, h;
                if (((d = 0), (c = 0), (a = this.getActiveFiles()), a.length)) {
                    for (h = this.getActiveFiles(), f = 0, g = h.length; g > f; f++)
                        (b = h[f]), (d += b.upload.bytesSent), (c += b.upload.total);
                    e = (100 * d) / c;
                } else e = 100;
                return this.emit("totaluploadprogress", e, c, d);
            }),
            (c.prototype._getParamName = function(a) {
                return "function" == typeof this.options.paramName ?
                    this.options.paramName(a) :
                    "" +
                    this.options.paramName +
                    (this.options.uploadMultiple ? "[" + a + "]" : "");
            }),
            (c.prototype.getFallbackForm = function() {
                var a, b, d, e;
                return (a = this.getExistingFallback()) ?
                    a :
                    ((d = '<div class="dz-fallback">'),
                        this.options.dictFallbackText &&
                        (d += "<p>" + this.options.dictFallbackText + "</p>"),
                        (d +=
                            '<input type="file" name="' +
                            this._getParamName(0) +
                            '" ' +
                            (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) +
                            ' /><input type="submit" value="Upload!"></div>'),
                        (b = c.createElement(d)),
                        "FORM" !== this.element.tagName ?
                        ((e = c.createElement(
                                '<form action="' +
                                this.options.url +
                                '" enctype="multipart/form-data" method="' +
                                this.options.method +
                                '"></form>'
                            )),
                            e.appendChild(b)) :
                        (this.element.setAttribute("enctype", "multipart/form-data"),
                            this.element.setAttribute("method", this.options.method)),
                        null != e ? e : b);
            }),
            (c.prototype.getExistingFallback = function() {
                var a, b, c, d, e, f;
                for (
                    b = function(a) {
                        var b, c, d;
                        for (c = 0, d = a.length; d > c; c++)
                            if (((b = a[c]), /(^| )fallback($| )/.test(b.className)))
                                return b;
                    },
                    f = ["div", "form"],
                    d = 0,
                    e = f.length; e > d; d++
                )
                    if (((c = f[d]), (a = b(this.element.getElementsByTagName(c)))))
                        return a;
            }),
            (c.prototype.setupEventListeners = function() {
                var a, b, c, d, e, f, g;
                for (f = this.listeners, g = [], d = 0, e = f.length; e > d; d++)
                    (a = f[d]),
                    g.push(
                        (function() {
                            var d, e;
                            (d = a.events), (e = []);
                            for (b in d)
                                (c = d[b]), e.push(a.element.addEventListener(b, c, !1));
                            return e;
                        })()
                    );
                return g;
            }),
            (c.prototype.removeEventListeners = function() {
                var a, b, c, d, e, f, g;
                for (f = this.listeners, g = [], d = 0, e = f.length; e > d; d++)
                    (a = f[d]),
                    g.push(
                        (function() {
                            var d, e;
                            (d = a.events), (e = []);
                            for (b in d)
                                (c = d[b]), e.push(a.element.removeEventListener(b, c, !1));
                            return e;
                        })()
                    );
                return g;
            }),
            (c.prototype.disable = function() {
                var a, b, c, d, e;
                for (
                    this.clickableElements.forEach(function(a) {
                        return a.classList.remove("dz-clickable");
                    }),
                    this.removeEventListeners(),
                    d = this.files,
                    e = [],
                    b = 0,
                    c = d.length; c > b; b++
                )
                    (a = d[b]), e.push(this.cancelUpload(a));
                return e;
            }),
            (c.prototype.enable = function() {
                return (
                    this.clickableElements.forEach(function(a) {
                        return a.classList.add("dz-clickable");
                    }),
                    this.setupEventListeners()
                );
            }),
            (c.prototype.filesize = function(a) {
                var b, c, d, e, f, g, h, i;
                for (
                    g = ["TB", "GB", "MB", "KB", "b"],
                    d = e = null,
                    c = h = 0,
                    i = g.length; i > h; c = ++h
                )
                    if (
                        ((f = g[c]),
                            (b = Math.pow(this.options.filesizeBase, 4 - c) / 10),
                            a >= b)
                    ) {
                        (d = a / Math.pow(this.options.filesizeBase, 4 - c)), (e = f);
                        break;
                    }
                return (
                    (d = Math.round(10 * d) / 10), "<strong>" + d + "</strong> " + e
                );
            }),
            (c.prototype._updateMaxFilesReachedClass = function() {
                return null != this.options.maxFiles &&
                    this.getAcceptedFiles().length >= this.options.maxFiles ?
                    (this.getAcceptedFiles().length === this.options.maxFiles &&
                        this.emit("maxfilesreached", this.files),
                        this.element.classList.add("dz-max-files-reached")) :
                    this.element.classList.remove("dz-max-files-reached");
            }),
            (c.prototype.drop = function(a) {
                var b, c;
                a.dataTransfer &&
                    (this.emit("drop", a),
                        (b = a.dataTransfer.files),
                        b.length &&
                        ((c = a.dataTransfer.items),
                            c && c.length && null != c[0].webkitGetAsEntry ?
                            this._addFilesFromItems(c) :
                            this.handleFiles(b)));
            }),
            (c.prototype.paste = function(a) {
                var b, c;
                if (
                    null !=
                    (null != a && null != (c = a.clipboardData) ? c.items : void 0)
                )
                    return (
                        this.emit("paste", a),
                        (b = a.clipboardData.items),
                        b.length ? this._addFilesFromItems(b) : void 0
                    );
            }),
            (c.prototype.handleFiles = function(a) {
                var b, c, d, e;
                for (e = [], c = 0, d = a.length; d > c; c++)
                    (b = a[c]), e.push(this.addFile(b));
                return e;
            }),
            (c.prototype._addFilesFromItems = function(a) {
                var b, c, d, e, f;
                for (f = [], d = 0, e = a.length; e > d; d++)
                    (c = a[d]),
                    f.push(
                        null != c.webkitGetAsEntry && (b = c.webkitGetAsEntry()) ?
                        b.isFile ?
                        this.addFile(c.getAsFile()) :
                        b.isDirectory ?
                        this._addFilesFromDirectory(b, b.name) :
                        void 0 :
                        null != c.getAsFile ?
                        null == c.kind || "file" === c.kind ?
                        this.addFile(c.getAsFile()) :
                        void 0 :
                        void 0
                    );
                return f;
            }),
            (c.prototype._addFilesFromDirectory = function(a, b) {
                var c, d;
                return (
                    (c = a.createReader()),
                    (d = (function(a) {
                        return function(c) {
                            var d, e, f;
                            for (e = 0, f = c.length; f > e; e++)
                                (d = c[e]),
                                d.isFile ?
                                d.file(function(c) {
                                    return a.options.ignoreHiddenFiles &&
                                        "." === c.name.substring(0, 1) ?
                                        void 0 :
                                        ((c.fullPath = "" + b + "/" + c.name),
                                            a.addFile(c));
                                }) :
                                d.isDirectory &&
                                a._addFilesFromDirectory(d, "" + b + "/" + d.name);
                        };
                    })(this)),
                    c.readEntries(d, function(a) {
                        return "undefined" != typeof console &&
                            null !== console &&
                            "function" == typeof console.log ?
                            console.log(a) :
                            void 0;
                    })
                );
            }),
            (c.prototype.accept = function(a, b) {
                return a.size > 1024 * this.options.maxFilesize * 1024 ?
                    b(
                        this.options.dictFileTooBig
                        .replace(
                            "{{filesize}}",
                            Math.round(a.size / 1024 / 10.24) / 100
                        )
                        .replace("{{maxFilesize}}", this.options.maxFilesize)
                    ) :
                    c.isValidFile(a, this.options.acceptedFiles) ?
                    null != this.options.maxFiles &&
                    this.getAcceptedFiles().length >= this.options.maxFiles ?
                    (b(
                            this.options.dictMaxFilesExceeded.replace(
                                "{{maxFiles}}",
                                this.options.maxFiles
                            )
                        ),
                        this.emit("maxfilesexceeded", a)) :
                    this.options.accept.call(this, a, b) :
                    b(this.options.dictInvalidFileType);
            }),
            (c.prototype.addFile = function(a) {
                return (
                    (a.upload = {
                        progress: 0,
                        total: a.size,
                        bytesSent: 0
                    }),
                    this.files.push(a),
                    (a.status = c.ADDED),
                    this.emit("addedfile", a),
                    this._enqueueThumbnail(a),
                    this.accept(
                        a,
                        (function(b) {
                            return function(c) {
                                return (
                                    c ?
                                    ((a.accepted = !1), b._errorProcessing([a], c)) :
                                    ((a.accepted = !0),
                                        b.options.autoQueue && b.enqueueFile(a)),
                                    b._updateMaxFilesReachedClass()
                                );
                            };
                        })(this)
                    )
                );
            }),
            (c.prototype.enqueueFiles = function(a) {
                var b, c, d;
                for (c = 0, d = a.length; d > c; c++)(b = a[c]), this.enqueueFile(b);
                return null;
            }),
            (c.prototype.enqueueFile = function(a) {
                if (a.status !== c.ADDED || a.accepted !== !0)
                    throw new Error(
                        "This file can't be queued because it has already been processed or was rejected."
                    );
                return (
                    (a.status = c.QUEUED),
                    this.options.autoProcessQueue ?
                    setTimeout(
                        (function(a) {
                            return function() {
                                return a.processQueue();
                            };
                        })(this),
                        0
                    ) :
                    void 0
                );
            }),
            (c.prototype._thumbnailQueue = []),
            (c.prototype._processingThumbnail = !1),
            (c.prototype._enqueueThumbnail = function(a) {
                return this.options.createImageThumbnails &&
                    a.type.match(/image.*/) &&
                    a.size <= 1024 * this.options.maxThumbnailFilesize * 1024 ?
                    (this._thumbnailQueue.push(a),
                        setTimeout(
                            (function(a) {
                                return function() {
                                    return a._processThumbnailQueue();
                                };
                            })(this),
                            0
                        )) :
                    void 0;
            }),
            (c.prototype._processThumbnailQueue = function() {
                return this._processingThumbnail || 0 === this._thumbnailQueue.length ?
                    void 0 :
                    ((this._processingThumbnail = !0),
                        this.createThumbnail(
                            this._thumbnailQueue.shift(),
                            (function(a) {
                                return function() {
                                    return (
                                        (a._processingThumbnail = !1), a._processThumbnailQueue()
                                    );
                                };
                            })(this)
                        ));
            }),
            (c.prototype.removeFile = function(a) {
                return (
                    a.status === c.UPLOADING && this.cancelUpload(a),
                    (this.files = h(this.files, a)),
                    this.emit("removedfile", a),
                    0 === this.files.length ? this.emit("reset") : void 0
                );
            }),
            (c.prototype.removeAllFiles = function(a) {
                var b, d, e, f;
                for (
                    null == a && (a = !1), f = this.files.slice(), d = 0, e = f.length; e > d; d++
                )
                    (b = f[d]), (b.status !== c.UPLOADING || a) && this.removeFile(b);
                return null;
            }),
            (c.prototype.createThumbnail = function(a, b) {
                var c;
                return (
                    (c = new FileReader()),
                    (c.onload = (function(d) {
                        return function() {
                            var e;
                            return "image/svg+xml" === a.type ?
                                (d.emit("thumbnail", a, c.result), void(null != b && b())) :
                                ((e = document.createElement("img")),
                                    (e.onload = function() {
                                        var c, g, h, i, j, k, l, m;
                                        return (
                                            (a.width = e.width),
                                            (a.height = e.height),
                                            (h = d.options.resize.call(d, a)),
                                            null == h.trgWidth && (h.trgWidth = h.optWidth),
                                            null == h.trgHeight && (h.trgHeight = h.optHeight),
                                            (c = document.createElement("canvas")),
                                            (g = c.getContext("2d")),
                                            (c.width = h.trgWidth),
                                            (c.height = h.trgHeight),
                                            f(
                                                g,
                                                e,
                                                null != (j = h.srcX) ? j : 0,
                                                null != (k = h.srcY) ? k : 0,
                                                h.srcWidth,
                                                h.srcHeight,
                                                null != (l = h.trgX) ? l : 0,
                                                null != (m = h.trgY) ? m : 0,
                                                h.trgWidth,
                                                h.trgHeight
                                            ),
                                            (i = c.toDataURL("image/png")),
                                            d.emit("thumbnail", a, i),
                                            null != b ? b() : void 0
                                        );
                                    }),
                                    (e.onerror = b),
                                    (e.src = c.result));
                        };
                    })(this)),
                    c.readAsDataURL(a)
                );
            }),
            (c.prototype.processQueue = function() {
                var a, b, c, d;
                if (
                    ((b = this.options.parallelUploads),
                        (c = this.getUploadingFiles().length),
                        (a = c), !(c >= b) && ((d = this.getQueuedFiles()), d.length > 0))
                ) {
                    if (this.options.uploadMultiple)
                        return this.processFiles(d.slice(0, b - c));
                    for (; b > a;) {
                        if (!d.length) return;
                        this.processFile(d.shift()), a++;
                    }
                }
            }),
            (c.prototype.processFile = function(a) {
                return this.processFiles([a]);
            }),
            (c.prototype.processFiles = function(a) {
                var b, d, e;
                for (d = 0, e = a.length; e > d; d++)
                    (b = a[d]),
                    (b.processing = !0),
                    (b.status = c.UPLOADING),
                    this.emit("processing", b);
                return (
                    this.options.uploadMultiple && this.emit("processingmultiple", a),
                    this.uploadFiles(a)
                );
            }),
            (c.prototype._getFilesWithXhr = function(a) {
                var b, c;
                return (c = function() {
                    var c, d, e, f;
                    for (e = this.files, f = [], c = 0, d = e.length; d > c; c++)
                        (b = e[c]), b.xhr === a && f.push(b);
                    return f;
                }.call(this));
            }),
            (c.prototype.cancelUpload = function(a) {
                var b, d, e, f, g, h, i;
                if (a.status === c.UPLOADING) {
                    for (
                        d = this._getFilesWithXhr(a.xhr), e = 0, g = d.length; g > e; e++
                    )
                        (b = d[e]), (b.status = c.CANCELED);
                    for (a.xhr.abort(), f = 0, h = d.length; h > f; f++)
                        (b = d[f]), this.emit("canceled", b);
                    this.options.uploadMultiple && this.emit("canceledmultiple", d);
                } else
                    ((i = a.status) === c.ADDED || i === c.QUEUED) &&
                    ((a.status = c.CANCELED),
                        this.emit("canceled", a),
                        this.options.uploadMultiple &&
                        this.emit("canceledmultiple", [a]));
                return this.options.autoProcessQueue ? this.processQueue() : void 0;
            }),
            (e = function() {
                var a, b;
                return (
                    (b = arguments[0]),
                    (a = 2 <= arguments.length ? i.call(arguments, 1) : []),
                    "function" == typeof b ? b.apply(this, a) : b
                );
            }),
            (c.prototype.uploadFile = function(a) {
                return this.uploadFiles([a]);
            }),
            (c.prototype.uploadFiles = function(a) {
                var b,
                    f,
                    g,
                    h,
                    i,
                    j,
                    k,
                    l,
                    m,
                    n,
                    o,
                    p,
                    q,
                    r,
                    s,
                    t,
                    u,
                    v,
                    w,
                    x,
                    y,
                    z,
                    A,
                    B,
                    C,
                    D,
                    E,
                    F,
                    G,
                    H,
                    I,
                    J,
                    K,
                    L;
                for (w = new XMLHttpRequest(), x = 0, B = a.length; B > x; x++)
                    (b = a[x]), (b.xhr = w);
                (p = e(this.options.method, a)),
                (u = e(this.options.url, a)),
                w.open(p, u, !0),
                    (w.withCredentials = !!this.options.withCredentials),
                    (s = null),
                    (g = (function(c) {
                        return function() {
                            var d, e, f;
                            for (f = [], d = 0, e = a.length; e > d; d++)
                                (b = a[d]),
                                f.push(
                                    c._errorProcessing(
                                        a,
                                        s ||
                                        c.options.dictResponseError.replace(
                                            "{{statusCode}}",
                                            w.status
                                        ),
                                        w
                                    )
                                );
                            return f;
                        };
                    })(this)),
                    (t = (function(c) {
                        return function(d) {
                            var e, f, g, h, i, j, k, l, m;
                            if (null != d)
                                for (
                                    f = (100 * d.loaded) / d.total, g = 0, j = a.length; j > g; g++
                                )
                                    (b = a[g]),
                                    (b.upload = {
                                        progress: f,
                                        total: d.total,
                                        bytesSent: d.loaded,
                                    });
                            else {
                                for (e = !0, f = 100, h = 0, k = a.length; k > h; h++)
                                    (b = a[h]),
                                    (100 !== b.upload.progress ||
                                        b.upload.bytesSent !== b.upload.total) &&
                                    (e = !1),
                                    (b.upload.progress = f),
                                    (b.upload.bytesSent = b.upload.total);
                                if (e) return;
                            }
                            for (m = [], i = 0, l = a.length; l > i; i++)
                                (b = a[i]),
                                m.push(c.emit("uploadprogress", b, f, b.upload.bytesSent));
                            return m;
                        };
                    })(this)),
                    (w.onload = (function(b) {
                        return function(d) {
                            var e;
                            if (a[0].status !== c.CANCELED && 4 === w.readyState) {
                                if (
                                    ((s = w.responseText),
                                        w.getResponseHeader("content-type") &&
                                        ~w
                                        .getResponseHeader("content-type")
                                        .indexOf("application/json"))
                                )
                                    try {
                                        s = JSON.parse(s);
                                    } catch (f) {
                                        (d = f), (s = "Invalid JSON response from server.");
                                    }
                                return (
                                    t(),
                                    200 <= (e = w.status) && 300 > e ?
                                    b._finished(a, s, d) :
                                    g()
                                );
                            }
                        };
                    })(this)),
                    (w.onerror = (function() {
                        return function() {
                            return a[0].status !== c.CANCELED ? g() : void 0;
                        };
                    })(this)),
                    (r = null != (G = w.upload) ? G : w),
                    (r.onprogress = t),
                    (j = {
                        Accept: "application/json",
                        "Cache-Control": "no-cache",
                        "X-Requested-With": "XMLHttpRequest",
                    }),
                    this.options.headers && d(j, this.options.headers);
                for (h in j)(i = j[h]), w.setRequestHeader(h, i);
                if (((f = new FormData()), this.options.params)) {
                    H = this.options.params;
                    for (o in H)(v = H[o]), f.append(o, v);
                }
                for (y = 0, C = a.length; C > y; y++)
                    (b = a[y]), this.emit("sending", b, w, f);
                if (
                    (this.options.uploadMultiple &&
                        this.emit("sendingmultiple", a, w, f),
                        "FORM" === this.element.tagName)
                )
                    for (
                        I = this.element.querySelectorAll(
                            "input, textarea, select, button"
                        ),
                        z = 0,
                        D = I.length; D > z; z++
                    )
                        if (
                            ((l = I[z]),
                                (m = l.getAttribute("name")),
                                (n = l.getAttribute("type")),
                                "SELECT" === l.tagName && l.hasAttribute("multiple"))
                        )
                            for (J = l.options, A = 0, E = J.length; E > A; A++)
                                (q = J[A]), q.selected && f.append(m, q.value);
                        else
                            (!n ||
                                ("checkbox" !== (K = n.toLowerCase()) && "radio" !== K) ||
                                l.checked) &&
                            f.append(m, l.value);
                for (
                    k = F = 0, L = a.length - 1; L >= 0 ? L >= F : F >= L; k = L >= 0 ? ++F : --F
                )
                    f.append(this._getParamName(k), a[k], a[k].name);
                return w.send(f);
            }),
            (c.prototype._finished = function(a, b, d) {
                var e, f, g;
                for (f = 0, g = a.length; g > f; f++)
                    (e = a[f]),
                    (e.status = c.SUCCESS),
                    this.emit("success", e, b, d),
                    this.emit("complete", e);
                return (
                    this.options.uploadMultiple &&
                    (this.emit("successmultiple", a, b, d),
                        this.emit("completemultiple", a)),
                    this.options.autoProcessQueue ? this.processQueue() : void 0
                );
            }),
            (c.prototype._errorProcessing = function(a, b, d) {
                var e, f, g;
                for (f = 0, g = a.length; g > f; f++)
                    (e = a[f]),
                    (e.status = c.ERROR),
                    this.emit("error", e, b, d),
                    this.emit("complete", e);
                return (
                    this.options.uploadMultiple &&
                    (this.emit("errormultiple", a, b, d),
                        this.emit("completemultiple", a)),
                    this.options.autoProcessQueue ? this.processQueue() : void 0
                );
            }),
            c
        );
    })(b)),
    (a.version = "4.0.1"),
    (a.options = {}),
    (a.optionsForElement = function(b) {
        return b.getAttribute("id") ? a.options[c(b.getAttribute("id"))] : void 0;
    }),
    (a.instances = []),
    (a.forElement = function(a) {
        if (
            ("string" == typeof a && (a = document.querySelector(a)),
                null == (null != a ? a.dropzone : void 0))
        )
            throw new Error(
                "No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone."
            );
        return a.dropzone;
    }),
    (a.autoDiscover = !0),
    (a.discover = function() {
        var b, c, d, e, f, g;
        for (
            document.querySelectorAll ?
            (d = document.querySelectorAll(".dropzone")) :
            ((d = []),
                (b = function(a) {
                    var b, c, e, f;
                    for (f = [], c = 0, e = a.length; e > c; c++)
                        (b = a[c]),
                        f.push(
                            /(^| )dropzone($| )/.test(b.className) ? d.push(b) : void 0
                        );
                    return f;
                }),
                b(document.getElementsByTagName("div")),
                b(document.getElementsByTagName("form"))),
            g = [],
            e = 0,
            f = d.length; f > e; e++
        )
            (c = d[e]), g.push(a.optionsForElement(c) !== !1 ? new a(c) : void 0);
        return g;
    }),
    (a.blacklistedBrowsers = [/opera.*Macintosh.*version\/12/i]),
    (a.isBrowserSupported = function() {
        var b, c, d, e, f;
        if (
            ((b = !0),
                window.File &&
                window.FileReader &&
                window.FileList &&
                window.Blob &&
                window.FormData &&
                document.querySelector)
        )
            if ("classList" in document.createElement("a"))
                for (f = a.blacklistedBrowsers, d = 0, e = f.length; e > d; d++)
                    (c = f[d]), c.test(navigator.userAgent) && (b = !1);
            else b = !1;
        else b = !1;
        return b;
    }),
    (h = function(a, b) {
        var c, d, e, f;
        for (f = [], d = 0, e = a.length; e > d; d++)
            (c = a[d]), c !== b && f.push(c);
        return f;
    }),
    (c = function(a) {
        return a.replace(/[\-_](\w)/g, function(a) {
            return a.charAt(1).toUpperCase();
        });
    }),
    (a.createElement = function(a) {
        var b;
        return (
            (b = document.createElement("div")), (b.innerHTML = a), b.childNodes[0]
        );
    }),
    (a.elementInside = function(a, b) {
        if (a === b) return !0;
        for (;
            (a = a.parentNode);)
            if (a === b) return !0;
        return !1;
    }),
    (a.getElement = function(a, b) {
        var c;
        if (
            ("string" == typeof a ?
                (c = document.querySelector(a)) :
                null != a.nodeType && (c = a),
                null == c)
        )
            throw new Error(
                "Invalid `" +
                b +
                "` option provided. Please provide a CSS selector or a plain HTML element."
            );
        return c;
    }),
    (a.getElements = function(a, b) {
        var c, d, e, f, g, h, i, j;
        if (a instanceof Array) {
            e = [];
            try {
                for (f = 0, h = a.length; h > f; f++)
                    (d = a[f]), e.push(this.getElement(d, b));
            } catch (k) {
                (c = k), (e = null);
            }
        } else if ("string" == typeof a)
            for (
                e = [], j = document.querySelectorAll(a), g = 0, i = j.length; i > g; g++
            )
                (d = j[g]), e.push(d);
        else null != a.nodeType && (e = [a]);
        if (null == e || !e.length)
            throw new Error(
                "Invalid `" +
                b +
                "` option provided. Please provide a CSS selector, a plain HTML element or a list of those."
            );
        return e;
    }),
    (a.confirm = function(a, b, c) {
        return window.confirm(a) ? b() : null != c ? c() : void 0;
    }),
    (a.isValidFile = function(a, b) {
        var c, d, e, f, g;
        if (!b) return !0;
        for (
            b = b.split(","),
            d = a.type,
            c = d.replace(/\/.*$/, ""),
            f = 0,
            g = b.length; g > f; f++
        )
            if (((e = b[f]), (e = e.trim()), "." === e.charAt(0))) {
                if (-1 !==
                    a.name
                    .toLowerCase()
                    .indexOf(e.toLowerCase(), a.name.length - e.length)
                )
                    return !0;
            } else if (/\/\*$/.test(e)) {
            if (c === e.replace(/\/.*$/, "")) return !0;
        } else if (d === e) return !0;
        return !1;
    }),
    "undefined" != typeof jQuery &&
        null !== jQuery &&
        (jQuery.fn.dropzone = function(b) {
            return this.each(function() {
                return new a(this, b);
            });
        }),
        "undefined" != typeof module && null !== module ?
        (module.exports = a) :
        (window.Dropzone = a),
        (a.ADDED = "added"),
        (a.QUEUED = "queued"),
        (a.ACCEPTED = a.QUEUED),
        (a.UPLOADING = "uploading"),
        (a.PROCESSING = a.UPLOADING),
        (a.CANCELED = "canceled"),
        (a.ERROR = "error"),
        (a.SUCCESS = "success"),
        (e = function(a) {
            var b, c, d, e, f, g, h, i, j, k;
            for (
                h = a.naturalWidth,
                g = a.naturalHeight,
                c = document.createElement("canvas"),
                c.width = 1,
                c.height = g,
                d = c.getContext("2d"),
                d.drawImage(a, 0, 0),
                e = d.getImageData(0, 0, 1, g).data,
                k = 0,
                f = g,
                i = g; i > k;

            )
                (b = e[4 * (i - 1) + 3]),
                0 === b ? (f = i) : (k = i),
                (i = (f + k) >> 1);
            return (j = i / g), 0 === j ? 1 : j;
        }),
        (f = function(a, b, c, d, f, g, h, i, j, k) {
            var l;
            return (l = e(b)), a.drawImage(b, c, d, f, g, h, i, j, k / l);
        }),
        (d = function(a, b) {
            var c, d, e, f, g, h, i, j, k;
            if (
                ((e = !1),
                    (k = !0),
                    (d = a.document),
                    (j = d.documentElement),
                    (c = d.addEventListener ? "addEventListener" : "attachEvent"),
                    (i = d.addEventListener ? "removeEventListener" : "detachEvent"),
                    (h = d.addEventListener ? "" : "on"),
                    (f = function(c) {
                        return "readystatechange" !== c.type || "complete" === d.readyState ?
                            (("load" === c.type ? a : d)[i](h + c.type, f, !1), !e && (e = !0) ? b.call(a, c.type || c) : void 0) :
                            void 0;
                    }),
                    (g = function() {
                        var a;
                        try {
                            j.doScroll("left");
                        } catch (b) {
                            return (a = b), void setTimeout(g, 50);
                        }
                        return f("poll");
                    }),
                    "complete" !== d.readyState)
            ) {
                if (d.createEventObject && j.doScroll) {
                    try {
                        k = !a.frameElement;
                    } catch (l) {}
                    k && g();
                }
                return (
                    d[c](h + "DOMContentLoaded", f, !1),
                    d[c](h + "readystatechange", f, !1),
                    a[c](h + "load", f, !1)
                );
            }
        }),
        (a._autoDiscoverFunction = function() {
            return a.autoDiscover ? a.discover() : void 0;
        }),
        d(window, a._autoDiscoverFunction);
}.call(this));

/*!
 * Datepicker for Bootstrap v1.4.0 (https://github.com/eternicode/bootstrap-datepicker)
 *
 * Copyright 2012 Stefan Petre
 * Improvements by Andrew Rowls
 * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)
 */
!(function(a, b) {
    function c() {
        return new Date(Date.UTC.apply(Date, arguments));
    }

    function d() {
        var a = new Date();
        return c(a.getFullYear(), a.getMonth(), a.getDate());
    }

    function e(a, b) {
        return (
            a.getUTCFullYear() === b.getUTCFullYear() &&
            a.getUTCMonth() === b.getUTCMonth() &&
            a.getUTCDate() === b.getUTCDate()
        );
    }

    function f(a) {
        return function() {
            return this[a].apply(this, arguments);
        };
    }

    function g(b, c) {
        function d(a, b) {
            return b.toLowerCase();
        }
        var e,
            f = a(b).data(),
            g = {},
            h = new RegExp("^" + c.toLowerCase() + "([A-Z])");
        c = new RegExp("^" + c.toLowerCase());
        for (var i in f) c.test(i) && ((e = i.replace(h, d)), (g[e] = f[i]));
        return g;
    }

    function h(b) {
        var c = {};
        if (p[b] || ((b = b.split("-")[0]), p[b])) {
            var d = p[b];
            return (
                a.each(o, function(a, b) {
                    b in d && (c[b] = d[b]);
                }),
                c
            );
        }
    }
    var i = (function() {
            var b = {
                get: function(a) {
                    return this.slice(a)[0];
                },
                contains: function(a) {
                    for (var b = a && a.valueOf(), c = 0, d = this.length; d > c; c++)
                        if (this[c].valueOf() === b) return c;
                    return -1;
                },
                remove: function(a) {
                    this.splice(a, 1);
                },
                replace: function(b) {
                    b &&
                        (a.isArray(b) || (b = [b]), this.clear(), this.push.apply(this, b));
                },
                clear: function() {
                    this.length = 0;
                },
                copy: function() {
                    var a = new i();
                    return a.replace(this), a;
                },
            };
            return function() {
                var c = [];
                return c.push.apply(c, arguments), a.extend(c, b), c;
            };
        })(),
        j = function(b, c) {
            this._process_options(c),
                (this.dates = new i()),
                (this.viewDate = this.o.defaultViewDate),
                (this.focusDate = null),
                (this.element = a(b)),
                (this.isInline = !1),
                (this.isInput = this.element.is("input")),
                (this.component = this.element.hasClass("date") ?
                    this.element.find(".add-on, .input-group-addon, .btn") :
                    !1),
                (this.hasInput = this.component && this.element.find("input").length),
                this.component && 0 === this.component.length && (this.component = !1),
                (this.picker = a(q.template)),
                this._buildEvents(),
                this._attachEvents(),
                this.isInline ?
                this.picker.addClass("datepicker-inline").appendTo(this.element) :
                this.picker.addClass("datepicker-dropdown dropdown-menu"),
                this.o.rtl && this.picker.addClass("datepicker-rtl"),
                (this.viewMode = this.o.startView),
                this.o.calendarWeeks &&
                this.picker
                .find("tfoot .today, tfoot .clear")
                .attr("colspan", function(a, b) {
                    return parseInt(b) + 1;
                }),
                (this._allow_update = !1),
                this.setStartDate(this._o.startDate),
                this.setEndDate(this._o.endDate),
                this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled),
                this.setDatesDisabled(this.o.datesDisabled),
                this.fillDow(),
                this.fillMonths(),
                (this._allow_update = !0),
                this.update(),
                this.showMode(),
                this.isInline && this.show();
        };
    j.prototype = {
        constructor: j,
        _process_options: function(e) {
            this._o = a.extend({}, this._o, e);
            var f = (this.o = a.extend({}, this._o)),
                g = f.language;
            switch (
                (p[g] || ((g = g.split("-")[0]), p[g] || (g = n.language)),
                    (f.language = g),
                    f.startView)
            ) {
                case 2:
                case "decade":
                    f.startView = 2;
                    break;
                case 1:
                case "year":
                    f.startView = 1;
                    break;
                default:
                    f.startView = 0;
            }
            switch (f.minViewMode) {
                case 1:
                case "months":
                    f.minViewMode = 1;
                    break;
                case 2:
                case "years":
                    f.minViewMode = 2;
                    break;
                default:
                    f.minViewMode = 0;
            }
            (f.startView = Math.max(f.startView, f.minViewMode)),
            f.multidate !== !0 &&
                ((f.multidate = Number(f.multidate) || !1),
                    f.multidate !== !1 && (f.multidate = Math.max(0, f.multidate))),
                (f.multidateSeparator = String(f.multidateSeparator)),
                (f.weekStart %= 7),
                (f.weekEnd = (f.weekStart + 6) % 7);
            var h = q.parseFormat(f.format);
            if (
                (f.startDate !== -1 / 0 &&
                    (f.startDate = f.startDate ?
                        f.startDate instanceof Date ?
                        this._local_to_utc(this._zero_time(f.startDate)) :
                        q.parseDate(f.startDate, h, f.language) :
                        -1 / 0),
                    1 / 0 !== f.endDate &&
                    (f.endDate = f.endDate ?
                        f.endDate instanceof Date ?
                        this._local_to_utc(this._zero_time(f.endDate)) :
                        q.parseDate(f.endDate, h, f.language) :
                        1 / 0),
                    (f.daysOfWeekDisabled = f.daysOfWeekDisabled || []),
                    a.isArray(f.daysOfWeekDisabled) ||
                    (f.daysOfWeekDisabled = f.daysOfWeekDisabled.split(/[,\s]*/)),
                    (f.daysOfWeekDisabled = a.map(f.daysOfWeekDisabled, function(a) {
                        return parseInt(a, 10);
                    })),
                    (f.datesDisabled = f.datesDisabled || []), !a.isArray(f.datesDisabled))
            ) {
                var i = [];
                i.push(q.parseDate(f.datesDisabled, h, f.language)),
                    (f.datesDisabled = i);
            }
            f.datesDisabled = a.map(f.datesDisabled, function(a) {
                return q.parseDate(a, h, f.language);
            });
            var j = String(f.orientation).toLowerCase().split(/\s+/g),
                k = f.orientation.toLowerCase();
            if (
                ((j = a.grep(j, function(a) {
                        return /^auto|left|right|top|bottom$/.test(a);
                    })),
                    (f.orientation = {
                        x: "auto",
                        y: "auto"
                    }),
                    k && "auto" !== k)
            )
                if (1 === j.length)
                    switch (j[0]) {
                        case "top":
                        case "bottom":
                            f.orientation.y = j[0];
                            break;
                        case "left":
                        case "right":
                            f.orientation.x = j[0];
                    }
            else
                (k = a.grep(j, function(a) {
                    return /^left|right$/.test(a);
                })),
                (f.orientation.x = k[0] || "auto"),
                (k = a.grep(j, function(a) {
                    return /^top|bottom$/.test(a);
                })),
                (f.orientation.y = k[0] || "auto");
            else;
            if (f.defaultViewDate) {
                var l = f.defaultViewDate.year || new Date().getFullYear(),
                    m = f.defaultViewDate.month || 0,
                    o = f.defaultViewDate.day || 1;
                f.defaultViewDate = c(l, m, o);
            } else f.defaultViewDate = d();
            f.showOnFocus = f.showOnFocus !== b ? f.showOnFocus : !0;
        },
        _events: [],
        _secondaryEvents: [],
        _applyEvents: function(a) {
            for (var c, d, e, f = 0; f < a.length; f++)
                (c = a[f][0]),
                2 === a[f].length ?
                ((d = b), (e = a[f][1])) :
                3 === a[f].length && ((d = a[f][1]), (e = a[f][2])),
                c.on(e, d);
        },
        _unapplyEvents: function(a) {
            for (var c, d, e, f = 0; f < a.length; f++)
                (c = a[f][0]),
                2 === a[f].length ?
                ((e = b), (d = a[f][1])) :
                3 === a[f].length && ((e = a[f][1]), (d = a[f][2])),
                c.off(d, e);
        },
        _buildEvents: function() {
            var b = {
                keyup: a.proxy(function(b) {
                    -1 === a.inArray(b.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) &&
                        this.update();
                }, this),
                keydown: a.proxy(this.keydown, this),
            };
            this.o.showOnFocus === !0 && (b.focus = a.proxy(this.show, this)),
                this.isInput ?
                (this._events = [
                    [this.element, b]
                ]) :
                this.component && this.hasInput ?
                (this._events = [
                    [this.element.find("input"), b],
                    [this.component, {
                        click: a.proxy(this.show, this)
                    }],
                ]) :
                this.element.is("div") ?
                (this.isInline = !0) :
                (this._events = [
                    [this.element, {
                        click: a.proxy(this.show, this)
                    }],
                ]),
                this._events.push(
                    [
                        this.element,
                        "*",
                        {
                            blur: a.proxy(function(a) {
                                this._focused_from = a.target;
                            }, this),
                        },
                    ], [
                        this.element,
                        {
                            blur: a.proxy(function(a) {
                                this._focused_from = a.target;
                            }, this),
                        },
                    ]
                ),
                (this._secondaryEvents = [
                    [this.picker, {
                        click: a.proxy(this.click, this)
                    }],
                    [a(window), {
                        resize: a.proxy(this.place, this)
                    }],
                    [
                        a(document),
                        {
                            "mousedown touchstart": a.proxy(function(a) {
                                this.element.is(a.target) ||
                                    this.element.find(a.target).length ||
                                    this.picker.is(a.target) ||
                                    this.picker.find(a.target).length ||
                                    this.hide();
                            }, this),
                        },
                    ],
                ]);
        },
        _attachEvents: function() {
            this._detachEvents(), this._applyEvents(this._events);
        },
        _detachEvents: function() {
            this._unapplyEvents(this._events);
        },
        _attachSecondaryEvents: function() {
            this._detachSecondaryEvents(), this._applyEvents(this._secondaryEvents);
        },
        _detachSecondaryEvents: function() {
            this._unapplyEvents(this._secondaryEvents);
        },
        _trigger: function(b, c) {
            var d = c || this.dates.get(-1),
                e = this._utc_to_local(d);
            this.element.trigger({
                type: b,
                date: e,
                dates: a.map(this.dates, this._utc_to_local),
                format: a.proxy(function(a, b) {
                    0 === arguments.length ?
                        ((a = this.dates.length - 1), (b = this.o.format)) :
                        "string" == typeof a && ((b = a), (a = this.dates.length - 1)),
                        (b = b || this.o.format);
                    var c = this.dates.get(a);
                    return q.formatDate(c, b, this.o.language);
                }, this),
            });
        },
        show: function() {
            return this.element.attr("readonly") && this.o.enableOnReadonly === !1 ?
                void 0 :
                (this.isInline || this.picker.appendTo(this.o.container),
                    this.place(),
                    this.picker.show(),
                    this._attachSecondaryEvents(),
                    this._trigger("show"),
                    (window.navigator.msMaxTouchPoints || "ontouchstart" in document) &&
                    this.o.disableTouchKeyboard &&
                    a(this.element).blur(),
                    this);
        },
        hide: function() {
            return this.isInline ?
                this :
                this.picker.is(":visible") ?
                ((this.focusDate = null),
                    this.picker.hide().detach(),
                    this._detachSecondaryEvents(),
                    (this.viewMode = this.o.startView),
                    this.showMode(),
                    this.o.forceParse &&
                    ((this.isInput && this.element.val()) ||
                        (this.hasInput && this.element.find("input").val())) &&
                    this.setValue(),
                    this._trigger("hide"),
                    this) :
                this;
        },
        remove: function() {
            return (
                this.hide(),
                this._detachEvents(),
                this._detachSecondaryEvents(),
                this.picker.remove(),
                delete this.element.data().datepicker,
                this.isInput || delete this.element.data().date,
                this
            );
        },
        _utc_to_local: function(a) {
            return a && new Date(a.getTime() + 6e4 * a.getTimezoneOffset());
        },
        _local_to_utc: function(a) {
            return a && new Date(a.getTime() - 6e4 * a.getTimezoneOffset());
        },
        _zero_time: function(a) {
            return a && new Date(a.getFullYear(), a.getMonth(), a.getDate());
        },
        _zero_utc_time: function(a) {
            return (
                a &&
                new Date(Date.UTC(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate()))
            );
        },
        getDates: function() {
            return a.map(this.dates, this._utc_to_local);
        },
        getUTCDates: function() {
            return a.map(this.dates, function(a) {
                return new Date(a);
            });
        },
        getDate: function() {
            return this._utc_to_local(this.getUTCDate());
        },
        getUTCDate: function() {
            var a = this.dates.get(-1);
            return "undefined" != typeof a ? new Date(a) : null;
        },
        clearDates: function() {
            var a;
            this.isInput ?
                (a = this.element) :
                this.component && (a = this.element.find("input")),
                a && a.val("").change(),
                this.update(),
                this._trigger("changeDate"),
                this.o.autoclose && this.hide();
        },
        setDates: function() {
            var b = a.isArray(arguments[0]) ? arguments[0] : arguments;
            return (
                this.update.apply(this, b),
                this._trigger("changeDate"),
                this.setValue(),
                this
            );
        },
        setUTCDates: function() {
            var b = a.isArray(arguments[0]) ? arguments[0] : arguments;
            return (
                this.update.apply(this, a.map(b, this._utc_to_local)),
                this._trigger("changeDate"),
                this.setValue(),
                this
            );
        },
        setDate: f("setDates"),
        setUTCDate: f("setUTCDates"),
        setValue: function() {
            var a = this.getFormattedDate();
            return (
                this.isInput ?
                this.element.val(a).change() :
                this.component && this.element.find("input").val(a).change(),
                this
            );
        },
        getFormattedDate: function(c) {
            c === b && (c = this.o.format);
            var d = this.o.language;
            return a
                .map(this.dates, function(a) {
                    return q.formatDate(a, c, d);
                })
                .join(this.o.multidateSeparator);
        },
        setStartDate: function(a) {
            return (
                this._process_options({
                    startDate: a
                }),
                this.update(),
                this.updateNavArrows(),
                this
            );
        },
        setEndDate: function(a) {
            return (
                this._process_options({
                    endDate: a
                }),
                this.update(),
                this.updateNavArrows(),
                this
            );
        },
        setDaysOfWeekDisabled: function(a) {
            return (
                this._process_options({
                    daysOfWeekDisabled: a
                }),
                this.update(),
                this.updateNavArrows(),
                this
            );
        },
        setDatesDisabled: function(a) {
            this._process_options({
                    datesDisabled: a
                }),
                this.update(),
                this.updateNavArrows();
        },
        place: function() {
            if (this.isInline) return this;
            var b = this.picker.outerWidth(),
                c = this.picker.outerHeight(),
                d = 10,
                e = a(this.o.container).width(),
                f = a(this.o.container).height(),
                g = a(this.o.container).scrollTop(),
                h = a(this.o.container).offset(),
                i = [];
            this.element.parents().each(function() {
                var b = a(this).css("z-index");
                "auto" !== b && 0 !== b && i.push(parseInt(b));
            });
            var j = Math.max.apply(Math, i) + 10,
                k = this.component ?
                this.component.parent().offset() :
                this.element.offset(),
                l = this.component ?
                this.component.outerHeight(!0) :
                this.element.outerHeight(!1),
                m = this.component ?
                this.component.outerWidth(!0) :
                this.element.outerWidth(!1),
                n = k.left - h.left,
                o = k.top - h.top;
            this.picker.removeClass(
                    "datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left"
                ),
                "auto" !== this.o.orientation.x ?
                (this.picker.addClass("datepicker-orient-" + this.o.orientation.x),
                    "right" === this.o.orientation.x && (n -= b - m)) :
                k.left < 0 ?
                (this.picker.addClass("datepicker-orient-left"), (n -= k.left - d)) :
                n + b > e ?
                (this.picker.addClass("datepicker-orient-right"),
                    (n = k.left + m - b)) :
                this.picker.addClass("datepicker-orient-left");
            var p,
                q,
                r = this.o.orientation.y;
            if (
                ("auto" === r &&
                    ((p = -g + o - c),
                        (q = g + f - (o + l + c)),
                        (r = Math.max(p, q) === q ? "top" : "bottom")),
                    this.picker.addClass("datepicker-orient-" + r),
                    "top" === r ?
                    (o += l) :
                    (o -= c + parseInt(this.picker.css("padding-top"))),
                    this.o.rtl)
            ) {
                var s = e - (n + m);
                this.picker.css({
                    top: o,
                    right: s,
                    zIndex: j
                });
            } else this.picker.css({
                top: o,
                left: n,
                zIndex: j
            });
            return this;
        },
        _allow_update: !0,
        update: function() {
            if (!this._allow_update) return this;
            var b = this.dates.copy(),
                c = [],
                d = !1;
            return (
                arguments.length ?
                (a.each(
                        arguments,
                        a.proxy(function(a, b) {
                            b instanceof Date && (b = this._local_to_utc(b)), c.push(b);
                        }, this)
                    ),
                    (d = !0)) :
                ((c = this.isInput ?
                        this.element.val() :
                        this.element.data("date") || this.element.find("input").val()),
                    (c =
                        c && this.o.multidate ? c.split(this.o.multidateSeparator) : [c]),
                    delete this.element.data().date),
                (c = a.map(
                    c,
                    a.proxy(function(a) {
                        return q.parseDate(a, this.o.format, this.o.language);
                    }, this)
                )),
                (c = a.grep(
                    c,
                    a.proxy(function(a) {
                        return a < this.o.startDate || a > this.o.endDate || !a;
                    }, this), !0
                )),
                this.dates.replace(c),
                this.dates.length ?
                (this.viewDate = new Date(this.dates.get(-1))) :
                this.viewDate < this.o.startDate ?
                (this.viewDate = new Date(this.o.startDate)) :
                this.viewDate > this.o.endDate &&
                (this.viewDate = new Date(this.o.endDate)),
                d ?
                this.setValue() :
                c.length &&
                String(b) !== String(this.dates) &&
                this._trigger("changeDate"), !this.dates.length && b.length && this._trigger("clearDate"),
                this.fill(),
                this
            );
        },
        fillDow: function() {
            var a = this.o.weekStart,
                b = "<tr>";
            if (this.o.calendarWeeks) {
                this.picker
                    .find(".datepicker-days thead tr:first-child .datepicker-switch")
                    .attr("colspan", function(a, b) {
                        return parseInt(b) + 1;
                    });
                var c = '<th class="cw">&#160;</th>';
                b += c;
            }
            for (; a < this.o.weekStart + 7;)
                b += '<th class="dow">' + p[this.o.language].daysMin[a++ % 7] + "</th>";
            (b += "</tr>"), this.picker.find(".datepicker-days thead").append(b);
        },
        fillMonths: function() {
            for (var a = "", b = 0; 12 > b;)
                a +=
                '<span class="month">' +
                p[this.o.language].monthsShort[b++] +
                "</span>";
            this.picker.find(".datepicker-months td").html(a);
        },
        setRange: function(b) {
            b && b.length ?
                (this.range = a.map(b, function(a) {
                    return a.valueOf();
                })) :
                delete this.range,
                this.fill();
        },
        getClassNames: function(b) {
            var c = [],
                d = this.viewDate.getUTCFullYear(),
                f = this.viewDate.getUTCMonth(),
                g = new Date();
            return (
                b.getUTCFullYear() < d ||
                (b.getUTCFullYear() === d && b.getUTCMonth() < f) ?
                c.push("old") :
                (b.getUTCFullYear() > d ||
                    (b.getUTCFullYear() === d && b.getUTCMonth() > f)) &&
                c.push("new"),
                this.focusDate &&
                b.valueOf() === this.focusDate.valueOf() &&
                c.push("focused"),
                this.o.todayHighlight &&
                b.getUTCFullYear() === g.getFullYear() &&
                b.getUTCMonth() === g.getMonth() &&
                b.getUTCDate() === g.getDate() &&
                c.push("today"), -1 !== this.dates.contains(b) && c.push("active"),
                (b.valueOf() < this.o.startDate ||
                    b.valueOf() > this.o.endDate ||
                    -1 !== a.inArray(b.getUTCDay(), this.o.daysOfWeekDisabled)) &&
                c.push("disabled"),
                this.o.datesDisabled.length > 0 &&
                a.grep(this.o.datesDisabled, function(a) {
                    return e(b, a);
                }).length > 0 &&
                c.push("disabled", "disabled-date"),
                this.range &&
                (b > this.range[0] &&
                    b < this.range[this.range.length - 1] &&
                    c.push("range"), -1 !== a.inArray(b.valueOf(), this.range) && c.push("selected")),
                c
            );
        },
        fill: function() {
            var d,
                e = new Date(this.viewDate),
                f = e.getUTCFullYear(),
                g = e.getUTCMonth(),
                h =
                this.o.startDate !== -1 / 0 ?
                this.o.startDate.getUTCFullYear() :
                -1 / 0,
                i =
                this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0,
                j = 1 / 0 !== this.o.endDate ? this.o.endDate.getUTCFullYear() : 1 / 0,
                k = 1 / 0 !== this.o.endDate ? this.o.endDate.getUTCMonth() : 1 / 0,
                l = p[this.o.language].today || p.en.today || "",
                m = p[this.o.language].clear || p.en.clear || "";
            if (!isNaN(f) && !isNaN(g)) {
                this.picker
                    .find(".datepicker-days thead .datepicker-switch")
                    .text(p[this.o.language].months[g] + " " + f),
                    this.picker
                    .find("tfoot .today")
                    .text(l)
                    .toggle(this.o.todayBtn !== !1),
                    this.picker
                    .find("tfoot .clear")
                    .text(m)
                    .toggle(this.o.clearBtn !== !1),
                    this.updateNavArrows(),
                    this.fillMonths();
                var n = c(f, g - 1, 28),
                    o = q.getDaysInMonth(n.getUTCFullYear(), n.getUTCMonth());
                n.setUTCDate(o),
                    n.setUTCDate(o - ((n.getUTCDay() - this.o.weekStart + 7) % 7));
                var r = new Date(n);
                r.setUTCDate(r.getUTCDate() + 42), (r = r.valueOf());
                for (var s, t = []; n.valueOf() < r;) {
                    if (
                        n.getUTCDay() === this.o.weekStart &&
                        (t.push("<tr>"), this.o.calendarWeeks)
                    ) {
                        var u = new Date(+n + ((this.o.weekStart - n.getUTCDay() - 7) % 7) * 864e5),
                            v = new Date(Number(u) + ((11 - u.getUTCDay()) % 7) * 864e5),
                            w = new Date(
                                Number((w = c(v.getUTCFullYear(), 0, 1))) +
                                ((11 - w.getUTCDay()) % 7) * 864e5
                            ),
                            x = (v - w) / 864e5 / 7 + 1;
                        t.push('<td class="cw">' + x + "</td>");
                    }
                    if (
                        ((s = this.getClassNames(n)),
                            s.push("day"),
                            this.o.beforeShowDay !== a.noop)
                    ) {
                        var y = this.o.beforeShowDay(this._utc_to_local(n));
                        y === b ?
                            (y = {}) :
                            "boolean" == typeof y ?
                            (y = {
                                enabled: y
                            }) :
                            "string" == typeof y && (y = {
                                classes: y
                            }),
                            y.enabled === !1 && s.push("disabled"),
                            y.classes && (s = s.concat(y.classes.split(/\s+/))),
                            y.tooltip && (d = y.tooltip);
                    }
                    (s = a.unique(s)),
                    t.push(
                            '<td class="' +
                            s.join(" ") +
                            '"' +
                            (d ? ' title="' + d + '"' : "") +
                            ">" +
                            n.getUTCDate() +
                            "</td>"
                        ),
                        (d = null),
                        n.getUTCDay() === this.o.weekEnd && t.push("</tr>"),
                        n.setUTCDate(n.getUTCDate() + 1);
                }
                this.picker.find(".datepicker-days tbody").empty().append(t.join(""));
                var z = this.picker
                    .find(".datepicker-months")
                    .find("th:eq(1)")
                    .text(f)
                    .end()
                    .find("span")
                    .removeClass("active");
                if (
                    (a.each(this.dates, function(a, b) {
                            b.getUTCFullYear() === f &&
                                z.eq(b.getUTCMonth()).addClass("active");
                        }),
                        (h > f || f > j) && z.addClass("disabled"),
                        f === h && z.slice(0, i).addClass("disabled"),
                        f === j && z.slice(k + 1).addClass("disabled"),
                        this.o.beforeShowMonth !== a.noop)
                ) {
                    var A = this;
                    a.each(z, function(b, c) {
                        if (!a(c).hasClass("disabled")) {
                            var d = new Date(f, b, 1),
                                e = A.o.beforeShowMonth(d);
                            e === !1 && a(c).addClass("disabled");
                        }
                    });
                }
                (t = ""), (f = 10 * parseInt(f / 10, 10));
                var B = this.picker
                    .find(".datepicker-years")
                    .find("th:eq(1)")
                    .text(f + "-" + (f + 9))
                    .end()
                    .find("td");
                f -= 1;
                for (
                    var C,
                        D = a.map(this.dates, function(a) {
                            return a.getUTCFullYear();
                        }),
                        E = -1; 11 > E; E++
                )
                    (C = ["year"]), -1 === E ? C.push("old") : 10 === E && C.push("new"), -1 !== a.inArray(f, D) && C.push("active"),
                    (h > f || f > j) && C.push("disabled"),
                    (t += '<span class="' + C.join(" ") + '">' + f + "</span>"),
                    (f += 1);
                B.html(t);
            }
        },
        updateNavArrows: function() {
            if (this._allow_update) {
                var a = new Date(this.viewDate),
                    b = a.getUTCFullYear(),
                    c = a.getUTCMonth();
                switch (this.viewMode) {
                    case 0:
                        this.picker
                            .find(".prev")
                            .css(
                                this.o.startDate !== -1 / 0 &&
                                b <= this.o.startDate.getUTCFullYear() &&
                                c <= this.o.startDate.getUTCMonth() ?
                                {
                                    visibility: "hidden"
                                } :
                                {
                                    visibility: "visible"
                                }
                            ),
                            this.picker
                            .find(".next")
                            .css(
                                1 / 0 !== this.o.endDate &&
                                b >= this.o.endDate.getUTCFullYear() &&
                                c >= this.o.endDate.getUTCMonth() ?
                                {
                                    visibility: "hidden"
                                } :
                                {
                                    visibility: "visible"
                                }
                            );
                        break;
                    case 1:
                    case 2:
                        this.picker
                            .find(".prev")
                            .css(
                                this.o.startDate !== -1 / 0 &&
                                b <= this.o.startDate.getUTCFullYear() ?
                                {
                                    visibility: "hidden"
                                } :
                                {
                                    visibility: "visible"
                                }
                            ),
                            this.picker
                            .find(".next")
                            .css(
                                1 / 0 !== this.o.endDate &&
                                b >= this.o.endDate.getUTCFullYear() ?
                                {
                                    visibility: "hidden"
                                } :
                                {
                                    visibility: "visible"
                                }
                            );
                }
            }
        },
        click: function(b) {
            b.preventDefault();
            var d,
                e,
                f,
                g = a(b.target).closest("span, td, th");
            if (1 === g.length)
                switch (g[0].nodeName.toLowerCase()) {
                    case "th":
                        switch (g[0].className) {
                            case "datepicker-switch":
                                this.showMode(1);
                                break;
                            case "prev":
                            case "next":
                                var h =
                                    q.modes[this.viewMode].navStep *
                                    ("prev" === g[0].className ? -1 : 1);
                                switch (this.viewMode) {
                                    case 0:
                                        (this.viewDate = this.moveMonth(this.viewDate, h)),
                                        this._trigger("changeMonth", this.viewDate);
                                        break;
                                    case 1:
                                    case 2:
                                        (this.viewDate = this.moveYear(this.viewDate, h)),
                                        1 === this.viewMode &&
                                            this._trigger("changeYear", this.viewDate);
                                }
                                this.fill();
                                break;
                            case "today":
                                var i = new Date();
                                (i = c(i.getFullYear(), i.getMonth(), i.getDate(), 0, 0, 0)),
                                this.showMode(-2);
                                var j = "linked" === this.o.todayBtn ? null : "view";
                                this._setDate(i, j);
                                break;
                            case "clear":
                                this.clearDates();
                        }
                        break;
                    case "span":
                        g.hasClass("disabled") ||
                            (this.viewDate.setUTCDate(1),
                                g.hasClass("month") ?
                                ((f = 1),
                                    (e = g.parent().find("span").index(g)),
                                    (d = this.viewDate.getUTCFullYear()),
                                    this.viewDate.setUTCMonth(e),
                                    this._trigger("changeMonth", this.viewDate),
                                    1 === this.o.minViewMode && this._setDate(c(d, e, f))) :
                                ((f = 1),
                                    (e = 0),
                                    (d = parseInt(g.text(), 10) || 0),
                                    this.viewDate.setUTCFullYear(d),
                                    this._trigger("changeYear", this.viewDate),
                                    2 === this.o.minViewMode && this._setDate(c(d, e, f))),
                                this.showMode(-1),
                                this.fill());
                        break;
                    case "td":
                        g.hasClass("day") &&
                            !g.hasClass("disabled") &&
                            ((f = parseInt(g.text(), 10) || 1),
                                (d = this.viewDate.getUTCFullYear()),
                                (e = this.viewDate.getUTCMonth()),
                                g.hasClass("old") ?
                                0 === e ?
                                ((e = 11), (d -= 1)) :
                                (e -= 1) :
                                g.hasClass("new") &&
                                (11 === e ? ((e = 0), (d += 1)) : (e += 1)),
                                this._setDate(c(d, e, f)));
                }
            this.picker.is(":visible") &&
                this._focused_from &&
                a(this._focused_from).focus(),
                delete this._focused_from;
        },
        _toggle_multidate: function(a) {
            var b = this.dates.contains(a);
            if (
                (a || this.dates.clear(), -1 !== b ?
                    (this.o.multidate === !0 ||
                        this.o.multidate > 1 ||
                        this.o.toggleActive) &&
                    this.dates.remove(b) :
                    this.o.multidate === !1 ?
                    (this.dates.clear(), this.dates.push(a)) :
                    this.dates.push(a),
                    "number" == typeof this.o.multidate)
            )
                for (; this.dates.length > this.o.multidate;) this.dates.remove(0);
        },
        _setDate: function(a, b) {
            (b && "date" !== b) || this._toggle_multidate(a && new Date(a)),
                (b && "view" !== b) || (this.viewDate = a && new Date(a)),
                this.fill(),
                this.setValue(),
                (b && "view" === b) || this._trigger("changeDate");
            var c;
            this.isInput ?
                (c = this.element) :
                this.component && (c = this.element.find("input")),
                c && c.change(), !this.o.autoclose || (b && "date" !== b) || this.hide();
        },
        moveMonth: function(a, c) {
            if (!a) return b;
            if (!c) return a;
            var d,
                e,
                f = new Date(a.valueOf()),
                g = f.getUTCDate(),
                h = f.getUTCMonth(),
                i = Math.abs(c);
            if (((c = c > 0 ? 1 : -1), 1 === i))
                (e = -1 === c ?
                    function() {
                        return f.getUTCMonth() === h;
                    } :
                    function() {
                        return f.getUTCMonth() !== d;
                    }),
                (d = h + c),
                f.setUTCMonth(d),
                (0 > d || d > 11) && (d = (d + 12) % 12);
            else {
                for (var j = 0; i > j; j++) f = this.moveMonth(f, c);
                (d = f.getUTCMonth()),
                f.setUTCDate(g),
                    (e = function() {
                        return d !== f.getUTCMonth();
                    });
            }
            for (; e();) f.setUTCDate(--g), f.setUTCMonth(d);
            return f;
        },
        moveYear: function(a, b) {
            return this.moveMonth(a, 12 * b);
        },
        dateWithinRange: function(a) {
            return a >= this.o.startDate && a <= this.o.endDate;
        },
        keydown: function(a) {
            if (!this.picker.is(":visible"))
                return void(27 === a.keyCode && this.show());
            var b,
                c,
                e,
                f = !1,
                g = this.focusDate || this.viewDate;
            switch (a.keyCode) {
                case 27:
                    this.focusDate ?
                        ((this.focusDate = null),
                            (this.viewDate = this.dates.get(-1) || this.viewDate),
                            this.fill()) :
                        this.hide(),
                        a.preventDefault();
                    break;
                case 37:
                case 39:
                    if (!this.o.keyboardNavigation) break;
                    (b = 37 === a.keyCode ? -1 : 1),
                    a.ctrlKey ?
                        ((c = this.moveYear(this.dates.get(-1) || d(), b)),
                            (e = this.moveYear(g, b)),
                            this._trigger("changeYear", this.viewDate)) :
                        a.shiftKey ?
                        ((c = this.moveMonth(this.dates.get(-1) || d(), b)),
                            (e = this.moveMonth(g, b)),
                            this._trigger("changeMonth", this.viewDate)) :
                        ((c = new Date(this.dates.get(-1) || d())),
                            c.setUTCDate(c.getUTCDate() + b),
                            (e = new Date(g)),
                            e.setUTCDate(g.getUTCDate() + b)),
                        this.dateWithinRange(e) &&
                        ((this.focusDate = this.viewDate = e),
                            this.setValue(),
                            this.fill(),
                            a.preventDefault());
                    break;
                case 38:
                case 40:
                    if (!this.o.keyboardNavigation) break;
                    (b = 38 === a.keyCode ? -1 : 1),
                    a.ctrlKey ?
                        ((c = this.moveYear(this.dates.get(-1) || d(), b)),
                            (e = this.moveYear(g, b)),
                            this._trigger("changeYear", this.viewDate)) :
                        a.shiftKey ?
                        ((c = this.moveMonth(this.dates.get(-1) || d(), b)),
                            (e = this.moveMonth(g, b)),
                            this._trigger("changeMonth", this.viewDate)) :
                        ((c = new Date(this.dates.get(-1) || d())),
                            c.setUTCDate(c.getUTCDate() + 7 * b),
                            (e = new Date(g)),
                            e.setUTCDate(g.getUTCDate() + 7 * b)),
                        this.dateWithinRange(e) &&
                        ((this.focusDate = this.viewDate = e),
                            this.setValue(),
                            this.fill(),
                            a.preventDefault());
                    break;
                case 32:
                    break;
                case 13:
                    (g = this.focusDate || this.dates.get(-1) || this.viewDate),
                    this.o.keyboardNavigation && (this._toggle_multidate(g), (f = !0)),
                        (this.focusDate = null),
                        (this.viewDate = this.dates.get(-1) || this.viewDate),
                        this.setValue(),
                        this.fill(),
                        this.picker.is(":visible") &&
                        (a.preventDefault(),
                            "function" == typeof a.stopPropagation ?
                            a.stopPropagation() :
                            (a.cancelBubble = !0),
                            this.o.autoclose && this.hide());
                    break;
                case 9:
                    (this.focusDate = null),
                    (this.viewDate = this.dates.get(-1) || this.viewDate),
                    this.fill(),
                        this.hide();
            }
            if (f) {
                this._trigger(this.dates.length ? "changeDate" : "clearDate");
                var h;
                this.isInput ?
                    (h = this.element) :
                    this.component && (h = this.element.find("input")),
                    h && h.change();
            }
        },
        showMode: function(a) {
            a &&
                (this.viewMode = Math.max(
                    this.o.minViewMode,
                    Math.min(2, this.viewMode + a)
                )),
                this.picker
                .children("div")
                .hide()
                .filter(".datepicker-" + q.modes[this.viewMode].clsName)
                .css("display", "block"),
                this.updateNavArrows();
        },
    };
    var k = function(b, c) {
        (this.element = a(b)),
        (this.inputs = a.map(c.inputs, function(a) {
            return a.jquery ? a[0] : a;
        })),
        delete c.inputs,
            m
            .call(a(this.inputs), c)
            .bind("changeDate", a.proxy(this.dateUpdated, this)),
            (this.pickers = a.map(this.inputs, function(b) {
                return a(b).data("datepicker");
            })),
            this.updateDates();
    };
    k.prototype = {
        updateDates: function() {
            (this.dates = a.map(this.pickers, function(a) {
                return a.getUTCDate();
            })),
            this.updateRanges();
        },
        updateRanges: function() {
            var b = a.map(this.dates, function(a) {
                return a.valueOf();
            });
            a.each(this.pickers, function(a, c) {
                c.setRange(b);
            });
        },
        dateUpdated: function(b) {
            if (!this.updating) {
                this.updating = !0;
                var c = a(b.target).data("datepicker"),
                    d = c.getUTCDate(),
                    e = a.inArray(b.target, this.inputs),
                    f = e - 1,
                    g = e + 1,
                    h = this.inputs.length;
                if (-1 !== e) {
                    if (
                        (a.each(this.pickers, function(a, b) {
                                b.getUTCDate() || b.setUTCDate(d);
                            }),
                            d < this.dates[f])
                    )
                        for (; f >= 0 && d < this.dates[f];)
                            this.pickers[f--].setUTCDate(d);
                    else if (d > this.dates[g])
                        for (; h > g && d > this.dates[g];)
                            this.pickers[g++].setUTCDate(d);
                    this.updateDates(), delete this.updating;
                }
            }
        },
        remove: function() {
            a.map(this.pickers, function(a) {
                    a.remove();
                }),
                delete this.element.data().datepicker;
        },
    };
    var l = a.fn.datepicker,
        m = function(c) {
            var d = Array.apply(null, arguments);
            d.shift();
            var e;
            return (
                this.each(function() {
                    var f = a(this),
                        i = f.data("datepicker"),
                        l = "object" == typeof c && c;
                    if (!i) {
                        var m = g(this, "date"),
                            o = a.extend({}, n, m, l),
                            p = h(o.language),
                            q = a.extend({}, n, p, m, l);
                        if (f.hasClass("input-daterange") || q.inputs) {
                            var r = {
                                inputs: q.inputs || f.find("input").toArray()
                            };
                            f.data("datepicker", (i = new k(this, a.extend(q, r))));
                        } else f.data("datepicker", (i = new j(this, q)));
                    }
                    return "string" == typeof c &&
                        "function" == typeof i[c] &&
                        ((e = i[c].apply(i, d)), e !== b) ?
                        !1 :
                        void 0;
                }),
                e !== b ? e : this
            );
        };
    a.fn.datepicker = m;
    var n = (a.fn.datepicker.defaults = {
            autoclose: !1,
            beforeShowDay: a.noop,
            beforeShowMonth: a.noop,
            calendarWeeks: !1,
            clearBtn: !1,
            toggleActive: !1,
            daysOfWeekDisabled: [],
            datesDisabled: [],
            endDate: 1 / 0,
            forceParse: !0,
            format: "mm/dd/yyyy",
            keyboardNavigation: !0,
            language: "en",
            minViewMode: 0,
            multidate: !1,
            multidateSeparator: ",",
            orientation: "auto",
            rtl: !1,
            startDate: -1 / 0,
            startView: 0,
            todayBtn: !1,
            todayHighlight: !1,
            weekStart: 0,
            disableTouchKeyboard: !1,
            enableOnReadonly: !0,
            container: "body",
        }),
        o = (a.fn.datepicker.locale_opts = ["format", "rtl", "weekStart"]);
    a.fn.datepicker.Constructor = j;
    var p = (a.fn.datepicker.dates = {
            en: {
                days: [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday",
                ],
                daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
                months: [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December",
                ],
                monthsShort: [
                    "Jan",
                    "Feb",
                    "Mar",
                    "Apr",
                    "May",
                    "Jun",
                    "Jul",
                    "Aug",
                    "Sep",
                    "Oct",
                    "Nov",
                    "Dec",
                ],
                today: "Today",
                clear: "Clear",
            },
        }),
        q = {
            modes: [{
                    clsName: "days",
                    navFnc: "Month",
                    navStep: 1
                },
                {
                    clsName: "months",
                    navFnc: "FullYear",
                    navStep: 1
                },
                {
                    clsName: "years",
                    navFnc: "FullYear",
                    navStep: 10
                },
            ],
            isLeapYear: function(a) {
                return (a % 4 === 0 && a % 100 !== 0) || a % 400 === 0;
            },
            getDaysInMonth: function(a, b) {
                return [
                    31,
                    q.isLeapYear(a) ? 29 : 28,
                    31,
                    30,
                    31,
                    30,
                    31,
                    31,
                    30,
                    31,
                    30,
                    31,
                ][b];
            },
            validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
            nonpunctuation: /[^ -\/:-@\[\u3400-\u9fff-`{-~\t\n\r]+/g,
            parseFormat: function(a) {
                var b = a.replace(this.validParts, "\x00").split("\x00"),
                    c = a.match(this.validParts);
                if (!b || !b.length || !c || 0 === c.length)
                    throw new Error("Invalid date format.");
                return {
                    separators: b,
                    parts: c
                };
            },
            parseDate: function(d, e, f) {
                function g() {
                    var a = this.slice(0, m[k].length),
                        b = m[k].slice(0, a.length);
                    return a.toLowerCase() === b.toLowerCase();
                }
                if (!d) return b;
                if (d instanceof Date) return d;
                "string" == typeof e && (e = q.parseFormat(e));
                var h,
                    i,
                    k,
                    l = /([\-+]\d+)([dmwy])/,
                    m = d.match(/([\-+]\d+)([dmwy])/g);
                if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/.test(d)) {
                    for (d = new Date(), k = 0; k < m.length; k++)
                        switch (((h = l.exec(m[k])), (i = parseInt(h[1])), h[2])) {
                            case "d":
                                d.setUTCDate(d.getUTCDate() + i);
                                break;
                            case "m":
                                d = j.prototype.moveMonth.call(j.prototype, d, i);
                                break;
                            case "w":
                                d.setUTCDate(d.getUTCDate() + 7 * i);
                                break;
                            case "y":
                                d = j.prototype.moveYear.call(j.prototype, d, i);
                        }
                    return c(
                        d.getUTCFullYear(),
                        d.getUTCMonth(),
                        d.getUTCDate(),
                        0,
                        0,
                        0
                    );
                }
                (m = (d && d.match(this.nonpunctuation)) || []), (d = new Date());
                var n,
                    o,
                    r = {},
                    s = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"],
                    t = {
                        yyyy: function(a, b) {
                            return a.setUTCFullYear(b);
                        },
                        yy: function(a, b) {
                            return a.setUTCFullYear(2e3 + b);
                        },
                        m: function(a, b) {
                            if (isNaN(a)) return a;
                            for (b -= 1; 0 > b;) b += 12;
                            for (b %= 12, a.setUTCMonth(b); a.getUTCMonth() !== b;)
                                a.setUTCDate(a.getUTCDate() - 1);
                            return a;
                        },
                        d: function(a, b) {
                            return a.setUTCDate(b);
                        },
                    };
                (t.M = t.MM = t.mm = t.m),
                (t.dd = t.d),
                (d = c(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0));
                var u = e.parts.slice();
                if (
                    (m.length !== u.length &&
                        (u = a(u)
                            .filter(function(b, c) {
                                return -1 !== a.inArray(c, s);
                            })
                            .toArray()),
                        m.length === u.length)
                ) {
                    var v;
                    for (k = 0, v = u.length; v > k; k++) {
                        if (((n = parseInt(m[k], 10)), (h = u[k]), isNaN(n)))
                            switch (h) {
                                case "MM":
                                    (o = a(p[f].months).filter(g)),
                                    (n = a.inArray(o[0], p[f].months) + 1);
                                    break;
                                case "M":
                                    (o = a(p[f].monthsShort).filter(g)),
                                    (n = a.inArray(o[0], p[f].monthsShort) + 1);
                            }
                        r[h] = n;
                    }
                    var w, x;
                    for (k = 0; k < s.length; k++)
                        (x = s[k]),
                        x in r &&
                        !isNaN(r[x]) &&
                        ((w = new Date(d)), t[x](w, r[x]), isNaN(w) || (d = w));
                }
                return d;
            },
            formatDate: function(b, c, d) {
                if (!b) return "";
                "string" == typeof c && (c = q.parseFormat(c));
                var e = {
                    d: b.getUTCDate(),
                    D: p[d].daysShort[b.getUTCDay()],
                    DD: p[d].days[b.getUTCDay()],
                    m: b.getUTCMonth() + 1,
                    M: p[d].monthsShort[b.getUTCMonth()],
                    MM: p[d].months[b.getUTCMonth()],
                    yy: b.getUTCFullYear().toString().substring(2),
                    yyyy: b.getUTCFullYear(),
                };
                (e.dd = (e.d < 10 ? "0" : "") + e.d),
                (e.mm = (e.m < 10 ? "0" : "") + e.m),
                (b = []);
                for (
                    var f = a.extend([], c.separators), g = 0, h = c.parts.length; h >= g; g++
                )
                    f.length && b.push(f.shift()), b.push(e[c.parts[g]]);
                return b.join("");
            },
            headTemplate: '<thead><tr><th class="prev">&#171;</th><th colspan="5" class="datepicker-switch"></th><th class="next">&#187;</th></tr></thead>',
            contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
            footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>',
        };
    (q.template =
        '<div class="datepicker"><div class="datepicker-days"><table class=" table-condensed">' +
        q.headTemplate +
        "<tbody></tbody>" +
        q.footTemplate +
        '</table></div><div class="datepicker-months"><table class="table-condensed">' +
        q.headTemplate +
        q.contTemplate +
        q.footTemplate +
        '</table></div><div class="datepicker-years"><table class="table-condensed">' +
        q.headTemplate +
        q.contTemplate +
        q.footTemplate +
        "</table></div></div>"),
    (a.fn.datepicker.DPGlobal = q),
    (a.fn.datepicker.noConflict = function() {
        return (a.fn.datepicker = l), this;
    }),
    (a.fn.datepicker.version = "1.4.0"),
    a(document).on(
            "focus.datepicker.data-api click.datepicker.data-api",
            '[data-provide="datepicker"]',
            function(b) {
                var c = a(this);
                c.data("datepicker") || (b.preventDefault(), m.call(c, "show"));
            }
        ),
        a(function() {
            m.call(a('[data-provide="datepicker-inline"]'));
        });
})(window.jQuery);

/*! bootstrap-timepicker v0.2.5
 * http://jdewit.github.com/bootstrap-timepicker
 * Copyright (c) 2013 Joris de Wit
 * MIT License
 */
!(function(a, b, c) {
    "use strict";
    var d = function(b, c) {
        (this.widget = ""),
        (this.$element = a(b)),
        (this.defaultTime = c.defaultTime),
        (this.disableFocus = c.disableFocus),
        (this.disableMousewheel = c.disableMousewheel),
        (this.isOpen = c.isOpen),
        (this.minuteStep = c.minuteStep),
        (this.modalBackdrop = c.modalBackdrop),
        (this.secondStep = c.secondStep),
        (this.showInputs = c.showInputs),
        (this.showMeridian = c.showMeridian),
        (this.showSeconds = c.showSeconds),
        (this.template = c.template),
        (this.appendWidgetTo = c.appendWidgetTo),
        (this.showWidgetOnAddonClick = c.showWidgetOnAddonClick),
        this._init();
    };
    (d.prototype = {
        constructor: d,
        _init: function() {
            var b = this;
            this.showWidgetOnAddonClick &&
                (this.$element.parent().hasClass("input-group") ||
                    this.$element.parent().hasClass("input-group")) ?
                (this.$element
                    .parent(".input-group")
                    .find(".input-group-addon, .input-group-btn")
                    .on({
                        "click.timepicker": a.proxy(this.showWidget, this)
                    }),
                    this.$element.on({
                        "focus.timepicker": a.proxy(this.highlightUnit, this),
                        "click.timepicker": a.proxy(this.highlightUnit, this),
                        "keydown.timepicker": a.proxy(this.elementKeydown, this),
                        "blur.timepicker": a.proxy(this.blurElement, this),
                        "mousewheel.timepicker DOMMouseScroll.timepicker": a.proxy(
                            this.mousewheel,
                            this
                        ),
                    })) :
                this.template ?
                this.$element.on({
                    "focus.timepicker": a.proxy(this.showWidget, this),
                    "click.timepicker": a.proxy(this.showWidget, this),
                    "blur.timepicker": a.proxy(this.blurElement, this),
                    "mousewheel.timepicker DOMMouseScroll.timepicker": a.proxy(
                        this.mousewheel,
                        this
                    ),
                }) :
                this.$element.on({
                    "focus.timepicker": a.proxy(this.highlightUnit, this),
                    "click.timepicker": a.proxy(this.highlightUnit, this),
                    "keydown.timepicker": a.proxy(this.elementKeydown, this),
                    "blur.timepicker": a.proxy(this.blurElement, this),
                    "mousewheel.timepicker DOMMouseScroll.timepicker": a.proxy(
                        this.mousewheel,
                        this
                    ),
                }),
                (this.$widget =
                    this.template !== !1 ?
                    a(this.getTemplate())
                    .prependTo(this.$element.parents(this.appendWidgetTo))
                    .on("click", a.proxy(this.widgetClick, this)) :
                    !1),
                this.showInputs &&
                this.$widget !== !1 &&
                this.$widget.find("input").each(function() {
                    a(this).on({
                        "click.timepicker": function() {
                            a(this).select();
                        },
                        "keydown.timepicker": a.proxy(b.widgetKeydown, b),
                        "keyup.timepicker": a.proxy(b.widgetKeyup, b),
                    });
                }),
                this.setDefaultTime(this.defaultTime);
        },
        blurElement: function() {
            (this.highlightedUnit = null), this.updateFromElementVal();
        },
        clear: function() {
            (this.hour = ""),
            (this.minute = ""),
            (this.second = ""),
            (this.meridian = ""),
            this.$element.val("");
        },
        decrementHour: function() {
            if (this.showMeridian)
                if (1 === this.hour) this.hour = 12;
                else {
                    if (12 === this.hour) return this.hour--, this.toggleMeridian();
                    if (0 === this.hour) return (this.hour = 11), this.toggleMeridian();
                    this.hour--;
                }
            else this.hour <= 0 ? (this.hour = 23) : this.hour--;
        },
        decrementMinute: function(a) {
            var b;
            (b = a ? this.minute - a : this.minute - this.minuteStep),
            0 > b ?
                (this.decrementHour(), (this.minute = b + 60)) :
                (this.minute = b);
        },
        decrementSecond: function() {
            var a = this.second - this.secondStep;
            0 > a ?
                (this.decrementMinute(!0), (this.second = a + 60)) :
                (this.second = a);
        },
        elementKeydown: function(a) {
            switch (a.keyCode) {
                case 9:
                case 27:
                    this.updateFromElementVal();
                    break;
                case 37:
                    a.preventDefault(), this.highlightPrevUnit();
                    break;
                case 38:
                    switch ((a.preventDefault(), this.highlightedUnit)) {
                        case "hour":
                            this.incrementHour(), this.highlightHour();
                            break;
                        case "minute":
                            this.incrementMinute(), this.highlightMinute();
                            break;
                        case "second":
                            this.incrementSecond(), this.highlightSecond();
                            break;
                        case "meridian":
                            this.toggleMeridian(), this.highlightMeridian();
                    }
                    this.update();
                    break;
                case 39:
                    a.preventDefault(), this.highlightNextUnit();
                    break;
                case 40:
                    switch ((a.preventDefault(), this.highlightedUnit)) {
                        case "hour":
                            this.decrementHour(), this.highlightHour();
                            break;
                        case "minute":
                            this.decrementMinute(), this.highlightMinute();
                            break;
                        case "second":
                            this.decrementSecond(), this.highlightSecond();
                            break;
                        case "meridian":
                            this.toggleMeridian(), this.highlightMeridian();
                    }
                    this.update();
            }
        },
        getCursorPosition: function() {
            var a = this.$element.get(0);
            if ("selectionStart" in a) return a.selectionStart;
            if (c.selection) {
                a.focus();
                var b = c.selection.createRange(),
                    d = c.selection.createRange().text.length;
                return b.moveStart("character", -a.value.length), b.text.length - d;
            }
        },
        getTemplate: function() {
            var a, b, c, d, e, f;
            switch (
                (this.showInputs ?
                    ((b =
                            '<input type="text" class="form-control bootstrap-timepicker-hour" maxlength="2"/>'),
                        (c =
                            '<input type="text" class="form-control bootstrap-timepicker-minute" maxlength="2"/>'),
                        (d =
                            '<input type="text" class="form-control bootstrap-timepicker-second" maxlength="2"/>'),
                        (e =
                            '<input type="text" class="form-control bootstrap-timepicker-meridian" maxlength="2"/>')) :
                    ((b = '<span class="bootstrap-timepicker-hour"></span>'),
                        (c = '<span class="bootstrap-timepicker-minute"></span>'),
                        (d = '<span class="bootstrap-timepicker-second"></span>'),
                        (e = '<span class="bootstrap-timepicker-meridian"></span>')),
                    (f =
                        '<table><tr><td><a href="#" data-action="incrementHour"><i class="fa fa-chevron-up"></i></a></td><td class="separator">&nbsp;</td><td><a href="#" data-action="incrementMinute"><i class="fa fa-chevron-up"></i></a></td>' +
                        (this.showSeconds ?
                            '<td class="separator">&nbsp;</td><td><a href="#" data-action="incrementSecond"><i class="fa fa-chevron-up"></i></a></td>' :
                            "") +
                        (this.showMeridian ?
                            '<td class="separator">&nbsp;</td><td class="meridian-column"><a href="#" data-action="toggleMeridian"><i class="fa fa-chevron-up"></i></a></td>' :
                            "") +
                        "</tr>" +
                        "<tr>" +
                        "<td>" +
                        b +
                        "</td> " +
                        '<td class="separator">:</td>' +
                        "<td>" +
                        c +
                        "</td> " +
                        (this.showSeconds ?
                            '<td class="separator">:</td><td>' + d + "</td>" :
                            "") +
                        (this.showMeridian ?
                            '<td class="separator">&nbsp;</td><td>' + e + "</td>" :
                            "") +
                        "</tr>" +
                        "<tr>" +
                        '<td><a href="#" data-action="decrementHour"><i class="fa fa-chevron-down"></i></a></td>' +
                        '<td class="separator"></td>' +
                        '<td><a href="#" data-action="decrementMinute"><i class="fa fa-chevron-down"></i></a></td>' +
                        (this.showSeconds ?
                            '<td class="separator">&nbsp;</td><td><a href="#" data-action="decrementSecond"><i class="fa fa-chevron-down"></i></a></td>' :
                            "") +
                        (this.showMeridian ?
                            '<td class="separator">&nbsp;</td><td><a href="#" data-action="toggleMeridian"><i class="fa fa-chevron-down"></i></a></td>' :
                            "") +
                        "</tr>" +
                        "</table>"),
                    this.template)
            ) {
                case "modal":
                    a =
                        '<div class="modal fade in" data-backdrop="' +
                        (this.modalBackdrop ? "true" : "false") +
                        '">' +
                        '<div class="modal-dialog"><div class="modal-content"><div class="modal-header">' +
                        '<a href="#" class="close" data-dismiss="modal">×</a>' +
                        "<h3>Pick Time</h3>" +
                        "</div>" +
                        '<div class="modal-content"><div class="bootstrap-timepicker-widget">' +
                        f +
                        "</div></div>" +
                        '<div class="modal-footer">' +
                        '<a href="#" class="btn btn-sm btn-primary" data-dismiss="modal">OK</a>' +
                        "</div>" +
                        "</div>" +
                        "</div>" +
                        "</div>";
                    break;
                case "dropdown":
                    a =
                        '<div class="bootstrap-timepicker-widget dropdown-menu">' +
                        f +
                        "</div>";
            }
            return a;
        },
        getTime: function() {
            return this.hour || this.minute || this.second ?
                this.hour +
                ":" +
                (1 === this.minute.toString().length ?
                    "0" + this.minute :
                    this.minute) +
                (this.showSeconds ?
                    ":" +
                    (1 === this.second.toString().length ?
                        "0" + this.second :
                        this.second) :
                    "") +
                (this.showMeridian ? " " + this.meridian : "") :
                "";
        },
        hideWidget: function() {
            this.isOpen !== !1 &&
                (this.$element.trigger({
                        type: "hide.timepicker",
                        time: {
                            value: this.getTime(),
                            hours: this.hour,
                            minutes: this.minute,
                            seconds: this.second,
                            meridian: this.meridian,
                        },
                    }),
                    "modal" === this.template && this.$widget.modal ?
                    this.$widget.modal("hide") :
                    this.$widget.removeClass("open"),
                    a(c).off("mousedown.timepicker, touchend.timepicker"),
                    (this.isOpen = !1));
        },
        highlightUnit: function() {
            (this.position = this.getCursorPosition()),
            this.position >= 0 && this.position <= 2 ?
                this.highlightHour() :
                this.position >= 3 && this.position <= 5 ?
                this.highlightMinute() :
                this.position >= 6 && this.position <= 8 ?
                this.showSeconds ?
                this.highlightSecond() :
                this.highlightMeridian() :
                this.position >= 9 &&
                this.position <= 11 &&
                this.highlightMeridian();
        },
        highlightNextUnit: function() {
            switch (this.highlightedUnit) {
                case "hour":
                    this.highlightMinute();
                    break;
                case "minute":
                    this.showSeconds ?
                        this.highlightSecond() :
                        this.showMeridian ?
                        this.highlightMeridian() :
                        this.highlightHour();
                    break;
                case "second":
                    this.showMeridian ? this.highlightMeridian() : this.highlightHour();
                    break;
                case "meridian":
                    this.highlightHour();
            }
        },
        highlightPrevUnit: function() {
            switch (this.highlightedUnit) {
                case "hour":
                    this.showMeridian ?
                        this.highlightMeridian() :
                        this.showSeconds ?
                        this.highlightSecond() :
                        this.highlightMinute();
                    break;
                case "minute":
                    this.highlightHour();
                    break;
                case "second":
                    this.highlightMinute();
                    break;
                case "meridian":
                    this.showSeconds ? this.highlightSecond() : this.highlightMinute();
            }
        },
        highlightHour: function() {
            var a = this.$element.get(0),
                b = this;
            (this.highlightedUnit = "hour"),
            a.setSelectionRange &&
                setTimeout(function() {
                    b.hour < 10 ? a.setSelectionRange(0, 1) : a.setSelectionRange(0, 2);
                }, 0);
        },
        highlightMinute: function() {
            var a = this.$element.get(0),
                b = this;
            (this.highlightedUnit = "minute"),
            a.setSelectionRange &&
                setTimeout(function() {
                    b.hour < 10 ? a.setSelectionRange(2, 4) : a.setSelectionRange(3, 5);
                }, 0);
        },
        highlightSecond: function() {
            var a = this.$element.get(0),
                b = this;
            (this.highlightedUnit = "second"),
            a.setSelectionRange &&
                setTimeout(function() {
                    b.hour < 10 ? a.setSelectionRange(5, 7) : a.setSelectionRange(6, 8);
                }, 0);
        },
        highlightMeridian: function() {
            var a = this.$element.get(0),
                b = this;
            (this.highlightedUnit = "meridian"),
            a.setSelectionRange &&
                (this.showSeconds ?
                    setTimeout(function() {
                        b.hour < 10 ?
                            a.setSelectionRange(8, 10) :
                            a.setSelectionRange(9, 11);
                    }, 0) :
                    setTimeout(function() {
                        b.hour < 10 ?
                            a.setSelectionRange(5, 7) :
                            a.setSelectionRange(6, 8);
                    }, 0));
        },
        incrementHour: function() {
            if (this.showMeridian) {
                if (11 === this.hour) return this.hour++, this.toggleMeridian();
                12 === this.hour && (this.hour = 0);
            }
            return 23 === this.hour ?
                ((this.hour = 0), void 0) :
                (this.hour++, void 0);
        },
        incrementMinute: function(a) {
            var b;
            (b = a ?
                this.minute + a :
                this.minute + this.minuteStep - (this.minute % this.minuteStep)),
            b > 59 ?
                (this.incrementHour(), (this.minute = b - 60)) :
                (this.minute = b);
        },
        incrementSecond: function() {
            var a = this.second + this.secondStep - (this.second % this.secondStep);
            a > 59 ?
                (this.incrementMinute(!0), (this.second = a - 60)) :
                (this.second = a);
        },
        mousewheel: function(b) {
            if (!this.disableMousewheel) {
                b.preventDefault(), b.stopPropagation();
                var c = b.originalEvent.wheelDelta || -b.originalEvent.detail,
                    d = null;
                switch (
                    ("mousewheel" === b.type ?
                        (d = -1 * b.originalEvent.wheelDelta) :
                        "DOMMouseScroll" === b.type && (d = 40 * b.originalEvent.detail),
                        d && (b.preventDefault(), a(this).scrollTop(d + a(this).scrollTop())),
                        this.highlightedUnit)
                ) {
                    case "minute":
                        c > 0 ? this.incrementMinute() : this.decrementMinute(),
                            this.highlightMinute();
                        break;
                    case "second":
                        c > 0 ? this.incrementSecond() : this.decrementSecond(),
                            this.highlightSecond();
                        break;
                    case "meridian":
                        this.toggleMeridian(), this.highlightMeridian();
                        break;
                    default:
                        c > 0 ? this.incrementHour() : this.decrementHour(),
                            this.highlightHour();
                }
                return !1;
            }
        },
        remove: function() {
            a("document").off(".timepicker"),
                this.$widget && this.$widget.remove(),
                delete this.$element.data().timepicker;
        },
        setDefaultTime: function(a) {
            if (this.$element.val()) this.updateFromElementVal();
            else if ("current" === a) {
                var b = new Date(),
                    c = b.getHours(),
                    d = b.getMinutes(),
                    e = b.getSeconds(),
                    f = "AM";
                0 !== e &&
                    ((e = Math.ceil(b.getSeconds() / this.secondStep) * this.secondStep),
                        60 === e && ((d += 1), (e = 0))),
                    0 !== d &&
                    ((d =
                            Math.ceil(b.getMinutes() / this.minuteStep) * this.minuteStep),
                        60 === d && ((c += 1), (d = 0))),
                    this.showMeridian &&
                    (0 === c ?
                        (c = 12) :
                        c >= 12 ?
                        (c > 12 && (c -= 12), (f = "PM")) :
                        (f = "AM")),
                    (this.hour = c),
                    (this.minute = d),
                    (this.second = e),
                    (this.meridian = f),
                    this.update();
            } else
                a === !1 ?
                ((this.hour = 0),
                    (this.minute = 0),
                    (this.second = 0),
                    (this.meridian = "AM")) :
                this.setTime(a);
        },
        setTime: function(a, b) {
            if (!a) return this.clear(), void 0;
            var c, d, e, f, g;
            "object" == typeof a && a.getMonth ?
                ((d = a.getHours()),
                    (e = a.getMinutes()),
                    (f = a.getSeconds()),
                    this.showMeridian &&
                    ((g = "AM"),
                        d > 12 && ((g = "PM"), (d %= 12)),
                        12 === d && (g = "PM"))) :
                ((g = null !== a.match(/p/i) ? "PM" : "AM"),
                    (a = a.replace(/[^0-9\:]/g, "")),
                    (c = a.split(":")),
                    (d = c[0] ? c[0].toString() : c.toString()),
                    (e = c[1] ? c[1].toString() : ""),
                    (f = c[2] ? c[2].toString() : ""),
                    d.length > 4 && (f = d.substr(4, 2)),
                    d.length > 2 && ((e = d.substr(2, 2)), (d = d.substr(0, 2))),
                    e.length > 2 && ((f = e.substr(2, 2)), (e = e.substr(0, 2))),
                    f.length > 2 && (f = f.substr(2, 2)),
                    (d = parseInt(d, 10)),
                    (e = parseInt(e, 10)),
                    (f = parseInt(f, 10)),
                    isNaN(d) && (d = 0),
                    isNaN(e) && (e = 0),
                    isNaN(f) && (f = 0),
                    this.showMeridian ?
                    1 > d ?
                    (d = 1) :
                    d > 12 && (d = 12) :
                    (d >= 24 ? (d = 23) : 0 > d && (d = 0),
                        13 > d && "PM" === g && (d += 12)),
                    0 > e ? (e = 0) : e >= 60 && (e = 59),
                    this.showSeconds &&
                    (isNaN(f) ? (f = 0) : 0 > f ? (f = 0) : f >= 60 && (f = 59))),
                (this.hour = d),
                (this.minute = e),
                (this.second = f),
                (this.meridian = g),
                this.update(b);
        },
        showWidget: function() {
            if (!this.isOpen && !this.$element.is(":disabled")) {
                var b = this;
                a(c).on("mousedown.timepicker, touchend.timepicker", function(c) {
                        0 === a(c.target).closest(".bootstrap-timepicker-widget").length &&
                            b.hideWidget();
                    }),
                    this.$element.trigger({
                        type: "show.timepicker",
                        time: {
                            value: this.getTime(),
                            hours: this.hour,
                            minutes: this.minute,
                            seconds: this.second,
                            meridian: this.meridian,
                        },
                    }),
                    this.disableFocus && this.$element.blur(),
                    this.hour ||
                    (this.defaultTime ?
                        this.setDefaultTime(this.defaultTime) :
                        this.setTime("0:0:0")),
                    "modal" === this.template && this.$widget.modal ?
                    this.$widget
                    .modal("show")
                    .on("hidden", a.proxy(this.hideWidget, this)) :
                    this.isOpen === !1 && this.$widget.addClass("open"),
                    (this.isOpen = !0);
            }
        },
        toggleMeridian: function() {
            this.meridian = "AM" === this.meridian ? "PM" : "AM";
        },
        update: function(a) {
            this.updateElement(),
                a || this.updateWidget(),
                this.$element.trigger({
                    type: "changeTime.timepicker",
                    time: {
                        value: this.getTime(),
                        hours: this.hour,
                        minutes: this.minute,
                        seconds: this.second,
                        meridian: this.meridian,
                    },
                });
        },
        updateElement: function() {
            this.$element.val(this.getTime()).change();
        },
        updateFromElementVal: function() {
            this.setTime(this.$element.val());
        },
        updateWidget: function() {
            if (this.$widget !== !1) {
                var a = this.hour,
                    b =
                    1 === this.minute.toString().length ?
                    "0" + this.minute :
                    this.minute,
                    c =
                    1 === this.second.toString().length ?
                    "0" + this.second :
                    this.second;
                this.showInputs ?
                    (this.$widget.find("input.bootstrap-timepicker-hour").val(a),
                        this.$widget.find("input.bootstrap-timepicker-minute").val(b),
                        this.showSeconds &&
                        this.$widget.find("input.bootstrap-timepicker-second").val(c),
                        this.showMeridian &&
                        this.$widget
                        .find("input.bootstrap-timepicker-meridian")
                        .val(this.meridian)) :
                    (this.$widget.find("span.bootstrap-timepicker-hour").text(a),
                        this.$widget.find("span.bootstrap-timepicker-minute").text(b),
                        this.showSeconds &&
                        this.$widget.find("span.bootstrap-timepicker-second").text(c),
                        this.showMeridian &&
                        this.$widget
                        .find("span.bootstrap-timepicker-meridian")
                        .text(this.meridian));
            }
        },
        updateFromWidgetInputs: function() {
            if (this.$widget !== !1) {
                var a =
                    this.$widget.find("input.bootstrap-timepicker-hour").val() +
                    ":" +
                    this.$widget.find("input.bootstrap-timepicker-minute").val() +
                    (this.showSeconds ?
                        ":" + this.$widget.find("input.bootstrap-timepicker-second").val() :
                        "") +
                    (this.showMeridian ?
                        this.$widget.find("input.bootstrap-timepicker-meridian").val() :
                        "");
                this.setTime(a, !0);
            }
        },
        widgetClick: function(b) {
            b.stopPropagation(), b.preventDefault();
            var c = a(b.target),
                d = c.closest("a").data("action");
            d && this[d](),
                this.update(),
                c.is("input") && c.get(0).setSelectionRange(0, 2);
        },
        widgetKeydown: function(b) {
            var c = a(b.target),
                d = c.attr("class").replace("bootstrap-timepicker-", "");
            switch (b.keyCode) {
                case 9:
                    if (
                        (this.showMeridian && "meridian" === d) ||
                        (this.showSeconds && "second" === d) ||
                        (!this.showMeridian && !this.showSeconds && "minute" === d)
                    )
                        return this.hideWidget();
                    break;
                case 27:
                    this.hideWidget();
                    break;
                case 38:
                    switch ((b.preventDefault(), d)) {
                        case "hour":
                            this.incrementHour();
                            break;
                        case "minute":
                            this.incrementMinute();
                            break;
                        case "second":
                            this.incrementSecond();
                            break;
                        case "meridian":
                            this.toggleMeridian();
                    }
                    this.setTime(this.getTime()), c.get(0).setSelectionRange(0, 2);
                    break;
                case 40:
                    switch ((b.preventDefault(), d)) {
                        case "hour":
                            this.decrementHour();
                            break;
                        case "minute":
                            this.decrementMinute();
                            break;
                        case "second":
                            this.decrementSecond();
                            break;
                        case "meridian":
                            this.toggleMeridian();
                    }
                    this.setTime(this.getTime()), c.get(0).setSelectionRange(0, 2);
            }
        },
        widgetKeyup: function(a) {
            (65 === a.keyCode ||
                77 === a.keyCode ||
                80 === a.keyCode ||
                46 === a.keyCode ||
                8 === a.keyCode ||
                (a.keyCode >= 46 && a.keyCode <= 57)) &&
            this.updateFromWidgetInputs();
        },
    }),
    (a.fn.timepicker = function(b) {
        var c = Array.apply(null, arguments);
        return (
            c.shift(),
            this.each(function() {
                var e = a(this),
                    f = e.data("timepicker"),
                    g = "object" == typeof b && b;
                f ||
                    e.data(
                        "timepicker",
                        (f = new d(
                            this,
                            a.extend({}, a.fn.timepicker.defaults, g, a(this).data())
                        ))
                    ),
                    "string" == typeof b && f[b].apply(f, c);
            })
        );
    }),
    (a.fn.timepicker.defaults = {
        defaultTime: "current",
        disableFocus: !1,
        disableMousewheel: !1,
        isOpen: !1,
        minuteStep: 15,
        modalBackdrop: !1,
        secondStep: 15,
        showSeconds: !1,
        showInputs: !0,
        showMeridian: !0,
        template: "dropdown",
        appendWidgetTo: ".bootstrap-timepicker",
        showWidgetOnAddonClick: !0,
    }),
    (a.fn.timepicker.Constructor = d);
})(jQuery, window, document);

/* Chosen v1.4.2 | (c) 2011-2015 by Harvest | MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md */
(function() {
    var a,
        AbstractChosen,
        Chosen,
        SelectParser,
        b,
        c = {}.hasOwnProperty,
        d = function(a, b) {
            function d() {
                this.constructor = a;
            }
            for (var e in b) c.call(b, e) && (a[e] = b[e]);
            return (
                (d.prototype = b.prototype),
                (a.prototype = new d()),
                (a.__super__ = b.prototype),
                a
            );
        };
    (SelectParser = (function() {
        function SelectParser() {
            (this.options_index = 0), (this.parsed = []);
        }
        return (
            (SelectParser.prototype.add_node = function(a) {
                return "OPTGROUP" === a.nodeName.toUpperCase() ?
                    this.add_group(a) :
                    this.add_option(a);
            }),
            (SelectParser.prototype.add_group = function(a) {
                var b, c, d, e, f, g;
                for (
                    b = this.parsed.length,
                    this.parsed.push({
                        array_index: b,
                        group: !0,
                        label: this.escapeExpression(a.label),
                        title: a.title ? a.title : void 0,
                        children: 0,
                        disabled: a.disabled,
                        classes: a.className,
                    }),
                    f = a.childNodes,
                    g = [],
                    d = 0,
                    e = f.length; e > d; d++
                )
                    (c = f[d]), g.push(this.add_option(c, b, a.disabled));
                return g;
            }),
            (SelectParser.prototype.add_option = function(a, b, c) {
                return "OPTION" === a.nodeName.toUpperCase() ?
                    ("" !== a.text ?
                        (null != b && (this.parsed[b].children += 1),
                            this.parsed.push({
                                array_index: this.parsed.length,
                                options_index: this.options_index,
                                value: a.value,
                                text: a.text,
                                html: a.innerHTML,
                                title: a.title ? a.title : void 0,
                                selected: a.selected,
                                disabled: c === !0 ? c : a.disabled,
                                group_array_index: b,
                                group_label: null != b ? this.parsed[b].label : null,
                                classes: a.className,
                                style: a.style.cssText,
                            })) :
                        this.parsed.push({
                            array_index: this.parsed.length,
                            options_index: this.options_index,
                            empty: !0,
                        }),
                        (this.options_index += 1)) :
                    void 0;
            }),
            (SelectParser.prototype.escapeExpression = function(a) {
                var b, c;
                return null == a || a === !1 ?
                    "" :
                    /[\&\<\>\"\'\`]/.test(a) ?
                    ((b = {
                            "<": "&lt;",
                            ">": "&gt;",
                            '"': "&quot;",
                            "'": "&#x27;",
                            "`": "&#x60;",
                        }),
                        (c = /&(?!\w+;)|[\<\>\"\'\`]/g),
                        a.replace(c, function(a) {
                            return b[a] || "&amp;";
                        })) :
                    a;
            }),
            SelectParser
        );
    })()),
    (SelectParser.select_to_array = function(a) {
        var b, c, d, e, f;
        for (
            c = new SelectParser(), f = a.childNodes, d = 0, e = f.length; e > d; d++
        )
            (b = f[d]), c.add_node(b);
        return c.parsed;
    }),
    (AbstractChosen = (function() {
        function AbstractChosen(a, b) {
            (this.form_field = a),
            (this.options = null != b ? b : {}),
            AbstractChosen.browser_is_supported() &&
                ((this.is_multiple = this.form_field.multiple),
                    this.set_default_text(),
                    this.set_default_values(),
                    this.setup(),
                    this.set_up_html(),
                    this.register_observers(),
                    this.on_ready());
        }
        return (
            (AbstractChosen.prototype.set_default_values = function() {
                var a = this;
                return (
                    (this.click_test_action = function(b) {
                        return a.test_active_click(b);
                    }),
                    (this.activate_action = function(b) {
                        return a.activate_field(b);
                    }),
                    (this.active_field = !1),
                    (this.mouse_on_container = !1),
                    (this.results_showing = !1),
                    (this.result_highlighted = null),
                    (this.allow_single_deselect =
                        null != this.options.allow_single_deselect &&
                        null != this.form_field.options[0] &&
                        "" === this.form_field.options[0].text ?
                        this.options.allow_single_deselect :
                        !1),
                    (this.disable_search_threshold =
                        this.options.disable_search_threshold || 0),
                    (this.disable_search = this.options.disable_search || !1),
                    (this.enable_split_word_search =
                        null != this.options.enable_split_word_search ?
                        this.options.enable_split_word_search :
                        !0),
                    (this.group_search =
                        null != this.options.group_search ?
                        this.options.group_search :
                        !0),
                    (this.search_contains = this.options.search_contains || !1),
                    (this.single_backstroke_delete =
                        null != this.options.single_backstroke_delete ?
                        this.options.single_backstroke_delete :
                        !0),
                    (this.max_selected_options =
                        this.options.max_selected_options || 1 / 0),
                    (this.inherit_select_classes =
                        this.options.inherit_select_classes || !1),
                    (this.display_selected_options =
                        null != this.options.display_selected_options ?
                        this.options.display_selected_options :
                        !0),
                    (this.display_disabled_options =
                        null != this.options.display_disabled_options ?
                        this.options.display_disabled_options :
                        !0),
                    (this.include_group_label_in_selected =
                        this.options.include_group_label_in_selected || !1)
                );
            }),
            (AbstractChosen.prototype.set_default_text = function() {
                return (
                    (this.default_text = this.form_field.getAttribute(
                            "data-placeholder"
                        ) ?
                        this.form_field.getAttribute("data-placeholder") :
                        this.is_multiple ?
                        this.options.placeholder_text_multiple ||
                        this.options.placeholder_text ||
                        AbstractChosen.default_multiple_text :
                        this.options.placeholder_text_single ||
                        this.options.placeholder_text ||
                        AbstractChosen.default_single_text),
                    (this.results_none_found =
                        this.form_field.getAttribute("data-no_results_text") ||
                        this.options.no_results_text ||
                        AbstractChosen.default_no_result_text)
                );
            }),
            (AbstractChosen.prototype.choice_label = function(a) {
                return this.include_group_label_in_selected && null != a.group_label ?
                    "<b class='group-name'>" + a.group_label + "</b>" + a.html :
                    a.html;
            }),
            (AbstractChosen.prototype.mouse_enter = function() {
                return (this.mouse_on_container = !0);
            }),
            (AbstractChosen.prototype.mouse_leave = function() {
                return (this.mouse_on_container = !1);
            }),
            (AbstractChosen.prototype.input_focus = function() {
                var a = this;
                if (this.is_multiple) {
                    if (!this.active_field)
                        return setTimeout(function() {
                            return a.container_mousedown();
                        }, 50);
                } else if (!this.active_field) return this.activate_field();
            }),
            (AbstractChosen.prototype.input_blur = function() {
                var a = this;
                return this.mouse_on_container ?
                    void 0 :
                    ((this.active_field = !1),
                        setTimeout(function() {
                            return a.blur_test();
                        }, 100));
            }),
            (AbstractChosen.prototype.results_option_build = function(a) {
                var b, c, d, e, f;
                for (b = "", f = this.results_data, d = 0, e = f.length; e > d; d++)
                    (c = f[d]),
                    (b += c.group ?
                        this.result_add_group(c) :
                        this.result_add_option(c)),
                    (null != a ? a.first : void 0) &&
                    (c.selected && this.is_multiple ?
                        this.choice_build(c) :
                        c.selected &&
                        !this.is_multiple &&
                        this.single_set_selected_text(this.choice_label(c)));
                return b;
            }),
            (AbstractChosen.prototype.result_add_option = function(a) {
                var b, c;
                return a.search_match ?
                    this.include_option_in_results(a) ?
                    ((b = []),
                        a.disabled ||
                        (a.selected && this.is_multiple) ||
                        b.push("active-result"), !a.disabled ||
                        (a.selected && this.is_multiple) ||
                        b.push("disabled-result"),
                        a.selected && b.push("result-selected"),
                        null != a.group_array_index && b.push("group-option"),
                        "" !== a.classes && b.push(a.classes),
                        (c = document.createElement("li")),
                        (c.className = b.join(" ")),
                        (c.style.cssText = a.style),
                        c.setAttribute("data-option-array-index", a.array_index),
                        (c.innerHTML = a.search_text),
                        a.title && (c.title = a.title),
                        this.outerHTML(c)) :
                    "" :
                    "";
            }),
            (AbstractChosen.prototype.result_add_group = function(a) {
                var b, c;
                return a.search_match || a.group_match ?
                    a.active_options > 0 ?
                    ((b = []),
                        b.push("group-result"),
                        a.classes && b.push(a.classes),
                        (c = document.createElement("li")),
                        (c.className = b.join(" ")),
                        (c.innerHTML = a.search_text),
                        a.title && (c.title = a.title),
                        this.outerHTML(c)) :
                    "" :
                    "";
            }),
            (AbstractChosen.prototype.results_update_field = function() {
                return (
                    this.set_default_text(),
                    this.is_multiple || this.results_reset_cleanup(),
                    this.result_clear_highlight(),
                    this.results_build(),
                    this.results_showing ? this.winnow_results() : void 0
                );
            }),
            (AbstractChosen.prototype.reset_single_select_options = function() {
                var a, b, c, d, e;
                for (d = this.results_data, e = [], b = 0, c = d.length; c > b; b++)
                    (a = d[b]), a.selected ? e.push((a.selected = !1)) : e.push(void 0);
                return e;
            }),
            (AbstractChosen.prototype.results_toggle = function() {
                return this.results_showing ?
                    this.results_hide() :
                    this.results_show();
            }),
            (AbstractChosen.prototype.results_search = function() {
                return this.results_showing ?
                    this.winnow_results() :
                    this.results_show();
            }),
            (AbstractChosen.prototype.winnow_results = function() {
                var a, b, c, d, e, f, g, h, i, j, k, l;
                for (
                    this.no_results_clear(),
                    d = 0,
                    f = this.get_search_text(),
                    a = f.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"),
                    i = new RegExp(a, "i"),
                    c = this.get_search_regex(a),
                    l = this.results_data,
                    j = 0,
                    k = l.length; k > j; j++
                )
                    (b = l[j]),
                    (b.search_match = !1),
                    (e = null),
                    this.include_option_in_results(b) &&
                    (b.group && ((b.group_match = !1), (b.active_options = 0)),
                        null != b.group_array_index &&
                        this.results_data[b.group_array_index] &&
                        ((e = this.results_data[b.group_array_index]),
                            0 === e.active_options && e.search_match && (d += 1),
                            (e.active_options += 1)),
                        (b.search_text = b.group ? b.label : b.html),
                        (!b.group || this.group_search) &&
                        ((b.search_match = this.search_string_match(
                                b.search_text,
                                c
                            )),
                            b.search_match && !b.group && (d += 1),
                            b.search_match ?
                            (f.length &&
                                ((g = b.search_text.search(i)),
                                    (h =
                                        b.search_text.substr(0, g + f.length) +
                                        "</em>" +
                                        b.search_text.substr(g + f.length)),
                                    (b.search_text =
                                        h.substr(0, g) + "<em>" + h.substr(g))),
                                null != e && (e.group_match = !0)) :
                            null != b.group_array_index &&
                            this.results_data[b.group_array_index].search_match &&
                            (b.search_match = !0)));
                return (
                    this.result_clear_highlight(),
                    1 > d && f.length ?
                    (this.update_results_content(""), this.no_results(f)) :
                    (this.update_results_content(this.results_option_build()),
                        this.winnow_results_set_highlight())
                );
            }),
            (AbstractChosen.prototype.get_search_regex = function(a) {
                var b;
                return (b = this.search_contains ? "" : "^"), new RegExp(b + a, "i");
            }),
            (AbstractChosen.prototype.search_string_match = function(a, b) {
                var c, d, e, f;
                if (b.test(a)) return !0;
                if (
                    this.enable_split_word_search &&
                    (a.indexOf(" ") >= 0 || 0 === a.indexOf("[")) &&
                    ((d = a.replace(/\[|\]/g, "").split(" ")), d.length)
                )
                    for (e = 0, f = d.length; f > e; e++)
                        if (((c = d[e]), b.test(c))) return !0;
            }),
            (AbstractChosen.prototype.choices_count = function() {
                var a, b, c, d;
                if (null != this.selected_option_count)
                    return this.selected_option_count;
                for (
                    this.selected_option_count = 0,
                    d = this.form_field.options,
                    b = 0,
                    c = d.length; c > b; b++
                )
                    (a = d[b]), a.selected && (this.selected_option_count += 1);
                return this.selected_option_count;
            }),
            (AbstractChosen.prototype.choices_click = function(a) {
                return (
                    a.preventDefault(),
                    this.results_showing || this.is_disabled ?
                    void 0 :
                    this.results_show()
                );
            }),
            (AbstractChosen.prototype.keyup_checker = function(a) {
                var b, c;
                switch (
                    ((b = null != (c = a.which) ? c : a.keyCode),
                        this.search_field_scale(),
                        b)
                ) {
                    case 8:
                        if (
                            this.is_multiple &&
                            this.backstroke_length < 1 &&
                            this.choices_count() > 0
                        )
                            return this.keydown_backstroke();
                        if (!this.pending_backstroke)
                            return this.result_clear_highlight(), this.results_search();
                        break;
                    case 13:
                        if ((a.preventDefault(), this.results_showing))
                            return this.result_select(a);
                        break;
                    case 27:
                        return this.results_showing && this.results_hide(), !0;
                    case 9:
                    case 38:
                    case 40:
                    case 16:
                    case 91:
                    case 17:
                        break;
                    default:
                        return this.results_search();
                }
            }),
            (AbstractChosen.prototype.clipboard_event_checker = function() {
                var a = this;
                return setTimeout(function() {
                    return a.results_search();
                }, 50);
            }),
            (AbstractChosen.prototype.container_width = function() {
                return null != this.options.width ?
                    this.options.width :
                    "" + this.form_field.offsetWidth + "px";
            }),
            (AbstractChosen.prototype.include_option_in_results = function(a) {
                return this.is_multiple &&
                    !this.display_selected_options &&
                    a.selected ?
                    !1 :
                    !this.display_disabled_options && a.disabled ?
                    !1 :
                    a.empty ?
                    !1 :
                    !0;
            }),
            (AbstractChosen.prototype.search_results_touchstart = function(a) {
                return (this.touch_started = !0), this.search_results_mouseover(a);
            }),
            (AbstractChosen.prototype.search_results_touchmove = function(a) {
                return (this.touch_started = !1), this.search_results_mouseout(a);
            }),
            (AbstractChosen.prototype.search_results_touchend = function(a) {
                return this.touch_started ? this.search_results_mouseup(a) : void 0;
            }),
            (AbstractChosen.prototype.outerHTML = function(a) {
                var b;
                return a.outerHTML ?
                    a.outerHTML :
                    ((b = document.createElement("div")),
                        b.appendChild(a),
                        b.innerHTML);
            }),
            (AbstractChosen.browser_is_supported = function() {
                return "Microsoft Internet Explorer" === window.navigator.appName ?
                    document.documentMode >= 8 :
                    /iP(od|hone)/i.test(window.navigator.userAgent) ?
                    !1 :
                    /Android/i.test(window.navigator.userAgent) &&
                    /Mobile/i.test(window.navigator.userAgent) ?
                    !1 :
                    !0;
            }),
            (AbstractChosen.default_multiple_text = "Select Some Options"),
            (AbstractChosen.default_single_text = "Select an Option"),
            (AbstractChosen.default_no_result_text = "No results match"),
            AbstractChosen
        );
    })()),
    (a = jQuery),
    a.fn.extend({
            chosen: function(b) {
                return AbstractChosen.browser_is_supported() ?
                    this.each(function() {
                        var c, d;
                        (c = a(this)),
                        (d = c.data("chosen")),
                        "destroy" === b && d instanceof Chosen ?
                            d.destroy() :
                            d instanceof Chosen ||
                            c.data("chosen", new Chosen(this, b));
                    }) :
                    this;
            },
        }),
        (Chosen = (function(c) {
            function Chosen() {
                return (b = Chosen.__super__.constructor.apply(this, arguments));
            }
            return (
                d(Chosen, c),
                (Chosen.prototype.setup = function() {
                    return (
                        (this.form_field_jq = a(this.form_field)),
                        (this.current_selectedIndex = this.form_field.selectedIndex),
                        (this.is_rtl = this.form_field_jq.hasClass("chosen-rtl"))
                    );
                }),
                (Chosen.prototype.set_up_html = function() {
                    var b, c;
                    return (
                        (b = ["chosen-container"]),
                        b.push(
                            "chosen-container-" + (this.is_multiple ? "multi" : "single")
                        ),
                        this.inherit_select_classes &&
                        this.form_field.className &&
                        b.push(this.form_field.className),
                        this.is_rtl && b.push("chosen-rtl"),
                        (c = {
                            class: b.join(" "),
                            style: "width: " + this.container_width() + ";",
                            title: this.form_field.title,
                        }),
                        this.form_field.id.length &&
                        (c.id = this.form_field.id.replace(/[^\w]/g, "_") + "_chosen"),
                        (this.container = a("<div />", c)),
                        this.is_multiple ?
                        this.container.html(
                            '<ul class="chosen-choices"><li class="search-field"><input type="text" value="' +
                            this.default_text +
                            '" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chosen-drop"><ul class="chosen-results"></ul></div>'
                        ) :
                        this.container.html(
                            '<a class="chosen-single chosen-default" tabindex="-1"><span>' +
                            this.default_text +
                            '</span><div><b></b></div></a><div class="chosen-drop"><div class="chosen-search"><input type="text" autocomplete="off" /></div><ul class="chosen-results"></ul></div>'
                        ),
                        this.form_field_jq.hide().after(this.container),
                        (this.dropdown = this.container.find("div.chosen-drop").first()),
                        (this.search_field = this.container.find("input").first()),
                        (this.search_results = this.container
                            .find("ul.chosen-results")
                            .first()),
                        this.search_field_scale(),
                        (this.search_no_results = this.container
                            .find("li.no-results")
                            .first()),
                        this.is_multiple ?
                        ((this.search_choices = this.container
                                .find("ul.chosen-choices")
                                .first()),
                            (this.search_container = this.container
                                .find("li.search-field")
                                .first())) :
                        ((this.search_container = this.container
                                .find("div.chosen-search")
                                .first()),
                            (this.selected_item = this.container
                                .find(".chosen-single")
                                .first())),
                        this.results_build(),
                        this.set_tab_index(),
                        this.set_label_behavior()
                    );
                }),
                (Chosen.prototype.on_ready = function() {
                    return this.form_field_jq.trigger("chosen:ready", {
                        chosen: this
                    });
                }),
                (Chosen.prototype.register_observers = function() {
                    var a = this;
                    return (
                        this.container.bind("touchstart.chosen", function(b) {
                            return a.container_mousedown(b), b.preventDefault();
                        }),
                        this.container.bind("touchend.chosen", function(b) {
                            return a.container_mouseup(b), b.preventDefault();
                        }),
                        this.container.bind("mousedown.chosen", function(b) {
                            a.container_mousedown(b);
                        }),
                        this.container.bind("mouseup.chosen", function(b) {
                            a.container_mouseup(b);
                        }),
                        this.container.bind("mouseenter.chosen", function(b) {
                            a.mouse_enter(b);
                        }),
                        this.container.bind("mouseleave.chosen", function(b) {
                            a.mouse_leave(b);
                        }),
                        this.search_results.bind("mouseup.chosen", function(b) {
                            a.search_results_mouseup(b);
                        }),
                        this.search_results.bind("mouseover.chosen", function(b) {
                            a.search_results_mouseover(b);
                        }),
                        this.search_results.bind("mouseout.chosen", function(b) {
                            a.search_results_mouseout(b);
                        }),
                        this.search_results.bind(
                            "mousewheel.chosen DOMMouseScroll.chosen",
                            function(b) {
                                a.search_results_mousewheel(b);
                            }
                        ),
                        this.search_results.bind("touchstart.chosen", function(b) {
                            a.search_results_touchstart(b);
                        }),
                        this.search_results.bind("touchmove.chosen", function(b) {
                            a.search_results_touchmove(b);
                        }),
                        this.search_results.bind("touchend.chosen", function(b) {
                            a.search_results_touchend(b);
                        }),
                        this.form_field_jq.bind("chosen:updated.chosen", function(b) {
                            a.results_update_field(b);
                        }),
                        this.form_field_jq.bind("chosen:activate.chosen", function(b) {
                            a.activate_field(b);
                        }),
                        this.form_field_jq.bind("chosen:open.chosen", function(b) {
                            a.container_mousedown(b);
                        }),
                        this.form_field_jq.bind("chosen:close.chosen", function(b) {
                            a.input_blur(b);
                        }),
                        this.search_field.bind("blur.chosen", function(b) {
                            a.input_blur(b);
                        }),
                        this.search_field.bind("keyup.chosen", function(b) {
                            a.keyup_checker(b);
                        }),
                        this.search_field.bind("keydown.chosen", function(b) {
                            a.keydown_checker(b);
                        }),
                        this.search_field.bind("focus.chosen", function(b) {
                            a.input_focus(b);
                        }),
                        this.search_field.bind("cut.chosen", function(b) {
                            a.clipboard_event_checker(b);
                        }),
                        this.search_field.bind("paste.chosen", function(b) {
                            a.clipboard_event_checker(b);
                        }),
                        this.is_multiple ?
                        this.search_choices.bind("click.chosen", function(b) {
                            a.choices_click(b);
                        }) :
                        this.container.bind("click.chosen", function(a) {
                            a.preventDefault();
                        })
                    );
                }),
                (Chosen.prototype.destroy = function() {
                    return (
                        a(this.container[0].ownerDocument).unbind(
                            "click.chosen",
                            this.click_test_action
                        ),
                        this.search_field[0].tabIndex &&
                        (this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex),
                        this.container.remove(),
                        this.form_field_jq.removeData("chosen"),
                        this.form_field_jq.show()
                    );
                }),
                (Chosen.prototype.search_field_disabled = function() {
                    return (
                        (this.is_disabled = this.form_field_jq[0].disabled),
                        this.is_disabled ?
                        (this.container.addClass("chosen-disabled"),
                            (this.search_field[0].disabled = !0),
                            this.is_multiple ||
                            this.selected_item.unbind(
                                "focus.chosen",
                                this.activate_action
                            ),
                            this.close_field()) :
                        (this.container.removeClass("chosen-disabled"),
                            (this.search_field[0].disabled = !1),
                            this.is_multiple ?
                            void 0 :
                            this.selected_item.bind(
                                "focus.chosen",
                                this.activate_action
                            ))
                    );
                }),
                (Chosen.prototype.container_mousedown = function(b) {
                    return this.is_disabled ||
                        (b &&
                            "mousedown" === b.type &&
                            !this.results_showing &&
                            b.preventDefault(),
                            null != b && a(b.target).hasClass("search-choice-close")) ?
                        void 0 :
                        (this.active_field ?
                            this.is_multiple ||
                            !b ||
                            (a(b.target)[0] !== this.selected_item[0] &&
                                !a(b.target).parents("a.chosen-single").length) ||
                            (b.preventDefault(), this.results_toggle()) :
                            (this.is_multiple && this.search_field.val(""),
                                a(this.container[0].ownerDocument).bind(
                                    "click.chosen",
                                    this.click_test_action
                                ),
                                this.results_show()),
                            this.activate_field());
                }),
                (Chosen.prototype.container_mouseup = function(a) {
                    return "ABBR" !== a.target.nodeName || this.is_disabled ?
                        void 0 :
                        this.results_reset(a);
                }),
                (Chosen.prototype.search_results_mousewheel = function(a) {
                    var b;
                    return (
                        a.originalEvent &&
                        (b =
                            a.originalEvent.deltaY ||
                            -a.originalEvent.wheelDelta ||
                            a.originalEvent.detail),
                        null != b ?
                        (a.preventDefault(),
                            "DOMMouseScroll" === a.type && (b = 40 * b),
                            this.search_results.scrollTop(
                                b + this.search_results.scrollTop()
                            )) :
                        void 0
                    );
                }),
                (Chosen.prototype.blur_test = function() {
                    return !this.active_field &&
                        this.container.hasClass("chosen-container-active") ?
                        this.close_field() :
                        void 0;
                }),
                (Chosen.prototype.close_field = function() {
                    return (
                        a(this.container[0].ownerDocument).unbind(
                            "click.chosen",
                            this.click_test_action
                        ),
                        (this.active_field = !1),
                        this.results_hide(),
                        this.container.removeClass("chosen-container-active"),
                        this.clear_backstroke(),
                        this.show_search_field_default(),
                        this.search_field_scale()
                    );
                }),
                (Chosen.prototype.activate_field = function() {
                    return (
                        this.container.addClass("chosen-container-active"),
                        (this.active_field = !0),
                        this.search_field.val(this.search_field.val()),
                        this.search_field.focus()
                    );
                }),
                (Chosen.prototype.test_active_click = function(b) {
                    var c;
                    return (
                        (c = a(b.target).closest(".chosen-container")),
                        c.length && this.container[0] === c[0] ?
                        (this.active_field = !0) :
                        this.close_field()
                    );
                }),
                (Chosen.prototype.results_build = function() {
                    return (
                        (this.parsing = !0),
                        (this.selected_option_count = null),
                        (this.results_data = SelectParser.select_to_array(this.form_field)),
                        this.is_multiple ?
                        this.search_choices.find("li.search-choice").remove() :
                        this.is_multiple ||
                        (this.single_set_selected_text(),
                            this.disable_search ||
                            this.form_field.options.length <= this.disable_search_threshold ?
                            ((this.search_field[0].readOnly = !0),
                                this.container.addClass("chosen-container-single-nosearch")) :
                            ((this.search_field[0].readOnly = !1),
                                this.container.removeClass(
                                    "chosen-container-single-nosearch"
                                ))),
                        this.update_results_content(
                            this.results_option_build({
                                first: !0
                            })
                        ),
                        this.search_field_disabled(),
                        this.show_search_field_default(),
                        this.search_field_scale(),
                        (this.parsing = !1)
                    );
                }),
                (Chosen.prototype.result_do_highlight = function(a) {
                    var b, c, d, e, f;
                    if (a.length) {
                        if (
                            (this.result_clear_highlight(),
                                (this.result_highlight = a),
                                this.result_highlight.addClass("highlighted"),
                                (d = parseInt(this.search_results.css("maxHeight"), 10)),
                                (f = this.search_results.scrollTop()),
                                (e = d + f),
                                (c =
                                    this.result_highlight.position().top +
                                    this.search_results.scrollTop()),
                                (b = c + this.result_highlight.outerHeight()),
                                b >= e)
                        )
                            return this.search_results.scrollTop(b - d > 0 ? b - d : 0);
                        if (f > c) return this.search_results.scrollTop(c);
                    }
                }),
                (Chosen.prototype.result_clear_highlight = function() {
                    return (
                        this.result_highlight &&
                        this.result_highlight.removeClass("highlighted"),
                        (this.result_highlight = null)
                    );
                }),
                (Chosen.prototype.results_show = function() {
                    return this.is_multiple &&
                        this.max_selected_options <= this.choices_count() ?
                        (this.form_field_jq.trigger("chosen:maxselected", {
                            chosen: this,
                        }), !1) :
                        (this.container.addClass("chosen-with-drop"),
                            (this.results_showing = !0),
                            this.search_field.focus(),
                            this.search_field.val(this.search_field.val()),
                            this.winnow_results(),
                            this.form_field_jq.trigger("chosen:showing_dropdown", {
                                chosen: this,
                            }));
                }),
                (Chosen.prototype.update_results_content = function(a) {
                    return this.search_results.html(a);
                }),
                (Chosen.prototype.results_hide = function() {
                    return (
                        this.results_showing &&
                        (this.result_clear_highlight(),
                            this.container.removeClass("chosen-with-drop"),
                            this.form_field_jq.trigger("chosen:hiding_dropdown", {
                                chosen: this,
                            })),
                        (this.results_showing = !1)
                    );
                }),
                (Chosen.prototype.set_tab_index = function() {
                    var a;
                    return this.form_field.tabIndex ?
                        ((a = this.form_field.tabIndex),
                            (this.form_field.tabIndex = -1),
                            (this.search_field[0].tabIndex = a)) :
                        void 0;
                }),
                (Chosen.prototype.set_label_behavior = function() {
                    var b = this;
                    return (
                        (this.form_field_label = this.form_field_jq.parents("label")), !this.form_field_label.length &&
                        this.form_field.id.length &&
                        (this.form_field_label = a(
                            "label[for='" + this.form_field.id + "']"
                        )),
                        this.form_field_label.length > 0 ?
                        this.form_field_label.bind("click.chosen", function(a) {
                            return b.is_multiple ?
                                b.container_mousedown(a) :
                                b.activate_field();
                        }) :
                        void 0
                    );
                }),
                (Chosen.prototype.show_search_field_default = function() {
                    return this.is_multiple &&
                        this.choices_count() < 1 &&
                        !this.active_field ?
                        (this.search_field.val(this.default_text),
                            this.search_field.addClass("default")) :
                        (this.search_field.val(""),
                            this.search_field.removeClass("default"));
                }),
                (Chosen.prototype.search_results_mouseup = function(b) {
                    var c;
                    return (
                        (c = a(b.target).hasClass("active-result") ?
                            a(b.target) :
                            a(b.target).parents(".active-result").first()),
                        c.length ?
                        ((this.result_highlight = c),
                            this.result_select(b),
                            this.search_field.focus()) :
                        void 0
                    );
                }),
                (Chosen.prototype.search_results_mouseover = function(b) {
                    var c;
                    return (
                        (c = a(b.target).hasClass("active-result") ?
                            a(b.target) :
                            a(b.target).parents(".active-result").first()),
                        c ? this.result_do_highlight(c) : void 0
                    );
                }),
                (Chosen.prototype.search_results_mouseout = function(b) {
                    return a(b.target).hasClass("active-result") ?
                        this.result_clear_highlight() :
                        void 0;
                }),
                (Chosen.prototype.choice_build = function(b) {
                    var c,
                        d,
                        e = this;
                    return (
                        (c = a("<li />", {
                            class: "search-choice"
                        }).html(
                            "<span>" + this.choice_label(b) + "</span>"
                        )),
                        b.disabled ?
                        c.addClass("search-choice-disabled") :
                        ((d = a("<a />", {
                                class: "search-choice-close",
                                "data-option-array-index": b.array_index,
                            })),
                            d.bind("click.chosen", function(a) {
                                return e.choice_destroy_link_click(a);
                            }),
                            c.append(d)),
                        this.search_container.before(c)
                    );
                }),
                (Chosen.prototype.choice_destroy_link_click = function(b) {
                    return (
                        b.preventDefault(),
                        b.stopPropagation(),
                        this.is_disabled ? void 0 : this.choice_destroy(a(b.target))
                    );
                }),
                (Chosen.prototype.choice_destroy = function(a) {
                    return this.result_deselect(
                            a[0].getAttribute("data-option-array-index")
                        ) ?
                        (this.show_search_field_default(),
                            this.is_multiple &&
                            this.choices_count() > 0 &&
                            this.search_field.val().length < 1 &&
                            this.results_hide(),
                            a.parents("li").first().remove(),
                            this.search_field_scale()) :
                        void 0;
                }),
                (Chosen.prototype.results_reset = function() {
                    return (
                        this.reset_single_select_options(),
                        (this.form_field.options[0].selected = !0),
                        this.single_set_selected_text(),
                        this.show_search_field_default(),
                        this.results_reset_cleanup(),
                        this.form_field_jq.trigger("change"),
                        this.active_field ? this.results_hide() : void 0
                    );
                }),
                (Chosen.prototype.results_reset_cleanup = function() {
                    return (
                        (this.current_selectedIndex = this.form_field.selectedIndex),
                        this.selected_item.find("abbr").remove()
                    );
                }),
                (Chosen.prototype.result_select = function(a) {
                    var b, c;
                    return this.result_highlight ?
                        ((b = this.result_highlight),
                            this.result_clear_highlight(),
                            this.is_multiple &&
                            this.max_selected_options <= this.choices_count() ?
                            (this.form_field_jq.trigger("chosen:maxselected", {
                                chosen: this,
                            }), !1) :
                            (this.is_multiple ?
                                b.removeClass("active-result") :
                                this.reset_single_select_options(),
                                b.addClass("result-selected"),
                                (c =
                                    this.results_data[
                                        b[0].getAttribute("data-option-array-index")
                                    ]),
                                (c.selected = !0),
                                (this.form_field.options[c.options_index].selected = !0),
                                (this.selected_option_count = null),
                                this.is_multiple ?
                                this.choice_build(c) :
                                this.single_set_selected_text(this.choice_label(c)),
                                ((a.metaKey || a.ctrlKey) && this.is_multiple) ||
                                this.results_hide(),
                                this.search_field.val(""),
                                (this.is_multiple ||
                                    this.form_field.selectedIndex !==
                                    this.current_selectedIndex) &&
                                this.form_field_jq.trigger("change", {
                                    selected: this.form_field.options[c.options_index].value,
                                }),
                                (this.current_selectedIndex = this.form_field.selectedIndex),
                                a.preventDefault(),
                                this.search_field_scale())) :
                        void 0;
                }),
                (Chosen.prototype.single_set_selected_text = function(a) {
                    return (
                        null == a && (a = this.default_text),
                        a === this.default_text ?
                        this.selected_item.addClass("chosen-default") :
                        (this.single_deselect_control_build(),
                            this.selected_item.removeClass("chosen-default")),
                        this.selected_item.find("span").html(a)
                    );
                }),
                (Chosen.prototype.result_deselect = function(a) {
                    var b;
                    return (
                        (b = this.results_data[a]),
                        this.form_field.options[b.options_index].disabled ?
                        !1 :
                        ((b.selected = !1),
                            (this.form_field.options[b.options_index].selected = !1),
                            (this.selected_option_count = null),
                            this.result_clear_highlight(),
                            this.results_showing && this.winnow_results(),
                            this.form_field_jq.trigger("change", {
                                deselected: this.form_field.options[b.options_index].value,
                            }),
                            this.search_field_scale(), !0)
                    );
                }),
                (Chosen.prototype.single_deselect_control_build = function() {
                    return this.allow_single_deselect ?
                        (this.selected_item.find("abbr").length ||
                            this.selected_item
                            .find("span")
                            .first()
                            .after('<abbr class="search-choice-close"></abbr>'),
                            this.selected_item.addClass("chosen-single-with-deselect")) :
                        void 0;
                }),
                (Chosen.prototype.get_search_text = function() {
                    return a("<div/>").text(a.trim(this.search_field.val())).html();
                }),
                (Chosen.prototype.winnow_results_set_highlight = function() {
                    var a, b;
                    return (
                        (b = this.is_multiple ?
                            [] :
                            this.search_results.find(".result-selected.active-result")),
                        (a = b.length ?
                            b.first() :
                            this.search_results.find(".active-result").first()),
                        null != a ? this.result_do_highlight(a) : void 0
                    );
                }),
                (Chosen.prototype.no_results = function(b) {
                    var c;
                    return (
                        (c = a(
                            '<li class="no-results">' +
                            this.results_none_found +
                            ' "<span></span>"</li>'
                        )),
                        c.find("span").first().html(b),
                        this.search_results.append(c),
                        this.form_field_jq.trigger("chosen:no_results", {
                            chosen: this
                        })
                    );
                }),
                (Chosen.prototype.no_results_clear = function() {
                    return this.search_results.find(".no-results").remove();
                }),
                (Chosen.prototype.keydown_arrow = function() {
                    var a;
                    return this.results_showing && this.result_highlight ?
                        (a = this.result_highlight.nextAll("li.active-result").first()) ?
                        this.result_do_highlight(a) :
                        void 0 :
                        this.results_show();
                }),
                (Chosen.prototype.keyup_arrow = function() {
                    var a;
                    return this.results_showing || this.is_multiple ?
                        this.result_highlight ?
                        ((a = this.result_highlight.prevAll("li.active-result")),
                            a.length ?
                            this.result_do_highlight(a.first()) :
                            (this.choices_count() > 0 && this.results_hide(),
                                this.result_clear_highlight())) :
                        void 0 :
                        this.results_show();
                }),
                (Chosen.prototype.keydown_backstroke = function() {
                    var a;
                    return this.pending_backstroke ?
                        (this.choice_destroy(this.pending_backstroke.find("a").first()),
                            this.clear_backstroke()) :
                        ((a = this.search_container.siblings("li.search-choice").last()),
                            a.length && !a.hasClass("search-choice-disabled") ?
                            ((this.pending_backstroke = a),
                                this.single_backstroke_delete ?
                                this.keydown_backstroke() :
                                this.pending_backstroke.addClass("search-choice-focus")) :
                            void 0);
                }),
                (Chosen.prototype.clear_backstroke = function() {
                    return (
                        this.pending_backstroke &&
                        this.pending_backstroke.removeClass("search-choice-focus"),
                        (this.pending_backstroke = null)
                    );
                }),
                (Chosen.prototype.keydown_checker = function(a) {
                    var b, c;
                    switch (
                        ((b = null != (c = a.which) ? c : a.keyCode),
                            this.search_field_scale(),
                            8 !== b && this.pending_backstroke && this.clear_backstroke(),
                            b)
                    ) {
                        case 8:
                            this.backstroke_length = this.search_field.val().length;
                            break;
                        case 9:
                            this.results_showing &&
                                !this.is_multiple &&
                                this.result_select(a),
                                (this.mouse_on_container = !1);
                            break;
                        case 13:
                            this.results_showing && a.preventDefault();
                            break;
                        case 32:
                            this.disable_search && a.preventDefault();
                            break;
                        case 38:
                            a.preventDefault(), this.keyup_arrow();
                            break;
                        case 40:
                            a.preventDefault(), this.keydown_arrow();
                    }
                }),
                (Chosen.prototype.search_field_scale = function() {
                    var b, c, d, e, f, g, h, i, j;
                    if (this.is_multiple) {
                        for (
                            d = 0,
                            h = 0,
                            f =
                            "position:absolute; left: -1000px; top: -1000px; display:none;",
                            g = [
                                "font-size",
                                "font-style",
                                "font-weight",
                                "font-family",
                                "line-height",
                                "text-transform",
                                "letter-spacing",
                            ],
                            i = 0,
                            j = g.length; j > i; i++
                        )
                            (e = g[i]), (f += e + ":" + this.search_field.css(e) + ";");
                        return (
                            (b = a("<div />", {
                                style: f
                            })),
                            b.text(this.search_field.val()),
                            a("body").append(b),
                            (h = b.width() + 25),
                            b.remove(),
                            (c = this.container.outerWidth()),
                            h > c - 10 && (h = c - 10),
                            this.search_field.css({
                                width: h + "px"
                            })
                        );
                    }
                }),
                Chosen
            );
        })(AbstractChosen));
}.call(this));

/*! jQuery Validation Plugin - v1.13.1 - 10/14/2014
 * http://jqueryvalidation.org/
 * Copyright (c) 2014 Jörn Zaefferer; Licensed MIT */
!(function(a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery);
})(function(a) {
    a.extend(a.fn, {
            validate: function(b) {
                if (!this.length)
                    return void(
                        b &&
                        b.debug &&
                        window.console &&
                        console.warn("Nothing selected, can't validate, returning nothing.")
                    );
                var c = a.data(this[0], "validator");
                return c ?
                    c :
                    (this.attr("novalidate", "novalidate"),
                        (c = new a.validator(b, this[0])),
                        a.data(this[0], "validator", c),
                        c.settings.onsubmit &&
                        (this.validateDelegate(":submit", "click", function(b) {
                                c.settings.submitHandler && (c.submitButton = b.target),
                                    a(b.target).hasClass("cancel") && (c.cancelSubmit = !0),
                                    void 0 !== a(b.target).attr("formnovalidate") &&
                                    (c.cancelSubmit = !0);
                            }),
                            this.submit(function(b) {
                                function d() {
                                    var d, e;
                                    return c.settings.submitHandler ?
                                        (c.submitButton &&
                                            (d = a("<input type='hidden'/>")
                                                .attr("name", c.submitButton.name)
                                                .val(a(c.submitButton).val())
                                                .appendTo(c.currentForm)),
                                            (e = c.settings.submitHandler.call(c, c.currentForm, b)),
                                            c.submitButton && d.remove(),
                                            void 0 !== e ? e : !1) :
                                        !0;
                                }
                                return (
                                    c.settings.debug && b.preventDefault(),
                                    c.cancelSubmit ?
                                    ((c.cancelSubmit = !1), d()) :
                                    c.form() ?
                                    c.pendingRequest ?
                                    ((c.formSubmitted = !0), !1) :
                                    d() :
                                    (c.focusInvalid(), !1)
                                );
                            })),
                        c);
            },
            valid: function() {
                var b, c;
                return (
                    a(this[0]).is("form") ?
                    (b = this.validate().form()) :
                    ((b = !0),
                        (c = a(this[0].form).validate()),
                        this.each(function() {
                            b = c.element(this) && b;
                        })),
                    b
                );
            },
            removeAttrs: function(b) {
                var c = {},
                    d = this;
                return (
                    a.each(b.split(/\s/), function(a, b) {
                        (c[b] = d.attr(b)), d.removeAttr(b);
                    }),
                    c
                );
            },
            rules: function(b, c) {
                var d,
                    e,
                    f,
                    g,
                    h,
                    i,
                    j = this[0];
                if (b)
                    switch (
                        ((d = a.data(j.form, "validator").settings),
                            (e = d.rules),
                            (f = a.validator.staticRules(j)),
                            b)
                    ) {
                        case "add":
                            a.extend(f, a.validator.normalizeRule(c)),
                                delete f.messages,
                                (e[j.name] = f),
                                c.messages &&
                                (d.messages[j.name] = a.extend(d.messages[j.name], c.messages));
                            break;
                        case "remove":
                            return c ?
                                ((i = {}),
                                    a.each(c.split(/\s/), function(b, c) {
                                        (i[c] = f[c]),
                                        delete f[c],
                                            "required" === c && a(j).removeAttr("aria-required");
                                    }),
                                    i) :
                                (delete e[j.name], f);
                    }
                return (
                    (g = a.validator.normalizeRules(
                        a.extend({},
                            a.validator.classRules(j),
                            a.validator.attributeRules(j),
                            a.validator.dataRules(j),
                            a.validator.staticRules(j)
                        ),
                        j
                    )),
                    g.required &&
                    ((h = g.required),
                        delete g.required,
                        (g = a.extend({
                            required: h
                        }, g)),
                        a(j).attr("aria-required", "true")),
                    g.remote &&
                    ((h = g.remote), delete g.remote, (g = a.extend(g, {
                        remote: h
                    }))),
                    g
                );
            },
        }),
        a.extend(a.expr[":"], {
            blank: function(b) {
                return !a.trim("" + a(b).val());
            },
            filled: function(b) {
                return !!a.trim("" + a(b).val());
            },
            unchecked: function(b) {
                return !a(b).prop("checked");
            },
        }),
        (a.validator = function(b, c) {
            (this.settings = a.extend(!0, {}, a.validator.defaults, b)),
            (this.currentForm = c),
            this.init();
        }),
        (a.validator.format = function(b, c) {
            return 1 === arguments.length ?
                function() {
                    var c = a.makeArray(arguments);
                    return c.unshift(b), a.validator.format.apply(this, c);
                } :
                (arguments.length > 2 &&
                    c.constructor !== Array &&
                    (c = a.makeArray(arguments).slice(1)),
                    c.constructor !== Array && (c = [c]),
                    a.each(c, function(a, c) {
                        b = b.replace(new RegExp("\\{" + a + "\\}", "g"), function() {
                            return c;
                        });
                    }),
                    b);
        }),
        a.extend(a.validator, {
            defaults: {
                messages: {},
                groups: {},
                rules: {},
                errorClass: "error",
                validClass: "valid",
                errorElement: "label",
                focusCleanup: !1,
                focusInvalid: !0,
                errorContainer: a([]),
                errorLabelContainer: a([]),
                onsubmit: !0,
                ignore: ":hidden",
                ignoreTitle: !1,
                onfocusin: function(a) {
                    (this.lastActive = a),
                    this.settings.focusCleanup &&
                        (this.settings.unhighlight &&
                            this.settings.unhighlight.call(
                                this,
                                a,
                                this.settings.errorClass,
                                this.settings.validClass
                            ),
                            this.hideThese(this.errorsFor(a)));
                },
                onfocusout: function(a) {
                    this.checkable(a) ||
                        (!(a.name in this.submitted) && this.optional(a)) ||
                        this.element(a);
                },
                onkeyup: function(a, b) {
                    (9 !== b.which || "" !== this.elementValue(a)) &&
                    (a.name in this.submitted || a === this.lastElement) &&
                    this.element(a);
                },
                onclick: function(a) {
                    a.name in this.submitted ?
                        this.element(a) :
                        a.parentNode.name in this.submitted && this.element(a.parentNode);
                },
                highlight: function(b, c, d) {
                    "radio" === b.type ?
                        this.findByName(b.name).addClass(c).removeClass(d) :
                        a(b).addClass(c).removeClass(d);
                },
                unhighlight: function(b, c, d) {
                    "radio" === b.type ?
                        this.findByName(b.name).removeClass(c).addClass(d) :
                        a(b).removeClass(c).addClass(d);
                },
            },
            setDefaults: function(b) {
                a.extend(a.validator.defaults, b);
            },
            messages: {
                required: "This field is required.",
                remote: "Please fix this field.",
                email: "Please enter a valid email address.",
                url: "Please enter a valid URL.",
                date: "Please enter a valid date.",
                dateISO: "Please enter a valid date ( ISO ).",
                number: "Please enter a valid number.",
                digits: "Please enter only digits.",
                creditcard: "Please enter a valid credit card number.",
                equalTo: "Please enter the same value again.",
                maxlength: a.validator.format(
                    "Please enter no more than {0} characters."
                ),
                minlength: a.validator.format("Please enter at least {0} characters."),
                rangelength: a.validator.format(
                    "Please enter a value between {0} and {1} characters long."
                ),
                range: a.validator.format("Please enter a value between {0} and {1}."),
                max: a.validator.format(
                    "Please enter a value less than or equal to {0}."
                ),
                min: a.validator.format(
                    "Please enter a value greater than or equal to {0}."
                ),
            },
            autoCreateRanges: !1,
            prototype: {
                init: function() {
                    function b(b) {
                        var c = a.data(this[0].form, "validator"),
                            d = "on" + b.type.replace(/^validate/, ""),
                            e = c.settings;
                        e[d] && !this.is(e.ignore) && e[d].call(c, this[0], b);
                    }
                    (this.labelContainer = a(this.settings.errorLabelContainer)),
                    (this.errorContext =
                        (this.labelContainer.length && this.labelContainer) ||
                        a(this.currentForm)),
                    (this.containers = a(this.settings.errorContainer).add(
                        this.settings.errorLabelContainer
                    )),
                    (this.submitted = {}),
                    (this.valueCache = {}),
                    (this.pendingRequest = 0),
                    (this.pending = {}),
                    (this.invalid = {}),
                    this.reset();
                    var c,
                        d = (this.groups = {});
                    a.each(this.settings.groups, function(b, c) {
                            "string" == typeof c && (c = c.split(/\s/)),
                                a.each(c, function(a, c) {
                                    d[c] = b;
                                });
                        }),
                        (c = this.settings.rules),
                        a.each(c, function(b, d) {
                            c[b] = a.validator.normalizeRule(d);
                        }),
                        a(this.currentForm)
                        .validateDelegate(
                            ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']",
                            "focusin focusout keyup",
                            b
                        )
                        .validateDelegate(
                            "select, option, [type='radio'], [type='checkbox']",
                            "click",
                            b
                        ),
                        this.settings.invalidHandler &&
                        a(this.currentForm).bind(
                            "invalid-form.validate",
                            this.settings.invalidHandler
                        ),
                        a(this.currentForm)
                        .find("[required], [data-rule-required], .required")
                        .attr("aria-required", "true");
                },
                form: function() {
                    return (
                        this.checkForm(),
                        a.extend(this.submitted, this.errorMap),
                        (this.invalid = a.extend({}, this.errorMap)),
                        this.valid() ||
                        a(this.currentForm).triggerHandler("invalid-form", [this]),
                        this.showErrors(),
                        this.valid()
                    );
                },
                checkForm: function() {
                    this.prepareForm();
                    for (
                        var a = 0, b = (this.currentElements = this.elements()); b[a]; a++
                    )
                        this.check(b[a]);
                    return this.valid();
                },
                element: function(b) {
                    var c = this.clean(b),
                        d = this.validationTargetFor(c),
                        e = !0;
                    return (
                        (this.lastElement = d),
                        void 0 === d ?
                        delete this.invalid[c.name] :
                        (this.prepareElement(d),
                            (this.currentElements = a(d)),
                            (e = this.check(d) !== !1),
                            e ? delete this.invalid[d.name] : (this.invalid[d.name] = !0)),
                        a(b).attr("aria-invalid", !e),
                        this.numberOfInvalids() ||
                        (this.toHide = this.toHide.add(this.containers)),
                        this.showErrors(),
                        e
                    );
                },
                showErrors: function(b) {
                    if (b) {
                        a.extend(this.errorMap, b), (this.errorList = []);
                        for (var c in b)
                            this.errorList.push({
                                message: b[c],
                                element: this.findByName(c)[0],
                            });
                        this.successList = a.grep(this.successList, function(a) {
                            return !(a.name in b);
                        });
                    }
                    this.settings.showErrors ?
                        this.settings.showErrors.call(this, this.errorMap, this.errorList) :
                        this.defaultShowErrors();
                },
                resetForm: function() {
                    a.fn.resetForm && a(this.currentForm).resetForm(),
                        (this.submitted = {}),
                        (this.lastElement = null),
                        this.prepareForm(),
                        this.hideErrors(),
                        this.elements()
                        .removeClass(this.settings.errorClass)
                        .removeData("previousValue")
                        .removeAttr("aria-invalid");
                },
                numberOfInvalids: function() {
                    return this.objectLength(this.invalid);
                },
                objectLength: function(a) {
                    var b,
                        c = 0;
                    for (b in a) c++;
                    return c;
                },
                hideErrors: function() {
                    this.hideThese(this.toHide);
                },
                hideThese: function(a) {
                    a.not(this.containers).text(""), this.addWrapper(a).hide();
                },
                valid: function() {
                    return 0 === this.size();
                },
                size: function() {
                    return this.errorList.length;
                },
                focusInvalid: function() {
                    if (this.settings.focusInvalid)
                        try {
                            a(
                                    this.findLastActive() ||
                                    (this.errorList.length && this.errorList[0].element) || []
                                )
                                .filter(":visible")
                                .focus()
                                .trigger("focusin");
                        } catch (b) {}
                },
                findLastActive: function() {
                    var b = this.lastActive;
                    return (
                        b &&
                        1 ===
                        a.grep(this.errorList, function(a) {
                            return a.element.name === b.name;
                        }).length &&
                        b
                    );
                },
                elements: function() {
                    var b = this,
                        c = {};
                    return a(this.currentForm)
                        .find("input, select, textarea")
                        .not(":submit, :reset, :image, [disabled], [readonly]")
                        .not(this.settings.ignore)
                        .filter(function() {
                            return (!this.name &&
                                b.settings.debug &&
                                window.console &&
                                console.error("%o has no name assigned", this),
                                this.name in c || !b.objectLength(a(this).rules()) ?
                                !1 :
                                ((c[this.name] = !0), !0)
                            );
                        });
                },
                clean: function(b) {
                    return a(b)[0];
                },
                errors: function() {
                    var b = this.settings.errorClass.split(" ").join(".");
                    return a(this.settings.errorElement + "." + b, this.errorContext);
                },
                reset: function() {
                    (this.successList = []),
                    (this.errorList = []),
                    (this.errorMap = {}),
                    (this.toShow = a([])),
                    (this.toHide = a([])),
                    (this.currentElements = a([]));
                },
                prepareForm: function() {
                    this.reset(), (this.toHide = this.errors().add(this.containers));
                },
                prepareElement: function(a) {
                    this.reset(), (this.toHide = this.errorsFor(a));
                },
                elementValue: function(b) {
                    var c,
                        d = a(b),
                        e = b.type;
                    return "radio" === e || "checkbox" === e ?
                        a("input[name='" + b.name + "']:checked").val() :
                        "number" === e && "undefined" != typeof b.validity ?
                        b.validity.badInput ?
                        !1 :
                        d.val() :
                        ((c = d.val()), "string" == typeof c ? c.replace(/\r/g, "") : c);
                },
                check: function(b) {
                    b = this.validationTargetFor(this.clean(b));
                    var c,
                        d,
                        e,
                        f = a(b).rules(),
                        g = a.map(f, function(a, b) {
                            return b;
                        }).length,
                        h = !1,
                        i = this.elementValue(b);
                    for (d in f) {
                        e = {
                            method: d,
                            parameters: f[d]
                        };
                        try {
                            if (
                                ((c = a.validator.methods[d].call(this, i, b, e.parameters)),
                                    "dependency-mismatch" === c && 1 === g)
                            ) {
                                h = !0;
                                continue;
                            }
                            if (((h = !1), "pending" === c))
                                return void(this.toHide = this.toHide.not(this.errorsFor(b)));
                            if (!c) return this.formatAndAdd(b, e), !1;
                        } catch (j) {
                            throw (
                                (this.settings.debug &&
                                    window.console &&
                                    console.log(
                                        "Exception occurred when checking element " +
                                        b.id +
                                        ", check the '" +
                                        e.method +
                                        "' method.",
                                        j
                                    ),
                                    j)
                            );
                        }
                    }
                    if (!h) return this.objectLength(f) && this.successList.push(b), !0;
                },
                customDataMessage: function(b, c) {
                    return (
                        a(b).data(
                            "msg" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()
                        ) || a(b).data("msg")
                    );
                },
                customMessage: function(a, b) {
                    var c = this.settings.messages[a];
                    return c && (c.constructor === String ? c : c[b]);
                },
                findDefined: function() {
                    for (var a = 0; a < arguments.length; a++)
                        if (void 0 !== arguments[a]) return arguments[a];
                    return void 0;
                },
                defaultMessage: function(b, c) {
                    return this.findDefined(
                        this.customMessage(b.name, c),
                        this.customDataMessage(b, c),
                        (!this.settings.ignoreTitle && b.title) || void 0,
                        a.validator.messages[c],
                        "<strong>Warning: No message defined for " + b.name + "</strong>"
                    );
                },
                formatAndAdd: function(b, c) {
                    var d = this.defaultMessage(b, c.method),
                        e = /\$?\{(\d+)\}/g;
                    "function" == typeof d
                        ?
                        (d = d.call(this, c.parameters, b)) :
                        e.test(d) &&
                        (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)),
                        this.errorList.push({
                            message: d,
                            element: b,
                            method: c.method
                        }),
                        (this.errorMap[b.name] = d),
                        (this.submitted[b.name] = d);
                },
                addWrapper: function(a) {
                    return (
                        this.settings.wrapper &&
                        (a = a.add(a.parent(this.settings.wrapper))),
                        a
                    );
                },
                defaultShowErrors: function() {
                    var a, b, c;
                    for (a = 0; this.errorList[a]; a++)
                        (c = this.errorList[a]),
                        this.settings.highlight &&
                        this.settings.highlight.call(
                            this,
                            c.element,
                            this.settings.errorClass,
                            this.settings.validClass
                        ),
                        this.showLabel(c.element, c.message);
                    if (
                        (this.errorList.length &&
                            (this.toShow = this.toShow.add(this.containers)),
                            this.settings.success)
                    )
                        for (a = 0; this.successList[a]; a++)
                            this.showLabel(this.successList[a]);
                    if (this.settings.unhighlight)
                        for (a = 0, b = this.validElements(); b[a]; a++)
                            this.settings.unhighlight.call(
                                this,
                                b[a],
                                this.settings.errorClass,
                                this.settings.validClass
                            );
                    (this.toHide = this.toHide.not(this.toShow)),
                    this.hideErrors(),
                        this.addWrapper(this.toShow).show();
                },
                validElements: function() {
                    return this.currentElements.not(this.invalidElements());
                },
                invalidElements: function() {
                    return a(this.errorList).map(function() {
                        return this.element;
                    });
                },
                showLabel: function(b, c) {
                    var d,
                        e,
                        f,
                        g = this.errorsFor(b),
                        h = this.idOrName(b),
                        i = a(b).attr("aria-describedby");
                    g.length ?
                        (g
                            .removeClass(this.settings.validClass)
                            .addClass(this.settings.errorClass),
                            g.html(c)) :
                        ((g = a("<" + this.settings.errorElement + ">")
                                .attr("id", h + "-error")
                                .addClass(this.settings.errorClass)
                                .html(c || "")),
                            (d = g),
                            this.settings.wrapper &&
                            (d = g
                                .hide()
                                .show()
                                .wrap("<" + this.settings.wrapper + "/>")
                                .parent()),
                            this.labelContainer.length ?
                            this.labelContainer.append(d) :
                            this.settings.errorPlacement ?
                            this.settings.errorPlacement(d, a(b)) :
                            d.insertAfter(b),
                            g.is("label") ?
                            g.attr("for", h) :
                            0 === g.parents("label[for='" + h + "']").length &&
                            ((f = g.attr("id").replace(/(:|\.|\[|\])/g, "\\$1")),
                                i ?
                                i.match(new RegExp("\\b" + f + "\\b")) || (i += " " + f) :
                                (i = f),
                                a(b).attr("aria-describedby", i),
                                (e = this.groups[b.name]),
                                e &&
                                a.each(this.groups, function(b, c) {
                                    c === e &&
                                        a("[name='" + b + "']", this.currentForm).attr(
                                            "aria-describedby",
                                            g.attr("id")
                                        );
                                }))), !c &&
                        this.settings.success &&
                        (g.text(""),
                            "string" == typeof this.settings.success ?
                            g.addClass(this.settings.success) :
                            this.settings.success(g, b)),
                        (this.toShow = this.toShow.add(g));
                },
                errorsFor: function(b) {
                    var c = this.idOrName(b),
                        d = a(b).attr("aria-describedby"),
                        e = "label[for='" + c + "'], label[for='" + c + "'] *";
                    return (
                        d && (e = e + ", #" + d.replace(/\s+/g, ", #")),
                        this.errors().filter(e)
                    );
                },
                idOrName: function(a) {
                    return (
                        this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name)
                    );
                },
                validationTargetFor: function(b) {
                    return (
                        this.checkable(b) && (b = this.findByName(b.name)),
                        a(b).not(this.settings.ignore)[0]
                    );
                },
                checkable: function(a) {
                    return /radio|checkbox/i.test(a.type);
                },
                findByName: function(b) {
                    return a(this.currentForm).find("[name='" + b + "']");
                },
                getLength: function(b, c) {
                    switch (c.nodeName.toLowerCase()) {
                        case "select":
                            return a("option:selected", c).length;
                        case "input":
                            if (this.checkable(c))
                                return this.findByName(c.name).filter(":checked").length;
                    }
                    return b.length;
                },
                depend: function(a, b) {
                    return this.dependTypes[typeof a] ?
                        this.dependTypes[typeof a](a, b) :
                        !0;
                },
                dependTypes: {
                    boolean: function(a) {
                        return a;
                    },
                    string: function(b, c) {
                        return !!a(b, c.form).length;
                    },
                    function: function(a, b) {
                        return a(b);
                    },
                },
                optional: function(b) {
                    var c = this.elementValue(b);
                    return (!a.validator.methods.required.call(this, c, b) &&
                        "dependency-mismatch"
                    );
                },
                startRequest: function(a) {
                    this.pending[a.name] ||
                        (this.pendingRequest++, (this.pending[a.name] = !0));
                },
                stopRequest: function(b, c) {
                    this.pendingRequest--,
                        this.pendingRequest < 0 && (this.pendingRequest = 0),
                        delete this.pending[b.name],
                        c && 0 === this.pendingRequest && this.formSubmitted && this.form() ?
                        (a(this.currentForm).submit(), (this.formSubmitted = !1)) :
                        !c &&
                        0 === this.pendingRequest &&
                        this.formSubmitted &&
                        (a(this.currentForm).triggerHandler("invalid-form", [this]),
                            (this.formSubmitted = !1));
                },
                previousValue: function(b) {
                    return (
                        a.data(b, "previousValue") ||
                        a.data(b, "previousValue", {
                            old: null,
                            valid: !0,
                            message: this.defaultMessage(b, "remote"),
                        })
                    );
                },
            },
            classRuleSettings: {
                required: {
                    required: !0
                },
                email: {
                    email: !0
                },
                url: {
                    url: !0
                },
                date: {
                    date: !0
                },
                dateISO: {
                    dateISO: !0
                },
                number: {
                    number: !0
                },
                digits: {
                    digits: !0
                },
                creditcard: {
                    creditcard: !0
                },
            },
            addClassRules: function(b, c) {
                b.constructor === String ?
                    (this.classRuleSettings[b] = c) :
                    a.extend(this.classRuleSettings, b);
            },
            classRules: function(b) {
                var c = {},
                    d = a(b).attr("class");
                return (
                    d &&
                    a.each(d.split(" "), function() {
                        this in a.validator.classRuleSettings &&
                            a.extend(c, a.validator.classRuleSettings[this]);
                    }),
                    c
                );
            },
            attributeRules: function(b) {
                var c,
                    d,
                    e = {},
                    f = a(b),
                    g = b.getAttribute("type");
                for (c in a.validator.methods)
                    "required" === c ?
                    ((d = b.getAttribute(c)), "" === d && (d = !0), (d = !!d)) :
                    (d = f.attr(c)),
                    /min|max/.test(c) &&
                    (null === g || /number|range|text/.test(g)) &&
                    (d = Number(d)),
                    d || 0 === d ? (e[c] = d) : g === c && "range" !== g && (e[c] = !0);
                return (
                    e.maxlength &&
                    /-1|2147483647|524288/.test(e.maxlength) &&
                    delete e.maxlength,
                    e
                );
            },
            dataRules: function(b) {
                var c,
                    d,
                    e = {},
                    f = a(b);
                for (c in a.validator.methods)
                    (d = f.data(
                        "rule" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()
                    )),
                    void 0 !== d && (e[c] = d);
                return e;
            },
            staticRules: function(b) {
                var c = {},
                    d = a.data(b.form, "validator");
                return (
                    d.settings.rules &&
                    (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}),
                    c
                );
            },
            normalizeRules: function(b, c) {
                return (
                    a.each(b, function(d, e) {
                        if (e === !1) return void delete b[d];
                        if (e.param || e.depends) {
                            var f = !0;
                            switch (typeof e.depends) {
                                case "string":
                                    f = !!a(e.depends, c.form).length;
                                    break;
                                case "function":
                                    f = e.depends.call(c, c);
                            }
                            f ? (b[d] = void 0 !== e.param ? e.param : !0) : delete b[d];
                        }
                    }),
                    a.each(b, function(d, e) {
                        b[d] = a.isFunction(e) ? e(c) : e;
                    }),
                    a.each(["minlength", "maxlength"], function() {
                        b[this] && (b[this] = Number(b[this]));
                    }),
                    a.each(["rangelength", "range"], function() {
                        var c;
                        b[this] &&
                            (a.isArray(b[this]) ?
                                (b[this] = [Number(b[this][0]), Number(b[this][1])]) :
                                "string" == typeof b[this] &&
                                ((c = b[this].replace(/[\[\]]/g, "").split(/[\s,]+/)),
                                    (b[this] = [Number(c[0]), Number(c[1])])));
                    }),
                    a.validator.autoCreateRanges &&
                    (null != b.min &&
                        null != b.max &&
                        ((b.range = [b.min, b.max]), delete b.min, delete b.max),
                        null != b.minlength &&
                        null != b.maxlength &&
                        ((b.rangelength = [b.minlength, b.maxlength]),
                            delete b.minlength,
                            delete b.maxlength)),
                    b
                );
            },
            normalizeRule: function(b) {
                if ("string" == typeof b) {
                    var c = {};
                    a.each(b.split(/\s/), function() {
                            c[this] = !0;
                        }),
                        (b = c);
                }
                return b;
            },
            addMethod: function(b, c, d) {
                (a.validator.methods[b] = c),
                (a.validator.messages[b] =
                    void 0 !== d ? d : a.validator.messages[b]),
                c.length < 3 &&
                    a.validator.addClassRules(b, a.validator.normalizeRule(b));
            },
            methods: {
                required: function(b, c, d) {
                    if (!this.depend(d, c)) return "dependency-mismatch";
                    if ("select" === c.nodeName.toLowerCase()) {
                        var e = a(c).val();
                        return e && e.length > 0;
                    }
                    return this.checkable(c) ?
                        this.getLength(b, c) > 0 :
                        a.trim(b).length > 0;
                },
                email: function(a, b) {
                    return (
                        this.optional(b) ||
                        /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(
                            a
                        )
                    );
                },
                url: function(a, b) {
                    return (
                        this.optional(b) ||
                        /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(
                            a
                        )
                    );
                },
                date: function(a, b) {
                    return (
                        this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString())
                    );
                },
                dateISO: function(a, b) {
                    return (
                        this.optional(b) ||
                        /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(
                            a
                        )
                    );
                },
                number: function(a, b) {
                    return (
                        this.optional(b) ||
                        /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)
                    );
                },
                digits: function(a, b) {
                    return this.optional(b) || /^\d+$/.test(a);
                },
                creditcard: function(a, b) {
                    if (this.optional(b)) return "dependency-mismatch";
                    if (/[^0-9 \-]+/.test(a)) return !1;
                    var c,
                        d,
                        e = 0,
                        f = 0,
                        g = !1;
                    if (((a = a.replace(/\D/g, "")), a.length < 13 || a.length > 19))
                        return !1;
                    for (c = a.length - 1; c >= 0; c--)
                        (d = a.charAt(c)),
                        (f = parseInt(d, 10)),
                        g && (f *= 2) > 9 && (f -= 9),
                        (e += f),
                        (g = !g);
                    return e % 10 === 0;
                },
                minlength: function(b, c, d) {
                    var e = a.isArray(b) ? b.length : this.getLength(b, c);
                    return this.optional(c) || e >= d;
                },
                maxlength: function(b, c, d) {
                    var e = a.isArray(b) ? b.length : this.getLength(b, c);
                    return this.optional(c) || d >= e;
                },
                rangelength: function(b, c, d) {
                    var e = a.isArray(b) ? b.length : this.getLength(b, c);
                    return this.optional(c) || (e >= d[0] && e <= d[1]);
                },
                min: function(a, b, c) {
                    return this.optional(b) || a >= c;
                },
                max: function(a, b, c) {
                    return this.optional(b) || c >= a;
                },
                range: function(a, b, c) {
                    return this.optional(b) || (a >= c[0] && a <= c[1]);
                },
                equalTo: function(b, c, d) {
                    var e = a(d);
                    return (
                        this.settings.onfocusout &&
                        e
                        .unbind(".validate-equalTo")
                        .bind("blur.validate-equalTo", function() {
                            a(c).valid();
                        }),
                        b === e.val()
                    );
                },
                remote: function(b, c, d) {
                    if (this.optional(c)) return "dependency-mismatch";
                    var e,
                        f,
                        g = this.previousValue(c);
                    return (
                        this.settings.messages[c.name] ||
                        (this.settings.messages[c.name] = {}),
                        (g.originalMessage = this.settings.messages[c.name].remote),
                        (this.settings.messages[c.name].remote = g.message),
                        (d = ("string" == typeof d && {
                            url: d
                        }) || d),
                        g.old === b ?
                        g.valid :
                        ((g.old = b),
                            (e = this),
                            this.startRequest(c),
                            (f = {}),
                            (f[c.name] = b),
                            a.ajax(
                                a.extend(!0, {
                                        url: d,
                                        mode: "abort",
                                        port: "validate" + c.name,
                                        dataType: "json",
                                        data: f,
                                        context: e.currentForm,
                                        success: function(d) {
                                            var f,
                                                h,
                                                i,
                                                j = d === !0 || "true" === d;
                                            (e.settings.messages[c.name].remote =
                                                g.originalMessage),
                                            j
                                                ?
                                                ((i = e.formSubmitted),
                                                    e.prepareElement(c),
                                                    (e.formSubmitted = i),
                                                    e.successList.push(c),
                                                    delete e.invalid[c.name],
                                                    e.showErrors()) :
                                                ((f = {}),
                                                    (h = d || e.defaultMessage(c, "remote")),
                                                    (f[c.name] = g.message =
                                                        a.isFunction(h) ? h(b) : h),
                                                    (e.invalid[c.name] = !0),
                                                    e.showErrors(f)),
                                                (g.valid = j),
                                                e.stopRequest(c, j);
                                        },
                                    },
                                    d
                                )
                            ),
                            "pending")
                    );
                },
            },
        }),
        (a.format = function() {
            throw "$.format has been deprecated. Please use $.validator.format instead.";
        });
    var b,
        c = {};
    a.ajaxPrefilter ?
        a.ajaxPrefilter(function(a, b, d) {
            var e = a.port;
            "abort" === a.mode && (c[e] && c[e].abort(), (c[e] = d));
        }) :
        ((b = a.ajax),
            (a.ajax = function(d) {
                var e = ("mode" in d ? d : a.ajaxSettings).mode,
                    f = ("port" in d ? d : a.ajaxSettings).port;
                return "abort" === e ?
                    (c[f] && c[f].abort(), (c[f] = b.apply(this, arguments)), c[f]) :
                    b.apply(this, arguments);
            })),
        a.extend(a.fn, {
            validateDelegate: function(b, c, d) {
                return this.bind(c, function(c) {
                    var e = a(c.target);
                    return e.is(b) ? d.apply(e, arguments) : void 0;
                });
            },
        });
});

/*
 * jQuery wizard plug-in 3.0.7 (18-SEPT-2012)
 *
 *
 * Copyright (c) 2012 Jan Sundman (jan.sundman[at]aland.net)
 *
 * http://www.thecodemine.org
 *
 * Licensed under the MIT licens:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 */
(function(e) {
    e.widget("ui.formwizard", {
        _init: function() {
            var t = this;
            var n = this.options.formOptions.success;
            var r = this.options.formOptions.complete;
            var i = this.options.formOptions.beforeSend;
            var s = this.options.formOptions.beforeSubmit;
            var o = this.options.formOptions.beforeSerialize;
            this.options.formOptions = e.extend(this.options.formOptions, {
                success: function(e, r, i) {
                    if (n) {
                        n(e, r, i);
                    }
                    if (
                        (t.options.formOptions && t.options.formOptions.resetForm) ||
                        !t.options.formOptions
                    ) {
                        t._reset();
                    }
                },
                complete: function(e, n) {
                    if (r) {
                        r(e, n);
                    }
                    t._enableNavigation();
                },
                beforeSubmit: function(e, n, r) {
                    if (s) {
                        var i = s(e, n, r);
                        if (!i) t._enableNavigation();
                        return i;
                    }
                },
                beforeSend: function(e) {
                    if (i) {
                        var n = i(e);
                        if (!n) t._enableNavigation();
                        return n;
                    }
                },
                beforeSerialize: function(e, n) {
                    if (o) {
                        var r = o(e, n);
                        if (!r) t._enableNavigation();
                        return r;
                    }
                },
            });
            if (this.options.historyEnabled) {
                e.bbq.removeState("_" + e(this.element).attr("id"));
            }
            this.steps = this.element.find(".step").hide();
            this.firstStep = this.steps.eq(0).attr("id");
            this.activatedSteps = new Array();
            this.isLastStep = false;
            this.previousStep = undefined;
            this.currentStep = this.steps.eq(0).attr("id");
            this.nextButton = this.element.find(this.options.next).click(function() {
                return t._next();
            });
            this.nextButtonInitinalValue = this.nextButton.val();
            this.nextButton.val(this.options.textNext);
            this.backButton = this.element.find(this.options.back).click(function() {
                t._back();
                return false;
            });
            this.backButtonInitinalValue = this.backButton.val();
            this.backButton.val(this.options.textBack);
            if (this.options.validationEnabled && jQuery().validate == undefined) {
                this.options.validationEnabled = false;
                if (window["console"] !== undefined) {
                    console.log(
                        "%s",
                        "validationEnabled option set, but the validation plugin is not included"
                    );
                }
            } else if (this.options.validationEnabled) {
                this.element.validate(this.options.validationOptions);
            }
            if (this.options.formPluginEnabled && jQuery().ajaxSubmit == undefined) {
                this.options.formPluginEnabled = false;
                if (window["console"] !== undefined) {
                    console.log(
                        "%s",
                        "formPluginEnabled option set but the form plugin is not included"
                    );
                }
            }
            if (this.options.disableInputFields == true) {
                e(this.steps)
                    .find(":input:not('.wizard-ignore')")
                    .attr("disabled", "disabled");
            }
            if (this.options.historyEnabled) {
                e(window).bind("hashchange", undefined, function(n) {
                    var r = n.getState("_" + e(t.element).attr("id")) || t.firstStep;
                    if (r !== t.currentStep) {
                        if (
                            t.options.validationEnabled &&
                            r === t._navigate(t.currentStep)
                        ) {
                            if (!t.element.valid()) {
                                t._updateHistory(t.currentStep);
                                t.element.validate().focusInvalid();
                                return false;
                            }
                        }
                        if (r !== t.currentStep) t._show(r);
                    }
                });
            }
            this.element.addClass("ui-formwizard");
            this.element.find(":input").addClass("ui-wizard-content");
            this.steps.addClass("ui-formwizard-content");
            this.backButton.addClass("ui-formwizard-button ui-wizard-content");
            this.nextButton.addClass("ui-formwizard-button ui-wizard-content");
            if (!this.options.disableUIStyles) {
                this.element.addClass(
                    "ui-helper-reset ui-widget ui-widget-content ui-helper-reset ui-corner-all"
                );
                this.element
                    .find(":input")
                    .addClass("ui-helper-reset ui-state-default");
                this.steps.addClass("ui-helper-reset ui-corner-all");
                this.backButton.addClass("ui-helper-reset ui-state-default");
                this.nextButton.addClass("ui-helper-reset ui-state-default");
            }
            this._show(undefined);
            return e(this);
        },
        _next: function() {
            if (this.options.validationEnabled) {
                if (!this.element.valid()) {
                    this.element.validate().focusInvalid();
                    return false;
                }
            }
            if (this.options.remoteAjax != undefined) {
                var t = this.options.remoteAjax[this.currentStep];
                var n = this;
                if (t !== undefined) {
                    var r = t.success;
                    var i = t.beforeSend;
                    var s = t.complete;
                    t = e.extend({}, t, {
                        success: function(e, t) {
                            if ((r !== undefined && r(e, t)) || r == undefined) {
                                n._continueToNextStep();
                            }
                        },
                        beforeSend: function(t) {
                            n._disableNavigation();
                            if (i !== undefined) i(t);
                            e(n.element).trigger("before_remote_ajax", {
                                currentStep: n.currentStep,
                            });
                        },
                        complete: function(t, r) {
                            if (s !== undefined) s(t, r);
                            e(n.element).trigger("after_remote_ajax", {
                                currentStep: n.currentStep,
                            });
                            n._enableNavigation();
                        },
                    });
                    this.element.ajaxSubmit(t);
                    return false;
                }
            }
            return this._continueToNextStep();
        },
        _back: function() {
            if (this.activatedSteps.length > 0) {
                if (this.options.historyEnabled) {
                    this._updateHistory(
                        this.activatedSteps[this.activatedSteps.length - 2]
                    );
                } else {
                    this._show(this.activatedSteps[this.activatedSteps.length - 2], true);
                }
            }
            return false;
        },
        _continueToNextStep: function() {
            if (this.isLastStep) {
                for (var e = 0; e < this.activatedSteps.length; e++) {
                    this.steps
                        .filter("#" + this.activatedSteps[e])
                        .find(":input")
                        .not(".wizard-ignore")
                        .removeAttr("disabled");
                }
                if (!this.options.formPluginEnabled) {
                    return true;
                } else {
                    this._disableNavigation();
                    this.element.ajaxSubmit(this.options.formOptions);
                    return false;
                }
            }
            var t = this._navigate(this.currentStep);
            if (t == this.currentStep) {
                return false;
            }
            if (this.options.historyEnabled) {
                this._updateHistory(t);
            } else {
                this._show(t, true);
            }
            return false;
        },
        _updateHistory: function(t) {
            var n = {};
            n["_" + e(this.element).attr("id")] = t;
            e.bbq.pushState(n);
        },
        _disableNavigation: function() {
            this.nextButton.attr("disabled", "disabled");
            this.backButton.attr("disabled", "disabled");
            if (!this.options.disableUIStyles) {
                this.nextButton
                    .removeClass("ui-state-active")
                    .addClass("ui-state-disabled");
                this.backButton
                    .removeClass("ui-state-active")
                    .addClass("ui-state-disabled");
            }
        },
        _enableNavigation: function() {
            if (this.isLastStep) {
                this.nextButton.val(this.options.textSubmit);
            } else {
                this.nextButton.val(this.options.textNext);
            }
            if (e.trim(this.currentStep) !== this.steps.eq(0).attr("id")) {
                this.backButton.removeAttr("disabled");
                if (!this.options.disableUIStyles) {
                    this.backButton
                        .removeClass("ui-state-disabled")
                        .addClass("ui-state-active");
                }
            }
            this.nextButton.removeAttr("disabled");
            if (!this.options.disableUIStyles) {
                this.nextButton
                    .removeClass("ui-state-disabled")
                    .addClass("ui-state-active");
            }
        },
        _animate: function(e, t, n) {
            this._disableNavigation();
            var r = this.steps.filter("#" + e);
            var i = this.steps.filter("#" + t);
            r.find(":input").not(".wizard-ignore").attr("disabled", "disabled");
            i.find(":input").not(".wizard-ignore").removeAttr("disabled");
            var s = this;
            r.animate(
                s.options.outAnimation,
                s.options.outDuration,
                s.options.easing,
                function() {
                    i.animate(
                        s.options.inAnimation,
                        s.options.inDuration,
                        s.options.easing,
                        function() {
                            if (s.options.focusFirstInput) i.find(":input:first").focus();
                            s._enableNavigation();
                            n.apply(s);
                        }
                    );
                    return;
                }
            );
        },
        _checkIflastStep: function(t) {
            this.isLastStep = false;
            if (
                e("#" + t).hasClass(this.options.submitStepClass) ||
                this.steps.filter(":last").attr("id") == t
            ) {
                this.isLastStep = true;
            }
        },
        _getLink: function(t) {
            var n = undefined;
            var r = this.steps.filter("#" + t).find(this.options.linkClass);
            if (r != undefined) {
                if (r.filter(":radio,:checkbox").size() > 0) {
                    n = r.filter(this.options.linkClass + ":checked").val();
                } else {
                    n = e(r).val();
                }
            }
            return n;
        },
        _navigate: function(e) {
            var t = this._getLink(e);
            if (t != undefined) {
                if (
                    t != "" &&
                    t != null &&
                    t != undefined &&
                    this.steps.filter("#" + t).attr("id") != undefined
                ) {
                    return t;
                }
                return this.currentStep;
            } else if (t == undefined && !this.isLastStep) {
                var n = this.steps
                    .filter("#" + e)
                    .next()
                    .attr("id");
                return n;
            }
        },
        _show: function(t) {
            var n = false;
            var r = t !== undefined;
            if (t == undefined || t == "") {
                this.activatedSteps.pop();
                t = this.firstStep;
                this.activatedSteps.push(t);
            } else {
                if (e.inArray(t, this.activatedSteps) > -1) {
                    n = true;
                    this.activatedSteps.pop();
                } else {
                    this.activatedSteps.push(t);
                }
            }
            if (this.currentStep !== t || t === this.firstStep) {
                this.previousStep = this.currentStep;
                this._checkIflastStep(t);
                this.currentStep = t;
                var i = function() {
                    if (r) {
                        e(this.element).trigger(
                            "step_shown",
                            e.extend({
                                isBackNavigation: n
                            }, this._state())
                        );
                    }
                };
                if (r) {
                    e(this.element).trigger(
                        "before_step_shown",
                        e.extend({
                            isBackNavigation: n
                        }, this._state())
                    );
                }
                this._animate(this.previousStep, t, i);
            }
        },
        _reset: function() {
            this.element.resetForm();
            e("label,:input,textarea", this).removeClass("error");
            for (var t = 0; t < this.activatedSteps.length; t++) {
                this.steps
                    .filter("#" + this.activatedSteps[t])
                    .hide()
                    .find(":input")
                    .attr("disabled", "disabled");
            }
            this.activatedSteps = new Array();
            this.previousStep = undefined;
            this.isLastStep = false;
            if (this.options.historyEnabled) {
                this._updateHistory(this.firstStep);
            } else {
                this._show(this.firstStep);
            }
        },
        _state: function(e) {
            var t = {
                settings: this.options,
                activatedSteps: this.activatedSteps,
                isLastStep: this.isLastStep,
                isFirstStep: this.currentStep === this.firstStep,
                previousStep: this.previousStep,
                currentStep: this.currentStep,
                backButton: this.backButton,
                nextButton: this.nextButton,
                steps: this.steps,
                firstStep: this.firstStep,
            };
            if (e !== undefined) return t[e];
            return t;
        },
        show: function(e) {
            if (this.options.historyEnabled) {
                this._updateHistory(e);
            } else {
                this._show(e);
            }
        },
        state: function(e) {
            return this._state(e);
        },
        reset: function() {
            this._reset();
        },
        next: function() {
            this._next();
        },
        back: function() {
            this._back();
        },
        destroy: function() {
            this.element.find("*").removeAttr("disabled").show();
            this.nextButton
                .unbind("click")
                .val(this.nextButtonInitinalValue)
                .removeClass("ui-state-disabled")
                .addClass("ui-state-active");
            this.backButton
                .unbind("click")
                .val(this.backButtonInitinalValue)
                .removeClass("ui-state-disabled")
                .addClass("ui-state-active");
            this.backButtonInitinalValue = undefined;
            this.nextButtonInitinalValue = undefined;
            this.activatedSteps = undefined;
            this.previousStep = undefined;
            this.currentStep = undefined;
            this.isLastStep = undefined;
            this.options = undefined;
            this.nextButton = undefined;
            this.backButton = undefined;
            this.formwizard = undefined;
            this.element = undefined;
            this.steps = undefined;
            this.firstStep = undefined;
        },
        update_steps: function() {
            this.steps = this.element.find(".step").addClass("ui-formwizard-content");
            this.firstStep = this.steps.eq(0).attr("id");
            this.steps
                .not("#" + this.currentStep)
                .hide()
                .find(":input")
                .addClass("ui-wizard-content")
                .attr("disabled", "disabled");
            this._checkIflastStep(this.currentStep);
            this._enableNavigation();
            if (!this.options.disableUIStyles) {
                this.steps.addClass("ui-helper-reset ui-corner-all");
                this.steps.find(":input").addClass("ui-helper-reset ui-state-default");
            }
        },
        options: {
            historyEnabled: false,
            validationEnabled: false,
            validationOptions: undefined,
            formPluginEnabled: false,
            linkClass: ".link",
            submitStepClass: "submit_step",
            back: ":reset",
            next: ":submit",
            textSubmit: "Submit",
            textNext: "Next",
            textBack: "Back",
            remoteAjax: undefined,
            inAnimation: {
                opacity: "show"
            },
            outAnimation: {
                opacity: "hide"
            },
            inDuration: 400,
            outDuration: 400,
            easing: "swing",
            focusFirstInput: false,
            disableInputFields: true,
            formOptions: {
                reset: true,
                success: function(e) {
                    if (window["console"] !== undefined) {
                        console.log("%s", "form submit successful");
                    }
                },
                disableUIStyles: false,
            },
        },
    });
})(jQuery);

/*!
 * jQuery Tags Input Plugin 1.3.6
 *
 * Copyright (c) 2011 XOXCO, Inc
 *
 * Documentation for this plugin lives here:
 * https://github.com/xoxco/jQuery-Tags-Input
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/mit-license.php
 * ben@xoxco.com
 */
!(function(a) {
    var b = new Array(),
        c = new Array();
    (a.fn.doAutosize = function(b) {
        var c = a(this).data("minwidth"),
            d = a(this).data("maxwidth"),
            e = "",
            f = a(this),
            g = a("#" + a(this).data("tester_id"));
        if (e !== (e = f.val())) {
            var h = e
                .replace(/&/g, "&amp;")
                .replace(/\s/g, " ")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;");
            g.html(h);
            var i = g.width(),
                j = i + b.comfortZone >= c ? i + b.comfortZone : c,
                k = f.width(),
                l = (k > j && j >= c) || (j > c && d > j);
            l && f.width(j);
        }
    }),
    (a.fn.resetAutosize = function(b) {
        var c = a(this).data("minwidth") || b.minInputWidth || a(this).width(),
            d =
            a(this).data("maxwidth") ||
            b.maxInputWidth ||
            a(this).closest(".tagsinput").width() - b.inputPadding,
            e = a(this),
            f = a("<tester/>").css({
                position: "absolute",
                top: -9999,
                left: -9999,
                width: "auto",
                fontSize: e.css("fontSize"),
                fontFamily: e.css("fontFamily"),
                fontWeight: e.css("fontWeight"),
                letterSpacing: e.css("letterSpacing"),
                whiteSpace: "nowrap",
            }),
            g = a(this).attr("id") + "_autosize_tester";
        !a("#" + g).length > 0 && (f.attr("id", g), f.appendTo("body")),
            e.data("minwidth", c),
            e.data("maxwidth", d),
            e.data("tester_id", g),
            e.css("width", c);
    }),
    (a.fn.addTag = function(d, e) {
        return (
            (e = jQuery.extend({
                focus: !1,
                callback: !0
            }, e)),
            this.each(function() {
                var f = a(this).attr("id"),
                    g = a(this).val().split(b[f]);
                if (
                    ("" == g[0] && (g = new Array()), (d = jQuery.trim(d)), e.unique)
                ) {
                    var h = a(this).tagExist(d);
                    1 == h && a("#" + f + "_tag").addClass("not_valid");
                } else var h = !1;
                if ("" != d && 1 != h) {
                    if (
                        (a("<span>")
                            .addClass("tag")
                            .append(
                                a("<span>").text(d).append("&nbsp;&nbsp;"),
                                a("<a>", {
                                    href: "#",
                                    title: "Removing tag",
                                    text: "x",
                                }).click(function() {
                                    return a("#" + f).removeTag(escape(d));
                                })
                            )
                            .insertBefore("#" + f + "_addTag"),
                            g.push(d),
                            a("#" + f + "_tag").val(""),
                            e.focus ?
                            a("#" + f + "_tag").focus() :
                            a("#" + f + "_tag").blur(),
                            a.fn.tagsInput.updateTagsField(this, g),
                            e.callback && c[f] && c[f].onAddTag)
                    ) {
                        var i = c[f].onAddTag;
                        i.call(this, d);
                    }
                    if (c[f] && c[f].onChange) {
                        var j = g.length,
                            i = c[f].onChange;
                        i.call(this, a(this), g[j - 1]);
                    }
                }
            }), !1
        );
    }),
    (a.fn.removeTag = function(d) {
        return (
            (d = unescape(d)),
            this.each(function() {
                var e = a(this).attr("id"),
                    f = a(this).val().split(b[e]);
                for (
                    a("#" + e + "_tagsinput .tag").remove(), str = "", i = 0; i < f.length; i++
                )
                    f[i] != d && (str = str + b[e] + f[i]);
                if (
                    (a.fn.tagsInput.importTags(this, str), c[e] && c[e].onRemoveTag)
                ) {
                    var g = c[e].onRemoveTag;
                    g.call(this, d);
                }
            }), !1
        );
    }),
    (a.fn.tagExist = function(c) {
        var d = a(this).attr("id"),
            e = a(this).val().split(b[d]);
        return jQuery.inArray(c, e) >= 0;
    }),
    (a.fn.importTags = function(b) {
        var c = a(this).attr("id");
        a("#" + c + "_tagsinput .tag").remove(),
            a.fn.tagsInput.importTags(this, b);
    }),
    (a.fn.tagsInput = function(e) {
        var f = jQuery.extend({
                    interactive: !0,
                    defaultText: "add a tag",
                    minChars: 0,
                    width: "300px",
                    height: "100px",
                    autocomplete: {
                        selectFirst: !1
                    },
                    hide: !0,
                    delimiter: ",",
                    unique: !0,
                    removeWithBackspace: !0,
                    placeholderColor: "#666666",
                    autosize: !0,
                    comfortZone: 20,
                    inputPadding: 12,
                },
                e
            ),
            g = 0;
        return (
            this.each(function() {
                if ("undefined" == typeof a(this).attr("data-tagsinput-init")) {
                    a(this).attr("data-tagsinput-init", !0), f.hide && a(this).hide();
                    var e = a(this).attr("id");
                    (!e || b[a(this).attr("id")]) &&
                    (e = a(this)
                        .attr("id", "tags" + new Date().getTime() + g++)
                        .attr("id"));
                    var h = jQuery.extend({
                            pid: e,
                            real_input: "#" + e,
                            holder: "#" + e + "_tagsinput",
                            input_wrapper: "#" + e + "_addTag",
                            fake_input: "#" + e + "_tag",
                        },
                        f
                    );
                    (b[e] = h.delimiter),
                    (f.onAddTag || f.onRemoveTag || f.onChange) &&
                    ((c[e] = new Array()),
                        (c[e].onAddTag = f.onAddTag),
                        (c[e].onRemoveTag = f.onRemoveTag),
                        (c[e].onChange = f.onChange));
                    var i =
                        '<div id="' +
                        e +
                        '_tagsinput" class="tagsinput"><div id="' +
                        e +
                        '_addTag">';
                    if (
                        (f.interactive &&
                            (i =
                                i +
                                '<input id="' +
                                e +
                                '_tag" value="" data-default="' +
                                f.defaultText +
                                '" />'),
                            (i += '</div><div class="tags_clear"></div></div>'),
                            a(i).insertAfter(this),
                            a(h.holder).css("width", f.width),
                            a(h.holder).css("min-height", f.height),
                            a(h.holder).css("height", f.height),
                            "" != a(h.real_input).val() &&
                            a.fn.tagsInput.importTags(
                                a(h.real_input),
                                a(h.real_input).val()
                            ),
                            f.interactive)
                    ) {
                        if (
                            (a(h.fake_input).val(a(h.fake_input).attr("data-default")),
                                a(h.fake_input).css("color", f.placeholderColor),
                                a(h.fake_input).resetAutosize(f),
                                a(h.holder).bind("click", h, function(b) {
                                    a(b.data.fake_input).focus();
                                }),
                                a(h.fake_input).bind("focus", h, function(b) {
                                    a(b.data.fake_input).val() ==
                                        a(b.data.fake_input).attr("data-default") &&
                                        a(b.data.fake_input).val(""),
                                        a(b.data.fake_input).css("color", "#000000");
                                }),
                                void 0 != f.autocomplete_url)
                        ) {
                            autocomplete_options = {
                                source: f.autocomplete_url
                            };
                            for (attrname in f.autocomplete)
                                autocomplete_options[attrname] = f.autocomplete[attrname];
                            void 0 !== jQuery.Autocompleter ?
                                (a(h.fake_input).autocomplete(
                                        f.autocomplete_url,
                                        f.autocomplete
                                    ),
                                    a(h.fake_input).bind("result", h, function(b, c, d) {
                                        c &&
                                            a("#" + e).addTag(c[0] + "", {
                                                focus: !0,
                                                unique: f.unique,
                                            });
                                    })) :
                                void 0 !== jQuery.ui.autocomplete &&
                                (a(h.fake_input).autocomplete(autocomplete_options),
                                    a(h.fake_input).bind(
                                        "autocompleteselect",
                                        h,
                                        function(b, c) {
                                            return (
                                                a(b.data.real_input).addTag(c.item.value, {
                                                    focus: !0,
                                                    unique: f.unique,
                                                }), !1
                                            );
                                        }
                                    ));
                        } else
                            a(h.fake_input).bind("blur", h, function(b) {
                                var c = a(this).attr("data-default");
                                return (
                                    "" != a(b.data.fake_input).val() &&
                                    a(b.data.fake_input).val() != c ?
                                    b.data.minChars <= a(b.data.fake_input).val().length &&
                                    (!b.data.maxChars ||
                                        b.data.maxChars >=
                                        a(b.data.fake_input).val().length) &&
                                    a(b.data.real_input).addTag(
                                        a(b.data.fake_input).val(), {
                                            focus: !0,
                                            unique: f.unique
                                        }
                                    ) :
                                    (a(b.data.fake_input).val(
                                            a(b.data.fake_input).attr("data-default")
                                        ),
                                        a(b.data.fake_input).css("color", f.placeholderColor)), !1
                                );
                            });
                        a(h.fake_input).bind("keypress", h, function(b) {
                                return d(b) ?
                                    (b.preventDefault(),
                                        b.data.minChars <= a(b.data.fake_input).val().length &&
                                        (!b.data.maxChars ||
                                            b.data.maxChars >= a(b.data.fake_input).val().length) &&
                                        a(b.data.real_input).addTag(a(b.data.fake_input).val(), {
                                            focus: !0,
                                            unique: f.unique,
                                        }),
                                        a(b.data.fake_input).resetAutosize(f), !1) :
                                    void(
                                        b.data.autosize && a(b.data.fake_input).doAutosize(f)
                                    );
                            }),
                            h.removeWithBackspace &&
                            a(h.fake_input).bind("keydown", function(b) {
                                if (8 == b.keyCode && "" == a(this).val()) {
                                    b.preventDefault();
                                    var c = a(this)
                                        .closest(".tagsinput")
                                        .find(".tag:last")
                                        .text(),
                                        d = a(this).attr("id").replace(/_tag$/, "");
                                    (c = c.replace(/[\s]+x$/, "")),
                                    a("#" + d).removeTag(escape(c)),
                                        a(this).trigger("focus");
                                }
                            }),
                            a(h.fake_input).blur(),
                            h.unique &&
                            a(h.fake_input).keydown(function(b) {
                                (8 == b.keyCode ||
                                    String.fromCharCode(b.which).match(
                                        /\w+|[áéíóúÁÉÍÓÚñÑ,/]+/
                                    )) &&
                                a(this).removeClass("not_valid");
                            });
                    }
                }
            }),
            this
        );
    }),
    (a.fn.tagsInput.updateTagsField = function(c, d) {
        var e = a(c).attr("id");
        a(c).val(d.join(b[e]));
    }),
    (a.fn.tagsInput.importTags = function(d, e) {
        a(d).val("");
        var f = a(d).attr("id"),
            g = e.split(b[f]);
        for (i = 0; i < g.length; i++)
            a(d).addTag(g[i], {
                focus: !1,
                callback: !1
            });
        if (c[f] && c[f].onChange) {
            var h = c[f].onChange;
            h.call(d, d, g[i]);
        }
    });
    var d = function(b) {
        var c = !1;
        return 13 == b.which ?
            !0 :
            ("string" == typeof b.data.delimiter ?
                b.which == b.data.delimiter.charCodeAt(0) && (c = !0) :
                a.each(b.data.delimiter, function(a, d) {
                    b.which == d.charCodeAt(0) && (c = !0);
                }),
                c);
    };
})(jQuery);

/*!
 * jquery.sparkline 2.1.2 - http://omnipotent.net/jquery.sparkline/
 * Licensed under the New BSD License - see above site for details
 */
(function(a, b, c) {
    (function(a) {
        typeof define == "function" && define.amd ?
            define(["jquery"], a) :
            jQuery && !jQuery.fn.sparkline && a(jQuery);
    })(function(d) {
        "use strict";
        var e = {},
            f,
            g,
            h,
            i,
            j,
            k,
            l,
            m,
            n,
            o,
            p,
            q,
            r,
            s,
            t,
            u,
            v,
            w,
            x,
            y,
            z,
            A,
            B,
            C,
            D,
            E,
            F,
            G,
            H,
            I,
            J,
            K,
            L = 0;
        (f = function() {
            return {
                common: {
                    type: "line",
                    lineColor: "#00f",
                    fillColor: "#cdf",
                    defaultPixelsPerValue: 3,
                    width: "auto",
                    height: "auto",
                    composite: !1,
                    tagValuesAttribute: "values",
                    tagOptionsPrefix: "spark",
                    enableTagOptions: !1,
                    enableHighlight: !0,
                    highlightLighten: 1.4,
                    tooltipSkipNull: !0,
                    tooltipPrefix: "",
                    tooltipSuffix: "",
                    disableHiddenCheck: !1,
                    numberFormatter: !1,
                    numberDigitGroupCount: 3,
                    numberDigitGroupSep: ",",
                    numberDecimalMark: ".",
                    disableTooltips: !1,
                    disableInteraction: !1,
                },
                line: {
                    spotColor: "#f80",
                    highlightSpotColor: "#5f5",
                    highlightLineColor: "#f22",
                    spotRadius: 1.5,
                    minSpotColor: "#f80",
                    maxSpotColor: "#f80",
                    lineWidth: 1,
                    normalRangeMin: c,
                    normalRangeMax: c,
                    normalRangeColor: "#ccc",
                    drawNormalOnTop: !1,
                    chartRangeMin: c,
                    chartRangeMax: c,
                    chartRangeMinX: c,
                    chartRangeMaxX: c,
                    tooltipFormat: new h(
                        '<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}'
                    ),
                },
                bar: {
                    barColor: "#3366cc",
                    negBarColor: "#f44",
                    stackedBarColor: [
                        "#3366cc",
                        "#dc3912",
                        "#ff9900",
                        "#109618",
                        "#66aa00",
                        "#dd4477",
                        "#0099c6",
                        "#990099",
                    ],
                    zeroColor: c,
                    nullColor: c,
                    zeroAxis: !0,
                    barWidth: 4,
                    barSpacing: 1,
                    chartRangeMax: c,
                    chartRangeMin: c,
                    chartRangeClip: !1,
                    colorMap: c,
                    tooltipFormat: new h(
                        '<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}'
                    ),
                },
                tristate: {
                    barWidth: 4,
                    barSpacing: 1,
                    posBarColor: "#6f6",
                    negBarColor: "#f44",
                    zeroBarColor: "#999",
                    colorMap: {},
                    tooltipFormat: new h(
                        '<span style="color: {{color}}">&#9679;</span> {{value:map}}'
                    ),
                    tooltipValueLookups: {
                        map: {
                            "-1": "Loss",
                            0: "Draw",
                            1: "Win"
                        }
                    },
                },
                discrete: {
                    lineHeight: "auto",
                    thresholdColor: c,
                    thresholdValue: 0,
                    chartRangeMax: c,
                    chartRangeMin: c,
                    chartRangeClip: !1,
                    tooltipFormat: new h("{{prefix}}{{value}}{{suffix}}"),
                },
                bullet: {
                    targetColor: "#f33",
                    targetWidth: 3,
                    performanceColor: "#33f",
                    rangeColors: ["#d3dafe", "#a8b6ff", "#7f94ff"],
                    base: c,
                    tooltipFormat: new h("{{fieldkey:fields}} - {{value}}"),
                    tooltipValueLookups: {
                        fields: {
                            r: "Range",
                            p: "Performance",
                            t: "Target"
                        },
                    },
                },
                pie: {
                    offset: 0,
                    sliceColors: [
                        "#3366cc",
                        "#dc3912",
                        "#ff9900",
                        "#109618",
                        "#66aa00",
                        "#dd4477",
                        "#0099c6",
                        "#990099",
                    ],
                    borderWidth: 0,
                    borderColor: "#000",
                    tooltipFormat: new h(
                        '<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)'
                    ),
                },
                box: {
                    raw: !1,
                    boxLineColor: "#000",
                    boxFillColor: "#cdf",
                    whiskerColor: "#000",
                    outlierLineColor: "#333",
                    outlierFillColor: "#fff",
                    medianColor: "#f00",
                    showOutliers: !0,
                    outlierIQR: 1.5,
                    spotRadius: 1.5,
                    target: c,
                    targetColor: "#4a2",
                    chartRangeMax: c,
                    chartRangeMin: c,
                    tooltipFormat: new h("{{field:fields}}: {{value}}"),
                    tooltipFormatFieldlistKey: "field",
                    tooltipValueLookups: {
                        fields: {
                            lq: "Lower Quartile",
                            med: "Median",
                            uq: "Upper Quartile",
                            lo: "Left Outlier",
                            ro: "Right Outlier",
                            lw: "Left Whisker",
                            rw: "Right Whisker",
                        },
                    },
                },
            };
        }),
        (E =
            ".jqstooltip { width: auto !important; height: auto !important; position: absolute;left: 0px;top: 0px;visibility: hidden;background: #000000;color: white;font-size: 11px;text-align: left;white-space: nowrap;padding: 5px;z-index: 10000;}.jqsfield { color: white;font: 10px arial, san serif;text-align: left;}"),
        (g = function() {
            var a, b;
            return (
                (a = function() {
                    this.init.apply(this, arguments);
                }),
                arguments.length > 1 ?
                (arguments[0] ?
                    ((a.prototype = d.extend(
                            new arguments[0](),
                            arguments[arguments.length - 1]
                        )),
                        (a._super = arguments[0].prototype)) :
                    (a.prototype = arguments[arguments.length - 1]),
                    arguments.length > 2 &&
                    ((b = Array.prototype.slice.call(arguments, 1, -1)),
                        b.unshift(a.prototype),
                        d.extend.apply(d, b))) :
                (a.prototype = arguments[0]),
                (a.prototype.cls = a),
                a
            );
        }),
        (d.SPFormatClass = h =
            g({
                fre: /\{\{([\w.]+?)(:(.+?))?\}\}/g,
                precre: /(\w+)\.(\d+)/,
                init: function(a, b) {
                    (this.format = a), (this.fclass = b);
                },
                render: function(a, b, d) {
                    var e = this,
                        f = a,
                        g,
                        h,
                        i,
                        j,
                        k;
                    return this.format.replace(this.fre, function() {
                        var a;
                        return (
                            (h = arguments[1]),
                            (i = arguments[3]),
                            (g = e.precre.exec(h)),
                            g ? ((k = g[2]), (h = g[1])) : (k = !1),
                            (j = f[h]),
                            j === c ?
                            "" :
                            i && b && b[i] ?
                            ((a = b[i]), a.get ? b[i].get(j) || j : b[i][j] || j) :
                            (n(j) &&
                                (d.get("numberFormatter") ?
                                    (j = d.get("numberFormatter")(j)) :
                                    (j = s(
                                        j,
                                        k,
                                        d.get("numberDigitGroupCount"),
                                        d.get("numberDigitGroupSep"),
                                        d.get("numberDecimalMark")
                                    ))),
                                j)
                        );
                    });
                },
            })),
        (d.spformat = function(a, b) {
            return new h(a, b);
        }),
        (i = function(a, b, c) {
            return a < b ? b : a > c ? c : a;
        }),
        (j = function(a, c) {
            var d;
            return c === 2 ?
                ((d = b.floor(a.length / 2)),
                    a.length % 2 ? a[d] : (a[d - 1] + a[d]) / 2) :
                a.length % 2 ?
                ((d = (a.length * c + c) / 4),
                    d % 1 ? (a[b.floor(d)] + a[b.floor(d) - 1]) / 2 : a[d - 1]) :
                ((d = (a.length * c + 2) / 4),
                    d % 1 ? (a[b.floor(d)] + a[b.floor(d) - 1]) / 2 : a[d - 1]);
        }),
        (k = function(a) {
            var b;
            switch (a) {
                case "undefined":
                    a = c;
                    break;
                case "null":
                    a = null;
                    break;
                case "true":
                    a = !0;
                    break;
                case "false":
                    a = !1;
                    break;
                default:
                    (b = parseFloat(a)), a == b && (a = b);
            }
            return a;
        }),
        (l = function(a) {
            var b,
                c = [];
            for (b = a.length; b--;) c[b] = k(a[b]);
            return c;
        }),
        (m = function(a, b) {
            var c,
                d,
                e = [];
            for (c = 0, d = a.length; c < d; c++) a[c] !== b && e.push(a[c]);
            return e;
        }),
        (n = function(a) {
            return !isNaN(parseFloat(a)) && isFinite(a);
        }),
        (s = function(a, b, c, e, f) {
            var g, h;
            (a = (b === !1 ? parseFloat(a).toString() : a.toFixed(b)).split("")),
            (g = (g = d.inArray(".", a)) < 0 ? a.length : g),
            g < a.length && (a[g] = f);
            for (h = g - c; h > 0; h -= c) a.splice(h, 0, e);
            return a.join("");
        }),
        (o = function(a, b, c) {
            var d;
            for (d = b.length; d--;) {
                if (c && b[d] === null) continue;
                if (b[d] !== a) return !1;
            }
            return !0;
        }),
        (p = function(a) {
            var b = 0,
                c;
            for (c = a.length; c--;) b += typeof a[c] == "number" ? a[c] : 0;
            return b;
        }),
        (r = function(a) {
            return d.isArray(a) ? a : [a];
        }),
        (q = function(b) {
            var c;
            a.createStyleSheet ?
                (a.createStyleSheet().cssText = b) :
                ((c = a.createElement("style")),
                    (c.type = "text/css"),
                    a.getElementsByTagName("head")[0].appendChild(c),
                    (c[
                        typeof a.body.style.WebkitAppearance == "string" ?
                        "innerText" :
                        "innerHTML"
                    ] = b));
        }),
        (d.fn.simpledraw = function(b, e, f, g) {
            var h, i;
            if (f && (h = this.data("_jqs_vcanvas"))) return h;
            if (d.fn.sparkline.canvas === !1) return !1;
            if (d.fn.sparkline.canvas === c) {
                var j = a.createElement("canvas");
                if (!j.getContext || !j.getContext("2d")) {
                    if (!a.namespaces || !!a.namespaces.v)
                        return (d.fn.sparkline.canvas = !1), !1;
                    a.namespaces.add(
                            "v",
                            "urn:schemas-microsoft-com:vml",
                            "#default#VML"
                        ),
                        (d.fn.sparkline.canvas = function(a, b, c, d) {
                            return new J(a, b, c);
                        });
                } else
                    d.fn.sparkline.canvas = function(a, b, c, d) {
                        return new I(a, b, c, d);
                    };
            }
            return (
                b === c && (b = d(this).innerWidth()),
                e === c && (e = d(this).innerHeight()),
                (h = d.fn.sparkline.canvas(b, e, this, g)),
                (i = d(this).data("_jqs_mhandler")),
                i && i.registerCanvas(h),
                h
            );
        }),
        (d.fn.cleardraw = function() {
            var a = this.data("_jqs_vcanvas");
            a && a.reset();
        }),
        (d.RangeMapClass = t =
            g({
                init: function(a) {
                    var b,
                        c,
                        d = [];
                    for (b in a)
                        a.hasOwnProperty(b) &&
                        typeof b == "string" &&
                        b.indexOf(":") > -1 &&
                        ((c = b.split(":")),
                            (c[0] = c[0].length === 0 ? -Infinity : parseFloat(c[0])),
                            (c[1] = c[1].length === 0 ? Infinity : parseFloat(c[1])),
                            (c[2] = a[b]),
                            d.push(c));
                    (this.map = a), (this.rangelist = d || !1);
                },
                get: function(a) {
                    var b = this.rangelist,
                        d,
                        e,
                        f;
                    if ((f = this.map[a]) !== c) return f;
                    if (b)
                        for (d = b.length; d--;) {
                            e = b[d];
                            if (e[0] <= a && e[1] >= a) return e[2];
                        }
                    return c;
                },
            })),
        (d.range_map = function(a) {
            return new t(a);
        }),
        (u = g({
            init: function(a, b) {
                var c = d(a);
                (this.$el = c),
                (this.options = b),
                (this.currentPageX = 0),
                (this.currentPageY = 0),
                (this.el = a),
                (this.splist = []),
                (this.tooltip = null),
                (this.over = !1),
                (this.displayTooltips = !b.get("disableTooltips")),
                (this.highlightEnabled = !b.get("disableHighlight"));
            },
            registerSparkline: function(a) {
                this.splist.push(a), this.over && this.updateDisplay();
            },
            registerCanvas: function(a) {
                var b = d(a.canvas);
                (this.canvas = a),
                (this.$canvas = b),
                b.mouseenter(d.proxy(this.mouseenter, this)),
                    b.mouseleave(d.proxy(this.mouseleave, this)),
                    b.click(d.proxy(this.mouseclick, this));
            },
            reset: function(a) {
                (this.splist = []),
                this.tooltip && a && (this.tooltip.remove(), (this.tooltip = c));
            },
            mouseclick: function(a) {
                var b = d.Event("sparklineClick");
                (b.originalEvent = a),
                (b.sparklines = this.splist),
                this.$el.trigger(b);
            },
            mouseenter: function(b) {
                d(a.body).unbind("mousemove.jqs"),
                    d(a.body).bind("mousemove.jqs", d.proxy(this.mousemove, this)),
                    (this.over = !0),
                    (this.currentPageX = b.pageX),
                    (this.currentPageY = b.pageY),
                    (this.currentEl = b.target), !this.tooltip &&
                    this.displayTooltips &&
                    ((this.tooltip = new v(this.options)),
                        this.tooltip.updatePosition(b.pageX, b.pageY)),
                    this.updateDisplay();
            },
            mouseleave: function() {
                d(a.body).unbind("mousemove.jqs");
                var b = this.splist,
                    c = b.length,
                    e = !1,
                    f,
                    g;
                (this.over = !1),
                (this.currentEl = null),
                this.tooltip && (this.tooltip.remove(), (this.tooltip = null));
                for (g = 0; g < c; g++)
                    (f = b[g]), f.clearRegionHighlight() && (e = !0);
                e && this.canvas.render();
            },
            mousemove: function(a) {
                (this.currentPageX = a.pageX),
                (this.currentPageY = a.pageY),
                (this.currentEl = a.target),
                this.tooltip && this.tooltip.updatePosition(a.pageX, a.pageY),
                    this.updateDisplay();
            },
            updateDisplay: function() {
                var a = this.splist,
                    b = a.length,
                    c = !1,
                    e = this.$canvas.offset(),
                    f = this.currentPageX - e.left,
                    g = this.currentPageY - e.top,
                    h,
                    i,
                    j,
                    k,
                    l;
                if (!this.over) return;
                for (j = 0; j < b; j++)
                    (i = a[j]),
                    (k = i.setRegionHighlight(this.currentEl, f, g)),
                    k && (c = !0);
                if (c) {
                    (l = d.Event("sparklineRegionChange")),
                    (l.sparklines = this.splist),
                    this.$el.trigger(l);
                    if (this.tooltip) {
                        h = "";
                        for (j = 0; j < b; j++)
                            (i = a[j]), (h += i.getCurrentRegionTooltip());
                        this.tooltip.setContent(h);
                    }
                    this.disableHighlight || this.canvas.render();
                }
                k === null && this.mouseleave();
            },
        })),
        (v = g({
            sizeStyle: "position: static !important;display: block !important;visibility: hidden !important;float: left !important;",
            init: function(b) {
                var c = b.get("tooltipClassname", "jqstooltip"),
                    e = this.sizeStyle,
                    f;
                (this.container = b.get("tooltipContainer") || a.body),
                (this.tooltipOffsetX = b.get("tooltipOffsetX", 10)),
                (this.tooltipOffsetY = b.get("tooltipOffsetY", 12)),
                d("#jqssizetip").remove(),
                    d("#jqstooltip").remove(),
                    (this.sizetip = d("<div/>", {
                        id: "jqssizetip",
                        style: e,
                        class: c,
                    })),
                    (this.tooltip = d("<div/>", {
                        id: "jqstooltip",
                        class: c,
                    }).appendTo(this.container)),
                    (f = this.tooltip.offset()),
                    (this.offsetLeft = f.left),
                    (this.offsetTop = f.top),
                    (this.hidden = !0),
                    d(window).unbind("resize.jqs scroll.jqs"),
                    d(window).bind(
                        "resize.jqs scroll.jqs",
                        d.proxy(this.updateWindowDims, this)
                    ),
                    this.updateWindowDims();
            },
            updateWindowDims: function() {
                (this.scrollTop = d(window).scrollTop()),
                (this.scrollLeft = d(window).scrollLeft()),
                (this.scrollRight = this.scrollLeft + d(window).width()),
                this.updatePosition();
            },
            getSize: function(a) {
                this.sizetip.html(a).appendTo(this.container),
                    (this.width = this.sizetip.width() + 1),
                    (this.height = this.sizetip.height()),
                    this.sizetip.remove();
            },
            setContent: function(a) {
                if (!a) {
                    this.tooltip.css("visibility", "hidden"), (this.hidden = !0);
                    return;
                }
                this.getSize(a),
                    this.tooltip
                    .html(a)
                    .css({
                        width: this.width,
                        height: this.height,
                        visibility: "visible",
                    }),
                    this.hidden && ((this.hidden = !1), this.updatePosition());
            },
            updatePosition: function(a, b) {
                if (a === c) {
                    if (this.mousex === c) return;
                    (a = this.mousex - this.offsetLeft),
                    (b = this.mousey - this.offsetTop);
                } else
                    (this.mousex = a -= this.offsetLeft),
                    (this.mousey = b -= this.offsetTop);
                if (!this.height || !this.width || this.hidden) return;
                (b -= this.height + this.tooltipOffsetY),
                (a += this.tooltipOffsetX),
                b < this.scrollTop && (b = this.scrollTop),
                    a < this.scrollLeft ?
                    (a = this.scrollLeft) :
                    a + this.width > this.scrollRight &&
                    (a = this.scrollRight - this.width),
                    this.tooltip.css({
                        left: a,
                        top: b
                    });
            },
            remove: function() {
                this.tooltip.remove(),
                    this.sizetip.remove(),
                    (this.sizetip = this.tooltip = c),
                    d(window).unbind("resize.jqs scroll.jqs");
            },
        })),
        (F = function() {
            q(E);
        }),
        d(F),
            (K = []),
            (d.fn.sparkline = function(b, e) {
                return this.each(function() {
                    var f = new d.fn.sparkline.options(this, e),
                        g = d(this),
                        h,
                        i;
                    h = function() {
                        var e, h, i, j, k, l, m;
                        if (b === "html" || b === c) {
                            m = this.getAttribute(f.get("tagValuesAttribute"));
                            if (m === c || m === null) m = g.html();
                            e = m.replace(/(^\s*<!--)|(-->\s*$)|\s+/g, "").split(",");
                        } else e = b;
                        h =
                            f.get("width") === "auto" ?
                            e.length * f.get("defaultPixelsPerValue") :
                            f.get("width");
                        if (f.get("height") === "auto") {
                            if (!f.get("composite") || !d.data(this, "_jqs_vcanvas"))
                                (j = a.createElement("span")),
                                (j.innerHTML = "a"),
                                g.html(j),
                                (i = d(j).innerHeight() || d(j).height()),
                                d(j).remove(),
                                (j = null);
                        } else i = f.get("height");
                        f.get("disableInteraction") ?
                            (k = !1) :
                            ((k = d.data(this, "_jqs_mhandler")),
                                k ?
                                f.get("composite") || k.reset() :
                                ((k = new u(this, f)), d.data(this, "_jqs_mhandler", k)));
                        if (f.get("composite") && !d.data(this, "_jqs_vcanvas")) {
                            d.data(this, "_jqs_errnotify") ||
                                (alert(
                                        "Attempted to attach a composite sparkline to an element with no existing sparkline"
                                    ),
                                    d.data(this, "_jqs_errnotify", !0));
                            return;
                        }
                        (l = new d.fn.sparkline[f.get("type")](this, e, f, h, i)),
                        l.render(),
                            k && k.registerSparkline(l);
                    };
                    if (
                        (d(this).html() &&
                            !f.get("disableHiddenCheck") &&
                            d(this).is(":hidden")) ||
                        !d(this).parents("body").length
                    ) {
                        if (!f.get("composite") && d.data(this, "_jqs_pending"))
                            for (i = K.length; i; i--)
                                K[i - 1][0] == this && K.splice(i - 1, 1);
                        K.push([this, h]), d.data(this, "_jqs_pending", !0);
                    } else h.call(this);
                });
            }),
            (d.fn.sparkline.defaults = f()),
            (d.sparkline_display_visible = function() {
                var a,
                    b,
                    c,
                    e = [];
                for (b = 0, c = K.length; b < c; b++)
                    (a = K[b][0]),
                    d(a).is(":visible") && !d(a).parents().is(":hidden") ?
                    (K[b][1].call(a),
                        d.data(K[b][0], "_jqs_pending", !1),
                        e.push(b)) :
                    !d(a).closest("html").length &&
                    !d.data(a, "_jqs_pending") &&
                    (d.data(K[b][0], "_jqs_pending", !1), e.push(b));
                for (b = e.length; b; b--) K.splice(e[b - 1], 1);
            }),
            (d.fn.sparkline.options = g({
                init: function(a, b) {
                    var c, f, g, h;
                    (this.userOptions = b = b || {}),
                    (this.tag = a),
                    (this.tagValCache = {}),
                    (f = d.fn.sparkline.defaults),
                    (g = f.common),
                    (this.tagOptionsPrefix =
                        b.enableTagOptions && (b.tagOptionsPrefix || g.tagOptionsPrefix)),
                    (h = this.getTagSetting("type")),
                    h === e ? (c = f[b.type || g.type]) : (c = f[h]),
                        (this.mergedOptions = d.extend({}, g, c, b));
                },
                getTagSetting: function(a) {
                    var b = this.tagOptionsPrefix,
                        d,
                        f,
                        g,
                        h;
                    if (b === !1 || b === c) return e;
                    if (this.tagValCache.hasOwnProperty(a)) d = this.tagValCache.key;
                    else {
                        d = this.tag.getAttribute(b + a);
                        if (d === c || d === null) d = e;
                        else if (d.substr(0, 1) === "[") {
                            d = d.substr(1, d.length - 2).split(",");
                            for (f = d.length; f--;)
                                d[f] = k(d[f].replace(/(^\s*)|(\s*$)/g, ""));
                        } else if (d.substr(0, 1) === "{") {
                            (g = d.substr(1, d.length - 2).split(",")), (d = {});
                            for (f = g.length; f--;)
                                (h = g[f].split(":", 2)),
                                (d[h[0].replace(/(^\s*)|(\s*$)/g, "")] = k(
                                    h[1].replace(/(^\s*)|(\s*$)/g, "")
                                ));
                        } else d = k(d);
                        this.tagValCache.key = d;
                    }
                    return d;
                },
                get: function(a, b) {
                    var d = this.getTagSetting(a),
                        f;
                    return d !== e ? d : (f = this.mergedOptions[a]) === c ? b : f;
                },
            })),
            (d.fn.sparkline._base = g({
                disabled: !1,
                init: function(a, b, e, f, g) {
                    (this.el = a),
                    (this.$el = d(a)),
                    (this.values = b),
                    (this.options = e),
                    (this.width = f),
                    (this.height = g),
                    (this.currentRegion = c);
                },
                initTarget: function() {
                    var a = !this.options.get("disableInteraction");
                    (this.target = this.$el.simpledraw(
                        this.width,
                        this.height,
                        this.options.get("composite"),
                        a
                    )) ?
                    ((this.canvasWidth = this.target.pixelWidth),
                        (this.canvasHeight = this.target.pixelHeight)) :
                    (this.disabled = !0);
                },
                render: function() {
                    return this.disabled ? ((this.el.innerHTML = ""), !1) : !0;
                },
                getRegion: function(a, b) {},
                setRegionHighlight: function(a, b, d) {
                    var e = this.currentRegion,
                        f = !this.options.get("disableHighlight"),
                        g;
                    return b > this.canvasWidth || d > this.canvasHeight || b < 0 || d < 0 ?
                        null :
                        ((g = this.getRegion(a, b, d)),
                            e !== g ?
                            (e !== c && f && this.removeHighlight(),
                                (this.currentRegion = g),
                                g !== c && f && this.renderHighlight(), !0) :
                            !1);
                },
                clearRegionHighlight: function() {
                    return this.currentRegion !== c ?
                        (this.removeHighlight(), (this.currentRegion = c), !0) :
                        !1;
                },
                renderHighlight: function() {
                    this.changeHighlight(!0);
                },
                removeHighlight: function() {
                    this.changeHighlight(!1);
                },
                changeHighlight: function(a) {},
                getCurrentRegionTooltip: function() {
                    var a = this.options,
                        b = "",
                        e = [],
                        f,
                        g,
                        i,
                        j,
                        k,
                        l,
                        m,
                        n,
                        o,
                        p,
                        q,
                        r,
                        s,
                        t;
                    if (this.currentRegion === c) return "";
                    (f = this.getCurrentRegionFields()), (q = a.get("tooltipFormatter"));
                    if (q) return q(this, a, f);
                    a.get("tooltipChartTitle") &&
                        (b +=
                            '<div class="jqs jqstitle">' +
                            a.get("tooltipChartTitle") +
                            "</div>\n"),
                        (g = this.options.get("tooltipFormat"));
                    if (!g) return "";
                    d.isArray(g) || (g = [g]),
                        d.isArray(f) || (f = [f]),
                        (m = this.options.get("tooltipFormatFieldlist")),
                        (n = this.options.get("tooltipFormatFieldlistKey"));
                    if (m && n) {
                        o = [];
                        for (l = f.length; l--;)
                            (p = f[l][n]), (t = d.inArray(p, m)) != -1 && (o[t] = f[l]);
                        f = o;
                    }
                    (i = g.length), (s = f.length);
                    for (l = 0; l < i; l++) {
                        (r = g[l]),
                        typeof r == "string" && (r = new h(r)),
                            (j = r.fclass || "jqsfield");
                        for (t = 0; t < s; t++)
                            if (!f[t].isNull || !a.get("tooltipSkipNull"))
                                d.extend(f[t], {
                                    prefix: a.get("tooltipPrefix"),
                                    suffix: a.get("tooltipSuffix"),
                                }),
                                (k = r.render(f[t], a.get("tooltipValueLookups"), a)),
                                e.push('<div class="' + j + '">' + k + "</div>");
                    }
                    return e.length ? b + e.join("\n") : "";
                },
                getCurrentRegionFields: function() {},
                calcHighlightColor: function(a, c) {
                    var d = c.get("highlightColor"),
                        e = c.get("highlightLighten"),
                        f,
                        g,
                        h,
                        j;
                    if (d) return d;
                    if (e) {
                        f =
                            /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a) ||
                            /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(a);
                        if (f) {
                            (h = []), (g = a.length === 4 ? 16 : 1);
                            for (j = 0; j < 3; j++)
                                h[j] = i(b.round(parseInt(f[j + 1], 16) * g * e), 0, 255);
                            return "rgb(" + h.join(",") + ")";
                        }
                    }
                    return a;
                },
            })),
            (w = {
                changeHighlight: function(a) {
                    var b = this.currentRegion,
                        c = this.target,
                        e = this.regionShapes[b],
                        f;
                    e &&
                        ((f = this.renderRegion(b, a)),
                            d.isArray(f) || d.isArray(e) ?
                            (c.replaceWithShapes(e, f),
                                (this.regionShapes[b] = d.map(f, function(a) {
                                    return a.id;
                                }))) :
                            (c.replaceWithShape(e, f), (this.regionShapes[b] = f.id)));
                },
                render: function() {
                    var a = this.values,
                        b = this.target,
                        c = this.regionShapes,
                        e,
                        f,
                        g,
                        h;
                    if (!this.cls._super.render.call(this)) return;
                    for (g = a.length; g--;) {
                        e = this.renderRegion(g);
                        if (e)
                            if (d.isArray(e)) {
                                f = [];
                                for (h = e.length; h--;) e[h].append(), f.push(e[h].id);
                                c[g] = f;
                            } else e.append(), (c[g] = e.id);
                        else c[g] = null;
                    }
                    b.render();
                },
            }),
            (d.fn.sparkline.line = x =
                g(d.fn.sparkline._base, {
                    type: "line",
                    init: function(a, b, c, d, e) {
                        x._super.init.call(this, a, b, c, d, e),
                            (this.vertices = []),
                            (this.regionMap = []),
                            (this.xvalues = []),
                            (this.yvalues = []),
                            (this.yminmax = []),
                            (this.hightlightSpotId = null),
                            (this.lastShapeId = null),
                            this.initTarget();
                    },
                    getRegion: function(a, b, d) {
                        var e,
                            f = this.regionMap;
                        for (e = f.length; e--;)
                            if (f[e] !== null && b >= f[e][0] && b <= f[e][1]) return f[e][2];
                        return c;
                    },
                    getCurrentRegionFields: function() {
                        var a = this.currentRegion;
                        return {
                            isNull: this.yvalues[a] === null,
                            x: this.xvalues[a],
                            y: this.yvalues[a],
                            color: this.options.get("lineColor"),
                            fillColor: this.options.get("fillColor"),
                            offset: a,
                        };
                    },
                    renderHighlight: function() {
                        var a = this.currentRegion,
                            b = this.target,
                            d = this.vertices[a],
                            e = this.options,
                            f = e.get("spotRadius"),
                            g = e.get("highlightSpotColor"),
                            h = e.get("highlightLineColor"),
                            i,
                            j;
                        if (!d) return;
                        f &&
                            g &&
                            ((i = b.drawCircle(d[0], d[1], f, c, g)),
                                (this.highlightSpotId = i.id),
                                b.insertAfterShape(this.lastShapeId, i)),
                            h &&
                            ((j = b.drawLine(
                                    d[0],
                                    this.canvasTop,
                                    d[0],
                                    this.canvasTop + this.canvasHeight,
                                    h
                                )),
                                (this.highlightLineId = j.id),
                                b.insertAfterShape(this.lastShapeId, j));
                    },
                    removeHighlight: function() {
                        var a = this.target;
                        this.highlightSpotId &&
                            (a.removeShapeId(this.highlightSpotId),
                                (this.highlightSpotId = null)),
                            this.highlightLineId &&
                            (a.removeShapeId(this.highlightLineId),
                                (this.highlightLineId = null));
                    },
                    scanValues: function() {
                        var a = this.values,
                            c = a.length,
                            d = this.xvalues,
                            e = this.yvalues,
                            f = this.yminmax,
                            g,
                            h,
                            i,
                            j,
                            k;
                        for (g = 0; g < c; g++)
                            (h = a[g]),
                            (i = typeof a[g] == "string"),
                            (j = typeof a[g] == "object" && a[g] instanceof Array),
                            (k = i && a[g].split(":")),
                            i && k.length === 2 ?
                            (d.push(Number(k[0])),
                                e.push(Number(k[1])),
                                f.push(Number(k[1]))) :
                            j ?
                            (d.push(h[0]), e.push(h[1]), f.push(h[1])) :
                            (d.push(g),
                                a[g] === null || a[g] === "null" ?
                                e.push(null) :
                                (e.push(Number(h)), f.push(Number(h))));
                        this.options.get("xvalues") && (d = this.options.get("xvalues")),
                            (this.maxy = this.maxyorg = b.max.apply(b, f)),
                            (this.miny = this.minyorg = b.min.apply(b, f)),
                            (this.maxx = b.max.apply(b, d)),
                            (this.minx = b.min.apply(b, d)),
                            (this.xvalues = d),
                            (this.yvalues = e),
                            (this.yminmax = f);
                    },
                    processRangeOptions: function() {
                        var a = this.options,
                            b = a.get("normalRangeMin"),
                            d = a.get("normalRangeMax");
                        b !== c &&
                            (b < this.miny && (this.miny = b),
                                d > this.maxy && (this.maxy = d)),
                            a.get("chartRangeMin") !== c &&
                            (a.get("chartRangeClip") ||
                                a.get("chartRangeMin") < this.miny) &&
                            (this.miny = a.get("chartRangeMin")),
                            a.get("chartRangeMax") !== c &&
                            (a.get("chartRangeClip") ||
                                a.get("chartRangeMax") > this.maxy) &&
                            (this.maxy = a.get("chartRangeMax")),
                            a.get("chartRangeMinX") !== c &&
                            (a.get("chartRangeClipX") ||
                                a.get("chartRangeMinX") < this.minx) &&
                            (this.minx = a.get("chartRangeMinX")),
                            a.get("chartRangeMaxX") !== c &&
                            (a.get("chartRangeClipX") ||
                                a.get("chartRangeMaxX") > this.maxx) &&
                            (this.maxx = a.get("chartRangeMaxX"));
                    },
                    drawNormalRange: function(a, d, e, f, g) {
                        var h = this.options.get("normalRangeMin"),
                            i = this.options.get("normalRangeMax"),
                            j = d + b.round(e - e * ((i - this.miny) / g)),
                            k = b.round((e * (i - h)) / g);
                        this.target
                            .drawRect(a, j, f, k, c, this.options.get("normalRangeColor"))
                            .append();
                    },
                    render: function() {
                        var a = this.options,
                            e = this.target,
                            f = this.canvasWidth,
                            g = this.canvasHeight,
                            h = this.vertices,
                            i = a.get("spotRadius"),
                            j = this.regionMap,
                            k,
                            l,
                            m,
                            n,
                            o,
                            p,
                            q,
                            r,
                            s,
                            u,
                            v,
                            w,
                            y,
                            z,
                            A,
                            B,
                            C,
                            D,
                            E,
                            F,
                            G,
                            H,
                            I,
                            J,
                            K;
                        if (!x._super.render.call(this)) return;
                        this.scanValues(),
                            this.processRangeOptions(),
                            (I = this.xvalues),
                            (J = this.yvalues);
                        if (!this.yminmax.length || this.yvalues.length < 2) return;
                        (n = o = 0),
                        (k = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx),
                        (l = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny),
                        (m = this.yvalues.length - 1),
                        i && (f < i * 4 || g < i * 4) && (i = 0);
                        if (i) {
                            G = a.get("highlightSpotColor") && !a.get("disableInteraction");
                            if (
                                G ||
                                a.get("minSpotColor") ||
                                (a.get("spotColor") && J[m] === this.miny)
                            )
                                g -= b.ceil(i);
                            if (
                                G ||
                                a.get("maxSpotColor") ||
                                (a.get("spotColor") && J[m] === this.maxy)
                            )
                                (g -= b.ceil(i)), (n += b.ceil(i));
                            if (
                                G ||
                                ((a.get("minSpotColor") || a.get("maxSpotColor")) &&
                                    (J[0] === this.miny || J[0] === this.maxy))
                            )
                                (o += b.ceil(i)), (f -= b.ceil(i));
                            if (
                                G ||
                                a.get("spotColor") ||
                                a.get("minSpotColor") ||
                                (a.get("maxSpotColor") &&
                                    (J[m] === this.miny || J[m] === this.maxy))
                            )
                                f -= b.ceil(i);
                        }
                        g--,
                        a.get("normalRangeMin") !== c &&
                            !a.get("drawNormalOnTop") &&
                            this.drawNormalRange(o, n, g, f, l),
                            (q = []),
                            (r = [q]),
                            (z = A = null),
                            (B = J.length);
                        for (K = 0; K < B; K++)
                            (s = I[K]),
                            (v = I[K + 1]),
                            (u = J[K]),
                            (w = o + b.round((s - this.minx) * (f / k))),
                            (y = K < B - 1 ? o + b.round((v - this.minx) * (f / k)) : f),
                            (A = w + (y - w) / 2),
                            (j[K] = [z || 0, A, K]),
                            (z = A),
                            u === null ?
                            K &&
                            (J[K - 1] !== null && ((q = []), r.push(q)), h.push(null)) :
                            (u < this.miny && (u = this.miny),
                                u > this.maxy && (u = this.maxy),
                                q.length || q.push([w, n + g]),
                                (p = [w, n + b.round(g - g * ((u - this.miny) / l))]),
                                q.push(p),
                                h.push(p));
                        (C = []), (D = []), (E = r.length);
                        for (K = 0; K < E; K++)
                            (q = r[K]),
                            q.length &&
                            (a.get("fillColor") &&
                                (q.push([q[q.length - 1][0], n + g]),
                                    D.push(q.slice(0)),
                                    q.pop()),
                                q.length > 2 && (q[0] = [q[0][0], q[1][1]]),
                                C.push(q));
                        E = D.length;
                        for (K = 0; K < E; K++)
                            e.drawShape(
                                D[K],
                                a.get("fillColor"),
                                a.get("fillColor")
                            ).append();
                        a.get("normalRangeMin") !== c &&
                            a.get("drawNormalOnTop") &&
                            this.drawNormalRange(o, n, g, f, l),
                            (E = C.length);
                        for (K = 0; K < E; K++)
                            e.drawShape(
                                C[K],
                                a.get("lineColor"),
                                c,
                                a.get("lineWidth")
                            ).append();
                        if (i && a.get("valueSpots")) {
                            (F = a.get("valueSpots")), F.get === c && (F = new t(F));
                            for (K = 0; K < B; K++)
                                (H = F.get(J[K])),
                                H &&
                                e
                                .drawCircle(
                                    o + b.round((I[K] - this.minx) * (f / k)),
                                    n + b.round(g - g * ((J[K] - this.miny) / l)),
                                    i,
                                    c,
                                    H
                                )
                                .append();
                        }
                        i &&
                            a.get("spotColor") &&
                            J[m] !== null &&
                            e
                            .drawCircle(
                                o + b.round((I[I.length - 1] - this.minx) * (f / k)),
                                n + b.round(g - g * ((J[m] - this.miny) / l)),
                                i,
                                c,
                                a.get("spotColor")
                            )
                            .append(),
                            this.maxy !== this.minyorg &&
                            (i &&
                                a.get("minSpotColor") &&
                                ((s = I[d.inArray(this.minyorg, J)]),
                                    e
                                    .drawCircle(
                                        o + b.round((s - this.minx) * (f / k)),
                                        n + b.round(g - g * ((this.minyorg - this.miny) / l)),
                                        i,
                                        c,
                                        a.get("minSpotColor")
                                    )
                                    .append()),
                                i &&
                                a.get("maxSpotColor") &&
                                ((s = I[d.inArray(this.maxyorg, J)]),
                                    e
                                    .drawCircle(
                                        o + b.round((s - this.minx) * (f / k)),
                                        n + b.round(g - g * ((this.maxyorg - this.miny) / l)),
                                        i,
                                        c,
                                        a.get("maxSpotColor")
                                    )
                                    .append())),
                            (this.lastShapeId = e.getLastShapeId()),
                            (this.canvasTop = n),
                            e.render();
                    },
                })),
            (d.fn.sparkline.bar = y =
                g(d.fn.sparkline._base, w, {
                    type: "bar",
                    init: function(a, e, f, g, h) {
                        var j = parseInt(f.get("barWidth"), 10),
                            n = parseInt(f.get("barSpacing"), 10),
                            o = f.get("chartRangeMin"),
                            p = f.get("chartRangeMax"),
                            q = f.get("chartRangeClip"),
                            r = Infinity,
                            s = -Infinity,
                            u,
                            v,
                            w,
                            x,
                            z,
                            A,
                            B,
                            C,
                            D,
                            E,
                            F,
                            G,
                            H,
                            I,
                            J,
                            K,
                            L,
                            M,
                            N,
                            O,
                            P,
                            Q,
                            R;
                        y._super.init.call(this, a, e, f, g, h);
                        for (A = 0, B = e.length; A < B; A++) {
                            (O = e[A]), (u = typeof O == "string" && O.indexOf(":") > -1);
                            if (u || d.isArray(O))
                                (J = !0),
                                u && (O = e[A] = l(O.split(":"))),
                                (O = m(O, null)),
                                (v = b.min.apply(b, O)),
                                (w = b.max.apply(b, O)),
                                v < r && (r = v),
                                w > s && (s = w);
                        }
                        (this.stacked = J),
                        (this.regionShapes = {}),
                        (this.barWidth = j),
                        (this.barSpacing = n),
                        (this.totalBarWidth = j + n),
                        (this.width = g = e.length * j + (e.length - 1) * n),
                        this.initTarget(),
                            q &&
                            ((H = o === c ? -Infinity : o), (I = p === c ? Infinity : p)),
                            (z = []),
                            (x = J ? [] : z);
                        var S = [],
                            T = [];
                        for (A = 0, B = e.length; A < B; A++)
                            if (J) {
                                (K = e[A]), (e[A] = N = []), (S[A] = 0), (x[A] = T[A] = 0);
                                for (L = 0, M = K.length; L < M; L++)
                                    (O = N[L] = q ? i(K[L], H, I) : K[L]),
                                    O !== null &&
                                    (O > 0 && (S[A] += O),
                                        r < 0 && s > 0 ?
                                        O < 0 ?
                                        (T[A] += b.abs(O)) :
                                        (x[A] += O) :
                                        (x[A] += b.abs(O - (O < 0 ? s : r))),
                                        z.push(O));
                            } else
                                (O = q ? i(e[A], H, I) : e[A]),
                                (O = e[A] = k(O)),
                                O !== null && z.push(O);
                        (this.max = G = b.max.apply(b, z)),
                        (this.min = F = b.min.apply(b, z)),
                        (this.stackMax = s = J ? b.max.apply(b, S) : G),
                        (this.stackMin = r = J ? b.min.apply(b, z) : F),
                        f.get("chartRangeMin") !== c &&
                            (f.get("chartRangeClip") || f.get("chartRangeMin") < F) &&
                            (F = f.get("chartRangeMin")),
                            f.get("chartRangeMax") !== c &&
                            (f.get("chartRangeClip") || f.get("chartRangeMax") > G) &&
                            (G = f.get("chartRangeMax")),
                            (this.zeroAxis = D = f.get("zeroAxis", !0)),
                            F <= 0 && G >= 0 && D ?
                            (E = 0) :
                            D == 0 ?
                            (E = F) :
                            F > 0 ?
                            (E = F) :
                            (E = G),
                            (this.xaxisOffset = E),
                            (C = J ? b.max.apply(b, x) + b.max.apply(b, T) : G - F),
                            (this.canvasHeightEf =
                                D && F < 0 ? this.canvasHeight - 2 : this.canvasHeight - 1),
                            F < E ?
                            ((Q = J && G >= 0 ? s : G),
                                (P = ((Q - E) / C) * this.canvasHeight),
                                P !== b.ceil(P) &&
                                ((this.canvasHeightEf -= 2), (P = b.ceil(P)))) :
                            (P = this.canvasHeight),
                            (this.yoffset = P),
                            d.isArray(f.get("colorMap")) ?
                            ((this.colorMapByIndex = f.get("colorMap")),
                                (this.colorMapByValue = null)) :
                            ((this.colorMapByIndex = null),
                                (this.colorMapByValue = f.get("colorMap")),
                                this.colorMapByValue &&
                                this.colorMapByValue.get === c &&
                                (this.colorMapByValue = new t(this.colorMapByValue))),
                            (this.range = C);
                    },
                    getRegion: function(a, d, e) {
                        var f = b.floor(d / this.totalBarWidth);
                        return f < 0 || f >= this.values.length ? c : f;
                    },
                    getCurrentRegionFields: function() {
                        var a = this.currentRegion,
                            b = r(this.values[a]),
                            c = [],
                            d,
                            e;
                        for (e = b.length; e--;)
                            (d = b[e]),
                            c.push({
                                isNull: d === null,
                                value: d,
                                color: this.calcColor(e, d, a),
                                offset: a,
                            });
                        return c;
                    },
                    calcColor: function(a, b, e) {
                        var f = this.colorMapByIndex,
                            g = this.colorMapByValue,
                            h = this.options,
                            i,
                            j;
                        return (
                            this.stacked ?
                            (i = h.get("stackedBarColor")) :
                            (i = b < 0 ? h.get("negBarColor") : h.get("barColor")),
                            b === 0 && h.get("zeroColor") !== c && (i = h.get("zeroColor")),
                            g && (j = g.get(b)) ? (i = j) : f && f.length > e && (i = f[e]),
                            d.isArray(i) ? i[a % i.length] : i
                        );
                    },
                    renderRegion: function(a, e) {
                        var f = this.values[a],
                            g = this.options,
                            h = this.xaxisOffset,
                            i = [],
                            j = this.range,
                            k = this.stacked,
                            l = this.target,
                            m = a * this.totalBarWidth,
                            n = this.canvasHeightEf,
                            p = this.yoffset,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w,
                            x,
                            y,
                            z;
                        (f = d.isArray(f) ? f : [f]),
                        (w = f.length),
                        (x = f[0]),
                        (t = o(null, f)),
                        (z = o(h, f, !0));
                        if (t)
                            return g.get("nullColor") ?
                                ((s = e ?
                                        g.get("nullColor") :
                                        this.calcHighlightColor(g.get("nullColor"), g)),
                                    (q = p > 0 ? p - 1 : p),
                                    l.drawRect(m, q, this.barWidth - 1, 0, s, s)) :
                                c;
                        u = p;
                        for (v = 0; v < w; v++) {
                            x = f[v];
                            if (k && x === h) {
                                if (!z || y) continue;
                                y = !0;
                            }
                            j > 0 ? (r = b.floor(n * (b.abs(x - h) / j)) + 1) : (r = 1),
                                x < h || (x === h && p === 0) ?
                                ((q = u), (u += r)) :
                                ((q = p - r), (p -= r)),
                                (s = this.calcColor(v, x, a)),
                                e && (s = this.calcHighlightColor(s, g)),
                                i.push(l.drawRect(m, q, this.barWidth - 1, r - 1, s, s));
                        }
                        return i.length === 1 ? i[0] : i;
                    },
                })),
            (d.fn.sparkline.tristate = z =
                g(d.fn.sparkline._base, w, {
                    type: "tristate",
                    init: function(a, b, e, f, g) {
                        var h = parseInt(e.get("barWidth"), 10),
                            i = parseInt(e.get("barSpacing"), 10);
                        z._super.init.call(this, a, b, e, f, g),
                            (this.regionShapes = {}),
                            (this.barWidth = h),
                            (this.barSpacing = i),
                            (this.totalBarWidth = h + i),
                            (this.values = d.map(b, Number)),
                            (this.width = f = b.length * h + (b.length - 1) * i),
                            d.isArray(e.get("colorMap")) ?
                            ((this.colorMapByIndex = e.get("colorMap")),
                                (this.colorMapByValue = null)) :
                            ((this.colorMapByIndex = null),
                                (this.colorMapByValue = e.get("colorMap")),
                                this.colorMapByValue &&
                                this.colorMapByValue.get === c &&
                                (this.colorMapByValue = new t(this.colorMapByValue))),
                            this.initTarget();
                    },
                    getRegion: function(a, c, d) {
                        return b.floor(c / this.totalBarWidth);
                    },
                    getCurrentRegionFields: function() {
                        var a = this.currentRegion;
                        return {
                            isNull: this.values[a] === c,
                            value: this.values[a],
                            color: this.calcColor(this.values[a], a),
                            offset: a,
                        };
                    },
                    calcColor: function(a, b) {
                        var c = this.values,
                            d = this.options,
                            e = this.colorMapByIndex,
                            f = this.colorMapByValue,
                            g,
                            h;
                        return (
                            f && (h = f.get(a)) ?
                            (g = h) :
                            e && e.length > b ?
                            (g = e[b]) :
                            c[b] < 0 ?
                            (g = d.get("negBarColor")) :
                            c[b] > 0 ?
                            (g = d.get("posBarColor")) :
                            (g = d.get("zeroBarColor")),
                            g
                        );
                    },
                    renderRegion: function(a, c) {
                        var d = this.values,
                            e = this.options,
                            f = this.target,
                            g,
                            h,
                            i,
                            j,
                            k,
                            l;
                        (g = f.pixelHeight),
                        (i = b.round(g / 2)),
                        (j = a * this.totalBarWidth),
                        d[a] < 0 ?
                            ((k = i), (h = i - 1)) :
                            d[a] > 0 ?
                            ((k = 0), (h = i - 1)) :
                            ((k = i - 1), (h = 2)),
                            (l = this.calcColor(d[a], a));
                        if (l === null) return;
                        return (
                            c && (l = this.calcHighlightColor(l, e)),
                            f.drawRect(j, k, this.barWidth - 1, h - 1, l, l)
                        );
                    },
                })),
            (d.fn.sparkline.discrete = A =
                g(d.fn.sparkline._base, w, {
                    type: "discrete",
                    init: function(a, e, f, g, h) {
                        A._super.init.call(this, a, e, f, g, h),
                            (this.regionShapes = {}),
                            (this.values = e = d.map(e, Number)),
                            (this.min = b.min.apply(b, e)),
                            (this.max = b.max.apply(b, e)),
                            (this.range = this.max - this.min),
                            (this.width = g =
                                f.get("width") === "auto" ? e.length * 2 : this.width),
                            (this.interval = b.floor(g / e.length)),
                            (this.itemWidth = g / e.length),
                            f.get("chartRangeMin") !== c &&
                            (f.get("chartRangeClip") ||
                                f.get("chartRangeMin") < this.min) &&
                            (this.min = f.get("chartRangeMin")),
                            f.get("chartRangeMax") !== c &&
                            (f.get("chartRangeClip") ||
                                f.get("chartRangeMax") > this.max) &&
                            (this.max = f.get("chartRangeMax")),
                            this.initTarget(),
                            this.target &&
                            (this.lineHeight =
                                f.get("lineHeight") === "auto" ?
                                b.round(this.canvasHeight * 0.3) :
                                f.get("lineHeight"));
                    },
                    getRegion: function(a, c, d) {
                        return b.floor(c / this.itemWidth);
                    },
                    getCurrentRegionFields: function() {
                        var a = this.currentRegion;
                        return {
                            isNull: this.values[a] === c,
                            value: this.values[a],
                            offset: a,
                        };
                    },
                    renderRegion: function(a, c) {
                        var d = this.values,
                            e = this.options,
                            f = this.min,
                            g = this.max,
                            h = this.range,
                            j = this.interval,
                            k = this.target,
                            l = this.canvasHeight,
                            m = this.lineHeight,
                            n = l - m,
                            o,
                            p,
                            q,
                            r;
                        return (
                            (p = i(d[a], f, g)),
                            (r = a * j),
                            (o = b.round(n - n * ((p - f) / h))),
                            (q =
                                e.get("thresholdColor") && p < e.get("thresholdValue") ?
                                e.get("thresholdColor") :
                                e.get("lineColor")),
                            c && (q = this.calcHighlightColor(q, e)),
                            k.drawLine(r, o, r, o + m, q)
                        );
                    },
                })),
            (d.fn.sparkline.bullet = B =
                g(d.fn.sparkline._base, {
                    type: "bullet",
                    init: function(a, d, e, f, g) {
                        var h, i, j;
                        B._super.init.call(this, a, d, e, f, g),
                            (this.values = d = l(d)),
                            (j = d.slice()),
                            (j[0] = j[0] === null ? j[2] : j[0]),
                            (j[1] = d[1] === null ? j[2] : j[1]),
                            (h = b.min.apply(b, d)),
                            (i = b.max.apply(b, d)),
                            e.get("base") === c ? (h = h < 0 ? h : 0) : (h = e.get("base")),
                            (this.min = h),
                            (this.max = i),
                            (this.range = i - h),
                            (this.shapes = {}),
                            (this.valueShapes = {}),
                            (this.regiondata = {}),
                            (this.width = f = e.get("width") === "auto" ? "4.0em" : f),
                            (this.target = this.$el.simpledraw(f, g, e.get("composite"))),
                            d.length || (this.disabled = !0),
                            this.initTarget();
                    },
                    getRegion: function(a, b, d) {
                        var e = this.target.getShapeAt(a, b, d);
                        return e !== c && this.shapes[e] !== c ? this.shapes[e] : c;
                    },
                    getCurrentRegionFields: function() {
                        var a = this.currentRegion;
                        return {
                            fieldkey: a.substr(0, 1),
                            value: this.values[a.substr(1)],
                            region: a,
                        };
                    },
                    changeHighlight: function(a) {
                        var b = this.currentRegion,
                            c = this.valueShapes[b],
                            d;
                        delete this.shapes[c];
                        switch (b.substr(0, 1)) {
                            case "r":
                                d = this.renderRange(b.substr(1), a);
                                break;
                            case "p":
                                d = this.renderPerformance(a);
                                break;
                            case "t":
                                d = this.renderTarget(a);
                        }
                        (this.valueShapes[b] = d.id),
                        (this.shapes[d.id] = b),
                        this.target.replaceWithShape(c, d);
                    },
                    renderRange: function(a, c) {
                        var d = this.values[a],
                            e = b.round(this.canvasWidth * ((d - this.min) / this.range)),
                            f = this.options.get("rangeColors")[a - 2];
                        return (
                            c && (f = this.calcHighlightColor(f, this.options)),
                            this.target.drawRect(0, 0, e - 1, this.canvasHeight - 1, f, f)
                        );
                    },
                    renderPerformance: function(a) {
                        var c = this.values[1],
                            d = b.round(this.canvasWidth * ((c - this.min) / this.range)),
                            e = this.options.get("performanceColor");
                        return (
                            a && (e = this.calcHighlightColor(e, this.options)),
                            this.target.drawRect(
                                0,
                                b.round(this.canvasHeight * 0.3),
                                d - 1,
                                b.round(this.canvasHeight * 0.4) - 1,
                                e,
                                e
                            )
                        );
                    },
                    renderTarget: function(a) {
                        var c = this.values[0],
                            d = b.round(
                                this.canvasWidth * ((c - this.min) / this.range) -
                                this.options.get("targetWidth") / 2
                            ),
                            e = b.round(this.canvasHeight * 0.1),
                            f = this.canvasHeight - e * 2,
                            g = this.options.get("targetColor");
                        return (
                            a && (g = this.calcHighlightColor(g, this.options)),
                            this.target.drawRect(
                                d,
                                e,
                                this.options.get("targetWidth") - 1,
                                f - 1,
                                g,
                                g
                            )
                        );
                    },
                    render: function() {
                        var a = this.values.length,
                            b = this.target,
                            c,
                            d;
                        if (!B._super.render.call(this)) return;
                        for (c = 2; c < a; c++)
                            (d = this.renderRange(c).append()),
                            (this.shapes[d.id] = "r" + c),
                            (this.valueShapes["r" + c] = d.id);
                        this.values[1] !== null &&
                            ((d = this.renderPerformance().append()),
                                (this.shapes[d.id] = "p1"),
                                (this.valueShapes.p1 = d.id)),
                            this.values[0] !== null &&
                            ((d = this.renderTarget().append()),
                                (this.shapes[d.id] = "t0"),
                                (this.valueShapes.t0 = d.id)),
                            b.render();
                    },
                })),
            (d.fn.sparkline.pie = C =
                g(d.fn.sparkline._base, {
                    type: "pie",
                    init: function(a, c, e, f, g) {
                        var h = 0,
                            i;
                        C._super.init.call(this, a, c, e, f, g),
                            (this.shapes = {}),
                            (this.valueShapes = {}),
                            (this.values = c = d.map(c, Number)),
                            e.get("width") === "auto" && (this.width = this.height);
                        if (c.length > 0)
                            for (i = c.length; i--;) h += c[i];
                        (this.total = h),
                        this.initTarget(),
                            (this.radius = b.floor(
                                b.min(this.canvasWidth, this.canvasHeight) / 2
                            ));
                    },
                    getRegion: function(a, b, d) {
                        var e = this.target.getShapeAt(a, b, d);
                        return e !== c && this.shapes[e] !== c ? this.shapes[e] : c;
                    },
                    getCurrentRegionFields: function() {
                        var a = this.currentRegion;
                        return {
                            isNull: this.values[a] === c,
                            value: this.values[a],
                            percent: (this.values[a] / this.total) * 100,
                            color: this.options.get("sliceColors")[
                                a % this.options.get("sliceColors").length
                            ],
                            offset: a,
                        };
                    },
                    changeHighlight: function(a) {
                        var b = this.currentRegion,
                            c = this.renderSlice(b, a),
                            d = this.valueShapes[b];
                        delete this.shapes[d],
                            this.target.replaceWithShape(d, c),
                            (this.valueShapes[b] = c.id),
                            (this.shapes[c.id] = b);
                    },
                    renderSlice: function(a, d) {
                        var e = this.target,
                            f = this.options,
                            g = this.radius,
                            h = f.get("borderWidth"),
                            i = f.get("offset"),
                            j = 2 * b.PI,
                            k = this.values,
                            l = this.total,
                            m = i ? 2 * b.PI * (i / 360) : 0,
                            n,
                            o,
                            p,
                            q,
                            r;
                        q = k.length;
                        for (p = 0; p < q; p++) {
                            (n = m), (o = m), l > 0 && (o = m + j * (k[p] / l));
                            if (a === p)
                                return (
                                    (r = f.get("sliceColors")[p % f.get("sliceColors").length]),
                                    d && (r = this.calcHighlightColor(r, f)),
                                    e.drawPieSlice(g, g, g - h, n, o, c, r)
                                );
                            m = o;
                        }
                    },
                    render: function() {
                        var a = this.target,
                            d = this.values,
                            e = this.options,
                            f = this.radius,
                            g = e.get("borderWidth"),
                            h,
                            i;
                        if (!C._super.render.call(this)) return;
                        g &&
                            a
                            .drawCircle(
                                f,
                                f,
                                b.floor(f - g / 2),
                                e.get("borderColor"),
                                c,
                                g
                            )
                            .append();
                        for (i = d.length; i--;)
                            d[i] &&
                            ((h = this.renderSlice(i).append()),
                                (this.valueShapes[i] = h.id),
                                (this.shapes[h.id] = i));
                        a.render();
                    },
                })),
            (d.fn.sparkline.box = D =
                g(d.fn.sparkline._base, {
                    type: "box",
                    init: function(a, b, c, e, f) {
                        D._super.init.call(this, a, b, c, e, f),
                            (this.values = d.map(b, Number)),
                            (this.width = c.get("width") === "auto" ? "4.0em" : e),
                            this.initTarget(),
                            this.values.length || (this.disabled = 1);
                    },
                    getRegion: function() {
                        return 1;
                    },
                    getCurrentRegionFields: function() {
                        var a = [{
                                field: "lq",
                                value: this.quartiles[0]
                            },
                            {
                                field: "med",
                                value: this.quartiles[1]
                            },
                            {
                                field: "uq",
                                value: this.quartiles[2]
                            },
                        ];
                        return (
                            this.loutlier !== c &&
                            a.push({
                                field: "lo",
                                value: this.loutlier
                            }),
                            this.routlier !== c &&
                            a.push({
                                field: "ro",
                                value: this.routlier
                            }),
                            this.lwhisker !== c &&
                            a.push({
                                field: "lw",
                                value: this.lwhisker
                            }),
                            this.rwhisker !== c &&
                            a.push({
                                field: "rw",
                                value: this.rwhisker
                            }),
                            a
                        );
                    },
                    render: function() {
                        var a = this.target,
                            d = this.values,
                            e = d.length,
                            f = this.options,
                            g = this.canvasWidth,
                            h = this.canvasHeight,
                            i =
                            f.get("chartRangeMin") === c ?
                            b.min.apply(b, d) :
                            f.get("chartRangeMin"),
                            k =
                            f.get("chartRangeMax") === c ?
                            b.max.apply(b, d) :
                            f.get("chartRangeMax"),
                            l = 0,
                            m,
                            n,
                            o,
                            p,
                            q,
                            r,
                            s,
                            t,
                            u,
                            v,
                            w;
                        if (!D._super.render.call(this)) return;
                        if (f.get("raw"))
                            f.get("showOutliers") && d.length > 5 ?
                            ((n = d[0]),
                                (m = d[1]),
                                (p = d[2]),
                                (q = d[3]),
                                (r = d[4]),
                                (s = d[5]),
                                (t = d[6])) :
                            ((m = d[0]), (p = d[1]), (q = d[2]), (r = d[3]), (s = d[4]));
                        else {
                            d.sort(function(a, b) {
                                    return a - b;
                                }),
                                (p = j(d, 1)),
                                (q = j(d, 2)),
                                (r = j(d, 3)),
                                (o = r - p);
                            if (f.get("showOutliers")) {
                                m = s = c;
                                for (u = 0; u < e; u++)
                                    m === c && d[u] > p - o * f.get("outlierIQR") && (m = d[u]),
                                    d[u] < r + o * f.get("outlierIQR") && (s = d[u]);
                                (n = d[0]), (t = d[e - 1]);
                            } else(m = d[0]), (s = d[e - 1]);
                        }
                        (this.quartiles = [p, q, r]),
                        (this.lwhisker = m),
                        (this.rwhisker = s),
                        (this.loutlier = n),
                        (this.routlier = t),
                        (w = g / (k - i + 1)),
                        f.get("showOutliers") &&
                            ((l = b.ceil(f.get("spotRadius"))),
                                (g -= 2 * b.ceil(f.get("spotRadius"))),
                                (w = g / (k - i + 1)),
                                n < m &&
                                a
                                .drawCircle(
                                    (n - i) * w + l,
                                    h / 2,
                                    f.get("spotRadius"),
                                    f.get("outlierLineColor"),
                                    f.get("outlierFillColor")
                                )
                                .append(),
                                t > s &&
                                a
                                .drawCircle(
                                    (t - i) * w + l,
                                    h / 2,
                                    f.get("spotRadius"),
                                    f.get("outlierLineColor"),
                                    f.get("outlierFillColor")
                                )
                                .append()),
                            a
                            .drawRect(
                                b.round((p - i) * w + l),
                                b.round(h * 0.1),
                                b.round((r - p) * w),
                                b.round(h * 0.8),
                                f.get("boxLineColor"),
                                f.get("boxFillColor")
                            )
                            .append(),
                            a
                            .drawLine(
                                b.round((m - i) * w + l),
                                b.round(h / 2),
                                b.round((p - i) * w + l),
                                b.round(h / 2),
                                f.get("lineColor")
                            )
                            .append(),
                            a
                            .drawLine(
                                b.round((m - i) * w + l),
                                b.round(h / 4),
                                b.round((m - i) * w + l),
                                b.round(h - h / 4),
                                f.get("whiskerColor")
                            )
                            .append(),
                            a
                            .drawLine(
                                b.round((s - i) * w + l),
                                b.round(h / 2),
                                b.round((r - i) * w + l),
                                b.round(h / 2),
                                f.get("lineColor")
                            )
                            .append(),
                            a
                            .drawLine(
                                b.round((s - i) * w + l),
                                b.round(h / 4),
                                b.round((s - i) * w + l),
                                b.round(h - h / 4),
                                f.get("whiskerColor")
                            )
                            .append(),
                            a
                            .drawLine(
                                b.round((q - i) * w + l),
                                b.round(h * 0.1),
                                b.round((q - i) * w + l),
                                b.round(h * 0.9),
                                f.get("medianColor")
                            )
                            .append(),
                            f.get("target") &&
                            ((v = b.ceil(f.get("spotRadius"))),
                                a
                                .drawLine(
                                    b.round((f.get("target") - i) * w + l),
                                    b.round(h / 2 - v),
                                    b.round((f.get("target") - i) * w + l),
                                    b.round(h / 2 + v),
                                    f.get("targetColor")
                                )
                                .append(),
                                a
                                .drawLine(
                                    b.round((f.get("target") - i) * w + l - v),
                                    b.round(h / 2),
                                    b.round((f.get("target") - i) * w + l + v),
                                    b.round(h / 2),
                                    f.get("targetColor")
                                )
                                .append()),
                            a.render();
                    },
                })),
            (G = g({
                init: function(a, b, c, d) {
                    (this.target = a), (this.id = b), (this.type = c), (this.args = d);
                },
                append: function() {
                    return this.target.appendShape(this), this;
                },
            })),
            (H = g({
                _pxregex: /(\d+)(px)?\s*$/i,
                init: function(a, b, c) {
                    if (!a) return;
                    (this.width = a),
                    (this.height = b),
                    (this.target = c),
                    (this.lastShapeId = null),
                    c[0] && (c = c[0]),
                        d.data(c, "_jqs_vcanvas", this);
                },
                drawLine: function(a, b, c, d, e, f) {
                    return this.drawShape(
                        [
                            [a, b],
                            [c, d],
                        ],
                        e,
                        f
                    );
                },
                drawShape: function(a, b, c, d) {
                    return this._genShape("Shape", [a, b, c, d]);
                },
                drawCircle: function(a, b, c, d, e, f) {
                    return this._genShape("Circle", [a, b, c, d, e, f]);
                },
                drawPieSlice: function(a, b, c, d, e, f, g) {
                    return this._genShape("PieSlice", [a, b, c, d, e, f, g]);
                },
                drawRect: function(a, b, c, d, e, f) {
                    return this._genShape("Rect", [a, b, c, d, e, f]);
                },
                getElement: function() {
                    return this.canvas;
                },
                getLastShapeId: function() {
                    return this.lastShapeId;
                },
                reset: function() {
                    alert("reset not implemented");
                },
                _insert: function(a, b) {
                    d(b).html(a);
                },
                _calculatePixelDims: function(a, b, c) {
                    var e;
                    (e = this._pxregex.exec(b)),
                    e ? (this.pixelHeight = e[1]) : (this.pixelHeight = d(c).height()),
                        (e = this._pxregex.exec(a)),
                        e ? (this.pixelWidth = e[1]) : (this.pixelWidth = d(c).width());
                },
                _genShape: function(a, b) {
                    var c = L++;
                    return b.unshift(c), new G(this, c, a, b);
                },
                appendShape: function(a) {
                    alert("appendShape not implemented");
                },
                replaceWithShape: function(a, b) {
                    alert("replaceWithShape not implemented");
                },
                insertAfterShape: function(a, b) {
                    alert("insertAfterShape not implemented");
                },
                removeShapeId: function(a) {
                    alert("removeShapeId not implemented");
                },
                getShapeAt: function(a, b, c) {
                    alert("getShapeAt not implemented");
                },
                render: function() {
                    alert("render not implemented");
                },
            })),
            (I = g(H, {
                init: function(b, e, f, g) {
                    I._super.init.call(this, b, e, f),
                        (this.canvas = a.createElement("canvas")),
                        f[0] && (f = f[0]),
                        d.data(f, "_jqs_vcanvas", this),
                        d(this.canvas).css({
                            display: "inline-block",
                            width: b,
                            height: e,
                            verticalAlign: "top",
                        }),
                        this._insert(this.canvas, f),
                        this._calculatePixelDims(b, e, this.canvas),
                        (this.canvas.width = this.pixelWidth),
                        (this.canvas.height = this.pixelHeight),
                        (this.interact = g),
                        (this.shapes = {}),
                        (this.shapeseq = []),
                        (this.currentTargetShapeId = c),
                        d(this.canvas).css({
                            width: this.pixelWidth,
                            height: this.pixelHeight,
                        });
                },
                _getContext: function(a, b, d) {
                    var e = this.canvas.getContext("2d");
                    return (
                        a !== c && (e.strokeStyle = a),
                        (e.lineWidth = d === c ? 1 : d),
                        b !== c && (e.fillStyle = b),
                        e
                    );
                },
                reset: function() {
                    var a = this._getContext();
                    a.clearRect(0, 0, this.pixelWidth, this.pixelHeight),
                        (this.shapes = {}),
                        (this.shapeseq = []),
                        (this.currentTargetShapeId = c);
                },
                _drawShape: function(a, b, d, e, f) {
                    var g = this._getContext(d, e, f),
                        h,
                        i;
                    g.beginPath(), g.moveTo(b[0][0] + 0.5, b[0][1] + 0.5);
                    for (h = 1, i = b.length; h < i; h++)
                        g.lineTo(b[h][0] + 0.5, b[h][1] + 0.5);
                    d !== c && g.stroke(),
                        e !== c && g.fill(),
                        this.targetX !== c &&
                        this.targetY !== c &&
                        g.isPointInPath(this.targetX, this.targetY) &&
                        (this.currentTargetShapeId = a);
                },
                _drawCircle: function(a, d, e, f, g, h, i) {
                    var j = this._getContext(g, h, i);
                    j.beginPath(),
                        j.arc(d, e, f, 0, 2 * b.PI, !1),
                        this.targetX !== c &&
                        this.targetY !== c &&
                        j.isPointInPath(this.targetX, this.targetY) &&
                        (this.currentTargetShapeId = a),
                        g !== c && j.stroke(),
                        h !== c && j.fill();
                },
                _drawPieSlice: function(a, b, d, e, f, g, h, i) {
                    var j = this._getContext(h, i);
                    j.beginPath(),
                        j.moveTo(b, d),
                        j.arc(b, d, e, f, g, !1),
                        j.lineTo(b, d),
                        j.closePath(),
                        h !== c && j.stroke(),
                        i && j.fill(),
                        this.targetX !== c &&
                        this.targetY !== c &&
                        j.isPointInPath(this.targetX, this.targetY) &&
                        (this.currentTargetShapeId = a);
                },
                _drawRect: function(a, b, c, d, e, f, g) {
                    return this._drawShape(
                        a, [
                            [b, c],
                            [b + d, c],
                            [b + d, c + e],
                            [b, c + e],
                            [b, c],
                        ],
                        f,
                        g
                    );
                },
                appendShape: function(a) {
                    return (
                        (this.shapes[a.id] = a),
                        this.shapeseq.push(a.id),
                        (this.lastShapeId = a.id),
                        a.id
                    );
                },
                replaceWithShape: function(a, b) {
                    var c = this.shapeseq,
                        d;
                    this.shapes[b.id] = b;
                    for (d = c.length; d--;) c[d] == a && (c[d] = b.id);
                    delete this.shapes[a];
                },
                replaceWithShapes: function(a, b) {
                    var c = this.shapeseq,
                        d = {},
                        e,
                        f,
                        g;
                    for (f = a.length; f--;) d[a[f]] = !0;
                    for (f = c.length; f--;)
                        (e = c[f]),
                        d[e] && (c.splice(f, 1), delete this.shapes[e], (g = f));
                    for (f = b.length; f--;)
                        c.splice(g, 0, b[f].id), (this.shapes[b[f].id] = b[f]);
                },
                insertAfterShape: function(a, b) {
                    var c = this.shapeseq,
                        d;
                    for (d = c.length; d--;)
                        if (c[d] === a) {
                            c.splice(d + 1, 0, b.id), (this.shapes[b.id] = b);
                            return;
                        }
                },
                removeShapeId: function(a) {
                    var b = this.shapeseq,
                        c;
                    for (c = b.length; c--;)
                        if (b[c] === a) {
                            b.splice(c, 1);
                            break;
                        }
                    delete this.shapes[a];
                },
                getShapeAt: function(a, b, c) {
                    return (
                        (this.targetX = b),
                        (this.targetY = c),
                        this.render(),
                        this.currentTargetShapeId
                    );
                },
                render: function() {
                    var a = this.shapeseq,
                        b = this.shapes,
                        c = a.length,
                        d = this._getContext(),
                        e,
                        f,
                        g;
                    d.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
                    for (g = 0; g < c; g++)
                        (e = a[g]), (f = b[e]), this["_draw" + f.type].apply(this, f.args);
                    this.interact || ((this.shapes = {}), (this.shapeseq = []));
                },
            })),
            (J = g(H, {
                init: function(b, c, e) {
                    var f;
                    J._super.init.call(this, b, c, e),
                        e[0] && (e = e[0]),
                        d.data(e, "_jqs_vcanvas", this),
                        (this.canvas = a.createElement("span")),
                        d(this.canvas).css({
                            display: "inline-block",
                            position: "relative",
                            overflow: "hidden",
                            width: b,
                            height: c,
                            margin: "0px",
                            padding: "0px",
                            verticalAlign: "top",
                        }),
                        this._insert(this.canvas, e),
                        this._calculatePixelDims(b, c, this.canvas),
                        (this.canvas.width = this.pixelWidth),
                        (this.canvas.height = this.pixelHeight),
                        (f =
                            '<v:group coordorigin="0 0" coordsize="' +
                            this.pixelWidth +
                            " " +
                            this.pixelHeight +
                            '"' +
                            ' style="position:absolute;top:0;left:0;width:' +
                            this.pixelWidth +
                            "px;height=" +
                            this.pixelHeight +
                            'px;"></v:group>'),
                        this.canvas.insertAdjacentHTML("beforeEnd", f),
                        (this.group = d(this.canvas).children()[0]),
                        (this.rendered = !1),
                        (this.prerender = "");
                },
                _drawShape: function(a, b, d, e, f) {
                    var g = [],
                        h,
                        i,
                        j,
                        k,
                        l,
                        m,
                        n;
                    for (n = 0, m = b.length; n < m; n++)
                        g[n] = "" + b[n][0] + "," + b[n][1];
                    return (
                        (h = g.splice(0, 1)),
                        (f = f === c ? 1 : f),
                        (i =
                            d === c ?
                            ' stroked="false" ' :
                            ' strokeWeight="' + f + 'px" strokeColor="' + d + '" '),
                        (j =
                            e === c ?
                            ' filled="false"' :
                            ' fillColor="' + e + '" filled="true" '),
                        (k = g[0] === g[g.length - 1] ? "x " : ""),
                        (l =
                            '<v:shape coordorigin="0 0" coordsize="' +
                            this.pixelWidth +
                            " " +
                            this.pixelHeight +
                            '" ' +
                            ' id="jqsshape' +
                            a +
                            '" ' +
                            i +
                            j +
                            ' style="position:absolute;left:0px;top:0px;height:' +
                            this.pixelHeight +
                            "px;width:" +
                            this.pixelWidth +
                            'px;padding:0px;margin:0px;" ' +
                            ' path="m ' +
                            h +
                            " l " +
                            g.join(", ") +
                            " " +
                            k +
                            'e">' +
                            " </v:shape>"),
                        l
                    );
                },
                _drawCircle: function(a, b, d, e, f, g, h) {
                    var i, j, k;
                    return (
                        (b -= e),
                        (d -= e),
                        (i =
                            f === c ?
                            ' stroked="false" ' :
                            ' strokeWeight="' + h + 'px" strokeColor="' + f + '" '),
                        (j =
                            g === c ?
                            ' filled="false"' :
                            ' fillColor="' + g + '" filled="true" '),
                        (k =
                            '<v:oval  id="jqsshape' +
                            a +
                            '" ' +
                            i +
                            j +
                            ' style="position:absolute;top:' +
                            d +
                            "px; left:" +
                            b +
                            "px; width:" +
                            e * 2 +
                            "px; height:" +
                            e * 2 +
                            'px"></v:oval>'),
                        k
                    );
                },
                _drawPieSlice: function(a, d, e, f, g, h, i, j) {
                    var k, l, m, n, o, p, q, r;
                    if (g === h) return "";
                    h - g === 2 * b.PI && ((g = 0), (h = 2 * b.PI)),
                        (l = d + b.round(b.cos(g) * f)),
                        (m = e + b.round(b.sin(g) * f)),
                        (n = d + b.round(b.cos(h) * f)),
                        (o = e + b.round(b.sin(h) * f));
                    if (l === n && m === o) {
                        if (h - g < b.PI) return "";
                        (l = n = d + f), (m = o = e);
                    }
                    return l === n && m === o && h - g < b.PI ?
                        "" :
                        ((k = [d - f, e - f, d + f, e + f, l, m, n, o]),
                            (p =
                                i === c ?
                                ' stroked="false" ' :
                                ' strokeWeight="1px" strokeColor="' + i + '" '),
                            (q =
                                j === c ?
                                ' filled="false"' :
                                ' fillColor="' + j + '" filled="true" '),
                            (r =
                                '<v:shape coordorigin="0 0" coordsize="' +
                                this.pixelWidth +
                                " " +
                                this.pixelHeight +
                                '" ' +
                                ' id="jqsshape' +
                                a +
                                '" ' +
                                p +
                                q +
                                ' style="position:absolute;left:0px;top:0px;height:' +
                                this.pixelHeight +
                                "px;width:" +
                                this.pixelWidth +
                                'px;padding:0px;margin:0px;" ' +
                                ' path="m ' +
                                d +
                                "," +
                                e +
                                " wa " +
                                k.join(", ") +
                                ' x e">' +
                                " </v:shape>"),
                            r);
                },
                _drawRect: function(a, b, c, d, e, f, g) {
                    return this._drawShape(
                        a, [
                            [b, c],
                            [b, c + e],
                            [b + d, c + e],
                            [b + d, c],
                            [b, c],
                        ],
                        f,
                        g
                    );
                },
                reset: function() {
                    this.group.innerHTML = "";
                },
                appendShape: function(a) {
                    var b = this["_draw" + a.type].apply(this, a.args);
                    return (
                        this.rendered ?
                        this.group.insertAdjacentHTML("beforeEnd", b) :
                        (this.prerender += b),
                        (this.lastShapeId = a.id),
                        a.id
                    );
                },
                replaceWithShape: function(a, b) {
                    var c = d("#jqsshape" + a),
                        e = this["_draw" + b.type].apply(this, b.args);
                    c[0].outerHTML = e;
                },
                replaceWithShapes: function(a, b) {
                    var c = d("#jqsshape" + a[0]),
                        e = "",
                        f = b.length,
                        g;
                    for (g = 0; g < f; g++)
                        e += this["_draw" + b[g].type].apply(this, b[g].args);
                    c[0].outerHTML = e;
                    for (g = 1; g < a.length; g++) d("#jqsshape" + a[g]).remove();
                },
                insertAfterShape: function(a, b) {
                    var c = d("#jqsshape" + a),
                        e = this["_draw" + b.type].apply(this, b.args);
                    c[0].insertAdjacentHTML("afterEnd", e);
                },
                removeShapeId: function(a) {
                    var b = d("#jqsshape" + a);
                    this.group.removeChild(b[0]);
                },
                getShapeAt: function(a, b, c) {
                    var d = a.id.substr(8);
                    return d;
                },
                render: function() {
                    this.rendered ||
                        ((this.group.innerHTML = this.prerender), (this.rendered = !0));
                },
            }));
    });
})(document, Math);

// Magnific Popup v1.0.0 by Dmitry Semenov
// http://bit.ly/magnific-popup#build=inline+image+ajax+iframe+gallery+retina+imagezoom+fastclick
(function(a) {
    typeof define == "function" && define.amd ?
        define(["jquery"], a) :
        typeof exports == "object" ?
        a(require("jquery")) :
        a(window.jQuery || window.Zepto);
})(function(a) {
    var b = "Close",
        c = "BeforeClose",
        d = "AfterClose",
        e = "BeforeAppend",
        f = "MarkupParse",
        g = "Open",
        h = "Change",
        i = "mfp",
        j = "." + i,
        k = "mfp-ready",
        l = "mfp-removing",
        m = "mfp-prevent-close",
        n,
        o = function() {},
        p = !!window.jQuery,
        q,
        r = a(window),
        s,
        t,
        u,
        v,
        w = function(a, b) {
            n.ev.on(i + a + j, b);
        },
        x = function(b, c, d, e) {
            var f = document.createElement("div");
            return (
                (f.className = "mfp-" + b),
                d && (f.innerHTML = d),
                e ? c && c.appendChild(f) : ((f = a(f)), c && f.appendTo(c)),
                f
            );
        },
        y = function(b, c) {
            n.ev.triggerHandler(i + b, c),
                n.st.callbacks &&
                ((b = b.charAt(0).toLowerCase() + b.slice(1)),
                    n.st.callbacks[b] &&
                    n.st.callbacks[b].apply(n, a.isArray(c) ? c : [c]));
        },
        z = function(b) {
            if (b !== v || !n.currTemplate.closeBtn)
                (n.currTemplate.closeBtn = a(
                    n.st.closeMarkup.replace("%title%", n.st.tClose)
                )),
                (v = b);
            return n.currTemplate.closeBtn;
        },
        A = function() {
            a.magnificPopup.instance ||
                ((n = new o()), n.init(), (a.magnificPopup.instance = n));
        },
        B = function() {
            var a = document.createElement("p").style,
                b = ["ms", "O", "Moz", "Webkit"];
            if (a.transition !== undefined) return !0;
            while (b.length)
                if (b.pop() + "Transition" in a) return !0;
            return !1;
        };
    (o.prototype = {
        constructor: o,
        init: function() {
            var b = navigator.appVersion;
            (n.isIE7 = b.indexOf("MSIE 7.") !== -1),
            (n.isIE8 = b.indexOf("MSIE 8.") !== -1),
            (n.isLowIE = n.isIE7 || n.isIE8),
            (n.isAndroid = /android/gi.test(b)),
            (n.isIOS = /iphone|ipad|ipod/gi.test(b)),
            (n.supportsTransition = B()),
            (n.probablyMobile =
                n.isAndroid ||
                n.isIOS ||
                /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(
                    navigator.userAgent
                )),
            (s = a(document)),
            (n.popupsCache = {});
        },
        open: function(b) {
            var c;
            if (b.isObj === !1) {
                (n.items = b.items.toArray()), (n.index = 0);
                var d = b.items,
                    e;
                for (c = 0; c < d.length; c++) {
                    (e = d[c]), e.parsed && (e = e.el[0]);
                    if (e === b.el[0]) {
                        n.index = c;
                        break;
                    }
                }
            } else
                (n.items = a.isArray(b.items) ? b.items : [b.items]),
                (n.index = b.index || 0);
            if (n.isOpen) {
                n.updateItemHTML();
                return;
            }
            (n.types = []),
            (u = ""),
            b.mainEl && b.mainEl.length ? (n.ev = b.mainEl.eq(0)) : (n.ev = s),
                b.key ?
                (n.popupsCache[b.key] || (n.popupsCache[b.key] = {}),
                    (n.currTemplate = n.popupsCache[b.key])) :
                (n.currTemplate = {}),
                (n.st = a.extend(!0, {}, a.magnificPopup.defaults, b)),
                (n.fixedContentPos =
                    n.st.fixedContentPos === "auto" ?
                    !n.probablyMobile :
                    n.st.fixedContentPos),
                n.st.modal &&
                ((n.st.closeOnContentClick = !1),
                    (n.st.closeOnBgClick = !1),
                    (n.st.showCloseBtn = !1),
                    (n.st.enableEscapeKey = !1)),
                n.bgOverlay ||
                ((n.bgOverlay = x("bg").on("click" + j, function() {
                        n.close();
                    })),
                    (n.wrap = x("wrap")
                        .attr("tabindex", -1)
                        .on("click" + j, function(a) {
                            n._checkIfClose(a.target) && n.close();
                        })),
                    (n.container = x("container", n.wrap))),
                (n.contentContainer = x("content")),
                n.st.preloader &&
                (n.preloader = x("preloader", n.container, n.st.tLoading));
            var h = a.magnificPopup.modules;
            for (c = 0; c < h.length; c++) {
                var i = h[c];
                (i = i.charAt(0).toUpperCase() + i.slice(1)), n["init" + i].call(n);
            }
            y("BeforeOpen"),
                n.st.showCloseBtn &&
                (n.st.closeBtnInside ?
                    (w(f, function(a, b, c, d) {
                            c.close_replaceWith = z(d.type);
                        }),
                        (u += " mfp-close-btn-in")) :
                    n.wrap.append(z())),
                n.st.alignTop && (u += " mfp-align-top"),
                n.fixedContentPos ?
                n.wrap.css({
                    overflow: n.st.overflowY,
                    overflowX: "hidden",
                    overflowY: n.st.overflowY,
                }) :
                n.wrap.css({
                    top: r.scrollTop(),
                    position: "absolute"
                }),
                (n.st.fixedBgPos === !1 ||
                    (n.st.fixedBgPos === "auto" && !n.fixedContentPos)) &&
                n.bgOverlay.css({
                    height: s.height(),
                    position: "absolute"
                }),
                n.st.enableEscapeKey &&
                s.on("keyup" + j, function(a) {
                    a.keyCode === 27 && n.close();
                }),
                r.on("resize" + j, function() {
                    n.updateSize();
                }),
                n.st.closeOnContentClick || (u += " mfp-auto-cursor"),
                u && n.wrap.addClass(u);
            var l = (n.wH = r.height()),
                m = {};
            if (n.fixedContentPos && n._hasScrollBar(l)) {
                var o = n._getScrollbarSize();
                o && (m.marginRight = o);
            }
            n.fixedContentPos &&
                (n.isIE7 ?
                    a("body, html").css("overflow", "hidden") :
                    (m.overflow = "hidden"));
            var p = n.st.mainClass;
            return (
                n.isIE7 && (p += " mfp-ie7"),
                p && n._addClassToMFP(p),
                n.updateItemHTML(),
                y("BuildControls"),
                a("html").css(m),
                n.bgOverlay.add(n.wrap).prependTo(n.st.prependTo || a(document.body)),
                (n._lastFocusedEl = document.activeElement),
                setTimeout(function() {
                    n.content ?
                        (n._addClassToMFP(k), n._setFocus()) :
                        n.bgOverlay.addClass(k),
                        s.on("focusin" + j, n._onFocusIn);
                }, 16),
                (n.isOpen = !0),
                n.updateSize(l),
                y(g),
                b
            );
        },
        close: function() {
            if (!n.isOpen) return;
            y(c),
                (n.isOpen = !1),
                n.st.removalDelay && !n.isLowIE && n.supportsTransition ?
                (n._addClassToMFP(l),
                    setTimeout(function() {
                        n._close();
                    }, n.st.removalDelay)) :
                n._close();
        },
        _close: function() {
            y(b);
            var c = l + " " + k + " ";
            n.bgOverlay.detach(),
                n.wrap.detach(),
                n.container.empty(),
                n.st.mainClass && (c += n.st.mainClass + " "),
                n._removeClassFromMFP(c);
            if (n.fixedContentPos) {
                var e = {
                    marginRight: ""
                };
                n.isIE7 ? a("body, html").css("overflow", "") : (e.overflow = ""),
                    a("html").css(e);
            }
            s.off("keyup" + j + " focusin" + j),
                n.ev.off(j),
                n.wrap.attr("class", "mfp-wrap").removeAttr("style"),
                n.bgOverlay.attr("class", "mfp-bg"),
                n.container.attr("class", "mfp-container"),
                n.st.showCloseBtn &&
                (!n.st.closeBtnInside || n.currTemplate[n.currItem.type] === !0) &&
                n.currTemplate.closeBtn &&
                n.currTemplate.closeBtn.detach(),
                n._lastFocusedEl && a(n._lastFocusedEl).focus(),
                (n.currItem = null),
                (n.content = null),
                (n.currTemplate = null),
                (n.prevHeight = 0),
                y(d);
        },
        updateSize: function(a) {
            if (n.isIOS) {
                var b = document.documentElement.clientWidth / window.innerWidth,
                    c = window.innerHeight * b;
                n.wrap.css("height", c), (n.wH = c);
            } else n.wH = a || r.height();
            n.fixedContentPos || n.wrap.css("height", n.wH), y("Resize");
        },
        updateItemHTML: function() {
            var b = n.items[n.index];
            n.contentContainer.detach(),
                n.content && n.content.detach(),
                b.parsed || (b = n.parseEl(n.index));
            var c = b.type;
            y("BeforeChange", [n.currItem ? n.currItem.type : "", c]),
                (n.currItem = b);
            if (!n.currTemplate[c]) {
                var d = n.st[c] ? n.st[c].markup : !1;
                y("FirstMarkupParse", d),
                    d ? (n.currTemplate[c] = a(d)) : (n.currTemplate[c] = !0);
            }
            t && t !== b.type && n.container.removeClass("mfp-" + t + "-holder");
            var e = n["get" + c.charAt(0).toUpperCase() + c.slice(1)](
                b,
                n.currTemplate[c]
            );
            n.appendContent(e, c),
                (b.preloaded = !0),
                y(h, b),
                (t = b.type),
                n.container.prepend(n.contentContainer),
                y("AfterChange");
        },
        appendContent: function(a, b) {
            (n.content = a),
            a
                ?
                n.st.showCloseBtn && n.st.closeBtnInside && n.currTemplate[b] === !0 ?
                n.content.find(".mfp-close").length || n.content.append(z()) :
                (n.content = a) :
                (n.content = ""),
                y(e),
                n.container.addClass("mfp-" + b + "-holder"),
                n.contentContainer.append(n.content);
        },
        parseEl: function(b) {
            var c = n.items[b],
                d;
            c.tagName ?
                (c = {
                    el: a(c)
                }) :
                ((d = c.type), (c = {
                    data: c,
                    src: c.src
                }));
            if (c.el) {
                var e = n.types;
                for (var f = 0; f < e.length; f++)
                    if (c.el.hasClass("mfp-" + e[f])) {
                        d = e[f];
                        break;
                    }
                    (c.src = c.el.attr("data-mfp-src")),
                c.src || (c.src = c.el.attr("href"));
            }
            return (
                (c.type = d || n.st.type || "inline"),
                (c.index = b),
                (c.parsed = !0),
                (n.items[b] = c),
                y("ElementParse", c),
                n.items[b]
            );
        },
        addGroup: function(a, b) {
            var c = function(c) {
                (c.mfpEl = this), n._openClick(c, a, b);
            };
            b || (b = {});
            var d = "click.magnificPopup";
            (b.mainEl = a),
            b.items ?
                ((b.isObj = !0), a.off(d).on(d, c)) :
                ((b.isObj = !1),
                    b.delegate ?
                    a.off(d).on(d, b.delegate, c) :
                    ((b.items = a), a.off(d).on(d, c)));
        },
        _openClick: function(b, c, d) {
            var e =
                d.midClick !== undefined ?
                d.midClick :
                a.magnificPopup.defaults.midClick;
            if (!e && (b.which === 2 || b.ctrlKey || b.metaKey)) return;
            var f =
                d.disableOn !== undefined ?
                d.disableOn :
                a.magnificPopup.defaults.disableOn;
            if (f)
                if (a.isFunction(f)) {
                    if (!f.call(n)) return !0;
                } else if (r.width() < f) return !0;
            b.type && (b.preventDefault(), n.isOpen && b.stopPropagation()),
                (d.el = a(b.mfpEl)),
                d.delegate && (d.items = c.find(d.delegate)),
                n.open(d);
        },
        updateStatus: function(a, b) {
            if (n.preloader) {
                q !== a && n.container.removeClass("mfp-s-" + q), !b && a === "loading" && (b = n.st.tLoading);
                var c = {
                    status: a,
                    text: b
                };
                y("UpdateStatus", c),
                    (a = c.status),
                    (b = c.text),
                    n.preloader.html(b),
                    n.preloader.find("a").on("click", function(a) {
                        a.stopImmediatePropagation();
                    }),
                    n.container.addClass("mfp-s-" + a),
                    (q = a);
            }
        },
        _checkIfClose: function(b) {
            if (a(b).hasClass(m)) return;
            var c = n.st.closeOnContentClick,
                d = n.st.closeOnBgClick;
            if (c && d) return !0;
            if (!n.content ||
                a(b).hasClass("mfp-close") ||
                (n.preloader && b === n.preloader[0])
            )
                return !0;
            if (b !== n.content[0] && !a.contains(n.content[0], b)) {
                if (d && a.contains(document, b)) return !0;
            } else if (c) return !0;
            return !1;
        },
        _addClassToMFP: function(a) {
            n.bgOverlay.addClass(a), n.wrap.addClass(a);
        },
        _removeClassFromMFP: function(a) {
            this.bgOverlay.removeClass(a), n.wrap.removeClass(a);
        },
        _hasScrollBar: function(a) {
            return (
                (n.isIE7 ? s.height() : document.body.scrollHeight) > (a || r.height())
            );
        },
        _setFocus: function() {
            (n.st.focus ? n.content.find(n.st.focus).eq(0) : n.wrap).focus();
        },
        _onFocusIn: function(b) {
            if (b.target !== n.wrap[0] && !a.contains(n.wrap[0], b.target))
                return n._setFocus(), !1;
        },
        _parseMarkup: function(b, c, d) {
            var e;
            d.data && (c = a.extend(d.data, c)),
                y(f, [b, c, d]),
                a.each(c, function(a, c) {
                    if (c === undefined || c === !1) return !0;
                    e = a.split("_");
                    if (e.length > 1) {
                        var d = b.find(j + "-" + e[0]);
                        if (d.length > 0) {
                            var f = e[1];
                            f === "replaceWith" ?
                                d[0] !== c[0] && d.replaceWith(c) :
                                f === "img" ?
                                d.is("img") ?
                                d.attr("src", c) :
                                d.replaceWith(
                                    '<img src="' + c + '" class="' + d.attr("class") + '" />'
                                ) :
                                d.attr(e[1], c);
                        }
                    } else b.find(j + "-" + a).html(c);
                });
        },
        _getScrollbarSize: function() {
            if (n.scrollbarSize === undefined) {
                var a = document.createElement("div");
                (a.style.cssText =
                    "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;"),
                document.body.appendChild(a),
                    (n.scrollbarSize = a.offsetWidth - a.clientWidth),
                    document.body.removeChild(a);
            }
            return n.scrollbarSize;
        },
    }),
    (a.magnificPopup = {
        instance: null,
        proto: o.prototype,
        modules: [],
        open: function(b, c) {
            return (
                A(),
                b ? (b = a.extend(!0, {}, b)) : (b = {}),
                (b.isObj = !0),
                (b.index = c || 0),
                this.instance.open(b)
            );
        },
        close: function() {
            return a.magnificPopup.instance && a.magnificPopup.instance.close();
        },
        registerModule: function(b, c) {
            c.options && (a.magnificPopup.defaults[b] = c.options),
                a.extend(this.proto, c.proto),
                this.modules.push(b);
        },
        defaults: {
            disableOn: 0,
            key: null,
            midClick: !1,
            mainClass: "",
            preloader: !0,
            focus: "",
            closeOnContentClick: !1,
            closeOnBgClick: !0,
            closeBtnInside: !0,
            showCloseBtn: !0,
            enableEscapeKey: !0,
            modal: !1,
            alignTop: !1,
            removalDelay: 0,
            prependTo: null,
            fixedContentPos: "auto",
            fixedBgPos: "auto",
            overflowY: "auto",
            closeMarkup: '<button title="%title%" type="button" class="mfp-close">&times;</button>',
            tClose: "Close (Esc)",
            tLoading: "Loading...",
        },
    }),
    (a.fn.magnificPopup = function(b) {
        A();
        var c = a(this);
        if (typeof b == "string")
            if (b === "open") {
                var d,
                    e = p ? c.data("magnificPopup") : c[0].magnificPopup,
                    f = parseInt(arguments[1], 10) || 0;
                e.items ?
                    (d = e.items[f]) :
                    ((d = c), e.delegate && (d = d.find(e.delegate)), (d = d.eq(f))),
                    n._openClick({
                        mfpEl: d
                    }, c, e);
            } else
                n.isOpen && n[b].apply(n, Array.prototype.slice.call(arguments, 1));
        else
            (b = a.extend(!0, {}, b)),
            p ? c.data("magnificPopup", b) : (c[0].magnificPopup = b),
            n.addGroup(c, b);
        return c;
    });
    var C = "inline",
        D,
        E,
        F,
        G = function() {
            F && (E.after(F.addClass(D)).detach(), (F = null));
        };
    a.magnificPopup.registerModule(C, {
        options: {
            hiddenClass: "hide",
            markup: "",
            tNotFound: "Content not found",
        },
        proto: {
            initInline: function() {
                n.types.push(C),
                    w(b + "." + C, function() {
                        G();
                    });
            },
            getInline: function(b, c) {
                G();
                if (b.src) {
                    var d = n.st.inline,
                        e = a(b.src);
                    if (e.length) {
                        var f = e[0].parentNode;
                        f &&
                            f.tagName &&
                            (E || ((D = d.hiddenClass), (E = x(D)), (D = "mfp-" + D)),
                                (F = e.after(E).detach().removeClass(D))),
                            n.updateStatus("ready");
                    } else n.updateStatus("error", d.tNotFound), (e = a("<div>"));
                    return (b.inlineElement = e), e;
                }
                return n.updateStatus("ready"), n._parseMarkup(c, {}, b), c;
            },
        },
    });
    var H = "ajax",
        I,
        J = function() {
            I && a(document.body).removeClass(I);
        },
        K = function() {
            J(), n.req && n.req.abort();
        };
    a.magnificPopup.registerModule(H, {
        options: {
            settings: null,
            cursor: "mfp-ajax-cur",
            tError: '<a href="%url%">The content</a> could not be loaded.',
        },
        proto: {
            initAjax: function() {
                n.types.push(H),
                    (I = n.st.ajax.cursor),
                    w(b + "." + H, K),
                    w("BeforeChange." + H, K);
            },
            getAjax: function(b) {
                I && a(document.body).addClass(I), n.updateStatus("loading");
                var c = a.extend({
                        url: b.src,
                        success: function(c, d, e) {
                            var f = {
                                data: c,
                                xhr: e
                            };
                            y("ParseAjax", f),
                                n.appendContent(a(f.data), H),
                                (b.finished = !0),
                                J(),
                                n._setFocus(),
                                setTimeout(function() {
                                    n.wrap.addClass(k);
                                }, 16),
                                n.updateStatus("ready"),
                                y("AjaxContentAdded");
                        },
                        error: function() {
                            J(),
                                (b.finished = b.loadError = !0),
                                n.updateStatus(
                                    "error",
                                    n.st.ajax.tError.replace("%url%", b.src)
                                );
                        },
                    },
                    n.st.ajax.settings
                );
                return (n.req = a.ajax(c)), "";
            },
        },
    });
    var L,
        M = function(b) {
            if (b.data && b.data.title !== undefined) return b.data.title;
            var c = n.st.image.titleSrc;
            if (c) {
                if (a.isFunction(c)) return c.call(n, b);
                if (b.el) return b.el.attr(c) || "";
            }
            return "";
        };
    a.magnificPopup.registerModule("image", {
        options: {
            markup: '<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',
            cursor: "mfp-zoom-out-cur",
            titleSrc: "title",
            verticalFit: !0,
            tError: '<a href="%url%">The image</a> could not be loaded.',
        },
        proto: {
            initImage: function() {
                var c = n.st.image,
                    d = ".image";
                n.types.push("image"),
                    w(g + d, function() {
                        n.currItem.type === "image" &&
                            c.cursor &&
                            a(document.body).addClass(c.cursor);
                    }),
                    w(b + d, function() {
                        c.cursor && a(document.body).removeClass(c.cursor),
                            r.off("resize" + j);
                    }),
                    w("Resize" + d, n.resizeImage),
                    n.isLowIE && w("AfterChange", n.resizeImage);
            },
            resizeImage: function() {
                var a = n.currItem;
                if (!a || !a.img) return;
                if (n.st.image.verticalFit) {
                    var b = 0;
                    n.isLowIE &&
                        (b =
                            parseInt(a.img.css("padding-top"), 10) +
                            parseInt(a.img.css("padding-bottom"), 10)),
                        a.img.css("max-height", n.wH - b);
                }
            },
            _onImageHasSize: function(a) {
                a.img &&
                    ((a.hasSize = !0),
                        L && clearInterval(L),
                        (a.isCheckingImgSize = !1),
                        y("ImageHasSize", a),
                        a.imgHidden &&
                        (n.content && n.content.removeClass("mfp-loading"),
                            (a.imgHidden = !1)));
            },
            findImageSize: function(a) {
                var b = 0,
                    c = a.img[0],
                    d = function(e) {
                        L && clearInterval(L),
                            (L = setInterval(function() {
                                if (c.naturalWidth > 0) {
                                    n._onImageHasSize(a);
                                    return;
                                }
                                b > 200 && clearInterval(L),
                                    b++,
                                    b === 3 ? d(10) : b === 40 ? d(50) : b === 100 && d(500);
                            }, e));
                    };
                d(1);
            },
            getImage: function(b, c) {
                var d = 0,
                    e = function() {
                        b &&
                            (b.img[0].complete ?
                                (b.img.off(".mfploader"),
                                    b === n.currItem &&
                                    (n._onImageHasSize(b), n.updateStatus("ready")),
                                    (b.hasSize = !0),
                                    (b.loaded = !0),
                                    y("ImageLoadComplete")) :
                                (d++, d < 200 ? setTimeout(e, 100) : f()));
                    },
                    f = function() {
                        b &&
                            (b.img.off(".mfploader"),
                                b === n.currItem &&
                                (n._onImageHasSize(b),
                                    n.updateStatus("error", g.tError.replace("%url%", b.src))),
                                (b.hasSize = !0),
                                (b.loaded = !0),
                                (b.loadError = !0));
                    },
                    g = n.st.image,
                    h = c.find(".mfp-img");
                if (h.length) {
                    var i = document.createElement("img");
                    (i.className = "mfp-img"),
                    b.el &&
                        b.el.find("img").length &&
                        (i.alt = b.el.find("img").attr("alt")),
                        (b.img = a(i).on("load.mfploader", e).on("error.mfploader", f)),
                        (i.src = b.src),
                        h.is("img") && (b.img = b.img.clone()),
                        (i = b.img[0]),
                        i.naturalWidth > 0 ? (b.hasSize = !0) : i.width || (b.hasSize = !1);
                }
                return (
                    n._parseMarkup(c, {
                        title: M(b),
                        img_replaceWith: b.img
                    }, b),
                    n.resizeImage(),
                    b.hasSize ?
                    (L && clearInterval(L),
                        b.loadError ?
                        (c.addClass("mfp-loading"),
                            n.updateStatus("error", g.tError.replace("%url%", b.src))) :
                        (c.removeClass("mfp-loading"), n.updateStatus("ready")),
                        c) :
                    (n.updateStatus("loading"),
                        (b.loading = !0),
                        b.hasSize ||
                        ((b.imgHidden = !0),
                            c.addClass("mfp-loading"),
                            n.findImageSize(b)),
                        c)
                );
            },
        },
    });
    var N,
        O = function() {
            return (
                N === undefined &&
                (N = document.createElement("p").style.MozTransform !== undefined),
                N
            );
        };
    a.magnificPopup.registerModule("zoom", {
        options: {
            enabled: !1,
            easing: "ease-in-out",
            duration: 300,
            opener: function(a) {
                return a.is("img") ? a : a.find("img");
            },
        },
        proto: {
            initZoom: function() {
                var a = n.st.zoom,
                    d = ".zoom",
                    e;
                if (!a.enabled || !n.supportsTransition) return;
                var f = a.duration,
                    g = function(b) {
                        var c = b
                            .clone()
                            .removeAttr("style")
                            .removeAttr("class")
                            .addClass("mfp-animated-image"),
                            d = "all " + a.duration / 1e3 + "s " + a.easing,
                            e = {
                                position: "fixed",
                                zIndex: 9999,
                                left: 0,
                                top: 0,
                                "-webkit-backface-visibility": "hidden",
                            },
                            f = "transition";
                        return (
                            (e["-webkit-" + f] = e["-moz-" + f] = e["-o-" + f] = e[f] = d),
                            c.css(e),
                            c
                        );
                    },
                    h = function() {
                        n.content.css("visibility", "visible");
                    },
                    i,
                    j;
                w("BuildControls" + d, function() {
                        if (n._allowZoom()) {
                            clearTimeout(i),
                                n.content.css("visibility", "hidden"),
                                (e = n._getItemToZoom());
                            if (!e) {
                                h();
                                return;
                            }
                            (j = g(e)),
                            j.css(n._getOffset()),
                                n.wrap.append(j),
                                (i = setTimeout(function() {
                                    j.css(n._getOffset(!0)),
                                        (i = setTimeout(function() {
                                            h(),
                                                setTimeout(function() {
                                                    j.remove(), (e = j = null), y("ZoomAnimationEnded");
                                                }, 16);
                                        }, f));
                                }, 16));
                        }
                    }),
                    w(c + d, function() {
                        if (n._allowZoom()) {
                            clearTimeout(i), (n.st.removalDelay = f);
                            if (!e) {
                                e = n._getItemToZoom();
                                if (!e) return;
                                j = g(e);
                            }
                            j.css(n._getOffset(!0)),
                                n.wrap.append(j),
                                n.content.css("visibility", "hidden"),
                                setTimeout(function() {
                                    j.css(n._getOffset());
                                }, 16);
                        }
                    }),
                    w(b + d, function() {
                        n._allowZoom() && (h(), j && j.remove(), (e = null));
                    });
            },
            _allowZoom: function() {
                return n.currItem.type === "image";
            },
            _getItemToZoom: function() {
                return n.currItem.hasSize ? n.currItem.img : !1;
            },
            _getOffset: function(b) {
                var c;
                b
                    ?
                    (c = n.currItem.img) :
                    (c = n.st.zoom.opener(n.currItem.el || n.currItem));
                var d = c.offset(),
                    e = parseInt(c.css("padding-top"), 10),
                    f = parseInt(c.css("padding-bottom"), 10);
                d.top -= a(window).scrollTop() - e;
                var g = {
                    width: c.width(),
                    height: (p ? c.innerHeight() : c[0].offsetHeight) - f - e,
                };
                return (
                    O() ?
                    (g["-moz-transform"] = g.transform =
                        "translate(" + d.left + "px," + d.top + "px)") :
                    ((g.left = d.left), (g.top = d.top)),
                    g
                );
            },
        },
    });
    var P = "iframe",
        Q = "//about:blank",
        R = function(a) {
            if (n.currTemplate[P]) {
                var b = n.currTemplate[P].find("iframe");
                b.length &&
                    (a || (b[0].src = Q),
                        n.isIE8 && b.css("display", a ? "block" : "none"));
            }
        };
    a.magnificPopup.registerModule(P, {
        options: {
            markup: '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',
            srcAction: "iframe_src",
            patterns: {
                youtube: {
                    index: "youtube.com",
                    id: "v=",
                    src: "//www.youtube.com/embed/%id%?autoplay=1",
                },
                vimeo: {
                    index: "vimeo.com/",
                    id: "/",
                    src: "//player.vimeo.com/video/%id%?autoplay=1",
                },
                gmaps: {
                    index: "//maps.google.",
                    src: "%id%&output=embed"
                },
            },
        },
        proto: {
            initIframe: function() {
                n.types.push(P),
                    w("BeforeChange", function(a, b, c) {
                        b !== c && (b === P ? R() : c === P && R(!0));
                    }),
                    w(b + "." + P, function() {
                        R();
                    });
            },
            getIframe: function(b, c) {
                var d = b.src,
                    e = n.st.iframe;
                a.each(e.patterns, function() {
                    if (d.indexOf(this.index) > -1)
                        return (
                            this.id &&
                            (typeof this.id == "string" ?
                                (d = d.substr(
                                    d.lastIndexOf(this.id) + this.id.length,
                                    d.length
                                )) :
                                (d = this.id.call(this, d))),
                            (d = this.src.replace("%id%", d)), !1
                        );
                });
                var f = {};
                return (
                    e.srcAction && (f[e.srcAction] = d),
                    n._parseMarkup(c, f, b),
                    n.updateStatus("ready"),
                    c
                );
            },
        },
    });
    var S = function(a) {
            var b = n.items.length;
            return a > b - 1 ? a - b : a < 0 ? b + a : a;
        },
        T = function(a, b, c) {
            return a.replace(/%curr%/gi, b + 1).replace(/%total%/gi, c);
        };
    a.magnificPopup.registerModule("gallery", {
        options: {
            enabled: !1,
            arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
            preload: [0, 2],
            navigateByImgClick: !0,
            arrows: !0,
            tPrev: "Previous (Left arrow key)",
            tNext: "Next (Right arrow key)",
            tCounter: "%curr% of %total%",
        },
        proto: {
            initGallery: function() {
                var c = n.st.gallery,
                    d = ".mfp-gallery",
                    e = Boolean(a.fn.mfpFastClick);
                n.direction = !0;
                if (!c || !c.enabled) return !1;
                (u += " mfp-gallery"),
                w(g + d, function() {
                        c.navigateByImgClick &&
                            n.wrap.on("click" + d, ".mfp-img", function() {
                                if (n.items.length > 1) return n.next(), !1;
                            }),
                            s.on("keydown" + d, function(a) {
                                a.keyCode === 37 ? n.prev() : a.keyCode === 39 && n.next();
                            });
                    }),
                    w("UpdateStatus" + d, function(a, b) {
                        b.text && (b.text = T(b.text, n.currItem.index, n.items.length));
                    }),
                    w(f + d, function(a, b, d, e) {
                        var f = n.items.length;
                        d.counter = f > 1 ? T(c.tCounter, e.index, f) : "";
                    }),
                    w("BuildControls" + d, function() {
                        if (n.items.length > 1 && c.arrows && !n.arrowLeft) {
                            var b = c.arrowMarkup,
                                d = (n.arrowLeft = a(
                                    b.replace(/%title%/gi, c.tPrev).replace(/%dir%/gi, "left")
                                ).addClass(m)),
                                f = (n.arrowRight = a(
                                    b.replace(/%title%/gi, c.tNext).replace(/%dir%/gi, "right")
                                ).addClass(m)),
                                g = e ? "mfpFastClick" : "click";
                            d[g](function() {
                                    n.prev();
                                }),
                                f[g](function() {
                                    n.next();
                                }),
                                n.isIE7 &&
                                (x("b", d[0], !1, !0),
                                    x("a", d[0], !1, !0),
                                    x("b", f[0], !1, !0),
                                    x("a", f[0], !1, !0)),
                                n.container.append(d.add(f));
                        }
                    }),
                    w(h + d, function() {
                        n._preloadTimeout && clearTimeout(n._preloadTimeout),
                            (n._preloadTimeout = setTimeout(function() {
                                n.preloadNearbyImages(), (n._preloadTimeout = null);
                            }, 16));
                    }),
                    w(b + d, function() {
                        s.off(d),
                            n.wrap.off("click" + d),
                            n.arrowLeft &&
                            e &&
                            n.arrowLeft.add(n.arrowRight).destroyMfpFastClick(),
                            (n.arrowRight = n.arrowLeft = null);
                    });
            },
            next: function() {
                (n.direction = !0), (n.index = S(n.index + 1)), n.updateItemHTML();
            },
            prev: function() {
                (n.direction = !1), (n.index = S(n.index - 1)), n.updateItemHTML();
            },
            goTo: function(a) {
                (n.direction = a >= n.index), (n.index = a), n.updateItemHTML();
            },
            preloadNearbyImages: function() {
                var a = n.st.gallery.preload,
                    b = Math.min(a[0], n.items.length),
                    c = Math.min(a[1], n.items.length),
                    d;
                for (d = 1; d <= (n.direction ? c : b); d++)
                    n._preloadItem(n.index + d);
                for (d = 1; d <= (n.direction ? b : c); d++)
                    n._preloadItem(n.index - d);
            },
            _preloadItem: function(b) {
                b = S(b);
                if (n.items[b].preloaded) return;
                var c = n.items[b];
                c.parsed || (c = n.parseEl(b)),
                    y("LazyLoad", c),
                    c.type === "image" &&
                    (c.img = a('<img class="mfp-img" />')
                        .on("load.mfploader", function() {
                            c.hasSize = !0;
                        })
                        .on("error.mfploader", function() {
                            (c.hasSize = !0), (c.loadError = !0), y("LazyLoadError", c);
                        })
                        .attr("src", c.src)),
                    (c.preloaded = !0);
            },
        },
    });
    var U = "retina";
    a.magnificPopup.registerModule(U, {
            options: {
                replaceSrc: function(a) {
                    return a.src.replace(/\.\w+$/, function(a) {
                        return "@2x" + a;
                    });
                },
                ratio: 1,
            },
            proto: {
                initRetina: function() {
                    if (window.devicePixelRatio > 1) {
                        var a = n.st.retina,
                            b = a.ratio;
                        (b = isNaN(b) ? b() : b),
                        b > 1 &&
                            (w("ImageHasSize." + U, function(a, c) {
                                    c.img.css({
                                        "max-width": c.img[0].naturalWidth / b,
                                        width: "100%",
                                    });
                                }),
                                w("ElementParse." + U, function(c, d) {
                                    d.src = a.replaceSrc(d, b);
                                }));
                    }
                },
            },
        }),
        (function() {
            var b = 1e3,
                c = "ontouchstart" in window,
                d = function() {
                    r.off("touchmove" + f + " touchend" + f);
                },
                e = "mfpFastClick",
                f = "." + e;
            (a.fn.mfpFastClick = function(e) {
                return a(this).each(function() {
                    var g = a(this),
                        h;
                    if (c) {
                        var i, j, k, l, m, n;
                        g.on("touchstart" + f, function(a) {
                            (l = !1),
                            (n = 1),
                            (m = a.originalEvent ?
                                a.originalEvent.touches[0] :
                                a.touches[0]),
                            (j = m.clientX),
                            (k = m.clientY),
                            r
                                .on("touchmove" + f, function(a) {
                                    (m = a.originalEvent ? a.originalEvent.touches : a.touches),
                                    (n = m.length),
                                    (m = m[0]);
                                    if (
                                        Math.abs(m.clientX - j) > 10 ||
                                        Math.abs(m.clientY - k) > 10
                                    )
                                        (l = !0), d();
                                })
                                .on("touchend" + f, function(a) {
                                    d();
                                    if (l || n > 1) return;
                                    (h = !0),
                                    a.preventDefault(),
                                        clearTimeout(i),
                                        (i = setTimeout(function() {
                                            h = !1;
                                        }, b)),
                                        e();
                                });
                        });
                    }
                    g.on("click" + f, function() {
                        h || e();
                    });
                });
            }),
            (a.fn.destroyMfpFastClick = function() {
                a(this).off("touchstart" + f + " click" + f),
                    c && r.off("touchmove" + f + " touchend" + f);
            });
        })(),
        A();
});

/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.3.3
 *
 */
(function(e) {
    e.fn.extend({
        slimScroll: function(g) {
            var a = e.extend({
                    width: "auto",
                    height: "250px",
                    size: "7px",
                    color: "#000",
                    position: "right",
                    distance: "1px",
                    start: "top",
                    opacity: 0.4,
                    alwaysVisible: !1,
                    disableFadeOut: !1,
                    railVisible: !1,
                    railColor: "#333",
                    railOpacity: 0.2,
                    railDraggable: !0,
                    railClass: "slimScrollRail",
                    barClass: "slimScrollBar",
                    wrapperClass: "slimScrollDiv",
                    allowPageScroll: !1,
                    wheelStep: 20,
                    touchScrollStep: 200,
                    borderRadius: "7px",
                    railBorderRadius: "7px",
                },
                g
            );
            this.each(function() {
                function u(d) {
                    if (r) {
                        d = d || window.event;
                        var c = 0;
                        d.wheelDelta && (c = -d.wheelDelta / 120);
                        d.detail && (c = d.detail / 3);
                        e(d.target || d.srcTarget || d.srcElement)
                            .closest("." + a.wrapperClass)
                            .is(b.parent()) && m(c, !0);
                        d.preventDefault && !k && d.preventDefault();
                        k || (d.returnValue = !1);
                    }
                }

                function m(d, e, g) {
                    k = !1;
                    var f = d,
                        h = b.outerHeight() - c.outerHeight();
                    e &&
                        ((f =
                                parseInt(c.css("top")) +
                                ((d * parseInt(a.wheelStep)) / 100) * c.outerHeight()),
                            (f = Math.min(Math.max(f, 0), h)),
                            (f = 0 < d ? Math.ceil(f) : Math.floor(f)),
                            c.css({
                                top: f + "px"
                            }));
                    l = parseInt(c.css("top")) / (b.outerHeight() - c.outerHeight());
                    f = l * (b[0].scrollHeight - b.outerHeight());
                    g &&
                        ((f = d),
                            (d = (f / b[0].scrollHeight) * b.outerHeight()),
                            (d = Math.min(Math.max(d, 0), h)),
                            c.css({
                                top: d + "px"
                            }));
                    b.scrollTop(f);
                    b.trigger("slimscrolling", ~~f);
                    v();
                    p();
                }

                function C() {
                    window.addEventListener ?
                        (this.addEventListener("DOMMouseScroll", u, !1),
                            this.addEventListener("mousewheel", u, !1)) :
                        document.attachEvent("onmousewheel", u);
                }

                function w() {
                    s = Math.max(
                        (b.outerHeight() / b[0].scrollHeight) * b.outerHeight(),
                        30
                    );
                    c.css({
                        height: s + "px"
                    });
                    var a = s == b.outerHeight() ? "none" : "block";
                    c.css({
                        display: a
                    });
                }

                function v() {
                    w();
                    clearTimeout(A);
                    l == ~~l ?
                        ((k = a.allowPageScroll),
                            B != l && b.trigger("slimscroll", 0 == ~~l ? "top" : "bottom")) :
                        (k = !1);
                    B = l;
                    s >= b.outerHeight() ?
                        (k = !0) :
                        (c.stop(!0, !0).fadeIn("fast"),
                            a.railVisible && h.stop(!0, !0).fadeIn("fast"));
                }

                function p() {
                    a.alwaysVisible ||
                        (A = setTimeout(function() {
                            (a.disableFadeOut && r) ||
                            x ||
                                y ||
                                (c.fadeOut("slow"), h.fadeOut("slow"));
                        }, 1e3));
                }
                var r,
                    x,
                    y,
                    A,
                    z,
                    s,
                    l,
                    B,
                    k = !1,
                    b = e(this);
                if (b.parent().hasClass(a.wrapperClass)) {
                    var n = b.scrollTop(),
                        c = b.parent().find("." + a.barClass),
                        h = b.parent().find("." + a.railClass);
                    w();
                    if (e.isPlainObject(g)) {
                        if ("height" in g && "auto" == g.height) {
                            b.parent().css("height", "auto");
                            b.css("height", "auto");
                            var q = b.parent().parent().height();
                            b.parent().css("height", q);
                            b.css("height", q);
                        }
                        if ("scrollTo" in g) n = parseInt(a.scrollTo);
                        else if ("scrollBy" in g) n += parseInt(a.scrollBy);
                        else if ("destroy" in g) {
                            c.remove();
                            h.remove();
                            b.unwrap();
                            return;
                        }
                        m(n, !1, !0);
                    }
                } else if (!(e.isPlainObject(g) && "destroy" in g)) {
                    a.height = "auto" == a.height ? b.parent().height() : a.height;
                    n = e("<div></div>")
                        .addClass(a.wrapperClass)
                        .css({
                            position: "relative",
                            overflow: "hidden",
                            width: a.width,
                            height: a.height,
                        });
                    b.css({
                        overflow: "hidden",
                        width: a.width,
                        height: a.height
                    });
                    var h = e("<div></div>")
                        .addClass(a.railClass)
                        .css({
                            width: a.size,
                            height: "100%",
                            position: "absolute",
                            top: 0,
                            display: a.alwaysVisible && a.railVisible ? "block" : "none",
                            "border-radius": a.railBorderRadius,
                            background: a.railColor,
                            opacity: a.railOpacity,
                            zIndex: 90,
                        }),
                        c = e("<div></div>")
                        .addClass(a.barClass)
                        .css({
                            background: a.color,
                            width: a.size,
                            position: "absolute",
                            top: 0,
                            opacity: a.opacity,
                            display: a.alwaysVisible ? "block" : "none",
                            "border-radius": a.borderRadius,
                            BorderRadius: a.borderRadius,
                            MozBorderRadius: a.borderRadius,
                            WebkitBorderRadius: a.borderRadius,
                            zIndex: 99,
                        }),
                        q =
                        "right" == a.position ?
                        {
                            right: a.distance
                        } :
                        {
                            left: a.distance
                        };
                    h.css(q);
                    c.css(q);
                    b.wrap(n);
                    b.parent().append(c);
                    b.parent().append(h);
                    a.railDraggable &&
                        c
                        .bind("mousedown", function(a) {
                            var b = e(document);
                            y = !0;
                            t = parseFloat(c.css("top"));
                            pageY = a.pageY;
                            b.bind("mousemove.slimscroll", function(a) {
                                currTop = t + a.pageY - pageY;
                                c.css("top", currTop);
                                m(0, c.position().top, !1);
                            });
                            b.bind("mouseup.slimscroll", function(a) {
                                y = !1;
                                p();
                                b.unbind(".slimscroll");
                            });
                            return !1;
                        })
                        .bind("selectstart.slimscroll", function(a) {
                            a.stopPropagation();
                            a.preventDefault();
                            return !1;
                        });
                    h.hover(
                        function() {
                            v();
                        },
                        function() {
                            p();
                        }
                    );
                    c.hover(
                        function() {
                            x = !0;
                        },
                        function() {
                            x = !1;
                        }
                    );
                    b.hover(
                        function() {
                            r = !0;
                            v();
                            p();
                        },
                        function() {
                            r = !1;
                            p();
                        }
                    );
                    b.bind("touchstart", function(a, b) {
                        a.originalEvent.touches.length &&
                            (z = a.originalEvent.touches[0].pageY);
                    });
                    b.bind("touchmove", function(b) {
                        k || b.originalEvent.preventDefault();
                        b.originalEvent.touches.length &&
                            (m(
                                    (z - b.originalEvent.touches[0].pageY) / a.touchScrollStep, !0
                                ),
                                (z = b.originalEvent.touches[0].pageY));
                    });
                    w();
                    "bottom" === a.start ?
                        (c.css({
                            top: b.outerHeight() - c.outerHeight()
                        }), m(0, !0)) :
                        "top" !== a.start &&
                        (m(e(a.start).position().top, null, !0),
                            a.alwaysVisible || c.hide());
                    C();
                }
            });
            return this;
        },
    });
    e.fn.extend({
        slimscroll: e.fn.slimScroll
    });
})(jQuery);

/* HTML5 Placeholder jQuery Plugin - v2.1.2
 * Copyright (c)2015 Mathias Bynens
 * 2015-06-09
 */
!(function(a) {
    "function" == typeof define && define.amd ?
        define(["jquery"], a) :
        a(
            "object" == typeof module && module.exports ? require("jquery") : jQuery
        );
})(function(a) {
    function b(b) {
        var c = {},
            d = /^jQuery\d+$/;
        return (
            a.each(b.attributes, function(a, b) {
                b.specified && !d.test(b.name) && (c[b.name] = b.value);
            }),
            c
        );
    }

    function c(b, c) {
        var d = this,
            f = a(d);
        if (d.value == f.attr("placeholder") && f.hasClass(m.customClass))
            if (f.data("placeholder-password")) {
                if (
                    ((f = f
                            .hide()
                            .nextAll('input[type="password"]:first')
                            .show()
                            .attr("id", f.removeAttr("id").data("placeholder-id"))),
                        b === !0)
                )
                    return (f[0].value = c);
                f.focus();
            } else
                (d.value = ""), f.removeClass(m.customClass), d == e() && d.select();
    }

    function d() {
        var d,
            e = this,
            f = a(e),
            g = this.id;
        if ("" === e.value) {
            if ("password" === e.type) {
                if (!f.data("placeholder-textinput")) {
                    try {
                        d = f.clone().prop({
                            type: "text"
                        });
                    } catch (h) {
                        d = a("<input>").attr(a.extend(b(this), {
                            type: "text"
                        }));
                    }
                    d
                        .removeAttr("name")
                        .data({
                            "placeholder-password": f,
                            "placeholder-id": g
                        })
                        .bind("focus.placeholder", c),
                        f
                        .data({
                            "placeholder-textinput": d,
                            "placeholder-id": g
                        })
                        .before(d);
                }
                f = f
                    .removeAttr("id")
                    .hide()
                    .prevAll('input[type="text"]:first')
                    .attr("id", g)
                    .show();
            }
            f.addClass(m.customClass), (f[0].value = f.attr("placeholder"));
        } else f.removeClass(m.customClass);
    }

    function e() {
        try {
            return document.activeElement;
        } catch (a) {}
    }
    var f,
        g,
        h =
        "[object OperaMini]" == Object.prototype.toString.call(window.operamini),
        i = "placeholder" in document.createElement("input") && !h,
        j = "placeholder" in document.createElement("textarea") && !h,
        k = a.valHooks,
        l = a.propHooks;
    if (i && j)
        (g = a.fn.placeholder =
            function() {
                return this;
            }),
        (g.input = g.textarea = !0);
    else {
        var m = {};
        (g = a.fn.placeholder =
            function(b) {
                var e = {
                    customClass: "placeholder"
                };
                m = a.extend({}, e, b);
                var f = this;
                return (
                    f
                    .filter((i ? "textarea" : ":input") + "[placeholder]")
                    .not("." + m.customClass)
                    .bind({
                        "focus.placeholder": c,
                        "blur.placeholder": d
                    })
                    .data("placeholder-enabled", !0)
                    .trigger("blur.placeholder"),
                    f
                );
            }),
        (g.input = i),
        (g.textarea = j),
        (f = {
            get: function(b) {
                var c = a(b),
                    d = c.data("placeholder-password");
                return d ?
                    d[0].value :
                    c.data("placeholder-enabled") && c.hasClass(m.customClass) ?
                    "" :
                    b.value;
            },
            set: function(b, f) {
                var g = a(b),
                    h = g.data("placeholder-password");
                return h ?
                    (h[0].value = f) :
                    g.data("placeholder-enabled") ?
                    ("" === f ?
                        ((b.value = f), b != e() && d.call(b)) :
                        g.hasClass(m.customClass) ?
                        c.call(b, !0, f) || (b.value = f) :
                        (b.value = f),
                        g) :
                    (b.value = f);
            },
        }),
        i || ((k.input = f), (l.value = f)),
            j || ((k.textarea = f), (l.value = f)),
            a(function() {
                a(document).delegate("form", "submit.placeholder", function() {
                    var b = a("." + m.customClass, this).each(c);
                    setTimeout(function() {
                        b.each(d);
                    }, 10);
                });
            }),
            a(window).bind("beforeunload.placeholder", function() {
                a("." + m.customClass).each(function() {
                    this.value = "";
                });
            });
    }
});

/*! =======================================================
                      VERSION  4.10.1
========================================================= */
/*! =========================================================
 * bootstrap-slider.js
 *
 * Maintainers:
 *		Kyle Kemp
 *			- Twitter: @seiyria
 *			- Github:  seiyria
 *		Rohit Kalkur
 *			- Twitter: @Rovolutionary
 *			- Github:  rovolution
 *
 * =========================================================
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */
!(function(a, b) {
    if ("function" == typeof define && define.amd) define(["jquery"], b);
    else if ("object" == typeof module && module.exports) {
        var c;
        try {
            c = require("jquery");
        } catch (d) {
            c = null;
        }
        module.exports = b(c);
    } else a.Slider = b(a.jQuery);
})(this, function(a) {
    var b;
    return (
        (function(a) {
            "use strict";

            function b() {}

            function c(a) {
                function c(b) {
                    b.prototype.option ||
                        (b.prototype.option = function(b) {
                            a.isPlainObject(b) &&
                                (this.options = a.extend(!0, this.options, b));
                        });
                }

                function e(b, c) {
                    a.fn[b] = function(e) {
                        if ("string" == typeof e) {
                            for (
                                var g = d.call(arguments, 1), h = 0, i = this.length; i > h; h++
                            ) {
                                var j = this[h],
                                    k = a.data(j, b);
                                if (k)
                                    if (a.isFunction(k[e]) && "_" !== e.charAt(0)) {
                                        var l = k[e].apply(k, g);
                                        if (void 0 !== l && l !== k) return l;
                                    } else f("no such method '" + e + "' for " + b + " instance");
                                else
                                    f(
                                        "cannot call methods on " +
                                        b +
                                        " prior to initialization; attempted to call '" +
                                        e +
                                        "'"
                                    );
                            }
                            return this;
                        }
                        var m = this.map(function() {
                            var d = a.data(this, b);
                            return (
                                d ?
                                (d.option(e), d._init()) :
                                ((d = new c(this, e)), a.data(this, b, d)),
                                a(this)
                            );
                        });
                        return !m || m.length > 1 ? m : m[0];
                    };
                }
                if (a) {
                    var f =
                        "undefined" == typeof console ?
                        b :
                        function(a) {
                            console.error(a);
                        };
                    return (
                        (a.bridget = function(a, b) {
                            c(b), e(a, b);
                        }),
                        a.bridget
                    );
                }
            }
            var d = Array.prototype.slice;
            c(a);
        })(a),
        (function(a) {
            function c(b, c) {
                function d(a, b) {
                    var c = "data-slider-" + b.replace(/_/g, "-"),
                        d = a.getAttribute(c);
                    try {
                        return JSON.parse(d);
                    } catch (e) {
                        return d;
                    }
                }
                "string" == typeof b
                    ?
                    (this.element = document.querySelector(b)) :
                    b instanceof HTMLElement && (this.element = b),
                    (c = c ? c : {});
                for (
                    var f = Object.keys(this.defaultOptions), g = 0; g < f.length; g++
                ) {
                    var h = f[g],
                        i = c[h];
                    (i = "undefined" != typeof i ? i : d(this.element, h)),
                    (i = null !== i ? i : this.defaultOptions[h]),
                    this.options || (this.options = {}),
                        (this.options[h] = i);
                }
                var j,
                    k,
                    l,
                    m,
                    n,
                    o = this.element.style.width,
                    p = !1,
                    q = this.element.parentNode;
                if (this.sliderElem) p = !0;
                else {
                    (this.sliderElem = document.createElement("div")),
                    (this.sliderElem.className = "slider");
                    var r = document.createElement("div");
                    if (
                        ((r.className = "slider-track"),
                            (k = document.createElement("div")),
                            (k.className = "slider-track-low"),
                            (j = document.createElement("div")),
                            (j.className = "slider-selection"),
                            (l = document.createElement("div")),
                            (l.className = "slider-track-high"),
                            (m = document.createElement("div")),
                            (m.className = "slider-handle min-slider-handle"),
                            (n = document.createElement("div")),
                            (n.className = "slider-handle max-slider-handle"),
                            r.appendChild(k),
                            r.appendChild(j),
                            r.appendChild(l),
                            (this.ticks = []),
                            Array.isArray(this.options.ticks) && this.options.ticks.length > 0)
                    ) {
                        for (g = 0; g < this.options.ticks.length; g++) {
                            var s = document.createElement("div");
                            (s.className = "slider-tick"),
                            this.ticks.push(s),
                                r.appendChild(s);
                        }
                        j.className += " tick-slider-selection";
                    }
                    if (
                        (r.appendChild(m),
                            r.appendChild(n),
                            (this.tickLabels = []),
                            Array.isArray(this.options.ticks_labels) &&
                            this.options.ticks_labels.length > 0)
                    )
                        for (
                            this.tickLabelContainer = document.createElement("div"),
                            this.tickLabelContainer.className =
                            "slider-tick-label-container",
                            g = 0; g < this.options.ticks_labels.length; g++
                        ) {
                            var t = document.createElement("div");
                            (t.className = "slider-tick-label"),
                            (t.innerHTML = this.options.ticks_labels[g]),
                            this.tickLabels.push(t),
                                this.tickLabelContainer.appendChild(t);
                        }
                    var u = function(a) {
                            var b = document.createElement("div");
                            b.className = "tooltip-arrow";
                            var c = document.createElement("div");
                            (c.className = "tooltip-inner"),
                            a.appendChild(b),
                                a.appendChild(c);
                        },
                        v = document.createElement("div");
                    (v.className = "tooltip tooltip-main"), u(v);
                    var w = document.createElement("div");
                    (w.className = "tooltip tooltip-min"), u(w);
                    var x = document.createElement("div");
                    (x.className = "tooltip tooltip-max"),
                    u(x),
                        this.sliderElem.appendChild(r),
                        this.sliderElem.appendChild(v),
                        this.sliderElem.appendChild(w),
                        this.sliderElem.appendChild(x),
                        this.tickLabelContainer &&
                        this.sliderElem.appendChild(this.tickLabelContainer),
                        q.insertBefore(this.sliderElem, this.element),
                        (this.element.style.display = "none");
                }
                if (
                    (a &&
                        ((this.$element = a(this.element)),
                            (this.$sliderElem = a(this.sliderElem))),
                        (this.eventToCallbackMap = {}),
                        (this.sliderElem.id = this.options.id),
                        (this.touchCapable =
                            "ontouchstart" in window ||
                            (window.DocumentTouch && document instanceof window.DocumentTouch)),
                        (this.tooltip = this.sliderElem.querySelector(".tooltip-main")),
                        (this.tooltipInner = this.tooltip.querySelector(".tooltip-inner")),
                        (this.tooltip_min = this.sliderElem.querySelector(".tooltip-min")),
                        (this.tooltipInner_min =
                            this.tooltip_min.querySelector(".tooltip-inner")),
                        (this.tooltip_max = this.sliderElem.querySelector(".tooltip-max")),
                        (this.tooltipInner_max =
                            this.tooltip_max.querySelector(".tooltip-inner")),
                        e[this.options.scale] && (this.options.scale = e[this.options.scale]),
                        p === !0 &&
                        (this._removeClass(this.sliderElem, "slider-horizontal"),
                            this._removeClass(this.sliderElem, "slider-vertical"),
                            this._removeClass(this.tooltip, "hide"),
                            this._removeClass(this.tooltip_min, "hide"),
                            this._removeClass(this.tooltip_max, "hide"), ["left", "top", "width", "height"].forEach(function(a) {
                                this._removeProperty(this.trackLow, a),
                                    this._removeProperty(this.trackSelection, a),
                                    this._removeProperty(this.trackHigh, a);
                            }, this), [this.handle1, this.handle2].forEach(function(a) {
                                this._removeProperty(a, "left"), this._removeProperty(a, "top");
                            }, this), [this.tooltip, this.tooltip_min, this.tooltip_max].forEach(
                                function(a) {
                                    this._removeProperty(a, "left"),
                                        this._removeProperty(a, "top"),
                                        this._removeProperty(a, "margin-left"),
                                        this._removeProperty(a, "margin-top"),
                                        this._removeClass(a, "right"),
                                        this._removeClass(a, "top");
                                },
                                this
                            )),
                        "vertical" === this.options.orientation ?
                        (this._addClass(this.sliderElem, "slider-vertical"),
                            (this.stylePos = "top"),
                            (this.mousePos = "pageY"),
                            (this.sizePos = "offsetHeight"),
                            this._addClass(this.tooltip, "right"),
                            (this.tooltip.style.left = "100%"),
                            this._addClass(this.tooltip_min, "right"),
                            (this.tooltip_min.style.left = "100%"),
                            this._addClass(this.tooltip_max, "right"),
                            (this.tooltip_max.style.left = "100%")) :
                        (this._addClass(this.sliderElem, "slider-horizontal"),
                            (this.sliderElem.style.width = o),
                            (this.options.orientation = "horizontal"),
                            (this.stylePos = "left"),
                            (this.mousePos = "pageX"),
                            (this.sizePos = "offsetWidth"),
                            this._addClass(this.tooltip, "top"),
                            (this.tooltip.style.top = -this.tooltip.outerHeight - 14 + "px"),
                            this._addClass(this.tooltip_min, "top"),
                            (this.tooltip_min.style.top = -this.tooltip_min.outerHeight - 14 + "px"),
                            this._addClass(this.tooltip_max, "top"),
                            (this.tooltip_max.style.top = -this.tooltip_max.outerHeight - 14 + "px")),
                        Array.isArray(this.options.ticks) &&
                        this.options.ticks.length > 0 &&
                        ((this.options.max = Math.max.apply(Math, this.options.ticks)),
                            (this.options.min = Math.min.apply(Math, this.options.ticks))),
                        Array.isArray(this.options.value) ?
                        (this.options.range = !0) :
                        this.options.range &&
                        (this.options.value = [this.options.value, this.options.max]),
                        (this.trackLow = k || this.trackLow),
                        (this.trackSelection = j || this.trackSelection),
                        (this.trackHigh = l || this.trackHigh),
                        "none" === this.options.selection &&
                        (this._addClass(this.trackLow, "hide"),
                            this._addClass(this.trackSelection, "hide"),
                            this._addClass(this.trackHigh, "hide")),
                        (this.handle1 = m || this.handle1),
                        (this.handle2 = n || this.handle2),
                        p === !0)
                )
                    for (
                        this._removeClass(this.handle1, "round triangle"),
                        this._removeClass(this.handle2, "round triangle hide"),
                        g = 0; g < this.ticks.length; g++
                    )
                        this._removeClass(this.ticks[g], "round triangle hide");
                var y = ["round", "triangle", "custom"],
                    z = -1 !== y.indexOf(this.options.handle);
                if (z)
                    for (
                        this._addClass(this.handle1, this.options.handle),
                        this._addClass(this.handle2, this.options.handle),
                        g = 0; g < this.ticks.length; g++
                    )
                        this._addClass(this.ticks[g], this.options.handle);
                (this.offset = this._offset(this.sliderElem)),
                (this.size = this.sliderElem[this.sizePos]),
                this.setValue(this.options.value),
                    (this.handle1Keydown = this._keydown.bind(this, 0)),
                    this.handle1.addEventListener("keydown", this.handle1Keydown, !1),
                    (this.handle2Keydown = this._keydown.bind(this, 1)),
                    this.handle2.addEventListener("keydown", this.handle2Keydown, !1),
                    (this.mousedown = this._mousedown.bind(this)),
                    this.touchCapable &&
                    this.sliderElem.addEventListener("touchstart", this.mousedown, !1),
                    this.sliderElem.addEventListener("mousedown", this.mousedown, !1),
                    "hide" === this.options.tooltip ?
                    (this._addClass(this.tooltip, "hide"),
                        this._addClass(this.tooltip_min, "hide"),
                        this._addClass(this.tooltip_max, "hide")) :
                    "always" === this.options.tooltip ?
                    (this._showTooltip(), (this._alwaysShowTooltip = !0)) :
                    ((this.showTooltip = this._showTooltip.bind(this)),
                        (this.hideTooltip = this._hideTooltip.bind(this)),
                        this.sliderElem.addEventListener(
                            "mouseenter",
                            this.showTooltip, !1
                        ),
                        this.sliderElem.addEventListener(
                            "mouseleave",
                            this.hideTooltip, !1
                        ),
                        this.handle1.addEventListener("focus", this.showTooltip, !1),
                        this.handle1.addEventListener("blur", this.hideTooltip, !1),
                        this.handle2.addEventListener("focus", this.showTooltip, !1),
                        this.handle2.addEventListener("blur", this.hideTooltip, !1)),
                    this.options.enabled ? this.enable() : this.disable();
            }
            var d = {
                    formatInvalidInputErrorMsg: function(a) {
                        return "Invalid input value '" + a + "' passed in";
                    },
                    callingContextNotSliderInstance: "Calling context element does not have instance of Slider bound to it. Check your code to make sure the JQuery object returned from the call to the slider() initializer is calling the method",
                },
                e = {
                    linear: {
                        toValue: function(a) {
                            var b = (a / 100) * (this.options.max - this.options.min);
                            if (this.options.ticks_positions.length > 0) {
                                for (
                                    var c, d, e, f = 0, g = 0; g < this.options.ticks_positions.length; g++
                                )
                                    if (a <= this.options.ticks_positions[g]) {
                                        (c = g > 0 ? this.options.ticks[g - 1] : 0),
                                        (e = g > 0 ? this.options.ticks_positions[g - 1] : 0),
                                        (d = this.options.ticks[g]),
                                        (f = this.options.ticks_positions[g]);
                                        break;
                                    }
                                if (g > 0) {
                                    var h = (a - e) / (f - e);
                                    b = c + h * (d - c);
                                }
                            }
                            var i =
                                this.options.min +
                                Math.round(b / this.options.step) * this.options.step;
                            return i < this.options.min ?
                                this.options.min :
                                i > this.options.max ?
                                this.options.max :
                                i;
                        },
                        toPercentage: function(a) {
                            if (this.options.max === this.options.min) return 0;
                            if (this.options.ticks_positions.length > 0) {
                                for (
                                    var b, c, d, e = 0, f = 0; f < this.options.ticks.length; f++
                                )
                                    if (a <= this.options.ticks[f]) {
                                        (b = f > 0 ? this.options.ticks[f - 1] : 0),
                                        (d = f > 0 ? this.options.ticks_positions[f - 1] : 0),
                                        (c = this.options.ticks[f]),
                                        (e = this.options.ticks_positions[f]);
                                        break;
                                    }
                                if (f > 0) {
                                    var g = (a - b) / (c - b);
                                    return d + g * (e - d);
                                }
                            }
                            return (
                                (100 * (a - this.options.min)) /
                                (this.options.max - this.options.min)
                            );
                        },
                    },
                    logarithmic: {
                        toValue: function(a) {
                            var b = 0 === this.options.min ? 0 : Math.log(this.options.min),
                                c = Math.log(this.options.max),
                                d = Math.exp(b + ((c - b) * a) / 100);
                            return (
                                (d =
                                    this.options.min +
                                    Math.round((d - this.options.min) / this.options.step) *
                                    this.options.step),
                                d < this.options.min ?
                                this.options.min :
                                d > this.options.max ?
                                this.options.max :
                                d
                            );
                        },
                        toPercentage: function(a) {
                            if (this.options.max === this.options.min) return 0;
                            var b = Math.log(this.options.max),
                                c = 0 === this.options.min ? 0 : Math.log(this.options.min),
                                d = 0 === a ? 0 : Math.log(a);
                            return (100 * (d - c)) / (b - c);
                        },
                    },
                };
            if (
                ((b = function(a, b) {
                        return c.call(this, a, b), this;
                    }),
                    (b.prototype = {
                        _init: function() {},
                        constructor: b,
                        defaultOptions: {
                            id: "",
                            min: 0,
                            max: 10,
                            step: 1,
                            precision: 0,
                            orientation: "horizontal",
                            value: 5,
                            range: !1,
                            selection: "before",
                            tooltip: "show",
                            tooltip_split: !1,
                            handle: "round",
                            reversed: !1,
                            enabled: !0,
                            formatter: function(a) {
                                return Array.isArray(a) ? a[0] + " : " + a[1] : a;
                            },
                            natural_arrow_keys: !1,
                            ticks: [],
                            ticks_positions: [],
                            ticks_labels: [],
                            ticks_snap_bounds: 0,
                            scale: "linear",
                            focus: !1,
                        },
                        over: !1,
                        inDrag: !1,
                        getValue: function() {
                            return this.options.range ?
                                this.options.value :
                                this.options.value[0];
                        },
                        setValue: function(a, b, c) {
                            a || (a = 0);
                            var d = this.getValue();
                            this.options.value = this._validateInputValue(a);
                            var e = this._applyPrecision.bind(this);
                            this.options.range ?
                                ((this.options.value[0] = e(this.options.value[0])),
                                    (this.options.value[1] = e(this.options.value[1])),
                                    (this.options.value[0] = Math.max(
                                        this.options.min,
                                        Math.min(this.options.max, this.options.value[0])
                                    )),
                                    (this.options.value[1] = Math.max(
                                        this.options.min,
                                        Math.min(this.options.max, this.options.value[1])
                                    ))) :
                                ((this.options.value = e(this.options.value)),
                                    (this.options.value = [
                                        Math.max(
                                            this.options.min,
                                            Math.min(this.options.max, this.options.value)
                                        ),
                                    ]),
                                    this._addClass(this.handle2, "hide"),
                                    "after" === this.options.selection ?
                                    (this.options.value[1] = this.options.max) :
                                    (this.options.value[1] = this.options.min)),
                                this.options.max > this.options.min ?
                                (this.percentage = [
                                    this._toPercentage(this.options.value[0]),
                                    this._toPercentage(this.options.value[1]),
                                    (100 * this.options.step) /
                                    (this.options.max - this.options.min),
                                ]) :
                                (this.percentage = [0, 0, 100]),
                                this._layout();
                            var f = this.options.range ?
                                this.options.value :
                                this.options.value[0];
                            return (
                                b === !0 && this._trigger("slide", f),
                                d !== f &&
                                c === !0 &&
                                this._trigger("change", {
                                    oldValue: d,
                                    newValue: f
                                }),
                                this._setDataVal(f),
                                this
                            );
                        },
                        destroy: function() {
                            this._removeSliderEventHandlers(),
                                this.sliderElem.parentNode.removeChild(this.sliderElem),
                                (this.element.style.display = ""),
                                this._cleanUpEventCallbacksMap(),
                                this.element.removeAttribute("data"),
                                a &&
                                (this._unbindJQueryEventHandlers(),
                                    this.$element.removeData("slider"));
                        },
                        disable: function() {
                            return (
                                (this.options.enabled = !1),
                                this.handle1.removeAttribute("tabindex"),
                                this.handle2.removeAttribute("tabindex"),
                                this._addClass(this.sliderElem, "slider-disabled"),
                                this._trigger("slideDisabled"),
                                this
                            );
                        },
                        enable: function() {
                            return (
                                (this.options.enabled = !0),
                                this.handle1.setAttribute("tabindex", 0),
                                this.handle2.setAttribute("tabindex", 0),
                                this._removeClass(this.sliderElem, "slider-disabled"),
                                this._trigger("slideEnabled"),
                                this
                            );
                        },
                        toggle: function() {
                            return this.options.enabled ? this.disable() : this.enable(), this;
                        },
                        isEnabled: function() {
                            return this.options.enabled;
                        },
                        on: function(a, b) {
                            return this._bindNonQueryEventHandler(a, b), this;
                        },
                        off: function(b, c) {
                            a
                                ?
                                (this.$element.off(b, c), this.$sliderElem.off(b, c)) :
                                this._unbindNonQueryEventHandler(b, c);
                        },
                        getAttribute: function(a) {
                            return a ? this.options[a] : this.options;
                        },
                        setAttribute: function(a, b) {
                            return (this.options[a] = b), this;
                        },
                        refresh: function() {
                            return (
                                this._removeSliderEventHandlers(),
                                c.call(this, this.element, this.options),
                                a && a.data(this.element, "slider", this),
                                this
                            );
                        },
                        relayout: function() {
                            return this._layout(), this;
                        },
                        _removeSliderEventHandlers: function() {
                            this.handle1.removeEventListener(
                                    "keydown",
                                    this.handle1Keydown, !1
                                ),
                                this.handle1.removeEventListener("focus", this.showTooltip, !1),
                                this.handle1.removeEventListener("blur", this.hideTooltip, !1),
                                this.handle2.removeEventListener(
                                    "keydown",
                                    this.handle2Keydown, !1
                                ),
                                this.handle2.removeEventListener(
                                    "focus",
                                    this.handle2Keydown, !1
                                ),
                                this.handle2.removeEventListener("blur", this.handle2Keydown, !1),
                                this.sliderElem.removeEventListener(
                                    "mouseenter",
                                    this.showTooltip, !1
                                ),
                                this.sliderElem.removeEventListener(
                                    "mouseleave",
                                    this.hideTooltip, !1
                                ),
                                this.sliderElem.removeEventListener(
                                    "touchstart",
                                    this.mousedown, !1
                                ),
                                this.sliderElem.removeEventListener(
                                    "mousedown",
                                    this.mousedown, !1
                                );
                        },
                        _bindNonQueryEventHandler: function(a, b) {
                            void 0 === this.eventToCallbackMap[a] &&
                                (this.eventToCallbackMap[a] = []),
                                this.eventToCallbackMap[a].push(b);
                        },
                        _unbindNonQueryEventHandler: function(a, b) {
                            var c = this.eventToCallbackMap[a];
                            if (void 0 !== c)
                                for (var d = 0; d < c.length; d++)
                                    if (c[d] === b) {
                                        c.splice(d, 1);
                                        break;
                                    }
                        },
                        _cleanUpEventCallbacksMap: function() {
                            for (
                                var a = Object.keys(this.eventToCallbackMap), b = 0; b < a.length; b++
                            ) {
                                var c = a[b];
                                this.eventToCallbackMap[c] = null;
                            }
                        },
                        _showTooltip: function() {
                            this.options.tooltip_split === !1 ?
                                (this._addClass(this.tooltip, "in"),
                                    (this.tooltip_min.style.display = "none"),
                                    (this.tooltip_max.style.display = "none")) :
                                (this._addClass(this.tooltip_min, "in"),
                                    this._addClass(this.tooltip_max, "in"),
                                    (this.tooltip.style.display = "none")),
                                (this.over = !0);
                        },
                        _hideTooltip: function() {
                            this.inDrag === !1 &&
                                this.alwaysShowTooltip !== !0 &&
                                (this._removeClass(this.tooltip, "in"),
                                    this._removeClass(this.tooltip_min, "in"),
                                    this._removeClass(this.tooltip_max, "in")),
                                (this.over = !1);
                        },
                        _layout: function() {
                            var a;
                            if (
                                ((a = this.options.reversed ?
                                        [100 - this.percentage[0], this.percentage[1]] :
                                        [this.percentage[0], this.percentage[1]]),
                                    (this.handle1.style[this.stylePos] = a[0] + "%"),
                                    (this.handle2.style[this.stylePos] = a[1] + "%"),
                                    Array.isArray(this.options.ticks) &&
                                    this.options.ticks.length > 0)
                            ) {
                                var b = Math.max.apply(Math, this.options.ticks),
                                    c = Math.min.apply(Math, this.options.ticks),
                                    d =
                                    "vertical" === this.options.orientation ? "height" : "width",
                                    e =
                                    "vertical" === this.options.orientation ?
                                    "marginTop" :
                                    "marginLeft",
                                    f = this.size / (this.options.ticks.length - 1);
                                if (this.tickLabelContainer) {
                                    var g = 0;
                                    if (0 === this.options.ticks_positions.length)
                                        (this.tickLabelContainer.style[e] = -f / 2 + "px"),
                                        (g = this.tickLabelContainer.offsetHeight);
                                    else
                                        for (
                                            h = 0; h < this.tickLabelContainer.childNodes.length; h++
                                        )
                                            this.tickLabelContainer.childNodes[h].offsetHeight > g &&
                                            (g = this.tickLabelContainer.childNodes[h].offsetHeight);
                                    "horizontal" === this.options.orientation &&
                                        (this.sliderElem.style.marginBottom = g + "px");
                                }
                                for (var h = 0; h < this.options.ticks.length; h++) {
                                    var i =
                                        this.options.ticks_positions[h] ||
                                        (100 * (this.options.ticks[h] - c)) / (b - c);
                                    (this.ticks[h].style[this.stylePos] = i + "%"),
                                    this._removeClass(this.ticks[h], "in-selection"),
                                        this.options.range ?
                                        i >= a[0] &&
                                        i <= a[1] &&
                                        this._addClass(this.ticks[h], "in-selection") :
                                        "after" === this.options.selection && i >= a[0] ?
                                        this._addClass(this.ticks[h], "in-selection") :
                                        "before" === this.options.selection &&
                                        i <= a[0] &&
                                        this._addClass(this.ticks[h], "in-selection"),
                                        this.tickLabels[h] &&
                                        ((this.tickLabels[h].style[d] = f + "px"),
                                            void 0 !== this.options.ticks_positions[h] &&
                                            ((this.tickLabels[h].style.position = "absolute"),
                                                (this.tickLabels[h].style[this.stylePos] =
                                                    this.options.ticks_positions[h] + "%"),
                                                (this.tickLabels[h].style[e] = -f / 2 + "px")));
                                }
                            }
                            if ("vertical" === this.options.orientation)
                                (this.trackLow.style.top = "0"),
                                (this.trackLow.style.height = Math.min(a[0], a[1]) + "%"),
                                (this.trackSelection.style.top = Math.min(a[0], a[1]) + "%"),
                                (this.trackSelection.style.height =
                                    Math.abs(a[0] - a[1]) + "%"),
                                (this.trackHigh.style.bottom = "0"),
                                (this.trackHigh.style.height =
                                    100 - Math.min(a[0], a[1]) - Math.abs(a[0] - a[1]) + "%");
                            else {
                                (this.trackLow.style.left = "0"),
                                (this.trackLow.style.width = Math.min(a[0], a[1]) + "%"),
                                (this.trackSelection.style.left = Math.min(a[0], a[1]) + "%"),
                                (this.trackSelection.style.width = Math.abs(a[0] - a[1]) + "%"),
                                (this.trackHigh.style.right = "0"),
                                (this.trackHigh.style.width =
                                    100 - Math.min(a[0], a[1]) - Math.abs(a[0] - a[1]) + "%");
                                var j = this.tooltip_min.getBoundingClientRect(),
                                    k = this.tooltip_max.getBoundingClientRect();
                                j.right > k.left ?
                                    (this._removeClass(this.tooltip_max, "top"),
                                        this._addClass(this.tooltip_max, "bottom"),
                                        (this.tooltip_max.style.top = "18px")) :
                                    (this._removeClass(this.tooltip_max, "bottom"),
                                        this._addClass(this.tooltip_max, "top"),
                                        (this.tooltip_max.style.top = this.tooltip_min.style.top));
                            }
                            var l;
                            if (this.options.range) {
                                (l = this.options.formatter(this.options.value)),
                                this._setText(this.tooltipInner, l),
                                    (this.tooltip.style[this.stylePos] = (a[1] + a[0]) / 2 + "%"),
                                    "vertical" === this.options.orientation ?
                                    this._css(
                                        this.tooltip,
                                        "margin-top", -this.tooltip.offsetHeight / 2 + "px"
                                    ) :
                                    this._css(
                                        this.tooltip,
                                        "margin-left", -this.tooltip.offsetWidth / 2 + "px"
                                    ),
                                    "vertical" === this.options.orientation ?
                                    this._css(
                                        this.tooltip,
                                        "margin-top", -this.tooltip.offsetHeight / 2 + "px"
                                    ) :
                                    this._css(
                                        this.tooltip,
                                        "margin-left", -this.tooltip.offsetWidth / 2 + "px"
                                    );
                                var m = this.options.formatter(this.options.value[0]);
                                this._setText(this.tooltipInner_min, m);
                                var n = this.options.formatter(this.options.value[1]);
                                this._setText(this.tooltipInner_max, n),
                                    (this.tooltip_min.style[this.stylePos] = a[0] + "%"),
                                    "vertical" === this.options.orientation ?
                                    this._css(
                                        this.tooltip_min,
                                        "margin-top", -this.tooltip_min.offsetHeight / 2 + "px"
                                    ) :
                                    this._css(
                                        this.tooltip_min,
                                        "margin-left", -this.tooltip_min.offsetWidth / 2 + "px"
                                    ),
                                    (this.tooltip_max.style[this.stylePos] = a[1] + "%"),
                                    "vertical" === this.options.orientation ?
                                    this._css(
                                        this.tooltip_max,
                                        "margin-top", -this.tooltip_max.offsetHeight / 2 + "px"
                                    ) :
                                    this._css(
                                        this.tooltip_max,
                                        "margin-left", -this.tooltip_max.offsetWidth / 2 + "px"
                                    );
                            } else
                                (l = this.options.formatter(this.options.value[0])),
                                this._setText(this.tooltipInner, l),
                                (this.tooltip.style[this.stylePos] = a[0] + "%"),
                                "vertical" === this.options.orientation ?
                                this._css(
                                    this.tooltip,
                                    "margin-top", -this.tooltip.offsetHeight / 2 + "px"
                                ) :
                                this._css(
                                    this.tooltip,
                                    "margin-left", -this.tooltip.offsetWidth / 2 + "px"
                                );
                        },
                        _removeProperty: function(a, b) {
                            a.style.removeProperty ?
                                a.style.removeProperty(b) :
                                a.style.removeAttribute(b);
                        },
                        _mousedown: function(a) {
                            if (!this.options.enabled) return !1;
                            (this.offset = this._offset(this.sliderElem)),
                            (this.size = this.sliderElem[this.sizePos]);
                            var b = this._getPercentage(a);
                            if (this.options.range) {
                                var c = Math.abs(this.percentage[0] - b),
                                    d = Math.abs(this.percentage[1] - b);
                                this.dragged = d > c ? 0 : 1;
                            } else this.dragged = 0;
                            (this.percentage[this.dragged] = this.options.reversed ?
                                100 - b :
                                b),
                            this._layout(),
                                this.touchCapable &&
                                (document.removeEventListener("touchmove", this.mousemove, !1),
                                    document.removeEventListener("touchend", this.mouseup, !1)),
                                this.mousemove &&
                                document.removeEventListener("mousemove", this.mousemove, !1),
                                this.mouseup &&
                                document.removeEventListener("mouseup", this.mouseup, !1),
                                (this.mousemove = this._mousemove.bind(this)),
                                (this.mouseup = this._mouseup.bind(this)),
                                this.touchCapable &&
                                (document.addEventListener("touchmove", this.mousemove, !1),
                                    document.addEventListener("touchend", this.mouseup, !1)),
                                document.addEventListener("mousemove", this.mousemove, !1),
                                document.addEventListener("mouseup", this.mouseup, !1),
                                (this.inDrag = !0);
                            var e = this._calculateValue();
                            return (
                                this._trigger("slideStart", e),
                                this._setDataVal(e),
                                this.setValue(e, !1, !0),
                                this._pauseEvent(a),
                                this.options.focus && this._triggerFocusOnHandle(this.dragged), !0
                            );
                        },
                        _triggerFocusOnHandle: function(a) {
                            0 === a && this.handle1.focus(), 1 === a && this.handle2.focus();
                        },
                        _keydown: function(a, b) {
                            if (!this.options.enabled) return !1;
                            var c;
                            switch (b.keyCode) {
                                case 37:
                                case 40:
                                    c = -1;
                                    break;
                                case 39:
                                case 38:
                                    c = 1;
                            }
                            if (c) {
                                if (this.options.natural_arrow_keys) {
                                    var d =
                                        "vertical" === this.options.orientation &&
                                        !this.options.reversed,
                                        e =
                                        "horizontal" === this.options.orientation &&
                                        this.options.reversed;
                                    (d || e) && (c = -c);
                                }
                                var f = this.options.value[a] + c * this.options.step;
                                return (
                                    this.options.range &&
                                    (f = [
                                        a ? this.options.value[0] : f,
                                        a ? f : this.options.value[1],
                                    ]),
                                    this._trigger("slideStart", f),
                                    this._setDataVal(f),
                                    this.setValue(f, !0, !0),
                                    this._trigger("slideStop", f),
                                    this._setDataVal(f),
                                    this._layout(),
                                    this._pauseEvent(b), !1
                                );
                            }
                        },
                        _pauseEvent: function(a) {
                            a.stopPropagation && a.stopPropagation(),
                                a.preventDefault && a.preventDefault(),
                                (a.cancelBubble = !0),
                                (a.returnValue = !1);
                        },
                        _mousemove: function(a) {
                            if (!this.options.enabled) return !1;
                            var b = this._getPercentage(a);
                            this._adjustPercentageForRangeSliders(b),
                                (this.percentage[this.dragged] = this.options.reversed ?
                                    100 - b :
                                    b),
                                this._layout();
                            var c = this._calculateValue(!0);
                            return this.setValue(c, !0, !0), !1;
                        },
                        _adjustPercentageForRangeSliders: function(a) {
                            if (this.options.range) {
                                var b = this._getNumDigitsAfterDecimalPlace(a);
                                b = b ? b - 1 : 0;
                                var c = this._applyToFixedAndParseFloat(a, b);
                                0 === this.dragged &&
                                    this._applyToFixedAndParseFloat(this.percentage[1], b) < c ?
                                    ((this.percentage[0] = this.percentage[1]),
                                        (this.dragged = 1)) :
                                    1 === this.dragged &&
                                    this._applyToFixedAndParseFloat(this.percentage[0], b) > c &&
                                    ((this.percentage[1] = this.percentage[0]),
                                        (this.dragged = 0));
                            }
                        },
                        _mouseup: function() {
                            if (!this.options.enabled) return !1;
                            this.touchCapable &&
                                (document.removeEventListener("touchmove", this.mousemove, !1),
                                    document.removeEventListener("touchend", this.mouseup, !1)),
                                document.removeEventListener("mousemove", this.mousemove, !1),
                                document.removeEventListener("mouseup", this.mouseup, !1),
                                (this.inDrag = !1),
                                this.over === !1 && this._hideTooltip();
                            var a = this._calculateValue(!0);
                            return (
                                this._layout(),
                                this._trigger("slideStop", a),
                                this._setDataVal(a), !1
                            );
                        },
                        _calculateValue: function(a) {
                            var b;
                            if (
                                (this.options.range ?
                                    ((b = [this.options.min, this.options.max]),
                                        0 !== this.percentage[0] &&
                                        ((b[0] = this._toValue(this.percentage[0])),
                                            (b[0] = this._applyPrecision(b[0]))),
                                        100 !== this.percentage[1] &&
                                        ((b[1] = this._toValue(this.percentage[1])),
                                            (b[1] = this._applyPrecision(b[1])))) :
                                    ((b = this._toValue(this.percentage[0])),
                                        (b = parseFloat(b)),
                                        (b = this._applyPrecision(b))),
                                    a)
                            ) {
                                for (
                                    var c = [b, 1 / 0], d = 0; d < this.options.ticks.length; d++
                                ) {
                                    var e = Math.abs(this.options.ticks[d] - b);
                                    e <= c[1] && (c = [this.options.ticks[d], e]);
                                }
                                if (c[1] <= this.options.ticks_snap_bounds) return c[0];
                            }
                            return b;
                        },
                        _applyPrecision: function(a) {
                            var b =
                                this.options.precision ||
                                this._getNumDigitsAfterDecimalPlace(this.options.step);
                            return this._applyToFixedAndParseFloat(a, b);
                        },
                        _getNumDigitsAfterDecimalPlace: function(a) {
                            var b = ("" + a).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                            return b ?
                                Math.max(0, (b[1] ? b[1].length : 0) - (b[2] ? +b[2] : 0)) :
                                0;
                        },
                        _applyToFixedAndParseFloat: function(a, b) {
                            var c = a.toFixed(b);
                            return parseFloat(c);
                        },
                        _getPercentage: function(a) {
                            !this.touchCapable ||
                                ("touchstart" !== a.type && "touchmove" !== a.type) ||
                                (a = a.touches[0]);
                            var b = a[this.mousePos],
                                c = this.offset[this.stylePos],
                                d = b - c,
                                e = (d / this.size) * 100;
                            return (
                                (e = Math.round(e / this.percentage[2]) * this.percentage[2]),
                                Math.max(0, Math.min(100, e))
                            );
                        },
                        _validateInputValue: function(a) {
                            if ("number" == typeof a) return a;
                            if (Array.isArray(a)) return this._validateArray(a), a;
                            throw new Error(d.formatInvalidInputErrorMsg(a));
                        },
                        _validateArray: function(a) {
                            for (var b = 0; b < a.length; b++) {
                                var c = a[b];
                                if ("number" != typeof c)
                                    throw new Error(d.formatInvalidInputErrorMsg(c));
                            }
                        },
                        _setDataVal: function(a) {
                            var b = "value: '" + a + "'";
                            this.element.setAttribute("data", b),
                                this.element.setAttribute("value", a),
                                (this.element.value = a);
                        },
                        _trigger: function(b, c) {
                            c = c || 0 === c ? c : void 0;
                            var d = this.eventToCallbackMap[b];
                            if (d && d.length)
                                for (var e = 0; e < d.length; e++) {
                                    var f = d[e];
                                    f(c);
                                }
                            a && this._triggerJQueryEvent(b, c);
                        },
                        _triggerJQueryEvent: function(a, b) {
                            var c = {
                                type: a,
                                value: b
                            };
                            this.$element.trigger(c), this.$sliderElem.trigger(c);
                        },
                        _unbindJQueryEventHandlers: function() {
                            this.$element.off(), this.$sliderElem.off();
                        },
                        _setText: function(a, b) {
                            "undefined" != typeof a.innerText ?
                                (a.innerText = b) :
                                "undefined" != typeof a.textContent && (a.textContent = b);
                        },
                        _removeClass: function(a, b) {
                            for (
                                var c = b.split(" "), d = a.className, e = 0; e < c.length; e++
                            ) {
                                var f = c[e],
                                    g = new RegExp("(?:\\s|^)" + f + "(?:\\s|$)");
                                d = d.replace(g, " ");
                            }
                            a.className = d.trim();
                        },
                        _addClass: function(a, b) {
                            for (
                                var c = b.split(" "), d = a.className, e = 0; e < c.length; e++
                            ) {
                                var f = c[e],
                                    g = new RegExp("(?:\\s|^)" + f + "(?:\\s|$)"),
                                    h = g.test(d);
                                h || (d += " " + f);
                            }
                            a.className = d.trim();
                        },
                        _offsetLeft: function(a) {
                            for (
                                var b = a.offsetLeft;
                                (a = a.offsetParent) && !isNaN(a.offsetLeft);

                            )
                                b += a.offsetLeft;
                            return b;
                        },
                        _offsetTop: function(a) {
                            for (
                                var b = a.offsetTop;
                                (a = a.offsetParent) && !isNaN(a.offsetTop);

                            )
                                b += a.offsetTop;
                            return b;
                        },
                        _offset: function(a) {
                            return {
                                left: this._offsetLeft(a),
                                top: this._offsetTop(a)
                            };
                        },
                        _css: function(b, c, d) {
                            if (a) a.style(b, c, d);
                            else {
                                var e = c
                                    .replace(/^-ms-/, "ms-")
                                    .replace(/-([\da-z])/gi, function(a, b) {
                                        return b.toUpperCase();
                                    });
                                b.style[e] = d;
                            }
                        },
                        _toValue: function(a) {
                            return this.options.scale.toValue.apply(this, [a]);
                        },
                        _toPercentage: function(a) {
                            return this.options.scale.toPercentage.apply(this, [a]);
                        },
                    }),
                    a)
            ) {
                var f = a.fn.slider ? "bootstrapSlider" : "slider";
                a.bridget(f, b);
            }
        })(a),
        b
    );
});

/*!
 * Retina.js v1.1.0
 *
 * Copyright 2013 Imulus, LLC
 * Released under the MIT license
 *
 * Retina.js is an open source script that makes it easy to serve
 * high-resolution images to devices with retina displays.
 */
// !function(){function t(){}function e(t,e){this.path=t,"undefined"!=typeof e&&null!==e?(this.at_2x_path=e,this.perform_check=!1):(this.at_2x_path=t.replace(/\.\w+$/,function(t){return"@2x"+t}),this.perform_check=!0)}function i(t){this.el=t,this.path=new e(this.el.getAttribute("src"),this.el.getAttribute("data-at2x"));var i=this;this.path.check_2x_variant(function(t){t&&i.swap()})}var n="undefined"==typeof exports?window:exports,a={check_mime_type:!0};n.Retina=t,t.configure=function(t){null==t&&(t={});for(var e in t)a[e]=t[e]},t.init=function(t){null==t&&(t=n);var e=t.onload||new Function;t.onload=function(){var t,n,a=document.getElementsByTagName("img"),h=[];for(t=0;t<a.length;t++)n=a[t],h.push(new i(n));e()}},t.isRetina=function(){var t="(-webkit-min-device-pixel-ratio: 1.5),                      (min--moz-device-pixel-ratio: 1.5),                      (-o-min-device-pixel-ratio: 3/2),                      (min-resolution: 1.5dppx)";return n.devicePixelRatio>1?!0:n.matchMedia&&n.matchMedia(t).matches?!0:!1},n.RetinaImagePath=e,e.confirmed_paths=[],e.prototype.is_external=function(){return!(!this.path.match(/^https?\:/i)||this.path.match("//"+document.domain))},e.prototype.check_2x_variant=function(t){var i,n=this;return this.is_external()?t(!1):this.perform_check||"undefined"==typeof this.at_2x_path||null===this.at_2x_path?this.at_2x_path in e.confirmed_paths?t(!0):(i=new XMLHttpRequest,i.open("HEAD",this.at_2x_path),i.onreadystatechange=function(){if(4!=i.readyState)return t(!1);if(i.status>=200&&i.status<=399){if(a.check_mime_type){var h=i.getResponseHeader("Content-Type");if(null==h||!h.match(/^image/i))return t(!1)}return e.confirmed_paths.push(n.at_2x_path),t(!0)}return t(!1)},i.send(),void 0):t(!0)},n.RetinaImage=i,i.prototype.swap=function(t){function e(){i.el.complete?$(i.el).is(":visible")&&(i.el.setAttribute("width",i.el.offsetWidth),i.el.setAttribute("height",i.el.offsetHeight),i.el.setAttribute("src",t)):setTimeout(e,5)}"undefined"==typeof t&&(t=this.path.at_2x_path);var i=this;e()},t.isRetina()&&t.init(n)}();

/*!
 * Bootstrap-growl v1.1.0
 *
 * Copyright (c) Nick Larson, http://github.com/ifightcrime
 * Released under the MIT license
 *
 * Pretty simple jQuery plugin that turns standard Bootstrap alerts into hovering "Growl-like" notifications.
 *
 */
(function() {
    var t;
    (t = jQuery),
    (t.bootstrapGrowl = function(e, s) {
        var a, o, l;
        switch (
            ((s = t.extend({}, t.bootstrapGrowl.default_options, s)),
                (a = t("<div>")),
                a.attr("class", "bootstrap-growl alert"),
                s.type && a.addClass("alert-" + s.type),
                s.allow_dismiss &&
                a.append(
                    '<a class="close" data-dismiss="alert" href="#">&times;</a>'
                ),
                a.append(e),
                s.top_offset && (s.offset = {
                    from: "top",
                    amount: s.top_offset
                }),
                (l = s.offset.amount),
                t(".bootstrap-growl").each(function() {
                    return (l = Math.max(
                        l,
                        parseInt(t(this).css(s.offset.from)) +
                        t(this).outerHeight() +
                        s.stackup_spacing
                    ));
                }),
                (o = {
                    position: "body" === s.ele ? "fixed" : "absolute",
                    margin: 0,
                    "z-index": "9999",
                    display: "none",
                }),
                (o[s.offset.from] = l + "px"),
                a.css(o),
                "auto" !== s.width && a.css("width", s.width + "px"),
                t(s.ele).append(a),
                s.align)
        ) {
            case "center":
                a.css({
                    left: "50%",
                    "margin-left": "-" + a.outerWidth() / 2 + "px",
                });
                break;
            case "left":
                a.css("left", "20px");
                break;
            default:
                a.css("right", "20px");
        }
        return (
            a.fadeIn(),
            s.delay > 0 &&
            a.delay(s.delay).fadeOut(function() {
                return t(this).alert("close");
            }),
            a
        );
    }),
    (t.bootstrapGrowl.default_options = {
        ele: "body",
        type: "info",
        offset: {
            from: "top",
            amount: 20
        },
        align: "right",
        width: 250,
        delay: 4e3,
        allow_dismiss: !0,
        stackup_spacing: 10,
    });
}.call(this));

/*!
 * jQuery countTo Plugin
 * https://github.com/mhuggins/jquery-countTo
 * Copyright (c) Matt Huggins; Licensed MIT
 */
!(function(t) {
    function e(t, e) {
        return t.toFixed(e.decimals);
    }
    (t.fn.countTo = function(e) {
        return (
            (e = e || {}),
            t(this).each(function() {
                function a() {
                    (s += l),
                    c++,
                    n(s),
                        "function" == typeof o.onUpdate && o.onUpdate.call(f, s),
                        c >= r &&
                        (i.removeData("countTo"),
                            clearInterval(d.interval),
                            (s = o.to),
                            "function" == typeof o.onComplete && o.onComplete.call(f, s));
                }

                function n(t) {
                    var e = o.formatter.call(f, t, o);
                    i.text(e);
                }
                var o = t.extend({},
                        t.fn.countTo.defaults, {
                            from: t(this).data("from"),
                            to: t(this).data("to"),
                            speed: t(this).data("speed"),
                            refreshInterval: t(this).data("refresh-interval"),
                            decimals: t(this).data("decimals"),
                        },
                        e
                    ),
                    r = Math.ceil(o.speed / o.refreshInterval),
                    l = (o.to - o.from) / r,
                    f = this,
                    i = t(this),
                    c = 0,
                    s = o.from,
                    d = i.data("countTo") || {};
                i.data("countTo", d),
                    d.interval && clearInterval(d.interval),
                    (d.interval = setInterval(a, o.refreshInterval)),
                    n(s);
            })
        );
    }),
    (t.fn.countTo.defaults = {
        from: 0,
        to: 0,
        speed: 1e3,
        refreshInterval: 100,
        decimals: 0,
        formatter: e,
        onUpdate: null,
        onComplete: null,
    });
})(jQuery);

/*!
 * Nestable jQuery Plugin - Copyright (c) 2012 David Bushell - http://dbushell.com/
 * Dual-licensed under the BSD or MIT licenses
 */
!(function(t, e, s, i) {
    function a(e, i) {
        (this.w = t(s)),
        (this.el = t(e)),
        (this.options = t.extend({}, n, i)),
        this.init();
    }
    var o = "ontouchstart" in s,
        l = (function() {
            var t = s.createElement("div"),
                i = s.documentElement;
            if (!("pointerEvents" in t.style)) return !1;
            (t.style.pointerEvents = "auto"),
            (t.style.pointerEvents = "x"),
            i.appendChild(t);
            var a =
                e.getComputedStyle &&
                "auto" === e.getComputedStyle(t, "").pointerEvents;
            return i.removeChild(t), !!a;
        })(),
        n = {
            listNodeName: "ol",
            itemNodeName: "li",
            rootClass: "dd",
            listClass: "dd-list",
            itemClass: "dd-item",
            dragClass: "dd-dragel",
            handleClass: "dd-handle",
            collapsedClass: "dd-collapsed",
            placeClass: "dd-placeholder",
            noDragClass: "dd-nodrag",
            emptyClass: "dd-empty",
            expandBtnHTML: '<button data-action="expand" type="button">Expand</button>',
            collapseBtnHTML: '<button data-action="collapse" type="button">Collapse</button>',
            group: 0,
            maxDepth: 5,
            threshold: 20,
        };
    (a.prototype = {
        init: function() {
            var s = this;
            s.reset(),
                s.el.data("nestable-group", this.options.group),
                (s.placeEl = t('<div class="' + s.options.placeClass + '"/>')),
                t.each(this.el.find(s.options.itemNodeName), function(e, i) {
                    s.setParent(t(i));
                }),
                s.el.on("click", "button", function(e) {
                    if (!s.dragEl) {
                        var i = t(e.currentTarget),
                            a = i.data("action"),
                            o = i.parent(s.options.itemNodeName);
                        "collapse" === a && s.collapseItem(o),
                            "expand" === a && s.expandItem(o);
                    }
                });
            var i = function(e) {
                    var i = t(e.target);
                    if (!i.hasClass(s.options.handleClass)) {
                        if (i.closest("." + s.options.noDragClass).length) return;
                        i = i.closest("." + s.options.handleClass);
                    }
                    i.length &&
                        !s.dragEl &&
                        ((s.isTouch = /^touch/.test(e.type)),
                            (s.isTouch && 1 !== e.touches.length) ||
                            (e.preventDefault(), s.dragStart(e.touches ? e.touches[0] : e)));
                },
                a = function(t) {
                    s.dragEl &&
                        (t.preventDefault(), s.dragMove(t.touches ? t.touches[0] : t));
                },
                l = function(t) {
                    s.dragEl &&
                        (t.preventDefault(), s.dragStop(t.touches ? t.touches[0] : t));
                };
            o &&
                (s.el[0].addEventListener("touchstart", i, !1),
                    e.addEventListener("touchmove", a, !1),
                    e.addEventListener("touchend", l, !1),
                    e.addEventListener("touchcancel", l, !1)),
                s.el.on("mousedown", i),
                s.w.on("mousemove", a),
                s.w.on("mouseup", l);
        },
        serialize: function() {
            var e,
                s = 0,
                i = this;
            return (
                (step = function(e, s) {
                    var a = [],
                        o = e.children(i.options.itemNodeName);
                    return (
                        o.each(function() {
                            var e = t(this),
                                o = t.extend({}, e.data()),
                                l = e.children(i.options.listNodeName);
                            l.length && (o.children = step(l, s + 1)), a.push(o);
                        }),
                        a
                    );
                }),
                (e = step(i.el.find(i.options.listNodeName).first(), s))
            );
        },
        serialise: function() {
            return this.serialize();
        },
        reset: function() {
            (this.mouse = {
                offsetX: 0,
                offsetY: 0,
                startX: 0,
                startY: 0,
                lastX: 0,
                lastY: 0,
                nowX: 0,
                nowY: 0,
                distX: 0,
                distY: 0,
                dirAx: 0,
                dirX: 0,
                dirY: 0,
                lastDirX: 0,
                lastDirY: 0,
                distAxX: 0,
                distAxY: 0,
            }),
            (this.isTouch = !1),
            (this.moving = !1),
            (this.dragEl = null),
            (this.dragRootEl = null),
            (this.dragDepth = 0),
            (this.hasNewRoot = !1),
            (this.pointEl = null);
        },
        expandItem: function(t) {
            t.removeClass(this.options.collapsedClass),
                t.children('[data-action="expand"]').hide(),
                t.children('[data-action="collapse"]').show(),
                t.children(this.options.listNodeName).show();
        },
        collapseItem: function(t) {
            var e = t.children(this.options.listNodeName);
            e.length &&
                (t.addClass(this.options.collapsedClass),
                    t.children('[data-action="collapse"]').hide(),
                    t.children('[data-action="expand"]').show(),
                    t.children(this.options.listNodeName).hide());
        },
        expandAll: function() {
            var e = this;
            e.el.find(e.options.itemNodeName).each(function() {
                e.expandItem(t(this));
            });
        },
        collapseAll: function() {
            var e = this;
            e.el.find(e.options.itemNodeName).each(function() {
                e.collapseItem(t(this));
            });
        },
        setParent: function(e) {
            e.children(this.options.listNodeName).length &&
                (e.prepend(t(this.options.expandBtnHTML)),
                    e.prepend(t(this.options.collapseBtnHTML))),
                e.children('[data-action="expand"]').hide();
        },
        unsetParent: function(t) {
            t.removeClass(this.options.collapsedClass),
                t.children("[data-action]").remove(),
                t.children(this.options.listNodeName).remove();
        },
        dragStart: function(e) {
            var a = this.mouse,
                o = t(e.target),
                l = o.closest(this.options.itemNodeName);
            this.placeEl.css("height", l.height()),
                (a.offsetX = e.offsetX !== i ? e.offsetX : e.pageX - o.offset().left),
                (a.offsetY = e.offsetY !== i ? e.offsetY : e.pageY - o.offset().top),
                (a.startX = a.lastX = e.pageX),
                (a.startY = a.lastY = e.pageY),
                (this.dragRootEl = this.el),
                (this.dragEl = t(s.createElement(this.options.listNodeName)).addClass(
                    this.options.listClass + " " + this.options.dragClass
                )),
                this.dragEl.css("width", l.width()),
                l.after(this.placeEl),
                l[0].parentNode.removeChild(l[0]),
                l.appendTo(this.dragEl),
                t(s.body).append(this.dragEl),
                this.dragEl.css({
                    left: e.pageX - a.offsetX,
                    top: e.pageY - a.offsetY,
                });
            var n,
                d,
                h = this.dragEl.find(this.options.itemNodeName);
            for (n = 0; n < h.length; n++)
                (d = t(h[n]).parents(this.options.listNodeName).length),
                d > this.dragDepth && (this.dragDepth = d);
        },
        dragStop: function() {
            var t = this.dragEl.children(this.options.itemNodeName).first();
            t[0].parentNode.removeChild(t[0]),
                this.placeEl.replaceWith(t),
                this.dragEl.remove(),
                this.el.trigger("change"),
                this.hasNewRoot && this.dragRootEl.trigger("change"),
                this.reset();
        },
        dragMove: function(i) {
            var a,
                o,
                n,
                d,
                h,
                r = this.options,
                p = this.mouse;
            this.dragEl.css({
                    left: i.pageX - p.offsetX,
                    top: i.pageY - p.offsetY
                }),
                (p.lastX = p.nowX),
                (p.lastY = p.nowY),
                (p.nowX = i.pageX),
                (p.nowY = i.pageY),
                (p.distX = p.nowX - p.lastX),
                (p.distY = p.nowY - p.lastY),
                (p.lastDirX = p.dirX),
                (p.lastDirY = p.dirY),
                (p.dirX = 0 === p.distX ? 0 : p.distX > 0 ? 1 : -1),
                (p.dirY = 0 === p.distY ? 0 : p.distY > 0 ? 1 : -1);
            var c = Math.abs(p.distX) > Math.abs(p.distY) ? 1 : 0;
            if (!p.moving) return (p.dirAx = c), void(p.moving = !0);
            p.dirAx !== c ?
                ((p.distAxX = 0), (p.distAxY = 0)) :
                ((p.distAxX += Math.abs(p.distX)),
                    0 !== p.dirX && p.dirX !== p.lastDirX && (p.distAxX = 0),
                    (p.distAxY += Math.abs(p.distY)),
                    0 !== p.dirY && p.dirY !== p.lastDirY && (p.distAxY = 0)),
                (p.dirAx = c),
                p.dirAx &&
                p.distAxX >= r.threshold &&
                ((p.distAxX = 0),
                    (n = this.placeEl.prev(r.itemNodeName)),
                    p.distX > 0 &&
                    n.length &&
                    !n.hasClass(r.collapsedClass) &&
                    ((a = n.find(r.listNodeName).last()),
                        (h = this.placeEl.parents(r.listNodeName).length),
                        h + this.dragDepth <= r.maxDepth &&
                        (a.length ?
                            ((a = n.children(r.listNodeName).last()),
                                a.append(this.placeEl)) :
                            ((a = t("<" + r.listNodeName + "/>").addClass(r.listClass)),
                                a.append(this.placeEl),
                                n.append(a),
                                this.setParent(n)))),
                    p.distX < 0 &&
                    ((d = this.placeEl.next(r.itemNodeName)),
                        d.length ||
                        ((o = this.placeEl.parent()),
                            this.placeEl.closest(r.itemNodeName).after(this.placeEl),
                            o.children().length || this.unsetParent(o.parent()))));
            var g = !1;
            if (
                (l || (this.dragEl[0].style.visibility = "hidden"),
                    (this.pointEl = t(
                        s.elementFromPoint(
                            i.pageX - s.body.scrollLeft,
                            i.pageY - (e.pageYOffset || s.documentElement.scrollTop)
                        )
                    )),
                    l || (this.dragEl[0].style.visibility = "visible"),
                    this.pointEl.hasClass(r.handleClass) &&
                    (this.pointEl = this.pointEl.parent(r.itemNodeName)),
                    this.pointEl.hasClass(r.emptyClass))
            )
                g = !0;
            else if (!this.pointEl.length || !this.pointEl.hasClass(r.itemClass))
                return;
            var f = this.pointEl.closest("." + r.rootClass),
                u = this.dragRootEl.data("nestable-id") !== f.data("nestable-id");
            if (!p.dirAx || u || g) {
                if (u && r.group !== f.data("nestable-group")) return;
                if (
                    ((h =
                            this.dragDepth - 1 + this.pointEl.parents(r.listNodeName).length),
                        h > r.maxDepth)
                )
                    return;
                var m = i.pageY < this.pointEl.offset().top + this.pointEl.height() / 2;
                (o = this.placeEl.parent()),
                g
                    ?
                    ((a = t(s.createElement(r.listNodeName)).addClass(r.listClass)),
                        a.append(this.placeEl),
                        this.pointEl.replaceWith(a)) :
                    m ?
                    this.pointEl.before(this.placeEl) :
                    this.pointEl.after(this.placeEl),
                    o.children().length || this.unsetParent(o.parent()),
                    this.dragRootEl.find(r.itemNodeName).length ||
                    this.dragRootEl.append('<div class="' + r.emptyClass + '"/>'),
                    u &&
                    ((this.dragRootEl = f),
                        (this.hasNewRoot = this.el[0] !== this.dragRootEl[0]));
            }
        },
    }),
    (t.fn.nestable = function(e) {
        var s = this,
            i = this;
        return (
            s.each(function() {
                var s = t(this).data("nestable");
                s
                    ?
                    "string" == typeof e && "function" == typeof s[e] && (i = s[e]()) :
                    (t(this).data("nestable", new a(this, e)),
                        t(this).data("nestable-id", new Date().getTime()));
            }),
            i || s
        );
    });
})(window.jQuery || window.Zepto, window, document);

/*! Select2 4.0.0 | https://github.com/select2/select2/blob/master/LICENSE.md */
!(function(
    a
) {
    "function" == typeof define && define.amd ?
        define(["jquery"], a) :
        a("object" == typeof exports ? require("jquery") : jQuery);
})(function(a) {
    var b = (function() {
            if (a && a.fn && a.fn.select2 && a.fn.select2.amd)
                var b = a.fn.select2.amd;
            var b;
            return (
                (function() {
                    if (!b || !b.requirejs) {
                        b ? (c = b) : (b = {});
                        var a, c, d;
                        !(function(b) {
                            function e(a, b) {
                                return u.call(a, b);
                            }

                            function f(a, b) {
                                var c,
                                    d,
                                    e,
                                    f,
                                    g,
                                    h,
                                    i,
                                    j,
                                    k,
                                    l,
                                    m,
                                    n = b && b.split("/"),
                                    o = s.map,
                                    p = (o && o["*"]) || {};
                                if (a && "." === a.charAt(0))
                                    if (b) {
                                        for (
                                            n = n.slice(0, n.length - 1),
                                            a = a.split("/"),
                                            g = a.length - 1,
                                            s.nodeIdCompat &&
                                            w.test(a[g]) &&
                                            (a[g] = a[g].replace(w, "")),
                                            a = n.concat(a),
                                            k = 0; k < a.length; k += 1
                                        )
                                            if (((m = a[k]), "." === m)) a.splice(k, 1), (k -= 1);
                                            else if (".." === m) {
                                            if (1 === k && (".." === a[2] || ".." === a[0])) break;
                                            k > 0 && (a.splice(k - 1, 2), (k -= 2));
                                        }
                                        a = a.join("/");
                                    } else 0 === a.indexOf("./") && (a = a.substring(2));
                                if ((n || p) && o) {
                                    for (c = a.split("/"), k = c.length; k > 0; k -= 1) {
                                        if (((d = c.slice(0, k).join("/")), n))
                                            for (l = n.length; l > 0; l -= 1)
                                                if (
                                                    ((e = o[n.slice(0, l).join("/")]), e && (e = e[d]))
                                                ) {
                                                    (f = e), (h = k);
                                                    break;
                                                }
                                        if (f) break;
                                        !i && p && p[d] && ((i = p[d]), (j = k));
                                    }!f && i && ((f = i), (h = j)),
                                        f && (c.splice(0, h, f), (a = c.join("/")));
                                }
                                return a;
                            }

                            function g(a, c) {
                                return function() {
                                    return n.apply(b, v.call(arguments, 0).concat([a, c]));
                                };
                            }

                            function h(a) {
                                return function(b) {
                                    return f(b, a);
                                };
                            }

                            function i(a) {
                                return function(b) {
                                    q[a] = b;
                                };
                            }

                            function j(a) {
                                if (e(r, a)) {
                                    var c = r[a];
                                    delete r[a], (t[a] = !0), m.apply(b, c);
                                }
                                if (!e(q, a) && !e(t, a)) throw new Error("No " + a);
                                return q[a];
                            }

                            function k(a) {
                                var b,
                                    c = a ? a.indexOf("!") : -1;
                                return (
                                    c > -1 &&
                                    ((b = a.substring(0, c)),
                                        (a = a.substring(c + 1, a.length))), [b, a]
                                );
                            }

                            function l(a) {
                                return function() {
                                    return (s && s.config && s.config[a]) || {};
                                };
                            }
                            var m,
                                n,
                                o,
                                p,
                                q = {},
                                r = {},
                                s = {},
                                t = {},
                                u = Object.prototype.hasOwnProperty,
                                v = [].slice,
                                w = /\.js$/;
                            (o = function(a, b) {
                                var c,
                                    d = k(a),
                                    e = d[0];
                                return (
                                    (a = d[1]),
                                    e && ((e = f(e, b)), (c = j(e))),
                                    e ?
                                    (a = c && c.normalize ? c.normalize(a, h(b)) : f(a, b)) :
                                    ((a = f(a, b)),
                                        (d = k(a)),
                                        (e = d[0]),
                                        (a = d[1]),
                                        e && (c = j(e))), {
                                        f: e ? e + "!" + a : a,
                                        n: a,
                                        pr: e,
                                        p: c
                                    }
                                );
                            }),
                            (p = {
                                require: function(a) {
                                    return g(a);
                                },
                                exports: function(a) {
                                    var b = q[a];
                                    return "undefined" != typeof b ? b : (q[a] = {});
                                },
                                module: function(a) {
                                    return {
                                        id: a,
                                        uri: "",
                                        exports: q[a],
                                        config: l(a)
                                    };
                                },
                            }),
                            (m = function(a, c, d, f) {
                                var h,
                                    k,
                                    l,
                                    m,
                                    n,
                                    s,
                                    u = [],
                                    v = typeof d;
                                if (((f = f || a), "undefined" === v || "function" === v)) {
                                    for (
                                        c = !c.length && d.length ?
                                        ["require", "exports", "module"] :
                                        c,
                                        n = 0; n < c.length; n += 1
                                    )
                                        if (((m = o(c[n], f)), (k = m.f), "require" === k))
                                            u[n] = p.require(a);
                                        else if ("exports" === k)(u[n] = p.exports(a)), (s = !0);
                                    else if ("module" === k) h = u[n] = p.module(a);
                                    else if (e(q, k) || e(r, k) || e(t, k)) u[n] = j(k);
                                    else {
                                        if (!m.p) throw new Error(a + " missing " + k);
                                        m.p.load(m.n, g(f, !0), i(k), {}), (u[n] = q[k]);
                                    }
                                    (l = d ? d.apply(q[a], u) : void 0),
                                    a &&
                                        (h && h.exports !== b && h.exports !== q[a] ?
                                            (q[a] = h.exports) :
                                            (l === b && s) || (q[a] = l));
                                } else a && (q[a] = d);
                            }),
                            (a =
                                c =
                                n =
                                function(a, c, d, e, f) {
                                    if ("string" == typeof a)
                                        return p[a] ? p[a](c) : j(o(a, c).f);
                                    if (!a.splice) {
                                        if (((s = a), s.deps && n(s.deps, s.callback), !c))
                                            return;
                                        c.splice ? ((a = c), (c = d), (d = null)) : (a = b);
                                    }
                                    return (
                                        (c = c || function() {}),
                                        "function" == typeof d && ((d = e), (e = f)),
                                        e ?
                                        m(b, a, c, d) :
                                        setTimeout(function() {
                                            m(b, a, c, d);
                                        }, 4),
                                        n
                                    );
                                }),
                            (n.config = function(a) {
                                return n(a);
                            }),
                            (a._defined = q),
                            (d = function(a, b, c) {
                                b.splice || ((c = b), (b = [])),
                                    e(q, a) || e(r, a) || (r[a] = [a, b, c]);
                            }),
                            (d.amd = {
                                jQuery: !0
                            });
                        })(),
                        (b.requirejs = a),
                        (b.require = c),
                        (b.define = d);
                    }
                })(),
                b.define("almond", function() {}),
                b.define("jquery", [], function() {
                    var b = a || $;
                    return (
                        null == b &&
                        console &&
                        console.error &&
                        console.error(
                            "Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."
                        ),
                        b
                    );
                }),
                b.define("select2/utils", ["jquery"], function(a) {
                    function b(a) {
                        var b = a.prototype,
                            c = [];
                        for (var d in b) {
                            var e = b[d];
                            "function" == typeof e && "constructor" !== d && c.push(d);
                        }
                        return c;
                    }
                    var c = {};
                    (c.Extend = function(a, b) {
                        function c() {
                            this.constructor = a;
                        }
                        var d = {}.hasOwnProperty;
                        for (var e in b) d.call(b, e) && (a[e] = b[e]);
                        return (
                            (c.prototype = b.prototype),
                            (a.prototype = new c()),
                            (a.__super__ = b.prototype),
                            a
                        );
                    }),
                    (c.Decorate = function(a, c) {
                        function d() {
                            var b = Array.prototype.unshift,
                                d = c.prototype.constructor.length,
                                e = a.prototype.constructor;
                            d > 0 &&
                                (b.call(arguments, a.prototype.constructor),
                                    (e = c.prototype.constructor)),
                                e.apply(this, arguments);
                        }

                        function e() {
                            this.constructor = d;
                        }
                        var f = b(c),
                            g = b(a);
                        (c.displayName = a.displayName), (d.prototype = new e());
                        for (var h = 0; h < g.length; h++) {
                            var i = g[h];
                            d.prototype[i] = a.prototype[i];
                        }
                        for (
                            var j = function(a) {
                                    var b = function() {};
                                    (a in d.prototype) && (b = d.prototype[a]);
                                    var e = c.prototype[a];
                                    return function() {
                                        var a = Array.prototype.unshift;
                                        return a.call(arguments, b), e.apply(this, arguments);
                                    };
                                },
                                k = 0; k < f.length; k++
                        ) {
                            var l = f[k];
                            d.prototype[l] = j(l);
                        }
                        return d;
                    });
                    var d = function() {
                        this.listeners = {};
                    };
                    return (
                        (d.prototype.on = function(a, b) {
                            (this.listeners = this.listeners || {}),
                            a in this.listeners ?
                                this.listeners[a].push(b) :
                                (this.listeners[a] = [b]);
                        }),
                        (d.prototype.trigger = function(a) {
                            var b = Array.prototype.slice;
                            (this.listeners = this.listeners || {}),
                            a in this.listeners &&
                                this.invoke(this.listeners[a], b.call(arguments, 1)),
                                "*" in this.listeners &&
                                this.invoke(this.listeners["*"], arguments);
                        }),
                        (d.prototype.invoke = function(a, b) {
                            for (var c = 0, d = a.length; d > c; c++) a[c].apply(this, b);
                        }),
                        (c.Observable = d),
                        (c.generateChars = function(a) {
                            for (var b = "", c = 0; a > c; c++) {
                                var d = Math.floor(36 * Math.random());
                                b += d.toString(36);
                            }
                            return b;
                        }),
                        (c.bind = function(a, b) {
                            return function() {
                                a.apply(b, arguments);
                            };
                        }),
                        (c._convertData = function(a) {
                            for (var b in a) {
                                var c = b.split("-"),
                                    d = a;
                                if (1 !== c.length) {
                                    for (var e = 0; e < c.length; e++) {
                                        var f = c[e];
                                        (f = f.substring(0, 1).toLowerCase() + f.substring(1)),
                                        f in d || (d[f] = {}),
                                            e == c.length - 1 && (d[f] = a[b]),
                                            (d = d[f]);
                                    }
                                    delete a[b];
                                }
                            }
                            return a;
                        }),
                        (c.hasScroll = function(b, c) {
                            var d = a(c),
                                e = c.style.overflowX,
                                f = c.style.overflowY;
                            return e !== f || ("hidden" !== f && "visible" !== f) ?
                                "scroll" === e || "scroll" === f ?
                                !0 :
                                d.innerHeight() < c.scrollHeight ||
                                d.innerWidth() < c.scrollWidth :
                                !1;
                        }),
                        (c.escapeMarkup = function(a) {
                            var b = {
                                "\\": "&#92;",
                                "&": "&amp;",
                                "<": "&lt;",
                                ">": "&gt;",
                                '"': "&quot;",
                                "'": "&#39;",
                                "/": "&#47;",
                            };
                            return "string" != typeof a ?
                                a :
                                String(a).replace(/[&<>"'\/\\]/g, function(a) {
                                    return b[a];
                                });
                        }),
                        (c.appendMany = function(b, c) {
                            if ("1.7" === a.fn.jquery.substr(0, 3)) {
                                var d = a();
                                a.map(c, function(a) {
                                        d = d.add(a);
                                    }),
                                    (c = d);
                            }
                            b.append(c);
                        }),
                        c
                    );
                }),
                b.define("select2/results", ["jquery", "./utils"], function(a, b) {
                    function c(a, b, d) {
                        (this.$element = a),
                        (this.data = d),
                        (this.options = b),
                        c.__super__.constructor.call(this);
                    }
                    return (
                        b.Extend(c, b.Observable),
                        (c.prototype.render = function() {
                            var b = a(
                                '<ul class="select2-results__options" role="tree"></ul>'
                            );
                            return (
                                this.options.get("multiple") &&
                                b.attr("aria-multiselectable", "true"),
                                (this.$results = b),
                                b
                            );
                        }),
                        (c.prototype.clear = function() {
                            this.$results.empty();
                        }),
                        (c.prototype.displayMessage = function(b) {
                            var c = this.options.get("escapeMarkup");
                            this.clear(), this.hideLoading();
                            var d = a(
                                    '<li role="treeitem" class="select2-results__option"></li>'
                                ),
                                e = this.options.get("translations").get(b.message);
                            d.append(c(e(b.args))), this.$results.append(d);
                        }),
                        (c.prototype.append = function(a) {
                            this.hideLoading();
                            var b = [];
                            if (null == a.results || 0 === a.results.length)
                                return void(
                                    0 === this.$results.children().length &&
                                    this.trigger("results:message", {
                                        message: "noResults"
                                    })
                                );
                            a.results = this.sort(a.results);
                            for (var c = 0; c < a.results.length; c++) {
                                var d = a.results[c],
                                    e = this.option(d);
                                b.push(e);
                            }
                            this.$results.append(b);
                        }),
                        (c.prototype.position = function(a, b) {
                            var c = b.find(".select2-results");
                            c.append(a);
                        }),
                        (c.prototype.sort = function(a) {
                            var b = this.options.get("sorter");
                            return b(a);
                        }),
                        (c.prototype.setClasses = function() {
                            var b = this;
                            this.data.current(function(c) {
                                var d = a.map(c, function(a) {
                                        return a.id.toString();
                                    }),
                                    e = b.$results.find(
                                        ".select2-results__option[aria-selected]"
                                    );
                                e.each(function() {
                                    var b = a(this),
                                        c = a.data(this, "data"),
                                        e = "" + c.id;
                                    (null != c.element && c.element.selected) ||
                                    (null == c.element && a.inArray(e, d) > -1) ?
                                    b.attr("aria-selected", "true"): b.attr("aria-selected", "false");
                                });
                                var f = e.filter("[aria-selected=true]");
                                f.length > 0 ?
                                    f.first().trigger("mouseenter") :
                                    e.first().trigger("mouseenter");
                            });
                        }),
                        (c.prototype.showLoading = function(a) {
                            this.hideLoading();
                            var b = this.options.get("translations").get("searching"),
                                c = {
                                    disabled: !0,
                                    loading: !0,
                                    text: b(a)
                                },
                                d = this.option(c);
                            (d.className += " loading-results"), this.$results.prepend(d);
                        }),
                        (c.prototype.hideLoading = function() {
                            this.$results.find(".loading-results").remove();
                        }),
                        (c.prototype.option = function(b) {
                            var c = document.createElement("li");
                            c.className = "select2-results__option";
                            var d = {
                                role: "treeitem",
                                "aria-selected": "false"
                            };
                            b.disabled &&
                                (delete d["aria-selected"], (d["aria-disabled"] = "true")),
                                null == b.id && delete d["aria-selected"],
                                null != b._resultId && (c.id = b._resultId),
                                b.title && (c.title = b.title),
                                b.children &&
                                ((d.role = "group"),
                                    (d["aria-label"] = b.text),
                                    delete d["aria-selected"]);
                            for (var e in d) {
                                var f = d[e];
                                c.setAttribute(e, f);
                            }
                            if (b.children) {
                                var g = a(c),
                                    h = document.createElement("strong");
                                h.className = "select2-results__group"; {
                                    a(h);
                                }
                                this.template(b, h);
                                for (var i = [], j = 0; j < b.children.length; j++) {
                                    var k = b.children[j],
                                        l = this.option(k);
                                    i.push(l);
                                }
                                var m = a("<ul></ul>", {
                                    class: "select2-results__options select2-results__options--nested",
                                });
                                m.append(i), g.append(h), g.append(m);
                            } else this.template(b, c);
                            return a.data(c, "data", b), c;
                        }),
                        (c.prototype.bind = function(b) {
                            var c = this,
                                d = b.id + "-results";
                            this.$results.attr("id", d),
                                b.on("results:all", function(a) {
                                    c.clear(), c.append(a.data), b.isOpen() && c.setClasses();
                                }),
                                b.on("results:append", function(a) {
                                    c.append(a.data), b.isOpen() && c.setClasses();
                                }),
                                b.on("query", function(a) {
                                    c.showLoading(a);
                                }),
                                b.on("select", function() {
                                    b.isOpen() && c.setClasses();
                                }),
                                b.on("unselect", function() {
                                    b.isOpen() && c.setClasses();
                                }),
                                b.on("open", function() {
                                    c.$results.attr("aria-expanded", "true"),
                                        c.$results.attr("aria-hidden", "false"),
                                        c.setClasses(),
                                        c.ensureHighlightVisible();
                                }),
                                b.on("close", function() {
                                    c.$results.attr("aria-expanded", "false"),
                                        c.$results.attr("aria-hidden", "true"),
                                        c.$results.removeAttr("aria-activedescendant");
                                }),
                                b.on("results:toggle", function() {
                                    var a = c.getHighlightedResults();
                                    0 !== a.length && a.trigger("mouseup");
                                }),
                                b.on("results:select", function() {
                                    var a = c.getHighlightedResults();
                                    if (0 !== a.length) {
                                        var b = a.data("data");
                                        "true" == a.attr("aria-selected") ?
                                            c.trigger("close") :
                                            c.trigger("select", {
                                                data: b
                                            });
                                    }
                                }),
                                b.on("results:previous", function() {
                                    var a = c.getHighlightedResults(),
                                        b = c.$results.find("[aria-selected]"),
                                        d = b.index(a);
                                    if (0 !== d) {
                                        var e = d - 1;
                                        0 === a.length && (e = 0);
                                        var f = b.eq(e);
                                        f.trigger("mouseenter");
                                        var g = c.$results.offset().top,
                                            h = f.offset().top,
                                            i = c.$results.scrollTop() + (h - g);
                                        0 === e ?
                                            c.$results.scrollTop(0) :
                                            0 > h - g && c.$results.scrollTop(i);
                                    }
                                }),
                                b.on("results:next", function() {
                                    var a = c.getHighlightedResults(),
                                        b = c.$results.find("[aria-selected]"),
                                        d = b.index(a),
                                        e = d + 1;
                                    if (!(e >= b.length)) {
                                        var f = b.eq(e);
                                        f.trigger("mouseenter");
                                        var g =
                                            c.$results.offset().top + c.$results.outerHeight(!1),
                                            h = f.offset().top + f.outerHeight(!1),
                                            i = c.$results.scrollTop() + h - g;
                                        0 === e ?
                                            c.$results.scrollTop(0) :
                                            h > g && c.$results.scrollTop(i);
                                    }
                                }),
                                b.on("results:focus", function(a) {
                                    a.element.addClass("select2-results__option--highlighted");
                                }),
                                b.on("results:message", function(a) {
                                    c.displayMessage(a);
                                }),
                                a.fn.mousewheel &&
                                this.$results.on("mousewheel", function(a) {
                                    var b = c.$results.scrollTop(),
                                        d =
                                        c.$results.get(0).scrollHeight -
                                        c.$results.scrollTop() +
                                        a.deltaY,
                                        e = a.deltaY > 0 && b - a.deltaY <= 0,
                                        f = a.deltaY < 0 && d <= c.$results.height();
                                    e
                                        ?
                                        (c.$results.scrollTop(0),
                                            a.preventDefault(),
                                            a.stopPropagation()) :
                                        f &&
                                        (c.$results.scrollTop(
                                                c.$results.get(0).scrollHeight - c.$results.height()
                                            ),
                                            a.preventDefault(),
                                            a.stopPropagation());
                                }),
                                this.$results.on(
                                    "mouseup",
                                    ".select2-results__option[aria-selected]",
                                    function(b) {
                                        var d = a(this),
                                            e = d.data("data");
                                        return "true" === d.attr("aria-selected") ?
                                            void(c.options.get("multiple") ?
                                                c.trigger("unselect", {
                                                    originalEvent: b,
                                                    data: e
                                                }) :
                                                c.trigger("close")) :
                                            void c.trigger("select", {
                                                originalEvent: b,
                                                data: e
                                            });
                                    }
                                ),
                                this.$results.on(
                                    "mouseenter",
                                    ".select2-results__option[aria-selected]",
                                    function() {
                                        var b = a(this).data("data");
                                        c
                                            .getHighlightedResults()
                                            .removeClass("select2-results__option--highlighted"),
                                            c.trigger("results:focus", {
                                                data: b,
                                                element: a(this)
                                            });
                                    }
                                );
                        }),
                        (c.prototype.getHighlightedResults = function() {
                            var a = this.$results.find(
                                ".select2-results__option--highlighted"
                            );
                            return a;
                        }),
                        (c.prototype.destroy = function() {
                            this.$results.remove();
                        }),
                        (c.prototype.ensureHighlightVisible = function() {
                            var a = this.getHighlightedResults();
                            if (0 !== a.length) {
                                var b = this.$results.find("[aria-selected]"),
                                    c = b.index(a),
                                    d = this.$results.offset().top,
                                    e = a.offset().top,
                                    f = this.$results.scrollTop() + (e - d),
                                    g = e - d;
                                (f -= 2 * a.outerHeight(!1)),
                                2 >= c ?
                                    this.$results.scrollTop(0) :
                                    (g > this.$results.outerHeight() || 0 > g) &&
                                    this.$results.scrollTop(f);
                            }
                        }),
                        (c.prototype.template = function(b, c) {
                            var d = this.options.get("templateResult"),
                                e = this.options.get("escapeMarkup"),
                                f = d(b);
                            null == f ?
                                (c.style.display = "none") :
                                "string" == typeof f ?
                                (c.innerHTML = e(f)) :
                                a(c).append(f);
                        }),
                        c
                    );
                }),
                b.define("select2/keys", [], function() {
                    var a = {
                        BACKSPACE: 8,
                        TAB: 9,
                        ENTER: 13,
                        SHIFT: 16,
                        CTRL: 17,
                        ALT: 18,
                        ESC: 27,
                        SPACE: 32,
                        PAGE_UP: 33,
                        PAGE_DOWN: 34,
                        END: 35,
                        HOME: 36,
                        LEFT: 37,
                        UP: 38,
                        RIGHT: 39,
                        DOWN: 40,
                        DELETE: 46,
                    };
                    return a;
                }),
                b.define(
                    "select2/selection/base", ["jquery", "../utils", "../keys"],
                    function(a, b, c) {
                        function d(a, b) {
                            (this.$element = a),
                            (this.options = b),
                            d.__super__.constructor.call(this);
                        }
                        return (
                            b.Extend(d, b.Observable),
                            (d.prototype.render = function() {
                                var b = a(
                                    '<span class="select2-selection" role="combobox" aria-autocomplete="list" aria-haspopup="true" aria-expanded="false"></span>'
                                );
                                return (
                                    (this._tabindex = 0),
                                    null != this.$element.data("old-tabindex") ?
                                    (this._tabindex = this.$element.data("old-tabindex")) :
                                    null != this.$element.attr("tabindex") &&
                                    (this._tabindex = this.$element.attr("tabindex")),
                                    b.attr("title", this.$element.attr("title")),
                                    b.attr("tabindex", this._tabindex),
                                    (this.$selection = b),
                                    b
                                );
                            }),
                            (d.prototype.bind = function(a) {
                                var b = this,
                                    d = (a.id + "-container", a.id + "-results");
                                (this.container = a),
                                this.$selection.on("focus", function(a) {
                                        b.trigger("focus", a);
                                    }),
                                    this.$selection.on("blur", function(a) {
                                        b._handleBlur(a);
                                    }),
                                    this.$selection.on("keydown", function(a) {
                                        b.trigger("keypress", a),
                                            a.which === c.SPACE && a.preventDefault();
                                    }),
                                    a.on("results:focus", function(a) {
                                        b.$selection.attr(
                                            "aria-activedescendant",
                                            a.data._resultId
                                        );
                                    }),
                                    a.on("selection:update", function(a) {
                                        b.update(a.data);
                                    }),
                                    a.on("open", function() {
                                        b.$selection.attr("aria-expanded", "true"),
                                            b.$selection.attr("aria-owns", d),
                                            b._attachCloseHandler(a);
                                    }),
                                    a.on("close", function() {
                                        b.$selection.attr("aria-expanded", "false"),
                                            b.$selection.removeAttr("aria-activedescendant"),
                                            b.$selection.removeAttr("aria-owns"),
                                            b.$selection.focus(),
                                            b._detachCloseHandler(a);
                                    }),
                                    a.on("enable", function() {
                                        b.$selection.attr("tabindex", b._tabindex);
                                    }),
                                    a.on("disable", function() {
                                        b.$selection.attr("tabindex", "-1");
                                    });
                            }),
                            (d.prototype._handleBlur = function(b) {
                                var c = this;
                                window.setTimeout(function() {
                                    document.activeElement == c.$selection[0] ||
                                        a.contains(c.$selection[0], document.activeElement) ||
                                        c.trigger("blur", b);
                                }, 1);
                            }),
                            (d.prototype._attachCloseHandler = function(b) {
                                a(document.body).on("mousedown.select2." + b.id, function(b) {
                                    var c = a(b.target),
                                        d = c.closest(".select2"),
                                        e = a(".select2.select2-container--open");
                                    e.each(function() {
                                        var b = a(this);
                                        if (this != d[0]) {
                                            var c = b.data("element");
                                            c.select2("close");
                                        }
                                    });
                                });
                            }),
                            (d.prototype._detachCloseHandler = function(b) {
                                a(document.body).off("mousedown.select2." + b.id);
                            }),
                            (d.prototype.position = function(a, b) {
                                var c = b.find(".selection");
                                c.append(a);
                            }),
                            (d.prototype.destroy = function() {
                                this._detachCloseHandler(this.container);
                            }),
                            (d.prototype.update = function() {
                                throw new Error(
                                    "The `update` method must be defined in child classes."
                                );
                            }),
                            d
                        );
                    }
                ),
                b.define(
                    "select2/selection/single", ["jquery", "./base", "../utils", "../keys"],
                    function(a, b, c) {
                        function d() {
                            d.__super__.constructor.apply(this, arguments);
                        }
                        return (
                            c.Extend(d, b),
                            (d.prototype.render = function() {
                                var a = d.__super__.render.call(this);
                                return (
                                    a.addClass("select2-selection--single"),
                                    a.html(
                                        '<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'
                                    ),
                                    a
                                );
                            }),
                            (d.prototype.bind = function(a) {
                                var b = this;
                                d.__super__.bind.apply(this, arguments);
                                var c = a.id + "-container";
                                this.$selection
                                    .find(".select2-selection__rendered")
                                    .attr("id", c),
                                    this.$selection.attr("aria-labelledby", c),
                                    this.$selection.on("mousedown", function(a) {
                                        1 === a.which && b.trigger("toggle", {
                                            originalEvent: a
                                        });
                                    }),
                                    this.$selection.on("focus", function() {}),
                                    this.$selection.on("blur", function() {}),
                                    a.on("selection:update", function(a) {
                                        b.update(a.data);
                                    });
                            }),
                            (d.prototype.clear = function() {
                                this.$selection.find(".select2-selection__rendered").empty();
                            }),
                            (d.prototype.display = function(a, b) {
                                var c = this.options.get("templateSelection"),
                                    d = this.options.get("escapeMarkup");
                                return d(c(a, b));
                            }),
                            (d.prototype.selectionContainer = function() {
                                return a("<span></span>");
                            }),
                            (d.prototype.update = function(a) {
                                if (0 === a.length) return void this.clear();
                                var b = a[0],
                                    c = this.$selection.find(".select2-selection__rendered"),
                                    d = this.display(b, c);
                                c.empty().append(d), c.prop("title", b.title || b.text);
                            }),
                            d
                        );
                    }
                ),
                b.define(
                    "select2/selection/multiple", ["jquery", "./base", "../utils"],
                    function(a, b, c) {
                        function d() {
                            d.__super__.constructor.apply(this, arguments);
                        }
                        return (
                            c.Extend(d, b),
                            (d.prototype.render = function() {
                                var a = d.__super__.render.call(this);
                                return (
                                    a.addClass("select2-selection--multiple"),
                                    a.html('<ul class="select2-selection__rendered"></ul>'),
                                    a
                                );
                            }),
                            (d.prototype.bind = function() {
                                var b = this;
                                d.__super__.bind.apply(this, arguments),
                                    this.$selection.on("click", function(a) {
                                        b.trigger("toggle", {
                                            originalEvent: a
                                        });
                                    }),
                                    this.$selection.on(
                                        "click",
                                        ".select2-selection__choice__remove",
                                        function(c) {
                                            var d = a(this),
                                                e = d.parent(),
                                                f = e.data("data");
                                            b.trigger("unselect", {
                                                originalEvent: c,
                                                data: f
                                            });
                                        }
                                    );
                            }),
                            (d.prototype.clear = function() {
                                this.$selection.find(".select2-selection__rendered").empty();
                            }),
                            (d.prototype.display = function(a, b) {
                                var c = this.options.get("templateSelection"),
                                    d = this.options.get("escapeMarkup");
                                return d(c(a, b));
                            }),
                            (d.prototype.selectionContainer = function() {
                                var b = a(
                                    '<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>'
                                );
                                return b;
                            }),
                            (d.prototype.update = function(a) {
                                if ((this.clear(), 0 !== a.length)) {
                                    for (var b = [], d = 0; d < a.length; d++) {
                                        var e = a[d],
                                            f = this.selectionContainer(),
                                            g = this.display(e, f);
                                        f.append(g),
                                            f.prop("title", e.title || e.text),
                                            f.data("data", e),
                                            b.push(f);
                                    }
                                    var h = this.$selection.find(".select2-selection__rendered");
                                    c.appendMany(h, b);
                                }
                            }),
                            d
                        );
                    }
                ),
                b.define("select2/selection/placeholder", ["../utils"], function() {
                    function a(a, b, c) {
                        (this.placeholder = this.normalizePlaceholder(
                            c.get("placeholder")
                        )),
                        a.call(this, b, c);
                    }
                    return (
                        (a.prototype.normalizePlaceholder = function(a, b) {
                            return "string" == typeof b && (b = {
                                id: "",
                                text: b
                            }), b;
                        }),
                        (a.prototype.createPlaceholder = function(a, b) {
                            var c = this.selectionContainer();
                            return (
                                c.html(this.display(b)),
                                c
                                .addClass("select2-selection__placeholder")
                                .removeClass("select2-selection__choice"),
                                c
                            );
                        }),
                        (a.prototype.update = function(a, b) {
                            var c = 1 == b.length && b[0].id != this.placeholder.id,
                                d = b.length > 1;
                            if (d || c) return a.call(this, b);
                            this.clear();
                            var e = this.createPlaceholder(this.placeholder);
                            this.$selection.find(".select2-selection__rendered").append(e);
                        }),
                        a
                    );
                }),
                b.define(
                    "select2/selection/allowClear", ["jquery", "../keys"],
                    function(a, b) {
                        function c() {}
                        return (
                            (c.prototype.bind = function(a, b, c) {
                                var d = this;
                                a.call(this, b, c),
                                    null == this.placeholder &&
                                    this.options.get("debug") &&
                                    window.console &&
                                    console.error &&
                                    console.error(
                                        "Select2: The `allowClear` option should be used in combination with the `placeholder` option."
                                    ),
                                    this.$selection.on(
                                        "mousedown",
                                        ".select2-selection__clear",
                                        function(a) {
                                            d._handleClear(a);
                                        }
                                    ),
                                    b.on("keypress", function(a) {
                                        d._handleKeyboardClear(a, b);
                                    });
                            }),
                            (c.prototype._handleClear = function(a, b) {
                                if (!this.options.get("disabled")) {
                                    var c = this.$selection.find(".select2-selection__clear");
                                    if (0 !== c.length) {
                                        b.stopPropagation();
                                        for (var d = c.data("data"), e = 0; e < d.length; e++) {
                                            var f = {
                                                data: d[e]
                                            };
                                            if ((this.trigger("unselect", f), f.prevented)) return;
                                        }
                                        this.$element.val(this.placeholder.id).trigger("change"),
                                            this.trigger("toggle");
                                    }
                                }
                            }),
                            (c.prototype._handleKeyboardClear = function(a, c, d) {
                                d.isOpen() ||
                                    ((c.which == b.DELETE || c.which == b.BACKSPACE) &&
                                        this._handleClear(c));
                            }),
                            (c.prototype.update = function(b, c) {
                                if (
                                    (b.call(this, c), !(
                                        this.$selection.find(".select2-selection__placeholder")
                                        .length > 0 || 0 === c.length
                                    ))
                                ) {
                                    var d = a(
                                        '<span class="select2-selection__clear">&times;</span>'
                                    );
                                    d.data("data", c),
                                        this.$selection
                                        .find(".select2-selection__rendered")
                                        .prepend(d);
                                }
                            }),
                            c
                        );
                    }
                ),
                b.define(
                    "select2/selection/search", ["jquery", "../utils", "../keys"],
                    function(a, b, c) {
                        function d(a, b, c) {
                            a.call(this, b, c);
                        }
                        return (
                            (d.prototype.render = function(b) {
                                var c = a(
                                    '<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /></li>'
                                );
                                (this.$searchContainer = c), (this.$search = c.find("input"));
                                var d = b.call(this);
                                return this._transferTabIndex(), d;
                            }),
                            (d.prototype.bind = function(a, b, d) {
                                var e = this;
                                a.call(this, b, d),
                                    b.on("open", function() {
                                        e.$search.trigger("focus");
                                    }),
                                    b.on("close", function() {
                                        e.$search.val(""), e.$search.trigger("focus");
                                    }),
                                    b.on("enable", function() {
                                        e.$search.prop("disabled", !1), e._transferTabIndex();
                                    }),
                                    b.on("disable", function() {
                                        e.$search.prop("disabled", !0);
                                    }),
                                    b.on("focus", function() {
                                        e.$search.trigger("focus");
                                    }),
                                    this.$selection.on(
                                        "focusin",
                                        ".select2-search--inline",
                                        function(a) {
                                            e.trigger("focus", a);
                                        }
                                    ),
                                    this.$selection.on(
                                        "focusout",
                                        ".select2-search--inline",
                                        function(a) {
                                            e._handleBlur(a);
                                        }
                                    ),
                                    this.$selection.on(
                                        "keydown",
                                        ".select2-search--inline",
                                        function(a) {
                                            a.stopPropagation(),
                                                e.trigger("keypress", a),
                                                (e._keyUpPrevented = a.isDefaultPrevented());
                                            var b = a.which;
                                            if (b === c.BACKSPACE && "" === e.$search.val()) {
                                                var d = e.$searchContainer.prev(
                                                    ".select2-selection__choice"
                                                );
                                                if (d.length > 0) {
                                                    var f = d.data("data");
                                                    e.searchRemoveChoice(f), a.preventDefault();
                                                }
                                            }
                                        }
                                    ),
                                    this.$selection.on(
                                        "input",
                                        ".select2-search--inline",
                                        function() {
                                            e.$selection.off("keyup.search");
                                        }
                                    ),
                                    this.$selection.on(
                                        "keyup.search input",
                                        ".select2-search--inline",
                                        function(a) {
                                            var b = a.which;
                                            b != c.SHIFT &&
                                                b != c.CTRL &&
                                                b != c.ALT &&
                                                b != c.TAB &&
                                                e.handleSearch(a);
                                        }
                                    );
                            }),
                            (d.prototype._transferTabIndex = function() {
                                this.$search.attr("tabindex", this.$selection.attr("tabindex")),
                                    this.$selection.attr("tabindex", "-1");
                            }),
                            (d.prototype.createPlaceholder = function(a, b) {
                                this.$search.attr("placeholder", b.text);
                            }),
                            (d.prototype.update = function(a, b) {
                                var c = this.$search[0] == document.activeElement;
                                this.$search.attr("placeholder", ""),
                                    a.call(this, b),
                                    this.$selection
                                    .find(".select2-selection__rendered")
                                    .append(this.$searchContainer),
                                    this.resizeSearch(),
                                    c && this.$search.focus();
                            }),
                            (d.prototype.handleSearch = function() {
                                if ((this.resizeSearch(), !this._keyUpPrevented)) {
                                    var a = this.$search.val();
                                    this.trigger("query", {
                                        term: a
                                    });
                                }
                                this._keyUpPrevented = !1;
                            }),
                            (d.prototype.searchRemoveChoice = function(a, b) {
                                this.trigger("unselect", {
                                        data: b
                                    }),
                                    this.trigger("open"),
                                    this.$search.val(b.text + " ");
                            }),
                            (d.prototype.resizeSearch = function() {
                                this.$search.css("width", "25px");
                                var a = "";
                                if ("" !== this.$search.attr("placeholder"))
                                    a = this.$selection
                                    .find(".select2-selection__rendered")
                                    .innerWidth();
                                else {
                                    var b = this.$search.val().length + 1;
                                    a = 0.75 * b + "em";
                                }
                                this.$search.css("width", a);
                            }),
                            d
                        );
                    }
                ),
                b.define("select2/selection/eventRelay", ["jquery"], function(a) {
                    function b() {}
                    return (
                        (b.prototype.bind = function(b, c, d) {
                            var e = this,
                                f = [
                                    "open",
                                    "opening",
                                    "close",
                                    "closing",
                                    "select",
                                    "selecting",
                                    "unselect",
                                    "unselecting",
                                ],
                                g = ["opening", "closing", "selecting", "unselecting"];
                            b.call(this, c, d),
                                c.on("*", function(b, c) {
                                    if (-1 !== a.inArray(b, f)) {
                                        c = c || {};
                                        var d = a.Event("select2:" + b, {
                                            params: c
                                        });
                                        e.$element.trigger(d), -1 !== a.inArray(b, g) &&
                                            (c.prevented = d.isDefaultPrevented());
                                    }
                                });
                        }),
                        b
                    );
                }),
                b.define("select2/translation", ["jquery", "require"], function(a, b) {
                    function c(a) {
                        this.dict = a || {};
                    }
                    return (
                        (c.prototype.all = function() {
                            return this.dict;
                        }),
                        (c.prototype.get = function(a) {
                            return this.dict[a];
                        }),
                        (c.prototype.extend = function(b) {
                            this.dict = a.extend({}, b.all(), this.dict);
                        }),
                        (c._cache = {}),
                        (c.loadPath = function(a) {
                            if (!(a in c._cache)) {
                                var d = b(a);
                                c._cache[a] = d;
                            }
                            return new c(c._cache[a]);
                        }),
                        c
                    );
                }),
                b.define("select2/diacritics", [], function() {
                    var a = {
                        "Ⓐ": "A",
                        Ａ: "A",
                        À: "A",
                        Á: "A",
                        Â: "A",
                        Ầ: "A",
                        Ấ: "A",
                        Ẫ: "A",
                        Ẩ: "A",
                        Ã: "A",
                        Ā: "A",
                        Ă: "A",
                        Ằ: "A",
                        Ắ: "A",
                        Ẵ: "A",
                        Ẳ: "A",
                        Ȧ: "A",
                        Ǡ: "A",
                        Ä: "A",
                        Ǟ: "A",
                        Ả: "A",
                        Å: "A",
                        Ǻ: "A",
                        Ǎ: "A",
                        Ȁ: "A",
                        Ȃ: "A",
                        Ạ: "A",
                        Ậ: "A",
                        Ặ: "A",
                        Ḁ: "A",
                        Ą: "A",
                        Ⱥ: "A",
                        Ɐ: "A",
                        Ꜳ: "AA",
                        Æ: "AE",
                        Ǽ: "AE",
                        Ǣ: "AE",
                        Ꜵ: "AO",
                        Ꜷ: "AU",
                        Ꜹ: "AV",
                        Ꜻ: "AV",
                        Ꜽ: "AY",
                        "Ⓑ": "B",
                        Ｂ: "B",
                        Ḃ: "B",
                        Ḅ: "B",
                        Ḇ: "B",
                        Ƀ: "B",
                        Ƃ: "B",
                        Ɓ: "B",
                        "Ⓒ": "C",
                        Ｃ: "C",
                        Ć: "C",
                        Ĉ: "C",
                        Ċ: "C",
                        Č: "C",
                        Ç: "C",
                        Ḉ: "C",
                        Ƈ: "C",
                        Ȼ: "C",
                        Ꜿ: "C",
                        "Ⓓ": "D",
                        Ｄ: "D",
                        Ḋ: "D",
                        Ď: "D",
                        Ḍ: "D",
                        Ḑ: "D",
                        Ḓ: "D",
                        Ḏ: "D",
                        Đ: "D",
                        Ƌ: "D",
                        Ɗ: "D",
                        Ɖ: "D",
                        Ꝺ: "D",
                        Ǳ: "DZ",
                        Ǆ: "DZ",
                        ǲ: "Dz",
                        ǅ: "Dz",
                        "Ⓔ": "E",
                        Ｅ: "E",
                        È: "E",
                        É: "E",
                        Ê: "E",
                        Ề: "E",
                        Ế: "E",
                        Ễ: "E",
                        Ể: "E",
                        Ẽ: "E",
                        Ē: "E",
                        Ḕ: "E",
                        Ḗ: "E",
                        Ĕ: "E",
                        Ė: "E",
                        Ë: "E",
                        Ẻ: "E",
                        Ě: "E",
                        Ȅ: "E",
                        Ȇ: "E",
                        Ẹ: "E",
                        Ệ: "E",
                        Ȩ: "E",
                        Ḝ: "E",
                        Ę: "E",
                        Ḙ: "E",
                        Ḛ: "E",
                        Ɛ: "E",
                        Ǝ: "E",
                        "Ⓕ": "F",
                        Ｆ: "F",
                        Ḟ: "F",
                        Ƒ: "F",
                        Ꝼ: "F",
                        "Ⓖ": "G",
                        Ｇ: "G",
                        Ǵ: "G",
                        Ĝ: "G",
                        Ḡ: "G",
                        Ğ: "G",
                        Ġ: "G",
                        Ǧ: "G",
                        Ģ: "G",
                        Ǥ: "G",
                        Ɠ: "G",
                        Ꞡ: "G",
                        Ᵹ: "G",
                        Ꝿ: "G",
                        "Ⓗ": "H",
                        Ｈ: "H",
                        Ĥ: "H",
                        Ḣ: "H",
                        Ḧ: "H",
                        Ȟ: "H",
                        Ḥ: "H",
                        Ḩ: "H",
                        Ḫ: "H",
                        Ħ: "H",
                        Ⱨ: "H",
                        Ⱶ: "H",
                        Ɥ: "H",
                        "Ⓘ": "I",
                        Ｉ: "I",
                        Ì: "I",
                        Í: "I",
                        Î: "I",
                        Ĩ: "I",
                        Ī: "I",
                        Ĭ: "I",
                        İ: "I",
                        Ï: "I",
                        Ḯ: "I",
                        Ỉ: "I",
                        Ǐ: "I",
                        Ȉ: "I",
                        Ȋ: "I",
                        Ị: "I",
                        Į: "I",
                        Ḭ: "I",
                        Ɨ: "I",
                        "Ⓙ": "J",
                        Ｊ: "J",
                        Ĵ: "J",
                        Ɉ: "J",
                        "Ⓚ": "K",
                        Ｋ: "K",
                        Ḱ: "K",
                        Ǩ: "K",
                        Ḳ: "K",
                        Ķ: "K",
                        Ḵ: "K",
                        Ƙ: "K",
                        Ⱪ: "K",
                        Ꝁ: "K",
                        Ꝃ: "K",
                        Ꝅ: "K",
                        Ꞣ: "K",
                        "Ⓛ": "L",
                        Ｌ: "L",
                        Ŀ: "L",
                        Ĺ: "L",
                        Ľ: "L",
                        Ḷ: "L",
                        Ḹ: "L",
                        Ļ: "L",
                        Ḽ: "L",
                        Ḻ: "L",
                        Ł: "L",
                        Ƚ: "L",
                        Ɫ: "L",
                        Ⱡ: "L",
                        Ꝉ: "L",
                        Ꝇ: "L",
                        Ꞁ: "L",
                        Ǉ: "LJ",
                        ǈ: "Lj",
                        "Ⓜ": "M",
                        Ｍ: "M",
                        Ḿ: "M",
                        Ṁ: "M",
                        Ṃ: "M",
                        Ɱ: "M",
                        Ɯ: "M",
                        "Ⓝ": "N",
                        Ｎ: "N",
                        Ǹ: "N",
                        Ń: "N",
                        Ñ: "N",
                        Ṅ: "N",
                        Ň: "N",
                        Ṇ: "N",
                        Ņ: "N",
                        Ṋ: "N",
                        Ṉ: "N",
                        Ƞ: "N",
                        Ɲ: "N",
                        Ꞑ: "N",
                        Ꞥ: "N",
                        Ǌ: "NJ",
                        ǋ: "Nj",
                        "Ⓞ": "O",
                        Ｏ: "O",
                        Ò: "O",
                        Ó: "O",
                        Ô: "O",
                        Ồ: "O",
                        Ố: "O",
                        Ỗ: "O",
                        Ổ: "O",
                        Õ: "O",
                        Ṍ: "O",
                        Ȭ: "O",
                        Ṏ: "O",
                        Ō: "O",
                        Ṑ: "O",
                        Ṓ: "O",
                        Ŏ: "O",
                        Ȯ: "O",
                        Ȱ: "O",
                        Ö: "O",
                        Ȫ: "O",
                        Ỏ: "O",
                        Ő: "O",
                        Ǒ: "O",
                        Ȍ: "O",
                        Ȏ: "O",
                        Ơ: "O",
                        Ờ: "O",
                        Ớ: "O",
                        Ỡ: "O",
                        Ở: "O",
                        Ợ: "O",
                        Ọ: "O",
                        Ộ: "O",
                        Ǫ: "O",
                        Ǭ: "O",
                        Ø: "O",
                        Ǿ: "O",
                        Ɔ: "O",
                        Ɵ: "O",
                        Ꝋ: "O",
                        Ꝍ: "O",
                        Ƣ: "OI",
                        Ꝏ: "OO",
                        Ȣ: "OU",
                        "Ⓟ": "P",
                        Ｐ: "P",
                        Ṕ: "P",
                        Ṗ: "P",
                        Ƥ: "P",
                        Ᵽ: "P",
                        Ꝑ: "P",
                        Ꝓ: "P",
                        Ꝕ: "P",
                        "Ⓠ": "Q",
                        Ｑ: "Q",
                        Ꝗ: "Q",
                        Ꝙ: "Q",
                        Ɋ: "Q",
                        "Ⓡ": "R",
                        Ｒ: "R",
                        Ŕ: "R",
                        Ṙ: "R",
                        Ř: "R",
                        Ȑ: "R",
                        Ȓ: "R",
                        Ṛ: "R",
                        Ṝ: "R",
                        Ŗ: "R",
                        Ṟ: "R",
                        Ɍ: "R",
                        Ɽ: "R",
                        Ꝛ: "R",
                        Ꞧ: "R",
                        Ꞃ: "R",
                        "Ⓢ": "S",
                        Ｓ: "S",
                        ẞ: "S",
                        Ś: "S",
                        Ṥ: "S",
                        Ŝ: "S",
                        Ṡ: "S",
                        Š: "S",
                        Ṧ: "S",
                        Ṣ: "S",
                        Ṩ: "S",
                        Ș: "S",
                        Ş: "S",
                        Ȿ: "S",
                        Ꞩ: "S",
                        Ꞅ: "S",
                        "Ⓣ": "T",
                        Ｔ: "T",
                        Ṫ: "T",
                        Ť: "T",
                        Ṭ: "T",
                        Ț: "T",
                        Ţ: "T",
                        Ṱ: "T",
                        Ṯ: "T",
                        Ŧ: "T",
                        Ƭ: "T",
                        Ʈ: "T",
                        Ⱦ: "T",
                        Ꞇ: "T",
                        Ꜩ: "TZ",
                        "Ⓤ": "U",
                        Ｕ: "U",
                        Ù: "U",
                        Ú: "U",
                        Û: "U",
                        Ũ: "U",
                        Ṹ: "U",
                        Ū: "U",
                        Ṻ: "U",
                        Ŭ: "U",
                        Ü: "U",
                        Ǜ: "U",
                        Ǘ: "U",
                        Ǖ: "U",
                        Ǚ: "U",
                        Ủ: "U",
                        Ů: "U",
                        Ű: "U",
                        Ǔ: "U",
                        Ȕ: "U",
                        Ȗ: "U",
                        Ư: "U",
                        Ừ: "U",
                        Ứ: "U",
                        Ữ: "U",
                        Ử: "U",
                        Ự: "U",
                        Ụ: "U",
                        Ṳ: "U",
                        Ų: "U",
                        Ṷ: "U",
                        Ṵ: "U",
                        Ʉ: "U",
                        "Ⓥ": "V",
                        Ｖ: "V",
                        Ṽ: "V",
                        Ṿ: "V",
                        Ʋ: "V",
                        Ꝟ: "V",
                        Ʌ: "V",
                        Ꝡ: "VY",
                        "Ⓦ": "W",
                        Ｗ: "W",
                        Ẁ: "W",
                        Ẃ: "W",
                        Ŵ: "W",
                        Ẇ: "W",
                        Ẅ: "W",
                        Ẉ: "W",
                        Ⱳ: "W",
                        "Ⓧ": "X",
                        Ｘ: "X",
                        Ẋ: "X",
                        Ẍ: "X",
                        "Ⓨ": "Y",
                        Ｙ: "Y",
                        Ỳ: "Y",
                        Ý: "Y",
                        Ŷ: "Y",
                        Ỹ: "Y",
                        Ȳ: "Y",
                        Ẏ: "Y",
                        Ÿ: "Y",
                        Ỷ: "Y",
                        Ỵ: "Y",
                        Ƴ: "Y",
                        Ɏ: "Y",
                        Ỿ: "Y",
                        "Ⓩ": "Z",
                        Ｚ: "Z",
                        Ź: "Z",
                        Ẑ: "Z",
                        Ż: "Z",
                        Ž: "Z",
                        Ẓ: "Z",
                        Ẕ: "Z",
                        Ƶ: "Z",
                        Ȥ: "Z",
                        Ɀ: "Z",
                        Ⱬ: "Z",
                        Ꝣ: "Z",
                        "ⓐ": "a",
                        ａ: "a",
                        ẚ: "a",
                        à: "a",
                        á: "a",
                        â: "a",
                        ầ: "a",
                        ấ: "a",
                        ẫ: "a",
                        ẩ: "a",
                        ã: "a",
                        ā: "a",
                        ă: "a",
                        ằ: "a",
                        ắ: "a",
                        ẵ: "a",
                        ẳ: "a",
                        ȧ: "a",
                        ǡ: "a",
                        ä: "a",
                        ǟ: "a",
                        ả: "a",
                        å: "a",
                        ǻ: "a",
                        ǎ: "a",
                        ȁ: "a",
                        ȃ: "a",
                        ạ: "a",
                        ậ: "a",
                        ặ: "a",
                        ḁ: "a",
                        ą: "a",
                        ⱥ: "a",
                        ɐ: "a",
                        ꜳ: "aa",
                        æ: "ae",
                        ǽ: "ae",
                        ǣ: "ae",
                        ꜵ: "ao",
                        ꜷ: "au",
                        ꜹ: "av",
                        ꜻ: "av",
                        ꜽ: "ay",
                        "ⓑ": "b",
                        ｂ: "b",
                        ḃ: "b",
                        ḅ: "b",
                        ḇ: "b",
                        ƀ: "b",
                        ƃ: "b",
                        ɓ: "b",
                        "ⓒ": "c",
                        ｃ: "c",
                        ć: "c",
                        ĉ: "c",
                        ċ: "c",
                        č: "c",
                        ç: "c",
                        ḉ: "c",
                        ƈ: "c",
                        ȼ: "c",
                        ꜿ: "c",
                        ↄ: "c",
                        "ⓓ": "d",
                        ｄ: "d",
                        ḋ: "d",
                        ď: "d",
                        ḍ: "d",
                        ḑ: "d",
                        ḓ: "d",
                        ḏ: "d",
                        đ: "d",
                        ƌ: "d",
                        ɖ: "d",
                        ɗ: "d",
                        ꝺ: "d",
                        ǳ: "dz",
                        ǆ: "dz",
                        "ⓔ": "e",
                        ｅ: "e",
                        è: "e",
                        é: "e",
                        ê: "e",
                        ề: "e",
                        ế: "e",
                        ễ: "e",
                        ể: "e",
                        ẽ: "e",
                        ē: "e",
                        ḕ: "e",
                        ḗ: "e",
                        ĕ: "e",
                        ė: "e",
                        ë: "e",
                        ẻ: "e",
                        ě: "e",
                        ȅ: "e",
                        ȇ: "e",
                        ẹ: "e",
                        ệ: "e",
                        ȩ: "e",
                        ḝ: "e",
                        ę: "e",
                        ḙ: "e",
                        ḛ: "e",
                        ɇ: "e",
                        ɛ: "e",
                        ǝ: "e",
                        "ⓕ": "f",
                        ｆ: "f",
                        ḟ: "f",
                        ƒ: "f",
                        ꝼ: "f",
                        "ⓖ": "g",
                        ｇ: "g",
                        ǵ: "g",
                        ĝ: "g",
                        ḡ: "g",
                        ğ: "g",
                        ġ: "g",
                        ǧ: "g",
                        ģ: "g",
                        ǥ: "g",
                        ɠ: "g",
                        ꞡ: "g",
                        ᵹ: "g",
                        ꝿ: "g",
                        "ⓗ": "h",
                        ｈ: "h",
                        ĥ: "h",
                        ḣ: "h",
                        ḧ: "h",
                        ȟ: "h",
                        ḥ: "h",
                        ḩ: "h",
                        ḫ: "h",
                        ẖ: "h",
                        ħ: "h",
                        ⱨ: "h",
                        ⱶ: "h",
                        ɥ: "h",
                        ƕ: "hv",
                        "ⓘ": "i",
                        ｉ: "i",
                        ì: "i",
                        í: "i",
                        î: "i",
                        ĩ: "i",
                        ī: "i",
                        ĭ: "i",
                        ï: "i",
                        ḯ: "i",
                        ỉ: "i",
                        ǐ: "i",
                        ȉ: "i",
                        ȋ: "i",
                        ị: "i",
                        į: "i",
                        ḭ: "i",
                        ɨ: "i",
                        ı: "i",
                        "ⓙ": "j",
                        ｊ: "j",
                        ĵ: "j",
                        ǰ: "j",
                        ɉ: "j",
                        "ⓚ": "k",
                        ｋ: "k",
                        ḱ: "k",
                        ǩ: "k",
                        ḳ: "k",
                        ķ: "k",
                        ḵ: "k",
                        ƙ: "k",
                        ⱪ: "k",
                        ꝁ: "k",
                        ꝃ: "k",
                        ꝅ: "k",
                        ꞣ: "k",
                        "ⓛ": "l",
                        ｌ: "l",
                        ŀ: "l",
                        ĺ: "l",
                        ľ: "l",
                        ḷ: "l",
                        ḹ: "l",
                        ļ: "l",
                        ḽ: "l",
                        ḻ: "l",
                        ſ: "l",
                        ł: "l",
                        ƚ: "l",
                        ɫ: "l",
                        ⱡ: "l",
                        ꝉ: "l",
                        ꞁ: "l",
                        ꝇ: "l",
                        ǉ: "lj",
                        "ⓜ": "m",
                        ｍ: "m",
                        ḿ: "m",
                        ṁ: "m",
                        ṃ: "m",
                        ɱ: "m",
                        ɯ: "m",
                        "ⓝ": "n",
                        ｎ: "n",
                        ǹ: "n",
                        ń: "n",
                        ñ: "n",
                        ṅ: "n",
                        ň: "n",
                        ṇ: "n",
                        ņ: "n",
                        ṋ: "n",
                        ṉ: "n",
                        ƞ: "n",
                        ɲ: "n",
                        ŉ: "n",
                        ꞑ: "n",
                        ꞥ: "n",
                        ǌ: "nj",
                        "ⓞ": "o",
                        ｏ: "o",
                        ò: "o",
                        ó: "o",
                        ô: "o",
                        ồ: "o",
                        ố: "o",
                        ỗ: "o",
                        ổ: "o",
                        õ: "o",
                        ṍ: "o",
                        ȭ: "o",
                        ṏ: "o",
                        ō: "o",
                        ṑ: "o",
                        ṓ: "o",
                        ŏ: "o",
                        ȯ: "o",
                        ȱ: "o",
                        ö: "o",
                        ȫ: "o",
                        ỏ: "o",
                        ő: "o",
                        ǒ: "o",
                        ȍ: "o",
                        ȏ: "o",
                        ơ: "o",
                        ờ: "o",
                        ớ: "o",
                        ỡ: "o",
                        ở: "o",
                        ợ: "o",
                        ọ: "o",
                        ộ: "o",
                        ǫ: "o",
                        ǭ: "o",
                        ø: "o",
                        ǿ: "o",
                        ɔ: "o",
                        ꝋ: "o",
                        ꝍ: "o",
                        ɵ: "o",
                        ƣ: "oi",
                        ȣ: "ou",
                        ꝏ: "oo",
                        "ⓟ": "p",
                        ｐ: "p",
                        ṕ: "p",
                        ṗ: "p",
                        ƥ: "p",
                        ᵽ: "p",
                        ꝑ: "p",
                        ꝓ: "p",
                        ꝕ: "p",
                        "ⓠ": "q",
                        ｑ: "q",
                        ɋ: "q",
                        ꝗ: "q",
                        ꝙ: "q",
                        "ⓡ": "r",
                        ｒ: "r",
                        ŕ: "r",
                        ṙ: "r",
                        ř: "r",
                        ȑ: "r",
                        ȓ: "r",
                        ṛ: "r",
                        ṝ: "r",
                        ŗ: "r",
                        ṟ: "r",
                        ɍ: "r",
                        ɽ: "r",
                        ꝛ: "r",
                        ꞧ: "r",
                        ꞃ: "r",
                        "ⓢ": "s",
                        ｓ: "s",
                        ß: "s",
                        ś: "s",
                        ṥ: "s",
                        ŝ: "s",
                        ṡ: "s",
                        š: "s",
                        ṧ: "s",
                        ṣ: "s",
                        ṩ: "s",
                        ș: "s",
                        ş: "s",
                        ȿ: "s",
                        ꞩ: "s",
                        ꞅ: "s",
                        ẛ: "s",
                        "ⓣ": "t",
                        ｔ: "t",
                        ṫ: "t",
                        ẗ: "t",
                        ť: "t",
                        ṭ: "t",
                        ț: "t",
                        ţ: "t",
                        ṱ: "t",
                        ṯ: "t",
                        ŧ: "t",
                        ƭ: "t",
                        ʈ: "t",
                        ⱦ: "t",
                        ꞇ: "t",
                        ꜩ: "tz",
                        "ⓤ": "u",
                        ｕ: "u",
                        ù: "u",
                        ú: "u",
                        û: "u",
                        ũ: "u",
                        ṹ: "u",
                        ū: "u",
                        ṻ: "u",
                        ŭ: "u",
                        ü: "u",
                        ǜ: "u",
                        ǘ: "u",
                        ǖ: "u",
                        ǚ: "u",
                        ủ: "u",
                        ů: "u",
                        ű: "u",
                        ǔ: "u",
                        ȕ: "u",
                        ȗ: "u",
                        ư: "u",
                        ừ: "u",
                        ứ: "u",
                        ữ: "u",
                        ử: "u",
                        ự: "u",
                        ụ: "u",
                        ṳ: "u",
                        ų: "u",
                        ṷ: "u",
                        ṵ: "u",
                        ʉ: "u",
                        "ⓥ": "v",
                        ｖ: "v",
                        ṽ: "v",
                        ṿ: "v",
                        ʋ: "v",
                        ꝟ: "v",
                        ʌ: "v",
                        ꝡ: "vy",
                        "ⓦ": "w",
                        ｗ: "w",
                        ẁ: "w",
                        ẃ: "w",
                        ŵ: "w",
                        ẇ: "w",
                        ẅ: "w",
                        ẘ: "w",
                        ẉ: "w",
                        ⱳ: "w",
                        "ⓧ": "x",
                        ｘ: "x",
                        ẋ: "x",
                        ẍ: "x",
                        "ⓨ": "y",
                        ｙ: "y",
                        ỳ: "y",
                        ý: "y",
                        ŷ: "y",
                        ỹ: "y",
                        ȳ: "y",
                        ẏ: "y",
                        ÿ: "y",
                        ỷ: "y",
                        ẙ: "y",
                        ỵ: "y",
                        ƴ: "y",
                        ɏ: "y",
                        ỿ: "y",
                        "ⓩ": "z",
                        ｚ: "z",
                        ź: "z",
                        ẑ: "z",
                        ż: "z",
                        ž: "z",
                        ẓ: "z",
                        ẕ: "z",
                        ƶ: "z",
                        ȥ: "z",
                        ɀ: "z",
                        ⱬ: "z",
                        ꝣ: "z",
                        Ά: "Α",
                        Έ: "Ε",
                        Ή: "Η",
                        Ί: "Ι",
                        Ϊ: "Ι",
                        Ό: "Ο",
                        Ύ: "Υ",
                        Ϋ: "Υ",
                        Ώ: "Ω",
                        ά: "α",
                        έ: "ε",
                        ή: "η",
                        ί: "ι",
                        ϊ: "ι",
                        ΐ: "ι",
                        ό: "ο",
                        ύ: "υ",
                        ϋ: "υ",
                        ΰ: "υ",
                        ω: "ω",
                        ς: "σ",
                    };
                    return a;
                }),
                b.define("select2/data/base", ["../utils"], function(a) {
                    function b() {
                        b.__super__.constructor.call(this);
                    }
                    return (
                        a.Extend(b, a.Observable),
                        (b.prototype.current = function() {
                            throw new Error(
                                "The `current` method must be defined in child classes."
                            );
                        }),
                        (b.prototype.query = function() {
                            throw new Error(
                                "The `query` method must be defined in child classes."
                            );
                        }),
                        (b.prototype.bind = function() {}),
                        (b.prototype.destroy = function() {}),
                        (b.prototype.generateResultId = function(b, c) {
                            var d = b.id + "-result-";
                            return (
                                (d += a.generateChars(4)),
                                (d +=
                                    null != c.id ?
                                    "-" + c.id.toString() :
                                    "-" + a.generateChars(4))
                            );
                        }),
                        b
                    );
                }),
                b.define(
                    "select2/data/select", ["./base", "../utils", "jquery"],
                    function(a, b, c) {
                        function d(a, b) {
                            (this.$element = a),
                            (this.options = b),
                            d.__super__.constructor.call(this);
                        }
                        return (
                            b.Extend(d, a),
                            (d.prototype.current = function(a) {
                                var b = [],
                                    d = this;
                                this.$element.find(":selected").each(function() {
                                        var a = c(this),
                                            e = d.item(a);
                                        b.push(e);
                                    }),
                                    a(b);
                            }),
                            (d.prototype.select = function(a) {
                                var b = this;
                                if (((a.selected = !0), c(a.element).is("option")))
                                    return (
                                        (a.element.selected = !0),
                                        void this.$element.trigger("change")
                                    );
                                if (this.$element.prop("multiple"))
                                    this.current(function(d) {
                                        var e = [];
                                        (a = [a]), a.push.apply(a, d);
                                        for (var f = 0; f < a.length; f++) {
                                            var g = a[f].id; -
                                            1 === c.inArray(g, e) && e.push(g);
                                        }
                                        b.$element.val(e), b.$element.trigger("change");
                                    });
                                else {
                                    var d = a.id;
                                    this.$element.val(d), this.$element.trigger("change");
                                }
                            }),
                            (d.prototype.unselect = function(a) {
                                var b = this;
                                if (this.$element.prop("multiple"))
                                    return (
                                        (a.selected = !1),
                                        c(a.element).is("option") ?
                                        ((a.element.selected = !1),
                                            void this.$element.trigger("change")) :
                                        void this.current(function(d) {
                                            for (var e = [], f = 0; f < d.length; f++) {
                                                var g = d[f].id;
                                                g !== a.id && -1 === c.inArray(g, e) && e.push(g);
                                            }
                                            b.$element.val(e), b.$element.trigger("change");
                                        })
                                    );
                            }),
                            (d.prototype.bind = function(a) {
                                var b = this;
                                (this.container = a),
                                a.on("select", function(a) {
                                        b.select(a.data);
                                    }),
                                    a.on("unselect", function(a) {
                                        b.unselect(a.data);
                                    });
                            }),
                            (d.prototype.destroy = function() {
                                this.$element.find("*").each(function() {
                                    c.removeData(this, "data");
                                });
                            }),
                            (d.prototype.query = function(a, b) {
                                var d = [],
                                    e = this,
                                    f = this.$element.children();
                                f.each(function() {
                                        var b = c(this);
                                        if (b.is("option") || b.is("optgroup")) {
                                            var f = e.item(b),
                                                g = e.matches(a, f);
                                            null !== g && d.push(g);
                                        }
                                    }),
                                    b({
                                        results: d
                                    });
                            }),
                            (d.prototype.addOptions = function(a) {
                                b.appendMany(this.$element, a);
                            }),
                            (d.prototype.option = function(a) {
                                var b;
                                a.children ?
                                    ((b = document.createElement("optgroup")),
                                        (b.label = a.text)) :
                                    ((b = document.createElement("option")),
                                        void 0 !== b.textContent ?
                                        (b.textContent = a.text) :
                                        (b.innerText = a.text)),
                                    a.id && (b.value = a.id),
                                    a.disabled && (b.disabled = !0),
                                    a.selected && (b.selected = !0),
                                    a.title && (b.title = a.title);
                                var d = c(b),
                                    e = this._normalizeItem(a);
                                return (e.element = b), c.data(b, "data", e), d;
                            }),
                            (d.prototype.item = function(a) {
                                var b = {};
                                if (((b = c.data(a[0], "data")), null != b)) return b;
                                if (a.is("option"))
                                    b = {
                                        id: a.val(),
                                        text: a.text(),
                                        disabled: a.prop("disabled"),
                                        selected: a.prop("selected"),
                                        title: a.prop("title"),
                                    };
                                else if (a.is("optgroup")) {
                                    b = {
                                        text: a.prop("label"),
                                        children: [],
                                        title: a.prop("title"),
                                    };
                                    for (
                                        var d = a.children("option"), e = [], f = 0; f < d.length; f++
                                    ) {
                                        var g = c(d[f]),
                                            h = this.item(g);
                                        e.push(h);
                                    }
                                    b.children = e;
                                }
                                return (
                                    (b = this._normalizeItem(b)),
                                    (b.element = a[0]),
                                    c.data(a[0], "data", b),
                                    b
                                );
                            }),
                            (d.prototype._normalizeItem = function(a) {
                                c.isPlainObject(a) || (a = {
                                        id: a,
                                        text: a
                                    }),
                                    (a = c.extend({}, {
                                        text: ""
                                    }, a));
                                var b = {
                                    selected: !1,
                                    disabled: !1
                                };
                                return (
                                    null != a.id && (a.id = a.id.toString()),
                                    null != a.text && (a.text = a.text.toString()),
                                    null == a._resultId &&
                                    a.id &&
                                    null != this.container &&
                                    (a._resultId = this.generateResultId(this.container, a)),
                                    c.extend({}, b, a)
                                );
                            }),
                            (d.prototype.matches = function(a, b) {
                                var c = this.options.get("matcher");
                                return c(a, b);
                            }),
                            d
                        );
                    }
                ),
                b.define(
                    "select2/data/array", ["./select", "../utils", "jquery"],
                    function(a, b, c) {
                        function d(a, b) {
                            var c = b.get("data") || [];
                            d.__super__.constructor.call(this, a, b),
                                this.addOptions(this.convertToOptions(c));
                        }
                        return (
                            b.Extend(d, a),
                            (d.prototype.select = function(a) {
                                var b = this.$element.find("option").filter(function(b, c) {
                                    return c.value == a.id.toString();
                                });
                                0 === b.length && ((b = this.option(a)), this.addOptions(b)),
                                    d.__super__.select.call(this, a);
                            }),
                            (d.prototype.convertToOptions = function(a) {
                                function d(a) {
                                    return function() {
                                        return c(this).val() == a.id;
                                    };
                                }
                                for (
                                    var e = this,
                                        f = this.$element.find("option"),
                                        g = f
                                        .map(function() {
                                            return e.item(c(this)).id;
                                        })
                                        .get(),
                                        h = [],
                                        i = 0; i < a.length; i++
                                ) {
                                    var j = this._normalizeItem(a[i]);
                                    if (c.inArray(j.id, g) >= 0) {
                                        var k = f.filter(d(j)),
                                            l = this.item(k),
                                            m = (c.extend(!0, {}, l, j), this.option(l));
                                        k.replaceWith(m);
                                    } else {
                                        var n = this.option(j);
                                        if (j.children) {
                                            var o = this.convertToOptions(j.children);
                                            b.appendMany(n, o);
                                        }
                                        h.push(n);
                                    }
                                }
                                return h;
                            }),
                            d
                        );
                    }
                ),
                b.define(
                    "select2/data/ajax", ["./array", "../utils", "jquery"],
                    function(a, b, c) {
                        function d(a, b) {
                            (this.ajaxOptions = this._applyDefaults(b.get("ajax"))),
                            null != this.ajaxOptions.processResults &&
                                (this.processResults = this.ajaxOptions.processResults),
                                d.__super__.constructor.call(this, a, b);
                        }
                        return (
                            b.Extend(d, a),
                            (d.prototype._applyDefaults = function(a) {
                                var b = {
                                    data: function(a) {
                                        return {
                                            q: a.term
                                        };
                                    },
                                    transport: function(a, b, d) {
                                        var e = c.ajax(a);
                                        return e.then(b), e.fail(d), e;
                                    },
                                };
                                return c.extend({}, b, a, !0);
                            }),
                            (d.prototype.processResults = function(a) {
                                return a;
                            }),
                            (d.prototype.query = function(a, b) {
                                function d() {
                                    var d = f.transport(
                                        f,
                                        function(d) {
                                            var f = e.processResults(d, a);
                                            e.options.get("debug") &&
                                                window.console &&
                                                console.error &&
                                                ((f && f.results && c.isArray(f.results)) ||
                                                    console.error(
                                                        "Select2: The AJAX results did not return an array in the `results` key of the response."
                                                    )),
                                                b(f);
                                        },
                                        function() {}
                                    );
                                    e._request = d;
                                }
                                var e = this;
                                null != this._request &&
                                    (c.isFunction(this._request.abort) && this._request.abort(),
                                        (this._request = null));
                                var f = c.extend({
                                    type: "GET"
                                }, this.ajaxOptions);
                                "function" == typeof f.url && (f.url = f.url(a)),
                                    "function" == typeof f.data && (f.data = f.data(a)),
                                    this.ajaxOptions.delay && "" !== a.term ?
                                    (this._queryTimeout &&
                                        window.clearTimeout(this._queryTimeout),
                                        (this._queryTimeout = window.setTimeout(
                                            d,
                                            this.ajaxOptions.delay
                                        ))) :
                                    d();
                            }),
                            d
                        );
                    }
                ),
                b.define("select2/data/tags", ["jquery"], function(a) {
                    function b(b, c, d) {
                        var e = d.get("tags"),
                            f = d.get("createTag");
                        if (
                            (void 0 !== f && (this.createTag = f),
                                b.call(this, c, d),
                                a.isArray(e))
                        )
                            for (var g = 0; g < e.length; g++) {
                                var h = e[g],
                                    i = this._normalizeItem(h),
                                    j = this.option(i);
                                this.$element.append(j);
                            }
                    }
                    return (
                        (b.prototype.query = function(a, b, c) {
                            function d(a, f) {
                                for (var g = a.results, h = 0; h < g.length; h++) {
                                    var i = g[h],
                                        j = null != i.children && !d({
                                            results: i.children
                                        }, !0),
                                        k = i.text === b.term;
                                    if (k || j) return f ? !1 : ((a.data = g), void c(a));
                                }
                                if (f) return !0;
                                var l = e.createTag(b);
                                if (null != l) {
                                    var m = e.option(l);
                                    m.attr("data-select2-tag", !0),
                                        e.addOptions([m]),
                                        e.insertTag(g, l);
                                }
                                (a.results = g), c(a);
                            }
                            var e = this;
                            return (
                                this._removeOldTags(),
                                null == b.term || null != b.page ?
                                void a.call(this, b, c) :
                                void a.call(this, b, d)
                            );
                        }),
                        (b.prototype.createTag = function(b, c) {
                            var d = a.trim(c.term);
                            return "" === d ? null : {
                                id: d,
                                text: d
                            };
                        }),
                        (b.prototype.insertTag = function(a, b, c) {
                            b.unshift(c);
                        }),
                        (b.prototype._removeOldTags = function() {
                            var b =
                                (this._lastTag, this.$element.find("option[data-select2-tag]"));
                            b.each(function() {
                                this.selected || a(this).remove();
                            });
                        }),
                        b
                    );
                }),
                b.define("select2/data/tokenizer", ["jquery"], function(a) {
                    function b(a, b, c) {
                        var d = c.get("tokenizer");
                        void 0 !== d && (this.tokenizer = d), a.call(this, b, c);
                    }
                    return (
                        (b.prototype.bind = function(a, b, c) {
                            a.call(this, b, c),
                                (this.$search =
                                    b.dropdown.$search ||
                                    b.selection.$search ||
                                    c.find(".select2-search__field"));
                        }),
                        (b.prototype.query = function(a, b, c) {
                            function d(a) {
                                e.select(a);
                            }
                            var e = this;
                            b.term = b.term || "";
                            var f = this.tokenizer(b, this.options, d);
                            f.term !== b.term &&
                                (this.$search.length &&
                                    (this.$search.val(f.term), this.$search.focus()),
                                    (b.term = f.term)),
                                a.call(this, b, c);
                        }),
                        (b.prototype.tokenizer = function(b, c, d, e) {
                            for (
                                var f = d.get("tokenSeparators") || [],
                                    g = c.term,
                                    h = 0,
                                    i =
                                    this.createTag ||
                                    function(a) {
                                        return {
                                            id: a.term,
                                            text: a.term
                                        };
                                    }; h < g.length;

                            ) {
                                var j = g[h];
                                if (-1 !== a.inArray(j, f)) {
                                    var k = g.substr(0, h),
                                        l = a.extend({}, c, {
                                            term: k
                                        }),
                                        m = i(l);
                                    e(m), (g = g.substr(h + 1) || ""), (h = 0);
                                } else h++;
                            }
                            return {
                                term: g
                            };
                        }),
                        b
                    );
                }),
                b.define("select2/data/minimumInputLength", [], function() {
                    function a(a, b, c) {
                        (this.minimumInputLength = c.get("minimumInputLength")),
                        a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function(a, b, c) {
                            return (
                                (b.term = b.term || ""),
                                b.term.length < this.minimumInputLength ?
                                void this.trigger("results:message", {
                                    message: "inputTooShort",
                                    args: {
                                        minimum: this.minimumInputLength,
                                        input: b.term,
                                        params: b,
                                    },
                                }) :
                                void a.call(this, b, c)
                            );
                        }),
                        a
                    );
                }),
                b.define("select2/data/maximumInputLength", [], function() {
                    function a(a, b, c) {
                        (this.maximumInputLength = c.get("maximumInputLength")),
                        a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function(a, b, c) {
                            return (
                                (b.term = b.term || ""),
                                this.maximumInputLength > 0 &&
                                b.term.length > this.maximumInputLength ?
                                void this.trigger("results:message", {
                                    message: "inputTooLong",
                                    args: {
                                        maximum: this.maximumInputLength,
                                        input: b.term,
                                        params: b,
                                    },
                                }) :
                                void a.call(this, b, c)
                            );
                        }),
                        a
                    );
                }),
                b.define("select2/data/maximumSelectionLength", [], function() {
                    function a(a, b, c) {
                        (this.maximumSelectionLength = c.get("maximumSelectionLength")),
                        a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function(a, b, c) {
                            var d = this;
                            this.current(function(e) {
                                var f = null != e ? e.length : 0;
                                return d.maximumSelectionLength > 0 &&
                                    f >= d.maximumSelectionLength ?
                                    void d.trigger("results:message", {
                                        message: "maximumSelected",
                                        args: {
                                            maximum: d.maximumSelectionLength
                                        },
                                    }) :
                                    void a.call(d, b, c);
                            });
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown", ["jquery", "./utils"], function(a, b) {
                    function c(a, b) {
                        (this.$element = a),
                        (this.options = b),
                        c.__super__.constructor.call(this);
                    }
                    return (
                        b.Extend(c, b.Observable),
                        (c.prototype.render = function() {
                            var b = a(
                                '<span class="select2-dropdown"><span class="select2-results"></span></span>'
                            );
                            return (
                                b.attr("dir", this.options.get("dir")), (this.$dropdown = b), b
                            );
                        }),
                        (c.prototype.position = function() {}),
                        (c.prototype.destroy = function() {
                            this.$dropdown.remove();
                        }),
                        c
                    );
                }),
                b.define(
                    "select2/dropdown/search", ["jquery", "../utils"],
                    function(a) {
                        function b() {}
                        return (
                            (b.prototype.render = function(b) {
                                var c = b.call(this),
                                    d = a(
                                        '<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /></span>'
                                    );
                                return (
                                    (this.$searchContainer = d),
                                    (this.$search = d.find("input")),
                                    c.prepend(d),
                                    c
                                );
                            }),
                            (b.prototype.bind = function(b, c, d) {
                                var e = this;
                                b.call(this, c, d),
                                    this.$search.on("keydown", function(a) {
                                        e.trigger("keypress", a),
                                            (e._keyUpPrevented = a.isDefaultPrevented());
                                    }),
                                    this.$search.on("input", function() {
                                        a(this).off("keyup");
                                    }),
                                    this.$search.on("keyup input", function(a) {
                                        e.handleSearch(a);
                                    }),
                                    c.on("open", function() {
                                        e.$search.attr("tabindex", 0),
                                            e.$search.focus(),
                                            window.setTimeout(function() {
                                                e.$search.focus();
                                            }, 0);
                                    }),
                                    c.on("close", function() {
                                        e.$search.attr("tabindex", -1), e.$search.val("");
                                    }),
                                    c.on("results:all", function(a) {
                                        if (null == a.query.term || "" === a.query.term) {
                                            var b = e.showSearch(a);
                                            b
                                                ?
                                                e.$searchContainer.removeClass("select2-search--hide") :
                                                e.$searchContainer.addClass("select2-search--hide");
                                        }
                                    });
                            }),
                            (b.prototype.handleSearch = function() {
                                if (!this._keyUpPrevented) {
                                    var a = this.$search.val();
                                    this.trigger("query", {
                                        term: a
                                    });
                                }
                                this._keyUpPrevented = !1;
                            }),
                            (b.prototype.showSearch = function() {
                                return !0;
                            }),
                            b
                        );
                    }
                ),
                b.define("select2/dropdown/hidePlaceholder", [], function() {
                    function a(a, b, c, d) {
                        (this.placeholder = this.normalizePlaceholder(
                            c.get("placeholder")
                        )),
                        a.call(this, b, c, d);
                    }
                    return (
                        (a.prototype.append = function(a, b) {
                            (b.results = this.removePlaceholder(b.results)), a.call(this, b);
                        }),
                        (a.prototype.normalizePlaceholder = function(a, b) {
                            return "string" == typeof b && (b = {
                                id: "",
                                text: b
                            }), b;
                        }),
                        (a.prototype.removePlaceholder = function(a, b) {
                            for (var c = b.slice(0), d = b.length - 1; d >= 0; d--) {
                                var e = b[d];
                                this.placeholder.id === e.id && c.splice(d, 1);
                            }
                            return c;
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown/infiniteScroll", ["jquery"], function(a) {
                    function b(a, b, c, d) {
                        (this.lastParams = {}),
                        a.call(this, b, c, d),
                            (this.$loadingMore = this.createLoadingMore()),
                            (this.loading = !1);
                    }
                    return (
                        (b.prototype.append = function(a, b) {
                            this.$loadingMore.remove(),
                                (this.loading = !1),
                                a.call(this, b),
                                this.showLoadingMore(b) &&
                                this.$results.append(this.$loadingMore);
                        }),
                        (b.prototype.bind = function(b, c, d) {
                            var e = this;
                            b.call(this, c, d),
                                c.on("query", function(a) {
                                    (e.lastParams = a), (e.loading = !0);
                                }),
                                c.on("query:append", function(a) {
                                    (e.lastParams = a), (e.loading = !0);
                                }),
                                this.$results.on("scroll", function() {
                                    var b = a.contains(
                                        document.documentElement,
                                        e.$loadingMore[0]
                                    );
                                    if (!e.loading && b) {
                                        var c =
                                            e.$results.offset().top + e.$results.outerHeight(!1),
                                            d =
                                            e.$loadingMore.offset().top +
                                            e.$loadingMore.outerHeight(!1);
                                        c + 50 >= d && e.loadMore();
                                    }
                                });
                        }),
                        (b.prototype.loadMore = function() {
                            this.loading = !0;
                            var b = a.extend({}, {
                                page: 1
                            }, this.lastParams);
                            b.page++, this.trigger("query:append", b);
                        }),
                        (b.prototype.showLoadingMore = function(a, b) {
                            return b.pagination && b.pagination.more;
                        }),
                        (b.prototype.createLoadingMore = function() {
                            var b = a('<li class="option load-more" role="treeitem"></li>'),
                                c = this.options.get("translations").get("loadingMore");
                            return b.html(c(this.lastParams)), b;
                        }),
                        b
                    );
                }),
                b.define(
                    "select2/dropdown/attachBody", ["jquery", "../utils"],
                    function(a, b) {
                        function c(a, b, c) {
                            (this.$dropdownParent = c.get("dropdownParent") || document.body),
                            a.call(this, b, c);
                        }
                        return (
                            (c.prototype.bind = function(a, b, c) {
                                var d = this,
                                    e = !1;
                                a.call(this, b, c),
                                    b.on("open", function() {
                                        d._showDropdown(),
                                            d._attachPositioningHandler(b),
                                            e ||
                                            ((e = !0),
                                                b.on("results:all", function() {
                                                    d._positionDropdown(), d._resizeDropdown();
                                                }),
                                                b.on("results:append", function() {
                                                    d._positionDropdown(), d._resizeDropdown();
                                                }));
                                    }),
                                    b.on("close", function() {
                                        d._hideDropdown(), d._detachPositioningHandler(b);
                                    }),
                                    this.$dropdownContainer.on("mousedown", function(a) {
                                        a.stopPropagation();
                                    });
                            }),
                            (c.prototype.position = function(a, b, c) {
                                b.attr("class", c.attr("class")),
                                    b.removeClass("select2"),
                                    b.addClass("select2-container--open"),
                                    b.css({
                                        position: "absolute",
                                        top: -999999
                                    }),
                                    (this.$container = c);
                            }),
                            (c.prototype.render = function(b) {
                                var c = a("<span></span>"),
                                    d = b.call(this);
                                return c.append(d), (this.$dropdownContainer = c), c;
                            }),
                            (c.prototype._hideDropdown = function() {
                                this.$dropdownContainer.detach();
                            }),
                            (c.prototype._attachPositioningHandler = function(c) {
                                var d = this,
                                    e = "scroll.select2." + c.id,
                                    f = "resize.select2." + c.id,
                                    g = "orientationchange.select2." + c.id,
                                    h = this.$container.parents().filter(b.hasScroll);
                                h.each(function() {
                                        a(this).data("select2-scroll-position", {
                                            x: a(this).scrollLeft(),
                                            y: a(this).scrollTop(),
                                        });
                                    }),
                                    h.on(e, function() {
                                        var b = a(this).data("select2-scroll-position");
                                        a(this).scrollTop(b.y);
                                    }),
                                    a(window).on(e + " " + f + " " + g, function() {
                                        d._positionDropdown(), d._resizeDropdown();
                                    });
                            }),
                            (c.prototype._detachPositioningHandler = function(c) {
                                var d = "scroll.select2." + c.id,
                                    e = "resize.select2." + c.id,
                                    f = "orientationchange.select2." + c.id,
                                    g = this.$container.parents().filter(b.hasScroll);
                                g.off(d), a(window).off(d + " " + e + " " + f);
                            }),
                            (c.prototype._positionDropdown = function() {
                                var b = a(window),
                                    c = this.$dropdown.hasClass("select2-dropdown--above"),
                                    d = this.$dropdown.hasClass("select2-dropdown--below"),
                                    e = null,
                                    f = (this.$container.position(), this.$container.offset());
                                f.bottom = f.top + this.$container.outerHeight(!1);
                                var g = {
                                    height: this.$container.outerHeight(!1)
                                };
                                (g.top = f.top), (g.bottom = f.top + g.height);
                                var h = {
                                        height: this.$dropdown.outerHeight(!1)
                                    },
                                    i = {
                                        top: b.scrollTop(),
                                        bottom: b.scrollTop() + b.height(),
                                    },
                                    j = i.top < f.top - h.height,
                                    k = i.bottom > f.bottom + h.height,
                                    l = {
                                        left: f.left,
                                        top: g.bottom
                                    };
                                c || d || (e = "below"),
                                    k || !j || c ? !j && k && c && (e = "below") : (e = "above"),
                                    ("above" == e || (c && "below" !== e)) &&
                                    (l.top = g.top - h.height),
                                    null != e &&
                                    (this.$dropdown
                                        .removeClass(
                                            "select2-dropdown--below select2-dropdown--above"
                                        )
                                        .addClass("select2-dropdown--" + e),
                                        this.$container
                                        .removeClass(
                                            "select2-container--below select2-container--above"
                                        )
                                        .addClass("select2-container--" + e)),
                                    this.$dropdownContainer.css(l);
                            }),
                            (c.prototype._resizeDropdown = function() {
                                this.$dropdownContainer.width();
                                var a = {
                                    width: this.$container.outerWidth(!1) + "px"
                                };
                                this.options.get("dropdownAutoWidth") &&
                                    ((a.minWidth = a.width), (a.width = "auto")),
                                    this.$dropdown.css(a);
                            }),
                            (c.prototype._showDropdown = function() {
                                this.$dropdownContainer.appendTo(this.$dropdownParent),
                                    this._positionDropdown(),
                                    this._resizeDropdown();
                            }),
                            c
                        );
                    }
                ),
                b.define("select2/dropdown/minimumResultsForSearch", [], function() {
                    function a(b) {
                        for (var c = 0, d = 0; d < b.length; d++) {
                            var e = b[d];
                            e.children ? (c += a(e.children)) : c++;
                        }
                        return c;
                    }

                    function b(a, b, c, d) {
                        (this.minimumResultsForSearch = c.get("minimumResultsForSearch")),
                        this.minimumResultsForSearch < 0 &&
                            (this.minimumResultsForSearch = 1 / 0),
                            a.call(this, b, c, d);
                    }
                    return (
                        (b.prototype.showSearch = function(b, c) {
                            return a(c.data.results) < this.minimumResultsForSearch ?
                                !1 :
                                b.call(this, c);
                        }),
                        b
                    );
                }),
                b.define("select2/dropdown/selectOnClose", [], function() {
                    function a() {}
                    return (
                        (a.prototype.bind = function(a, b, c) {
                            var d = this;
                            a.call(this, b, c),
                                b.on("close", function() {
                                    d._handleSelectOnClose();
                                });
                        }),
                        (a.prototype._handleSelectOnClose = function() {
                            var a = this.getHighlightedResults();
                            a.length < 1 || this.trigger("select", {
                                data: a.data("data")
                            });
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown/closeOnSelect", [], function() {
                    function a() {}
                    return (
                        (a.prototype.bind = function(a, b, c) {
                            var d = this;
                            a.call(this, b, c),
                                b.on("select", function(a) {
                                    d._selectTriggered(a);
                                }),
                                b.on("unselect", function(a) {
                                    d._selectTriggered(a);
                                });
                        }),
                        (a.prototype._selectTriggered = function(a, b) {
                            var c = b.originalEvent;
                            (c && c.ctrlKey) || this.trigger("close");
                        }),
                        a
                    );
                }),
                b.define("select2/i18n/en", [], function() {
                    return {
                        errorLoading: function() {
                            return "The results could not be loaded.";
                        },
                        inputTooLong: function(a) {
                            var b = a.input.length - a.maximum,
                                c = "Please delete " + b + " character";
                            return 1 != b && (c += "s"), c;
                        },
                        inputTooShort: function(a) {
                            var b = a.minimum - a.input.length,
                                c = "Please enter " + b + " or more characters";
                            return c;
                        },
                        loadingMore: function() {
                            return "Loading more results…";
                        },
                        maximumSelected: function(a) {
                            var b = "You can only select " + a.maximum + " item";
                            return 1 != a.maximum && (b += "s"), b;
                        },
                        noResults: function() {
                            return "No results found";
                        },
                        searching: function() {
                            return "Searching…";
                        },
                    };
                }),
                b.define(
                    "select2/defaults", [
                        "jquery",
                        "require",
                        "./results",
                        "./selection/single",
                        "./selection/multiple",
                        "./selection/placeholder",
                        "./selection/allowClear",
                        "./selection/search",
                        "./selection/eventRelay",
                        "./utils",
                        "./translation",
                        "./diacritics",
                        "./data/select",
                        "./data/array",
                        "./data/ajax",
                        "./data/tags",
                        "./data/tokenizer",
                        "./data/minimumInputLength",
                        "./data/maximumInputLength",
                        "./data/maximumSelectionLength",
                        "./dropdown",
                        "./dropdown/search",
                        "./dropdown/hidePlaceholder",
                        "./dropdown/infiniteScroll",
                        "./dropdown/attachBody",
                        "./dropdown/minimumResultsForSearch",
                        "./dropdown/selectOnClose",
                        "./dropdown/closeOnSelect",
                        "./i18n/en",
                    ],
                    function(
                        a,
                        b,
                        c,
                        d,
                        e,
                        f,
                        g,
                        h,
                        i,
                        j,
                        k,
                        l,
                        m,
                        n,
                        o,
                        p,
                        q,
                        r,
                        s,
                        t,
                        u,
                        v,
                        w,
                        x,
                        y,
                        z,
                        A,
                        B,
                        C
                    ) {
                        function D() {
                            this.reset();
                        }
                        (D.prototype.apply = function(l) {
                            if (
                                ((l = a.extend({}, this.defaults, l)), null == l.dataAdapter)
                            ) {
                                if (
                                    ((l.dataAdapter =
                                            null != l.ajax ? o : null != l.data ? n : m),
                                        l.minimumInputLength > 0 &&
                                        (l.dataAdapter = j.Decorate(l.dataAdapter, r)),
                                        l.maximumInputLength > 0 &&
                                        (l.dataAdapter = j.Decorate(l.dataAdapter, s)),
                                        l.maximumSelectionLength > 0 &&
                                        (l.dataAdapter = j.Decorate(l.dataAdapter, t)),
                                        l.tags && (l.dataAdapter = j.Decorate(l.dataAdapter, p)),
                                        (null != l.tokenSeparators || null != l.tokenizer) &&
                                        (l.dataAdapter = j.Decorate(l.dataAdapter, q)),
                                        null != l.query)
                                ) {
                                    var C = b(l.amdBase + "compat/query");
                                    l.dataAdapter = j.Decorate(l.dataAdapter, C);
                                }
                                if (null != l.initSelection) {
                                    var D = b(l.amdBase + "compat/initSelection");
                                    l.dataAdapter = j.Decorate(l.dataAdapter, D);
                                }
                            }
                            if (
                                (null == l.resultsAdapter &&
                                    ((l.resultsAdapter = c),
                                        null != l.ajax &&
                                        (l.resultsAdapter = j.Decorate(l.resultsAdapter, x)),
                                        null != l.placeholder &&
                                        (l.resultsAdapter = j.Decorate(l.resultsAdapter, w)),
                                        l.selectOnClose &&
                                        (l.resultsAdapter = j.Decorate(l.resultsAdapter, A))),
                                    null == l.dropdownAdapter)
                            ) {
                                if (l.multiple) l.dropdownAdapter = u;
                                else {
                                    var E = j.Decorate(u, v);
                                    l.dropdownAdapter = E;
                                }
                                if (
                                    (0 !== l.minimumResultsForSearch &&
                                        (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, z)),
                                        l.closeOnSelect &&
                                        (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, B)),
                                        null != l.dropdownCssClass ||
                                        null != l.dropdownCss ||
                                        null != l.adaptDropdownCssClass)
                                ) {
                                    var F = b(l.amdBase + "compat/dropdownCss");
                                    l.dropdownAdapter = j.Decorate(l.dropdownAdapter, F);
                                }
                                l.dropdownAdapter = j.Decorate(l.dropdownAdapter, y);
                            }
                            if (null == l.selectionAdapter) {
                                if (
                                    ((l.selectionAdapter = l.multiple ? e : d),
                                        null != l.placeholder &&
                                        (l.selectionAdapter = j.Decorate(l.selectionAdapter, f)),
                                        l.allowClear &&
                                        (l.selectionAdapter = j.Decorate(l.selectionAdapter, g)),
                                        l.multiple &&
                                        (l.selectionAdapter = j.Decorate(l.selectionAdapter, h)),
                                        null != l.containerCssClass ||
                                        null != l.containerCss ||
                                        null != l.adaptContainerCssClass)
                                ) {
                                    var G = b(l.amdBase + "compat/containerCss");
                                    l.selectionAdapter = j.Decorate(l.selectionAdapter, G);
                                }
                                l.selectionAdapter = j.Decorate(l.selectionAdapter, i);
                            }
                            if ("string" == typeof l.language)
                                if (l.language.indexOf("-") > 0) {
                                    var H = l.language.split("-"),
                                        I = H[0];
                                    l.language = [l.language, I];
                                } else l.language = [l.language];
                            if (a.isArray(l.language)) {
                                var J = new k();
                                l.language.push("en");
                                for (var K = l.language, L = 0; L < K.length; L++) {
                                    var M = K[L],
                                        N = {};
                                    try {
                                        N = k.loadPath(M);
                                    } catch (O) {
                                        try {
                                            (M = this.defaults.amdLanguageBase + M),
                                            (N = k.loadPath(M));
                                        } catch (P) {
                                            l.debug &&
                                                window.console &&
                                                console.warn &&
                                                console.warn(
                                                    'Select2: The language file for "' +
                                                    M +
                                                    '" could not be automatically loaded. A fallback will be used instead.'
                                                );
                                            continue;
                                        }
                                    }
                                    J.extend(N);
                                }
                                l.translations = J;
                            } else {
                                var Q = k.loadPath(this.defaults.amdLanguageBase + "en"),
                                    R = new k(l.language);
                                R.extend(Q), (l.translations = R);
                            }
                            return l;
                        }),
                        (D.prototype.reset = function() {
                            function b(a) {
                                function b(a) {
                                    return l[a] || a;
                                }
                                return a.replace(/[^\u0000-\u007E]/g, b);
                            }

                            function c(d, e) {
                                if ("" === a.trim(d.term)) return e;
                                if (e.children && e.children.length > 0) {
                                    for (
                                        var f = a.extend(!0, {}, e), g = e.children.length - 1; g >= 0; g--
                                    ) {
                                        var h = e.children[g],
                                            i = c(d, h);
                                        null == i && f.children.splice(g, 1);
                                    }
                                    return f.children.length > 0 ? f : c(d, f);
                                }
                                var j = b(e.text).toUpperCase(),
                                    k = b(d.term).toUpperCase();
                                return j.indexOf(k) > -1 ? e : null;
                            }
                            this.defaults = {
                                amdBase: "./",
                                amdLanguageBase: "./i18n/",
                                closeOnSelect: !0,
                                debug: !1,
                                dropdownAutoWidth: !1,
                                escapeMarkup: j.escapeMarkup,
                                language: C,
                                matcher: c,
                                minimumInputLength: 0,
                                maximumInputLength: 0,
                                maximumSelectionLength: 0,
                                minimumResultsForSearch: 0,
                                selectOnClose: !1,
                                sorter: function(a) {
                                    return a;
                                },
                                templateResult: function(a) {
                                    return a.text;
                                },
                                templateSelection: function(a) {
                                    return a.text;
                                },
                                theme: "default",
                                width: "resolve",
                            };
                        }),
                        (D.prototype.set = function(b, c) {
                            var d = a.camelCase(b),
                                e = {};
                            e[d] = c;
                            var f = j._convertData(e);
                            a.extend(this.defaults, f);
                        });
                        var E = new D();
                        return E;
                    }
                ),
                b.define(
                    "select2/options", ["require", "jquery", "./defaults", "./utils"],
                    function(a, b, c, d) {
                        function e(b, e) {
                            if (
                                ((this.options = b),
                                    null != e && this.fromElement(e),
                                    (this.options = c.apply(this.options)),
                                    e && e.is("input"))
                            ) {
                                var f = a(this.get("amdBase") + "compat/inputData");
                                this.options.dataAdapter = d.Decorate(
                                    this.options.dataAdapter,
                                    f
                                );
                            }
                        }
                        return (
                            (e.prototype.fromElement = function(a) {
                                var c = ["select2"];
                                null == this.options.multiple &&
                                    (this.options.multiple = a.prop("multiple")),
                                    null == this.options.disabled &&
                                    (this.options.disabled = a.prop("disabled")),
                                    null == this.options.language &&
                                    (a.prop("lang") ?
                                        (this.options.language = a.prop("lang").toLowerCase()) :
                                        a.closest("[lang]").prop("lang") &&
                                        (this.options.language = a
                                            .closest("[lang]")
                                            .prop("lang"))),
                                    null == this.options.dir &&
                                    (this.options.dir = a.prop("dir") ?
                                        a.prop("dir") :
                                        a.closest("[dir]").prop("dir") ?
                                        a.closest("[dir]").prop("dir") :
                                        "ltr"),
                                    a.prop("disabled", this.options.disabled),
                                    a.prop("multiple", this.options.multiple),
                                    a.data("select2Tags") &&
                                    (this.options.debug &&
                                        window.console &&
                                        console.warn &&
                                        console.warn(
                                            'Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'
                                        ),
                                        a.data("data", a.data("select2Tags")),
                                        a.data("tags", !0)),
                                    a.data("ajaxUrl") &&
                                    (this.options.debug &&
                                        window.console &&
                                        console.warn &&
                                        console.warn(
                                            "Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."
                                        ),
                                        a.attr("ajax--url", a.data("ajaxUrl")),
                                        a.data("ajax--url", a.data("ajaxUrl")));
                                var e = {};
                                e =
                                    b.fn.jquery &&
                                    "1." == b.fn.jquery.substr(0, 2) &&
                                    a[0].dataset ?
                                    b.extend(!0, {}, a[0].dataset, a.data()) :
                                    a.data();
                                var f = b.extend(!0, {}, e);
                                f = d._convertData(f);
                                for (var g in f)
                                    b.inArray(g, c) > -1 ||
                                    (b.isPlainObject(this.options[g]) ?
                                        b.extend(this.options[g], f[g]) :
                                        (this.options[g] = f[g]));
                                return this;
                            }),
                            (e.prototype.get = function(a) {
                                return this.options[a];
                            }),
                            (e.prototype.set = function(a, b) {
                                this.options[a] = b;
                            }),
                            e
                        );
                    }
                ),
                b.define(
                    "select2/core", ["jquery", "./options", "./utils", "./keys"],
                    function(a, b, c, d) {
                        var e = function(a, c) {
                            null != a.data("select2") && a.data("select2").destroy(),
                                (this.$element = a),
                                (this.id = this._generateId(a)),
                                (c = c || {}),
                                (this.options = new b(c, a)),
                                e.__super__.constructor.call(this);
                            var d = a.attr("tabindex") || 0;
                            a.data("old-tabindex", d), a.attr("tabindex", "-1");
                            var f = this.options.get("dataAdapter");
                            this.dataAdapter = new f(a, this.options);
                            var g = this.render();
                            this._placeContainer(g);
                            var h = this.options.get("selectionAdapter");
                            (this.selection = new h(a, this.options)),
                            (this.$selection = this.selection.render()),
                            this.selection.position(this.$selection, g);
                            var i = this.options.get("dropdownAdapter");
                            (this.dropdown = new i(a, this.options)),
                            (this.$dropdown = this.dropdown.render()),
                            this.dropdown.position(this.$dropdown, g);
                            var j = this.options.get("resultsAdapter");
                            (this.results = new j(a, this.options, this.dataAdapter)),
                            (this.$results = this.results.render()),
                            this.results.position(this.$results, this.$dropdown);
                            var k = this;
                            this._bindAdapters(),
                                this._registerDomEvents(),
                                this._registerDataEvents(),
                                this._registerSelectionEvents(),
                                this._registerDropdownEvents(),
                                this._registerResultsEvents(),
                                this._registerEvents(),
                                this.dataAdapter.current(function(a) {
                                    k.trigger("selection:update", {
                                        data: a
                                    });
                                }),
                                a.addClass("select2-hidden-accessible"),
                                a.attr("aria-hidden", "true"),
                                this._syncAttributes(),
                                a.data("select2", this);
                        };
                        return (
                            c.Extend(e, c.Observable),
                            (e.prototype._generateId = function(a) {
                                var b = "";
                                return (
                                    (b =
                                        null != a.attr("id") ?
                                        a.attr("id") :
                                        null != a.attr("name") ?
                                        a.attr("name") + "-" + c.generateChars(2) :
                                        c.generateChars(4)),
                                    (b = "select2-" + b)
                                );
                            }),
                            (e.prototype._placeContainer = function(a) {
                                a.insertAfter(this.$element);
                                var b = this._resolveWidth(
                                    this.$element,
                                    this.options.get("width")
                                );
                                null != b && a.css("width", b);
                            }),
                            (e.prototype._resolveWidth = function(a, b) {
                                var c =
                                    /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
                                if ("resolve" == b) {
                                    var d = this._resolveWidth(a, "style");
                                    return null != d ? d : this._resolveWidth(a, "element");
                                }
                                if ("element" == b) {
                                    var e = a.outerWidth(!1);
                                    return 0 >= e ? "auto" : e + "px";
                                }
                                if ("style" == b) {
                                    var f = a.attr("style");
                                    if ("string" != typeof f) return null;
                                    for (
                                        var g = f.split(";"), h = 0, i = g.length; i > h; h += 1
                                    ) {
                                        var j = g[h].replace(/\s/g, ""),
                                            k = j.match(c);
                                        if (null !== k && k.length >= 1) return k[1];
                                    }
                                    return null;
                                }
                                return b;
                            }),
                            (e.prototype._bindAdapters = function() {
                                this.dataAdapter.bind(this, this.$container),
                                    this.selection.bind(this, this.$container),
                                    this.dropdown.bind(this, this.$container),
                                    this.results.bind(this, this.$container);
                            }),
                            (e.prototype._registerDomEvents = function() {
                                var b = this;
                                this.$element.on("change.select2", function() {
                                        b.dataAdapter.current(function(a) {
                                            b.trigger("selection:update", {
                                                data: a
                                            });
                                        });
                                    }),
                                    (this._sync = c.bind(this._syncAttributes, this)),
                                    this.$element[0].attachEvent &&
                                    this.$element[0].attachEvent(
                                        "onpropertychange",
                                        this._sync
                                    );
                                var d =
                                    window.MutationObserver ||
                                    window.WebKitMutationObserver ||
                                    window.MozMutationObserver;
                                null != d ?
                                    ((this._observer = new d(function(c) {
                                            a.each(c, b._sync);
                                        })),
                                        this._observer.observe(this.$element[0], {
                                            attributes: !0,
                                            subtree: !1,
                                        })) :
                                    this.$element[0].addEventListener &&
                                    this.$element[0].addEventListener(
                                        "DOMAttrModified",
                                        b._sync, !1
                                    );
                            }),
                            (e.prototype._registerDataEvents = function() {
                                var a = this;
                                this.dataAdapter.on("*", function(b, c) {
                                    a.trigger(b, c);
                                });
                            }),
                            (e.prototype._registerSelectionEvents = function() {
                                var b = this,
                                    c = ["toggle", "focus"];
                                this.selection.on("toggle", function() {
                                        b.toggleDropdown();
                                    }),
                                    this.selection.on("focus", function(a) {
                                        b.focus(a);
                                    }),
                                    this.selection.on("*", function(d, e) {
                                        -1 === a.inArray(d, c) && b.trigger(d, e);
                                    });
                            }),
                            (e.prototype._registerDropdownEvents = function() {
                                var a = this;
                                this.dropdown.on("*", function(b, c) {
                                    a.trigger(b, c);
                                });
                            }),
                            (e.prototype._registerResultsEvents = function() {
                                var a = this;
                                this.results.on("*", function(b, c) {
                                    a.trigger(b, c);
                                });
                            }),
                            (e.prototype._registerEvents = function() {
                                var a = this;
                                this.on("open", function() {
                                        a.$container.addClass("select2-container--open");
                                    }),
                                    this.on("close", function() {
                                        a.$container.removeClass("select2-container--open");
                                    }),
                                    this.on("enable", function() {
                                        a.$container.removeClass("select2-container--disabled");
                                    }),
                                    this.on("disable", function() {
                                        a.$container.addClass("select2-container--disabled");
                                    }),
                                    this.on("blur", function() {
                                        a.$container.removeClass("select2-container--focus");
                                    }),
                                    this.on("query", function(b) {
                                        a.isOpen() || a.trigger("open"),
                                            this.dataAdapter.query(b, function(c) {
                                                a.trigger("results:all", {
                                                    data: c,
                                                    query: b
                                                });
                                            });
                                    }),
                                    this.on("query:append", function(b) {
                                        this.dataAdapter.query(b, function(c) {
                                            a.trigger("results:append", {
                                                data: c,
                                                query: b
                                            });
                                        });
                                    }),
                                    this.on("keypress", function(b) {
                                        var c = b.which;
                                        a.isOpen() ?
                                            c === d.ESC || c === d.TAB || (c === d.UP && b.altKey) ?
                                            (a.close(), b.preventDefault()) :
                                            c === d.ENTER ?
                                            (a.trigger("results:select"), b.preventDefault()) :
                                            c === d.SPACE && b.ctrlKey ?
                                            (a.trigger("results:toggle"), b.preventDefault()) :
                                            c === d.UP ?
                                            (a.trigger("results:previous"), b.preventDefault()) :
                                            c === d.DOWN &&
                                            (a.trigger("results:next"), b.preventDefault()) :
                                            (c === d.ENTER ||
                                                c === d.SPACE ||
                                                (c === d.DOWN && b.altKey)) &&
                                            (a.open(), b.preventDefault());
                                    });
                            }),
                            (e.prototype._syncAttributes = function() {
                                this.options.set("disabled", this.$element.prop("disabled")),
                                    this.options.get("disabled") ?
                                    (this.isOpen() && this.close(), this.trigger("disable")) :
                                    this.trigger("enable");
                            }),
                            (e.prototype.trigger = function(a, b) {
                                var c = e.__super__.trigger,
                                    d = {
                                        open: "opening",
                                        close: "closing",
                                        select: "selecting",
                                        unselect: "unselecting",
                                    };
                                if (a in d) {
                                    var f = d[a],
                                        g = {
                                            prevented: !1,
                                            name: a,
                                            args: b
                                        };
                                    if ((c.call(this, f, g), g.prevented))
                                        return void(b.prevented = !0);
                                }
                                c.call(this, a, b);
                            }),
                            (e.prototype.toggleDropdown = function() {
                                this.options.get("disabled") ||
                                    (this.isOpen() ? this.close() : this.open());
                            }),
                            (e.prototype.open = function() {
                                this.isOpen() ||
                                    (this.trigger("query", {}), this.trigger("open"));
                            }),
                            (e.prototype.close = function() {
                                this.isOpen() && this.trigger("close");
                            }),
                            (e.prototype.isOpen = function() {
                                return this.$container.hasClass("select2-container--open");
                            }),
                            (e.prototype.hasFocus = function() {
                                return this.$container.hasClass("select2-container--focus");
                            }),
                            (e.prototype.focus = function() {
                                this.hasFocus() ||
                                    (this.$container.addClass("select2-container--focus"),
                                        this.trigger("focus"));
                            }),
                            (e.prototype.enable = function(a) {
                                this.options.get("debug") &&
                                    window.console &&
                                    console.warn &&
                                    console.warn(
                                        'Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'
                                    ),
                                    (null == a || 0 === a.length) && (a = [!0]);
                                var b = !a[0];
                                this.$element.prop("disabled", b);
                            }),
                            (e.prototype.data = function() {
                                this.options.get("debug") &&
                                    arguments.length > 0 &&
                                    window.console &&
                                    console.warn &&
                                    console.warn(
                                        'Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.'
                                    );
                                var a = [];
                                return (
                                    this.dataAdapter.current(function(b) {
                                        a = b;
                                    }),
                                    a
                                );
                            }),
                            (e.prototype.val = function(b) {
                                if (
                                    (this.options.get("debug") &&
                                        window.console &&
                                        console.warn &&
                                        console.warn(
                                            'Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'
                                        ),
                                        null == b || 0 === b.length)
                                )
                                    return this.$element.val();
                                var c = b[0];
                                a.isArray(c) &&
                                    (c = a.map(c, function(a) {
                                        return a.toString();
                                    })),
                                    this.$element.val(c).trigger("change");
                            }),
                            (e.prototype.destroy = function() {
                                this.$container.remove(),
                                    this.$element[0].detachEvent &&
                                    this.$element[0].detachEvent(
                                        "onpropertychange",
                                        this._sync
                                    ),
                                    null != this._observer ?
                                    (this._observer.disconnect(), (this._observer = null)) :
                                    this.$element[0].removeEventListener &&
                                    this.$element[0].removeEventListener(
                                        "DOMAttrModified",
                                        this._sync, !1
                                    ),
                                    (this._sync = null),
                                    this.$element.off(".select2"),
                                    this.$element.attr(
                                        "tabindex",
                                        this.$element.data("old-tabindex")
                                    ),
                                    this.$element.removeClass("select2-hidden-accessible"),
                                    this.$element.attr("aria-hidden", "false"),
                                    this.$element.removeData("select2"),
                                    this.dataAdapter.destroy(),
                                    this.selection.destroy(),
                                    this.dropdown.destroy(),
                                    this.results.destroy(),
                                    (this.dataAdapter = null),
                                    (this.selection = null),
                                    (this.dropdown = null),
                                    (this.results = null);
                            }),
                            (e.prototype.render = function() {
                                var b = a(
                                    '<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>'
                                );
                                return (
                                    b.attr("dir", this.options.get("dir")),
                                    (this.$container = b),
                                    this.$container.addClass(
                                        "select2-container--" + this.options.get("theme")
                                    ),
                                    b.data("element", this.$element),
                                    b
                                );
                            }),
                            e
                        );
                    }
                ),
                b.define("select2/compat/utils", ["jquery"], function(a) {
                    function b(b, c, d) {
                        var e,
                            f,
                            g = [];
                        (e = a.trim(b.attr("class"))),
                        e &&
                            ((e = "" + e),
                                a(e.split(/\s+/)).each(function() {
                                    0 === this.indexOf("select2-") && g.push(this);
                                })),
                            (e = a.trim(c.attr("class"))),
                            e &&
                            ((e = "" + e),
                                a(e.split(/\s+/)).each(function() {
                                    0 !== this.indexOf("select2-") &&
                                        ((f = d(this)), null != f && g.push(f));
                                })),
                            b.attr("class", g.join(" "));
                    }
                    return {
                        syncCssClasses: b
                    };
                }),
                b.define(
                    "select2/compat/containerCss", ["jquery", "./utils"],
                    function(a, b) {
                        function c() {
                            return null;
                        }

                        function d() {}
                        return (
                            (d.prototype.render = function(d) {
                                var e = d.call(this),
                                    f = this.options.get("containerCssClass") || "";
                                a.isFunction(f) && (f = f(this.$element));
                                var g = this.options.get("adaptContainerCssClass");
                                if (((g = g || c), -1 !== f.indexOf(":all:"))) {
                                    f = f.replace(":all:", "");
                                    var h = g;
                                    g = function(a) {
                                        var b = h(a);
                                        return null != b ? b + " " + a : a;
                                    };
                                }
                                var i = this.options.get("containerCss") || {};
                                return (
                                    a.isFunction(i) && (i = i(this.$element)),
                                    b.syncCssClasses(e, this.$element, g),
                                    e.css(i),
                                    e.addClass(f),
                                    e
                                );
                            }),
                            d
                        );
                    }
                ),
                b.define(
                    "select2/compat/dropdownCss", ["jquery", "./utils"],
                    function(a, b) {
                        function c() {
                            return null;
                        }

                        function d() {}
                        return (
                            (d.prototype.render = function(d) {
                                var e = d.call(this),
                                    f = this.options.get("dropdownCssClass") || "";
                                a.isFunction(f) && (f = f(this.$element));
                                var g = this.options.get("adaptDropdownCssClass");
                                if (((g = g || c), -1 !== f.indexOf(":all:"))) {
                                    f = f.replace(":all:", "");
                                    var h = g;
                                    g = function(a) {
                                        var b = h(a);
                                        return null != b ? b + " " + a : a;
                                    };
                                }
                                var i = this.options.get("dropdownCss") || {};
                                return (
                                    a.isFunction(i) && (i = i(this.$element)),
                                    b.syncCssClasses(e, this.$element, g),
                                    e.css(i),
                                    e.addClass(f),
                                    e
                                );
                            }),
                            d
                        );
                    }
                ),
                b.define("select2/compat/initSelection", ["jquery"], function(a) {
                    function b(a, b, c) {
                        c.get("debug") &&
                            window.console &&
                            console.warn &&
                            console.warn(
                                "Select2: The `initSelection` option has been deprecated in favor of a custom data adapter that overrides the `current` method. This method is now called multiple times instead of a single time when the instance is initialized. Support will be removed for the `initSelection` option in future versions of Select2"
                            ),
                            (this.initSelection = c.get("initSelection")),
                            (this._isInitialized = !1),
                            a.call(this, b, c);
                    }
                    return (
                        (b.prototype.current = function(b, c) {
                            var d = this;
                            return this._isInitialized ?
                                void b.call(this, c) :
                                void this.initSelection.call(
                                    null,
                                    this.$element,
                                    function(b) {
                                        (d._isInitialized = !0), a.isArray(b) || (b = [b]), c(b);
                                    }
                                );
                        }),
                        b
                    );
                }),
                b.define("select2/compat/inputData", ["jquery"], function(a) {
                    function b(a, b, c) {
                        (this._currentData = []),
                        (this._valueSeparator = c.get("valueSeparator") || ","),
                        "hidden" === b.prop("type") &&
                            c.get("debug") &&
                            console &&
                            console.warn &&
                            console.warn(
                                "Select2: Using a hidden input with Select2 is no longer supported and may stop working in the future. It is recommended to use a `<select>` element instead."
                            ),
                            a.call(this, b, c);
                    }
                    return (
                        (b.prototype.current = function(b, c) {
                            function d(b, c) {
                                var e = [];
                                return (
                                    b.selected || -1 !== a.inArray(b.id, c) ?
                                    ((b.selected = !0), e.push(b)) :
                                    (b.selected = !1),
                                    b.children && e.push.apply(e, d(b.children, c)),
                                    e
                                );
                            }
                            for (var e = [], f = 0; f < this._currentData.length; f++) {
                                var g = this._currentData[f];
                                e.push.apply(
                                    e,
                                    d(g, this.$element.val().split(this._valueSeparator))
                                );
                            }
                            c(e);
                        }),
                        (b.prototype.select = function(b, c) {
                            if (this.options.get("multiple")) {
                                var d = this.$element.val();
                                (d += this._valueSeparator + c.id),
                                this.$element.val(d),
                                    this.$element.trigger("change");
                            } else
                                this.current(function(b) {
                                    a.map(b, function(a) {
                                        a.selected = !1;
                                    });
                                }),
                                this.$element.val(c.id),
                                this.$element.trigger("change");
                        }),
                        (b.prototype.unselect = function(a, b) {
                            var c = this;
                            (b.selected = !1),
                            this.current(function(a) {
                                for (var d = [], e = 0; e < a.length; e++) {
                                    var f = a[e];
                                    b.id != f.id && d.push(f.id);
                                }
                                c.$element.val(d.join(c._valueSeparator)),
                                    c.$element.trigger("change");
                            });
                        }),
                        (b.prototype.query = function(a, b, c) {
                            for (var d = [], e = 0; e < this._currentData.length; e++) {
                                var f = this._currentData[e],
                                    g = this.matches(b, f);
                                null !== g && d.push(g);
                            }
                            c({
                                results: d
                            });
                        }),
                        (b.prototype.addOptions = function(b, c) {
                            var d = a.map(c, function(b) {
                                return a.data(b[0], "data");
                            });
                            this._currentData.push.apply(this._currentData, d);
                        }),
                        b
                    );
                }),
                b.define("select2/compat/matcher", ["jquery"], function(a) {
                    function b(b) {
                        function c(c, d) {
                            var e = a.extend(!0, {}, d);
                            if (null == c.term || "" === a.trim(c.term)) return e;
                            if (d.children) {
                                for (var f = d.children.length - 1; f >= 0; f--) {
                                    var g = d.children[f],
                                        h = b(c.term, g.text, g);
                                    h || e.children.splice(f, 1);
                                }
                                if (e.children.length > 0) return e;
                            }
                            return b(c.term, d.text, d) ? e : null;
                        }
                        return c;
                    }
                    return b;
                }),
                b.define("select2/compat/query", [], function() {
                    function a(a, b, c) {
                        c.get("debug") &&
                            window.console &&
                            console.warn &&
                            console.warn(
                                "Select2: The `query` option has been deprecated in favor of a custom data adapter that overrides the `query` method. Support will be removed for the `query` option in future versions of Select2."
                            ),
                            a.call(this, b, c);
                    }
                    return (
                        (a.prototype.query = function(a, b, c) {
                            b.callback = c;
                            var d = this.options.get("query");
                            d.call(null, b);
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown/attachContainer", [], function() {
                    function a(a, b, c) {
                        a.call(this, b, c);
                    }
                    return (
                        (a.prototype.position = function(a, b, c) {
                            var d = c.find(".dropdown-wrapper");
                            d.append(b),
                                b.addClass("select2-dropdown--below"),
                                c.addClass("select2-container--below");
                        }),
                        a
                    );
                }),
                b.define("select2/dropdown/stopPropagation", [], function() {
                    function a() {}
                    return (
                        (a.prototype.bind = function(a, b, c) {
                            a.call(this, b, c);
                            var d = [
                                "blur",
                                "change",
                                "click",
                                "dblclick",
                                "focus",
                                "focusin",
                                "focusout",
                                "input",
                                "keydown",
                                "keyup",
                                "keypress",
                                "mousedown",
                                "mouseenter",
                                "mouseleave",
                                "mousemove",
                                "mouseover",
                                "mouseup",
                                "search",
                                "touchend",
                                "touchstart",
                            ];
                            this.$dropdown.on(d.join(" "), function(a) {
                                a.stopPropagation();
                            });
                        }),
                        a
                    );
                }),
                b.define("select2/selection/stopPropagation", [], function() {
                    function a() {}
                    return (
                        (a.prototype.bind = function(a, b, c) {
                            a.call(this, b, c);
                            var d = [
                                "blur",
                                "change",
                                "click",
                                "dblclick",
                                "focus",
                                "focusin",
                                "focusout",
                                "input",
                                "keydown",
                                "keyup",
                                "keypress",
                                "mousedown",
                                "mouseenter",
                                "mouseleave",
                                "mousemove",
                                "mouseover",
                                "mouseup",
                                "search",
                                "touchend",
                                "touchstart",
                            ];
                            this.$selection.on(d.join(" "), function(a) {
                                a.stopPropagation();
                            });
                        }),
                        a
                    );
                }),
                b.define(
                    "jquery.select2", ["jquery", "require", "./select2/core", "./select2/defaults"],
                    function(a, b, c, d) {
                        if ((b("jquery.mousewheel"), null == a.fn.select2)) {
                            var e = ["open", "close", "destroy"];
                            a.fn.select2 = function(b) {
                                if (((b = b || {}), "object" == typeof b))
                                    return (
                                        this.each(function() {
                                            {
                                                var d = a.extend({}, b, !0);
                                                new c(a(this), d);
                                            }
                                        }),
                                        this
                                    );
                                if ("string" == typeof b) {
                                    var d = this.data("select2");
                                    null == d &&
                                        window.console &&
                                        console.error &&
                                        console.error(
                                            "The select2('" +
                                            b +
                                            "') method was called on an element that is not using Select2."
                                        );
                                    var f = Array.prototype.slice.call(arguments, 1),
                                        g = d[b](f);
                                    return a.inArray(b, e) > -1 ? this : g;
                                }
                                throw new Error("Invalid arguments for Select2: " + b);
                            };
                        }
                        return (
                            null == a.fn.select2.defaults && (a.fn.select2.defaults = d), c
                        );
                    }
                ),
                (function(c) {
                    "function" == typeof b.define && b.define.amd ?
                        b.define("jquery.mousewheel", ["jquery"], c) :
                        "object" == typeof exports ?
                        (module.exports = c) :
                        c(a);
                })(function(a) {
                    function b(b) {
                        var g = b || window.event,
                            h = i.call(arguments, 1),
                            j = 0,
                            l = 0,
                            m = 0,
                            n = 0,
                            o = 0,
                            p = 0;
                        if (
                            ((b = a.event.fix(g)),
                                (b.type = "mousewheel"),
                                "detail" in g && (m = -1 * g.detail),
                                "wheelDelta" in g && (m = g.wheelDelta),
                                "wheelDeltaY" in g && (m = g.wheelDeltaY),
                                "wheelDeltaX" in g && (l = -1 * g.wheelDeltaX),
                                "axis" in g &&
                                g.axis === g.HORIZONTAL_AXIS &&
                                ((l = -1 * m), (m = 0)),
                                (j = 0 === m ? l : m),
                                "deltaY" in g && ((m = -1 * g.deltaY), (j = m)),
                                "deltaX" in g && ((l = g.deltaX), 0 === m && (j = -1 * l)),
                                0 !== m || 0 !== l)
                        ) {
                            if (1 === g.deltaMode) {
                                var q = a.data(this, "mousewheel-line-height");
                                (j *= q), (m *= q), (l *= q);
                            } else if (2 === g.deltaMode) {
                                var r = a.data(this, "mousewheel-page-height");
                                (j *= r), (m *= r), (l *= r);
                            }
                            if (
                                ((n = Math.max(Math.abs(m), Math.abs(l))),
                                    (!f || f > n) && ((f = n), d(g, n) && (f /= 40)),
                                    d(g, n) && ((j /= 40), (l /= 40), (m /= 40)),
                                    (j = Math[j >= 1 ? "floor" : "ceil"](j / f)),
                                    (l = Math[l >= 1 ? "floor" : "ceil"](l / f)),
                                    (m = Math[m >= 1 ? "floor" : "ceil"](m / f)),
                                    k.settings.normalizeOffset && this.getBoundingClientRect)
                            ) {
                                var s = this.getBoundingClientRect();
                                (o = b.clientX - s.left), (p = b.clientY - s.top);
                            }
                            return (
                                (b.deltaX = l),
                                (b.deltaY = m),
                                (b.deltaFactor = f),
                                (b.offsetX = o),
                                (b.offsetY = p),
                                (b.deltaMode = 0),
                                h.unshift(b, j, l, m),
                                e && clearTimeout(e),
                                (e = setTimeout(c, 200)),
                                (a.event.dispatch || a.event.handle).apply(this, h)
                            );
                        }
                    }

                    function c() {
                        f = null;
                    }

                    function d(a, b) {
                        return (
                            k.settings.adjustOldDeltas &&
                            "mousewheel" === a.type &&
                            b % 120 === 0
                        );
                    }
                    var e,
                        f,
                        g = [
                            "wheel",
                            "mousewheel",
                            "DOMMouseScroll",
                            "MozMousePixelScroll",
                        ],
                        h =
                        "onwheel" in document || document.documentMode >= 9 ?
                        ["wheel"] :
                        ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
                        i = Array.prototype.slice;
                    if (a.event.fixHooks)
                        for (var j = g.length; j;)
                            a.event.fixHooks[g[--j]] = a.event.mouseHooks;
                    var k = (a.event.special.mousewheel = {
                        version: "3.1.12",
                        setup: function() {
                            if (this.addEventListener)
                                for (var c = h.length; c;)
                                    this.addEventListener(h[--c], b, !1);
                            else this.onmousewheel = b;
                            a.data(this, "mousewheel-line-height", k.getLineHeight(this)),
                                a.data(this, "mousewheel-page-height", k.getPageHeight(this));
                        },
                        teardown: function() {
                            if (this.removeEventListener)
                                for (var c = h.length; c;)
                                    this.removeEventListener(h[--c], b, !1);
                            else this.onmousewheel = null;
                            a.removeData(this, "mousewheel-line-height"),
                                a.removeData(this, "mousewheel-page-height");
                        },
                        getLineHeight: function(b) {
                            var c = a(b),
                                d = c["offsetParent" in a.fn ? "offsetParent" : "parent"]();
                            return (
                                d.length || (d = a("body")),
                                parseInt(d.css("fontSize"), 10) ||
                                parseInt(c.css("fontSize"), 10) ||
                                16
                            );
                        },
                        getPageHeight: function(b) {
                            return a(b).height();
                        },
                        settings: {
                            adjustOldDeltas: !0,
                            normalizeOffset: !0
                        },
                    });
                    a.fn.extend({
                        mousewheel: function(a) {
                            return a ?
                                this.bind("mousewheel", a) :
                                this.trigger("mousewheel");
                        },
                        unmousewheel: function(a) {
                            return this.unbind("mousewheel", a);
                        },
                    });
                }), {
                    define: b.define,
                    require: b.require
                }
            );
        })(),
        c = b.require("jquery.select2");
    return (a.fn.select2.amd = b), c;
});

/*!
 * jQuery EasyTree Plugin
 * http://www.EasyJsTree.com
 *
 * Copyright 2014 Matthew Rand
 * Released under the MIT license
 * V1.0.1
 */
(function($) {
    $.fn.easytree = function(a) {
        var b = this;
        var c = new F(b, a);
        return c;
    };
    var F = function(z, A) {
        var B = {
            allowActivate: true,
            data: null,
            dataUrl: null,
            dataUrlJson: null,
            disableIcons: false,
            enableDnd: false,
            ordering: null,
            slidingTime: 100,
            minOpenLevels: 0,
            building: null,
            built: null,
            toggling: null,
            toggled: null,
            opening: null,
            opened: null,
            openLazyNode: null,
            closing: null,
            closed: null,
            canDrop: null,
            dropping: null,
            dropped: null,
            stateChanged: null,
        };
        var C;
        var D = null;
        var E = new Object();
        this.init = function(b, c) {
            B = $.extend(B, c);
            init();
            C = b;
            var d = "";
            if (B.dataUrl) {
                ajaxService(B.dataUrl, B.dataUrlJson, function(a) {
                    d = convertInputDataToJson(a);
                    if (!d) {
                        alert("EasyTree: Invalid data!");
                        return this;
                    }
                    buildTree(d);
                    return this;
                });
            } else if (B.data) {
                d = convertInputDataToJson(B.data);
                if (!d) {
                    alert("EasyTree: Invalid data!");
                    return this;
                }
                buildTree(d);
            } else {
                d = convertInputDataToJson(C.html());
                if (!d) {
                    alert("EasyTree: Invalid data!");
                    return this;
                }
                buildTree(d);
            }
            return this;
        };
        this.options = B;
        this.rebuildTree = function(a) {
            var b = a ? convertInputDataToJson(a) : D;
            if (!b) {
                alert("EasyTree: Invalid data!");
            }
            buildTree(b);
        };
        this.getAllNodes = function() {
            return D;
        };
        this.getNode = function(a) {
            return getNode(D, a);
        };
        this.addNode = function(a, b) {
            if (!b) {
                D.push(a);
                return;
            }
            var c = getNode(D, b);
            if (!a) {
                return;
            }
            if (!c.children) {
                c.children = [];
            }
            c.children.push(a);
        };
        this.removeNode = function(a) {
            removeNode(D, a);
        };
        this.activateNode = function(a) {
            unactivateAll(D);
            if (!B.allowActivate) {
                return;
            }
            var b = getNode(D, a);
            if (!b) {
                return;
            }
            b.isActive = true;
            $("#" + b.id).addClass("easytree-active");
        };
        this.toggleNode = function(a) {
            var b = getNode(D, a);
            if (!b) {
                return;
            }
            toggleNodeBegin(event, D, b);
        };

        function nodeClick(a) {
            var b = getElementId(this);
            var c = a.data;
            var d = getNode(c, b);
            if (!d) {
                return;
            }
            unactivateAll(c);
            if (!B.allowActivate) {
                return;
            }
            d.isActive = true;
            $("#" + d.id).addClass("easytree-active");
            if (B.stateChanged) {
                var j = getMinifiedJson(c);
                B.stateChanged(c, j);
            }
        }

        function toggleNodeEvt(a) {
            var b = getElementId(this);
            var c = a.data;
            var d = getNode(c, b);
            if (!d) {
                return;
            }
            toggleNodeBegin(a, c, d);
        }

        function toggleNodeBegin(c, d, e) {
            var f = "";
            if (B.toggling) {
                f = B.toggling(c, d, e);
                if (f === false) {
                    return false;
                }
            }
            if (e.isExpanded) {
                if (B.closing) {
                    f = B.closing(c, d, e);
                    if (f === false) {
                        return false;
                    }
                }
            } else {
                if (B.opening) {
                    f = B.opening(c, d, e);
                    if (f === false) {
                        return false;
                    }
                }
            }
            if (e.isLazy && !e.isExpanded) {
                var g = e.children && e.children.length > 0;
                f = true;
                if (B.openLazyNode) {
                    f = B.openLazyNode(c, d, e, g);
                }
                if (e.lazyUrl && f !== false) {
                    ajaxService(e.lazyUrl, e.lazyUrlJson, function(a) {
                        if (a.d) {
                            a = a.d;
                        }
                        var b = convertInputDataToJson(a);
                        if ($.isArray(b)) {
                            e.children = b;
                        } else {
                            e.children = [];
                            e.children.push(b);
                        }
                        buildTree(d);
                        toggleNodeEnd(c, d, e);
                    });
                    return false;
                }
            }
            toggleNodeEnd(c, d, e);
        }

        function toggleNodeEnd(a, b, c) {
            if (c.isExpanded) {
                openCloseNode(b, c.id, "close");
                renderNode(c, "close");
                if (B.closed) {
                    B.closed(a, b, c);
                }
            } else {
                openCloseNode(b, c.id, "open");
                renderNode(c, "open");
                if (B.opened) {
                    B.opened(a, b, c);
                }
            }
            if (B.toggled) {
                var d = B.toggled(a, b, c);
            }
        }

        function dragStart(a) {
            if (!B.enableDnd) {
                return;
            }
            var b = a.target;
            while (b) {
                if (b.className.indexOf("easytree-draggable") > -1) {
                    break;
                }
                b = b.parentElement;
            }
            if (!b) {
                return;
            }
            unsourceAll(D);
            unactivateAll(D);
            $("#" + b.id).addClass("easytree-drag-source");
            resetDnd(E);
            E.createClone = !(b.className.indexOf("easytree-no-clone") > -1);
            E.dragok = true;
            E.sourceEl = b;
            E.sourceId = b.id;
            E.sourceNode = getNode(D, E.sourceId);
            return false;
        }

        function drag(a) {
            if (!E.dragok) {
                return;
            }
            if (!B.enableDnd) {
                return;
            }
            if (E.createClone) {
                if (!E.clone) {
                    E.clone = createClone(E.sourceEl);
                    $(E.clone).appendTo("body");
                }
                E.clone.style.left = a.pageX + 5 + "px";
                E.clone.style.top = a.pageY + "px";
            }
            var b = getDroppableTargetEl(a.clientX, a.clientY);
            if (!b) {
                hideDragHelpers();
                E.targetEl = null;
                E.targetId = null;
                E.targetNode = null;
                E.canDrop = false;
                return;
            }
            if (b.id == E.targetId) {
                return;
            }
            E.canDrop = false;
            window.clearTimeout(E.openDelayTimeout);
            E.targetEl = b;
            E.targetId = b.id;
            E.targetNode = getNode(D, E.targetId);
            log(
                "source:" +
                (E.sourceNode && E.sourceNode.text ? E.sourceNode.text : E.sourceId)
            );
            log(
                "target:" +
                (E.targetNode && E.targetNode.text ? E.targetNode.text : E.targetId)
            );
            log("isAncester:" + isAncester(E.sourceNode, E.targetId));
            var c = $("#" + E.targetId);
            if (isAncester(E.sourceNode, E.targetId)) {
                showRejectDragHelper();
                return;
            }
            if (E.targetId == E.sourceId) {
                hideDragHelpers();
                return;
            }
            if (B.canDrop) {
                var d = E.sourceNode != null;
                var e = d ? E.sourceNode : E.sourceEl;
                var f = E.targetNode != null;
                var g = f ? E.targetNode : E.targetEl;
                var h = B.canDrop(a, D, d, e, f, g);
                if (h === true) {
                    showAcceptDragHelper();
                    E.canDrop = true;
                    E.openDelayTimeout = window.setTimeout(function() {
                        openCloseNode(D, E.targetId, "open");
                        renderNode(E.targetNode, "open");
                    }, 600);
                    return;
                } else if (h === false) {
                    showRejectDragHelper();
                    return;
                }
            }
            if (c.hasClass("easytree-reject")) {
                showRejectDragHelper();
            } else if (c.hasClass("easytree-accept")) {
                showAcceptDragHelper();
                E.canDrop = true;
                E.openDelayTimeout = window.setTimeout(function() {
                    openCloseNode(D, E.targetId, "open");
                    renderNode(E.targetNode, "open");
                }, 600);
            } else {
                hideDragHelpers();
            }
            return false;
        }

        function dragEnd(a) {
            var b = E.sourceNode != null;
            var c = b ? E.sourceNode : E.sourceEl;
            var d = E.targetNode != null;
            var e = d ? E.targetNode : E.targetEl;
            var f = E.canDrop;
            hideDragHelpers();
            $("#_st_clone_").remove();
            if (c === null || e === null) {
                resetDnd(E);
                return false;
            }
            if (B.dropping) {
                var g = B.dropping(a, D, b, c, d, e, f);
                if (g === false) {
                    resetDnd(E);
                    return;
                }
            }
            if (E.targetNode && E.sourceNode && f) {
                if (!E.targetNode.children) {
                    E.targetNode.children = [];
                }
                removeNode(D, E.sourceId);
                E.targetNode.children.push(E.sourceNode);
            }
            if (f) {
                if (B.dropped) {
                    B.dropped(a, D, b, c, d, e);
                }
                buildTree(D);
            }
            resetDnd(E);
            return false;
        }

        function createClone(a) {
            $(a).remove(".easytree-expander");
            var b = $(a)
                .clone()
                .remove(".easytree-expander")
                .removeClass("easytree-drag-source")[0];
            var c = b.children[0];
            if (c && c.className == "easytree-expander") {
                b.removeChild(c);
            }
            b.style.display = "block";
            b.style.position = "absolute";
            b.style.opacity = 0.5;
            b.id = "_st_clone_";
            b.style.zIndex = 1000;
            return b;
        }

        function getDroppableTargetEl(a, b) {
            var c = document.elementFromPoint(a, b);
            while (c) {
                if (c.className.indexOf("easytree-droppable") > -1) {
                    return c;
                }
                c = c.parentElement;
            }
            return null;
        }

        function resetDnd(a) {
            a.canDrop = false;
            a.createClone = true;
            a.clone = null;
            a.dragok = false;
            a.openDelayTimeout = null;
            a.targetEl = null;
            a.targetId = null;
            a.targetNode = null;
            a.sourceEl = null;
            a.sourceId = null;
            a.sourceNode = null;
        }

        function getElementId(a) {
            while (a != null) {
                if (a.id) {
                    return a.id;
                }
                a = a.parentElement;
            }
            return null;
        }

        function getNode(a, b) {
            var i = 0;
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                var t = n.text;
                if (n.id == b) {
                    return n;
                }
                var c = n.children && n.children.length > 0;
                if (c) {
                    var d = getNode(n.children, b);
                    if (d) {
                        return d;
                    }
                }
            }
            return null;
        }

        function isAncester(a, b) {
            var i = 0;
            if (!a || !a.children || a.children.length == 0) {
                return false;
            }
            for (i = 0; i < a.children.length; i++) {
                var n = a.children[i];
                var t = n.text;
                if (n.id == b) {
                    return true;
                }
                var c = n.children && n.children.length > 0;
                if (c) {
                    var d = isAncester(n, b);
                    if (d) {
                        return d;
                    }
                }
            }
            return false;
        }

        function removeNode(a, b) {
            var i = 0;
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                var t = n.text;
                if (n.id == b) {
                    a.splice(i, 1);
                    return;
                }
                var c = n.children && n.children.length > 0;
                if (c) {
                    removeNode(n.children, b);
                }
            }
        }

        function openCloseNode(a, b, c) {
            var i = 0;
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                var t = n.text;
                if (n.id == b) {
                    n.isExpanded = c == "open";
                    return;
                }
                var d = n.children && n.children.length > 0;
                if (d) {
                    openCloseNode(n.children, b, c);
                }
            }
        }

        function unactivateAll(a) {
            var i = 0;
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                n.isActive = false;
                $("#" + n.id).removeClass("easytree-active");
                var b = n.children && n.children.length > 0;
                if (b) {
                    unactivateAll(n.children);
                }
            }
        }

        function unsourceAll(a) {
            var i = 0;
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                $("#" + n.id).removeClass("easytree-drag-source");
                var b = n.children && n.children.length > 0;
                if (b) {
                    unsourceAll(n.children);
                }
            }
        }

        function sort(f) {
            var i = 0;
            f = f.sort(function(a, b) {
                var c = a.text.toLowerCase();
                var d = b.text.toLowerCase();
                if (!c) {
                    c = "a";
                }
                if (!d) {
                    d = "a";
                }
                if (B.ordering.toLowerCase().indexOf("folder") > -1 && a.isFolder) {
                    c = "______" + c;
                }
                if (B.ordering.toLowerCase().indexOf("folder") > -1 && b.isFolder) {
                    d = "______" + d;
                }
                var e = B.ordering.indexOf(" DESC") == -1 ? 1 : -1;
                if (c < d) {
                    return -1 * e;
                }
                if (c > d) {
                    return 1 * e;
                }
                return 0;
            });
            for (i = 0; i < f.length; i++) {
                var n = f[i];
                var g = n.children && n.children.length > 0;
                if (g) {
                    sort(n.children);
                }
            }
            return f;
        }

        function giveUniqueIds(a, b, c) {
            var i = 0;
            if (!b) {
                b = 0;
                c = "_st_node_" + c + "_";
            }
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                if (!n.id) {
                    n.id = c + i.toString();
                }
                var d = n.children && n.children.length > 0;
                if (d) {
                    giveUniqueIds(n.children, b + 1, c + i + "_");
                }
            }
        }

        function buildTree(a) {
            if (!a) {
                return;
            }
            var b = new Date();
            if (B.building) {
                var c = B.building(a);
                if (c === false) {
                    return false;
                }
            }
            var d = new Date();
            if (B.ordering) {
                a = sort(a);
            }
            var e = new Date();
            var f = Math.floor(Math.random() * 10000);
            giveUniqueIds(a, 0, f);
            var g = new Date();
            D = a;
            var h = getNodesAsHtml(a, 0, true);
            var i = new Date();
            C[0].innerHTML = h;
            var k = new Date();
            $(C.selector + " .easytree-node").on("click", a, nodeClick);
            $(C.selector + " .easytree-expander").on("click", a, toggleNodeEvt);
            $(C.selector + " .easytree-icon").on("dblclick", a, toggleNodeEvt);
            $(C.selector + " .easytree-title").on("dblclick", a, toggleNodeEvt);
            var l = new Date();
            if (B.enableDnd) {
                $(document).on("mousedown", dragStart);
                $(document).on("mousemove", drag);
                $(document).on("mouseup", dragEnd);
            }
            var m = new Date();
            if (B.built) {
                B.built(a);
            }
            var n = new Date();
            if (B.stateChanged) {
                var j = getMinifiedJson(a);
                B.stateChanged(a, j);
            }
            var o = new Date();
            var p = d - b;
            var q = e - d;
            var r = g - e;
            var s = i - g;
            var t = k - i;
            var u = l - k;
            var v = m - l;
            var w = n - m;
            var x = o - n;
            var y = o - b;
        }

        function getNodesAsHtml(a, b, c) {
            var d = "";
            var i = 0;
            var e = "";
            if (b == 0) {
                e += "ui-easytree easytree-container easytree-focused";
            }
            var f = b < B.minOpenLevels;
            var g = b == 0 || c || f ? "" : " style='display:none' ";
            d += '<ul tabindex="0" class="' + e + '" ' + g + '">';
            for (i = 0; i < a.length; i++) {
                var n = a[i];
                if (f === true) {
                    n.isExpanded = true;
                }
                var h = i == a.length - 1;
                var j = getSpanCss(n, h);
                d += "<li>";
                d += '<span id="' + n.id + '" class="' + j + ' ">';
                d += f ? "" : '<span class="easytree-expander"></span>';
                d += getIconHtml(n);
                d += getTitleHtml(n);
                d += "</span>";
                if (n.children && n.children.length > 0) {
                    d += getNodesAsHtml(n.children, b + 1, n.isExpanded);
                }
                d += "</li>";
            }
            d += "</ul>";
            return d;
        }

        function getSpanCss(a, b) {
            var c = a.children && a.children.length > 0;
            var d = "easytree-node ";
            if (B.enableDnd) {
                d += " easytree-draggable ";
            }
            if (a.liClass) {
                d += a.liClass;
            }
            if (a.isFolder && B.enableDnd) {
                d += " easytree-droppable easytree-accept ";
            } else if (B.enableDnd) {
                d += " easytree-droppable easytree-reject ";
            }
            if (a.isActive && B.allowActivate) {
                d += " easytree-active ";
            }
            d += getExpCss(a, b);
            var e = a.isExpanded ? "e" : "c";
            if (a.isFolder) {
                e += "f";
            }
            d += " easytree-ico-" + e;
            return d;
        }

        function getExpCss(a, b) {
            var c = a.children && a.children.length > 0;
            var d = "";
            if (!c && a.isLazy) {
                d = "c";
            } else if (!c) {
                d = "n";
            } else if (a.isExpanded) {
                d = "e";
            } else {
                d = "c";
            }
            if (b) {
                d += "l";
            }
            return " easytree-exp-" + d;
        }

        function getIconHtml(a) {
            var b = "";
            if (B.disableIcons) {
                return b;
            }
            if (a.uiIcon) {
                return (
                    '<span class="easytree-custom-icon ui-icon ' + a.uiIcon + '"></span>'
                );
            }
            if (a.iconUrl) {
                return '<span><img src="' + a.iconUrl + '" /></span>';
            }
            return '<span class="easytree-icon"></span>';
        }

        function getTitleHtml(a) {
            var b = "";
            var c = a.tooltip ? 'title="' + a.tooltip + '"' : "";
            var d = "easytree-title";
            if (a.textCss) {
                d += " " + a.textCss;
            }
            b += "<span " + c + ' class="' + d + '">';
            if (a.href) {
                b += '<a href="' + a.href + '" ';
                if (a.hrefTarget) {
                    b += ' target="' + a.hrefTarget + '" ';
                }
                b += ">";
            }
            b += a.text;
            if (a.href) {
                b += "</a>";
            }
            b += "</span>";
            return b;
        }

        function renderNode(a, b) {
            if (!a) {
                return;
            }
            var c = $("#" + a.id).attr("class");
            var d = c.indexOf("easytree-exp-");
            if (d > -1) {
                var e = c.indexOf(" ", d);
                var f = e > -1 ? c.substring(d, e) : c.substring(d);
                $("#" + a.id).removeClass(f);
                $("#" + a.id).addClass(getExpCss(a, false));
            }
            var g = $("#" + a.id)
                .parents("li")
                .first();
            var h = g.children("ul").first();
            var i = parseInt(B.slidingTime, 10);
            if (b == "close") {
                h.slideUp(i);
            } else {
                h.slideDown(i);
            }
        }

        function hideDragHelpers() {
            $("#easytree-reject").hide();
            $("#easytree-accept").hide();
        }

        function showAcceptDragHelper() {
            $("#easytree-accept").show();
            $("#easytree-reject").hide();
        }

        function showRejectDragHelper() {
            $("#easytree-reject").show();
            $("#easytree-accept").hide();
        }

        function getMinifiedJson(a) {
            var j = JSON.stringify ? JSON.stringify(a) : "Please import json2.js";
            while (j.indexOf(',"children":[]') > -1) {
                j = j.replace(',"children":[]', "");
            }
            while (j.indexOf('"liClass":"",') > -1) {
                j = j.replace('"liClass":"",', "");
            }
            while (j.indexOf('"textCss":"",') > -1) {
                j = j.replace('"textCss":"",', "");
            }
            while (j.indexOf('"isExpanded":false,') > -1) {
                j = j.replace('"isExpanded":false,', "");
            }
            while (j.indexOf('"isActive":false,') > -1) {
                j = j.replace('"isActive":false,', "");
            }
            while (j.indexOf('"isFolder":false,') > -1) {
                j = j.replace('"isFolder":false,', "");
            }
            while (j.indexOf('"isLazy":false,') > -1) {
                j = j.replace('"isLazy":false,', "");
            }
            return j;
        }

        function init() {
            initDragHelpers();
            resetDnd(E);
            $(document).on("mousemove", function(a) {
                var b = a.pageY;
                var c = a.pageX;
                document.getElementById("easytree-reject").style.top = b + 10 + "px";
                document.getElementById("easytree-reject").style.left = c + 17 + "px";
                document.getElementById("easytree-accept").style.top = b + 10 + "px";
                document.getElementById("easytree-accept").style.left = c + 17 + "px";
            });
        }

        function initDragHelpers() {
            if (!$("#easytree-reject").length) {
                var a =
                    '<div id="easytree-reject" class="easytree-drag-helper easytree-drop-reject">';
                a += '<span class="easytree-drag-helper-img"></span>';
                a += "</div>";
                $("body").append(a);
            }
            if (!$("#easytree-accept").length) {
                var b =
                    '<div id="easytree-accept" class="easytree-drag-helper easytree-drop-accept">';
                b += '<span class="easytree-drag-helper-img"></span>';
                b += "</div>";
                $("body").append(b);
            }
        }

        function ajaxService(d, e, f) {
            $.ajax({
                url: d,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: e,
                success: f,
                error: function(a, b, c) {
                    alert("Error: " + a.responseText);
                },
            });
        }

        function convertInputDataToJson(a) {
            var b = null;
            if (typeof a == "object") {
                b = a;
            } else if (typeof a == "string") {
                a = $.trim(a);
                if (a.indexOf("[") == 0 || a.indexOf("{") == 0) {
                    b = $.parseJSON(a);
                } else {
                    b = convertHtmlToJson(a);
                }
            }
            return b;
        }

        function convertHtmlToJson(b) {
            var i = 0;
            var c = $(b);
            var d = [];
            var e = c.children().each(function(a) {
                d.push(convertHtmlToNode(this));
            });
            return d;
        }

        function convertHtmlToNode(b) {
            var c = $(b);
            var d = {};
            var e = c.data();
            d.isActive = c.hasClass("isActive");
            c.removeClass("isActive");
            d.isFolder = c.hasClass("isFolder");
            c.removeClass("isFolder");
            d.isExpanded = c.hasClass("isExpanded");
            c.removeClass("isExpanded");
            d.isLazy = c.hasClass("isLazy");
            c.removeClass("isLazy");
            d.uiIcon = e.uiicon;
            d.liClass = c.attr("class");
            d.id = c.attr("id");
            var f = c.children("a");
            if (f) {
                d.href = f.attr("href");
                d.hrefTarget = f.attr("target");
            }
            var g = c.children("img");
            if (g) {
                d.iconUrl = g.attr("src");
            }
            d.textCss = "";
            var h = c.children("span");
            if (h && h.attr("class")) {
                d.textCss += h.attr("class") + " ";
            }
            h = f.children("span");
            if (h && h.attr("class")) {
                d.textCss += h.attr("class") + " ";
            }
            h = g.children("span");
            if (h && h.attr("class")) {
                d.textCss += h.attr("class") + " ";
            }
            d.text = getNodeValue(c[0]);
            d.tooltip = c.attr("title");
            d.children = [];
            var i = c
                .children("ul")
                .children("li")
                .each(function(a) {
                    d.children.push(convertHtmlToNode(this));
                });
            return d;
        }

        function getNodeValue(a) {
            var i = 0;
            for (i = 0; i < a.childNodes.length; i++) {
                var b = a.childNodes[i];
                while (b) {
                    if (b.nodeType == 3 && $.trim(b.nodeValue).length > 0) {
                        return $.trim(b.nodeValue);
                    }
                    b = b.firstChild;
                }
            }
            return "";
        }
        this.init(z, A);

        function log(a) {
            if (!a) {
                a = "null";
            }
            console.log(a);
        }
    };
})(jQuery);

/*!
 * JavaScript Cookie v2.0.2
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl
 * Released under the MIT license
 */
!(function(e) {
    if ("function" == typeof define && define.amd) define(e);
    else if ("object" == typeof exports) module.exports = e();
    else {
        var n = window.Cookies,
            o = (window.Cookies = e(window.jQuery));
        o.noConflict = function() {
            return (window.Cookies = n), o;
        };
    }
})(function() {
    function e() {
        for (var e = 0, n = {}; e < arguments.length; e++) {
            var o = arguments[e];
            for (var t in o) n[t] = o[t];
        }
        return n;
    }

    function n(o) {
        function t(n, r, i) {
            var c;
            if (arguments.length > 1) {
                if (
                    ((i = e({
                        path: "/"
                    }, t.defaults, i)), "number" == typeof i.expires)
                ) {
                    var s = new Date();
                    s.setMilliseconds(s.getMilliseconds() + 864e5 * i.expires),
                        (i.expires = s);
                }
                try {
                    (c = JSON.stringify(r)), /^[\{\[]/.test(c) && (r = c);
                } catch (a) {}
                return (
                    (r = encodeURIComponent(String(r))),
                    (r = r.replace(
                        /%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,
                        decodeURIComponent
                    )),
                    (n = encodeURIComponent(String(n))),
                    (n = n.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)),
                    (n = n.replace(/[\(\)]/g, escape)),
                    (document.cookie = [
                        n,
                        "=",
                        r,
                        i.expires && "; expires=" + i.expires.toUTCString(),
                        i.path && "; path=" + i.path,
                        i.domain && "; domain=" + i.domain,
                        i.secure ? "; secure" : "",
                    ].join(""))
                );
            }
            n || (c = {});
            for (
                var p = document.cookie ? document.cookie.split("; ") : [],
                    u = /(%[0-9A-Z]{2})+/g,
                    d = 0; d < p.length; d++
            ) {
                var f = p[d].split("="),
                    l = f[0].replace(u, decodeURIComponent),
                    m = f.slice(1).join("=");
                if (
                    ('"' === m.charAt(0) && (m = m.slice(1, -1)),
                        (m = (o && o(m, l)) || m.replace(u, decodeURIComponent)),
                        this.json)
                )
                    try {
                        m = JSON.parse(m);
                    } catch (a) {}
                if (n === l) {
                    c = m;
                    break;
                }
                n || (c[l] = m);
            }
            return c;
        }
        return (
            (t.get = t.set = t),
            (t.getJSON = function() {
                return t.apply({
                    json: !0
                }, [].slice.call(arguments));
            }),
            (t.defaults = {}),
            (t.remove = function(n, o) {
                t(n, "", e(o, {
                    expires: -1
                }));
            }),
            (t.withConverter = n),
            t
        );
    }
    return n();
});

/*! Bootstrap Typeahead - https://github.com/bassjobsen/Bootstrap-3-Typeahead */
!(function(a, b) {
    "use strict";
    "undefined" != typeof module && module.exports ?
        (module.exports = b(require("jquery"))) :
        "function" == typeof define && define.amd ?
        define(["jquery"], function(a) {
            return b(a);
        }) :
        b(a.jQuery);
})(this, function(a) {
    "use strict";
    var b = function(b, c) {
        (this.$element = a(b)),
        (this.options = a.extend({}, a.fn.typeahead.defaults, c)),
        (this.matcher = this.options.matcher || this.matcher),
        (this.sorter = this.options.sorter || this.sorter),
        (this.select = this.options.select || this.select),
        (this.autoSelect =
            "boolean" == typeof this.options.autoSelect ?
            this.options.autoSelect :
            !0),
        (this.highlighter = this.options.highlighter || this.highlighter),
        (this.render = this.options.render || this.render),
        (this.updater = this.options.updater || this.updater),
        (this.displayText = this.options.displayText || this.displayText),
        (this.source = this.options.source),
        (this.delay = this.options.delay),
        (this.$menu = a(this.options.menu)),
        (this.$appendTo = this.options.appendTo ?
            a(this.options.appendTo) :
            null),
        (this.shown = !1),
        this.listen(),
            (this.showHintOnFocus =
                "boolean" == typeof this.options.showHintOnFocus ?
                this.options.showHintOnFocus :
                !1),
            (this.afterSelect = this.options.afterSelect),
            (this.addItem = !1);
    };
    b.prototype = {
        constructor: b,
        select: function() {
            var a = this.$menu.find(".active").data("value");
            if ((this.$element.data("active", a), this.autoSelect || a)) {
                var b = this.updater(a);
                this.$element.val(this.displayText(b) || b).change(),
                    this.afterSelect(b);
            }
            return this.hide();
        },
        updater: function(a) {
            return a;
        },
        setSource: function(a) {
            this.source = a;
        },
        show: function() {
            var b,
                c = a.extend({}, this.$element.position(), {
                    height: this.$element[0].offsetHeight,
                });
            return (
                (b =
                    "function" == typeof this.options.scrollHeight ?
                    this.options.scrollHeight.call() :
                    this.options.scrollHeight),
                (this.$appendTo ?
                    this.$menu.appendTo(this.$appendTo) :
                    this.$menu.insertAfter(this.$element)
                )
                .css({
                    top: c.top + c.height + b,
                    left: c.left
                })
                .show(),
                (this.shown = !0),
                this
            );
        },
        hide: function() {
            return this.$menu.hide(), (this.shown = !1), this;
        },
        lookup: function(b) {
            if (
                ((this.query =
                        "undefined" != typeof b && null !== b ?
                        b :
                        this.$element.val() || ""),
                    this.query.length < this.options.minLength)
            )
                return this.shown ? this.hide() : this;
            var c = a.proxy(function() {
                a.isFunction(this.source) ?
                    this.source(this.query, a.proxy(this.process, this)) :
                    this.source && this.process(this.source);
            }, this);
            clearTimeout(this.lookupWorker),
                (this.lookupWorker = setTimeout(c, this.delay));
        },
        process: function(b) {
            var c = this;
            return (
                (b = a.grep(b, function(a) {
                    return c.matcher(a);
                })),
                (b = this.sorter(b)),
                b.length || this.options.addItem ?
                (b.length > 0 ?
                    this.$element.data("active", b[0]) :
                    this.$element.data("active", null),
                    this.options.addItem && b.push(this.options.addItem),
                    "all" == this.options.items ?
                    this.render(b).show() :
                    this.render(b.slice(0, this.options.items)).show()) :
                this.shown ?
                this.hide() :
                this
            );
        },
        matcher: function(a) {
            var b = this.displayText(a);
            return ~b.toLowerCase().indexOf(this.query.toLowerCase());
        },
        sorter: function(a) {
            for (var b, c = [], d = [], e = [];
                (b = a.shift());) {
                var f = this.displayText(b);
                f.toLowerCase().indexOf(this.query.toLowerCase()) ?
                    ~f.indexOf(this.query) ?
                    d.push(b) :
                    e.push(b) :
                    c.push(b);
            }
            return c.concat(d, e);
        },
        highlighter: function(b) {
            var c,
                d,
                e,
                f,
                g,
                h = a("<div></div>"),
                i = this.query,
                j = b.toLowerCase().indexOf(i.toLowerCase());
            if (((c = i.length), 0 === c)) return h.text(b).html();
            for (; j > -1;)
                (d = b.substr(0, j)),
                (e = b.substr(j, c)),
                (f = b.substr(j + c)),
                (g = a("<strong></strong>").text(e)),
                h.append(document.createTextNode(d)).append(g),
                (b = f),
                (j = b.toLowerCase().indexOf(i.toLowerCase()));
            return h.append(document.createTextNode(b)).html();
        },
        render: function(b) {
            var c = this,
                d = this,
                e = !1;
            return (
                (b = a(b).map(function(b, f) {
                    var g = d.displayText(f);
                    return (
                        (b = a(c.options.item).data("value", f)),
                        b.find("a").html(c.highlighter(g)),
                        g == d.$element.val() &&
                        (b.addClass("active"), d.$element.data("active", f), (e = !0)),
                        b[0]
                    );
                })),
                this.autoSelect &&
                !e &&
                (b.first().addClass("active"),
                    this.$element.data("active", b.first().data("value"))),
                this.$menu.html(b),
                this
            );
        },
        displayText: function(a) {
            return a.name || a;
        },
        next: function() {
            var b = this.$menu.find(".active").removeClass("active"),
                c = b.next();
            c.length || (c = a(this.$menu.find("li")[0])), c.addClass("active");
        },
        prev: function() {
            var a = this.$menu.find(".active").removeClass("active"),
                b = a.prev();
            b.length || (b = this.$menu.find("li").last()), b.addClass("active");
        },
        listen: function() {
            this.$element
                .on("focus", a.proxy(this.focus, this))
                .on("blur", a.proxy(this.blur, this))
                .on("keypress", a.proxy(this.keypress, this))
                .on("keyup", a.proxy(this.keyup, this)),
                this.eventSupported("keydown") &&
                this.$element.on("keydown", a.proxy(this.keydown, this)),
                this.$menu
                .on("click", a.proxy(this.click, this))
                .on("mouseenter", "li", a.proxy(this.mouseenter, this))
                .on("mouseleave", "li", a.proxy(this.mouseleave, this));
        },
        destroy: function() {
            this.$element.data("typeahead", null),
                this.$element.data("active", null),
                this.$element.off("focus").off("blur").off("keypress").off("keyup"),
                this.eventSupported("keydown") && this.$element.off("keydown"),
                this.$menu.remove();
        },
        eventSupported: function(a) {
            var b = a in this.$element;
            return (
                b ||
                (this.$element.setAttribute(a, "return;"),
                    (b = "function" == typeof this.$element[a])),
                b
            );
        },
        move: function(a) {
            if (this.shown) {
                switch (a.keyCode) {
                    case 9:
                    case 13:
                    case 27:
                        a.preventDefault();
                        break;
                    case 38:
                        if (a.shiftKey) return;
                        a.preventDefault(), this.prev();
                        break;
                    case 40:
                        if (a.shiftKey) return;
                        a.preventDefault(), this.next();
                }
                a.stopPropagation();
            }
        },
        keydown: function(b) {
            (this.suppressKeyPressRepeat = ~a.inArray(
                b.keyCode, [40, 38, 9, 13, 27]
            )),
            this.shown || 40 != b.keyCode ? this.move(b) : this.lookup();
        },
        keypress: function(a) {
            this.suppressKeyPressRepeat || this.move(a);
        },
        keyup: function(a) {
            switch (a.keyCode) {
                case 40:
                case 38:
                case 16:
                case 17:
                case 18:
                    break;
                case 9:
                case 13:
                    if (!this.shown) return;
                    this.select();
                    break;
                case 27:
                    if (!this.shown) return;
                    this.hide();
                    break;
                default:
                    this.lookup();
            }
            a.stopPropagation(), a.preventDefault();
        },
        focus: function() {
            this.focused ||
                ((this.focused = !0), this.options.showHintOnFocus && this.lookup(""));
        },
        blur: function() {
            (this.focused = !1), !this.mousedover && this.shown && this.hide();
        },
        click: function(a) {
            a.stopPropagation(),
                a.preventDefault(),
                this.select(),
                this.$element.focus();
        },
        mouseenter: function(b) {
            (this.mousedover = !0),
            this.$menu.find(".active").removeClass("active"),
                a(b.currentTarget).addClass("active");
        },
        mouseleave: function() {
            (this.mousedover = !1), !this.focused && this.shown && this.hide();
        },
    };
    var c = a.fn.typeahead;
    (a.fn.typeahead = function(c) {
        var d = arguments;
        return "string" == typeof c && "getActive" == c ?
            this.data("active") :
            this.each(function() {
                var e = a(this),
                    f = e.data("typeahead"),
                    g = "object" == typeof c && c;
                f || e.data("typeahead", (f = new b(this, g))),
                    "string" == typeof c &&
                    (d.length > 1 ?
                        f[c].apply(f, Array.prototype.slice.call(d, 1)) :
                        f[c]());
            });
    }),
    (a.fn.typeahead.defaults = {
        source: [],
        items: 8,
        menu: '<ul class="typeahead dropdown-menu" role="listbox"></ul>',
        item: '<li><a href="#" role="option"></a></li>',
        minLength: 1,
        scrollHeight: 0,
        autoSelect: !0,
        afterSelect: a.noop,
        delay: 0,
        addItem: !1,
    }),
    (a.fn.typeahead.Constructor = b),
    (a.fn.typeahead.noConflict = function() {
        return (a.fn.typeahead = c), this;
    }),
    a(document).on(
        "focus.typeahead.data-api",
        '[data-provide="typeahead"]',
        function() {
            var b = a(this);
            b.data("typeahead") || b.typeahead(b.data());
        }
    );
});

/*! Bootstrap Colorpicker 2.2.0 - http://mjolnic.github.io/bootstrap-colorpicker/ */
!(function(a) {
    "use strict";
    "function" == typeof define && define.amd ?
        define(["jquery"], a) :
        window.jQuery && !window.jQuery.fn.colorpicker && a(window.jQuery);
})(function(a) {
    "use strict";
    var b = function(a) {
        (this.value = {
            h: 0,
            s: 0,
            b: 0,
            a: 1
        }),
        (this.origFormat = null),
        a &&
            (void 0 !== a.toLowerCase ?
                ((a += ""), this.setColor(a)) :
                void 0 !== a.h && (this.value = a));
    };
    b.prototype = {
        constructor: b,
        colors: {
            aliceblue: "#f0f8ff",
            antiquewhite: "#faebd7",
            aqua: "#00ffff",
            aquamarine: "#7fffd4",
            azure: "#f0ffff",
            beige: "#f5f5dc",
            bisque: "#ffe4c4",
            black: "#000000",
            blanchedalmond: "#ffebcd",
            blue: "#0000ff",
            blueviolet: "#8a2be2",
            brown: "#a52a2a",
            burlywood: "#deb887",
            cadetblue: "#5f9ea0",
            chartreuse: "#7fff00",
            chocolate: "#d2691e",
            coral: "#ff7f50",
            cornflowerblue: "#6495ed",
            cornsilk: "#fff8dc",
            crimson: "#dc143c",
            cyan: "#00ffff",
            darkblue: "#00008b",
            darkcyan: "#008b8b",
            darkgoldenrod: "#b8860b",
            darkgray: "#a9a9a9",
            darkgreen: "#006400",
            darkkhaki: "#bdb76b",
            darkmagenta: "#8b008b",
            darkolivegreen: "#556b2f",
            darkorange: "#ff8c00",
            darkorchid: "#9932cc",
            darkred: "#8b0000",
            darksalmon: "#e9967a",
            darkseagreen: "#8fbc8f",
            darkslateblue: "#483d8b",
            darkslategray: "#2f4f4f",
            darkturquoise: "#00ced1",
            darkviolet: "#9400d3",
            deeppink: "#ff1493",
            deepskyblue: "#00bfff",
            dimgray: "#696969",
            dodgerblue: "#1e90ff",
            firebrick: "#b22222",
            floralwhite: "#fffaf0",
            forestgreen: "#228b22",
            fuchsia: "#ff00ff",
            gainsboro: "#dcdcdc",
            ghostwhite: "#f8f8ff",
            gold: "#ffd700",
            goldenrod: "#daa520",
            gray: "#808080",
            green: "#008000",
            greenyellow: "#adff2f",
            honeydew: "#f0fff0",
            hotpink: "#ff69b4",
            "indianred ": "#cd5c5c",
            "indigo ": "#4b0082",
            ivory: "#fffff0",
            khaki: "#f0e68c",
            lavender: "#e6e6fa",
            lavenderblush: "#fff0f5",
            lawngreen: "#7cfc00",
            lemonchiffon: "#fffacd",
            lightblue: "#add8e6",
            lightcoral: "#f08080",
            lightcyan: "#e0ffff",
            lightgoldenrodyellow: "#fafad2",
            lightgrey: "#d3d3d3",
            lightgreen: "#90ee90",
            lightpink: "#ffb6c1",
            lightsalmon: "#ffa07a",
            lightseagreen: "#20b2aa",
            lightskyblue: "#87cefa",
            lightslategray: "#778899",
            lightsteelblue: "#b0c4de",
            lightyellow: "#ffffe0",
            lime: "#00ff00",
            limegreen: "#32cd32",
            linen: "#faf0e6",
            magenta: "#ff00ff",
            maroon: "#800000",
            mediumaquamarine: "#66cdaa",
            mediumblue: "#0000cd",
            mediumorchid: "#ba55d3",
            mediumpurple: "#9370d8",
            mediumseagreen: "#3cb371",
            mediumslateblue: "#7b68ee",
            mediumspringgreen: "#00fa9a",
            mediumturquoise: "#48d1cc",
            mediumvioletred: "#c71585",
            midnightblue: "#191970",
            mintcream: "#f5fffa",
            mistyrose: "#ffe4e1",
            moccasin: "#ffe4b5",
            navajowhite: "#ffdead",
            navy: "#000080",
            oldlace: "#fdf5e6",
            olive: "#808000",
            olivedrab: "#6b8e23",
            orange: "#ffa500",
            orangered: "#ff4500",
            orchid: "#da70d6",
            palegoldenrod: "#eee8aa",
            palegreen: "#98fb98",
            paleturquoise: "#afeeee",
            palevioletred: "#d87093",
            papayawhip: "#ffefd5",
            peachpuff: "#ffdab9",
            peru: "#cd853f",
            pink: "#ffc0cb",
            plum: "#dda0dd",
            powderblue: "#b0e0e6",
            purple: "#800080",
            red: "#ff0000",
            rosybrown: "#bc8f8f",
            royalblue: "#4169e1",
            saddlebrown: "#8b4513",
            salmon: "#fa8072",
            sandybrown: "#f4a460",
            seagreen: "#2e8b57",
            seashell: "#fff5ee",
            sienna: "#a0522d",
            silver: "#c0c0c0",
            skyblue: "#87ceeb",
            slateblue: "#6a5acd",
            slategray: "#708090",
            snow: "#fffafa",
            springgreen: "#00ff7f",
            steelblue: "#4682b4",
            tan: "#d2b48c",
            teal: "#008080",
            thistle: "#d8bfd8",
            tomato: "#ff6347",
            turquoise: "#40e0d0",
            violet: "#ee82ee",
            wheat: "#f5deb3",
            white: "#ffffff",
            whitesmoke: "#f5f5f5",
            yellow: "#ffff00",
            yellowgreen: "#9acd32",
            transparent: "transparent",
        },
        _sanitizeNumber: function(a) {
            return "number" == typeof a ?
                a :
                isNaN(a) || null === a || "" === a || void 0 === a ?
                1 :
                void 0 !== a.toLowerCase ?
                parseFloat(a) :
                1;
        },
        isTransparent: function(a) {
            return a ?
                ((a = a.toLowerCase().trim()),
                    "transparent" === a ||
                    a.match(/#?00000000/) ||
                    a.match(/(rgba|hsla)\(0,0,0,0?\.?0\)/)) :
                !1;
        },
        rgbaIsTransparent: function(a) {
            return 0 === a.r && 0 === a.g && 0 === a.b && 0 === a.a;
        },
        setColor: function(a) {
            (a = a.toLowerCase().trim()),
            a &&
                (this.isTransparent(a) ?
                    (this.value = {
                        h: 0,
                        s: 0,
                        b: 0,
                        a: 0
                    }) :
                    (this.value = this.stringToHSB(a) || {
                        h: 0,
                        s: 0,
                        b: 0,
                        a: 1
                    }));
        },
        stringToHSB: function(b) {
            b = b.toLowerCase();
            var c = this,
                d = !1;
            return (
                a.each(this.stringParsers, function(a, e) {
                    var f = e.re.exec(b),
                        g = f && e.parse.apply(c, [f]),
                        h = e.format || "rgba";
                    return g ?
                        ((d = h.match(/hsla?/) ?
                                c.RGBtoHSB.apply(c, c.HSLtoRGB.apply(c, g)) :
                                c.RGBtoHSB.apply(c, g)),
                            (c.origFormat = h), !1) :
                        !0;
                }),
                d
            );
        },
        setHue: function(a) {
            this.value.h = 1 - a;
        },
        setSaturation: function(a) {
            this.value.s = a;
        },
        setBrightness: function(a) {
            this.value.b = 1 - a;
        },
        setAlpha: function(a) {
            this.value.a = parseInt(100 * (1 - a), 10) / 100;
        },
        toRGB: function(a, b, c, d) {
            a || ((a = this.value.h), (b = this.value.s), (c = this.value.b)),
                (a *= 360);
            var e, f, g, h, i;
            return (
                (a = (a % 360) / 60),
                (i = c * b),
                (h = i * (1 - Math.abs((a % 2) - 1))),
                (e = f = g = c - i),
                (a = ~~a),
                (e += [i, h, 0, 0, h, i][a]),
                (f += [h, i, i, h, 0, 0][a]),
                (g += [0, 0, h, i, i, h][a]), {
                    r: Math.round(255 * e),
                    g: Math.round(255 * f),
                    b: Math.round(255 * g),
                    a: d || this.value.a,
                }
            );
        },
        toHex: function(a, b, c, d) {
            var e = this.toRGB(a, b, c, d);
            return this.rgbaIsTransparent(e) ?
                "transparent" :
                "#" +
                (
                    (1 << 24) |
                    (parseInt(e.r) << 16) |
                    (parseInt(e.g) << 8) |
                    parseInt(e.b)
                )
                .toString(16)
                .substr(1);
        },
        toHSL: function(a, b, c, d) {
            (a = a || this.value.h),
            (b = b || this.value.s),
            (c = c || this.value.b),
            (d = d || this.value.a);
            var e = a,
                f = (2 - b) * c,
                g = b * c;
            return (
                (g /= f > 0 && 1 >= f ? f : 2 - f),
                (f /= 2),
                g > 1 && (g = 1), {
                    h: isNaN(e) ? 0 : e,
                    s: isNaN(g) ? 0 : g,
                    l: isNaN(f) ? 0 : f,
                    a: isNaN(d) ? 0 : d,
                }
            );
        },
        toAlias: function(a, b, c, d) {
            var e = this.toHex(a, b, c, d);
            for (var f in this.colors)
                if (this.colors[f] === e) return f;
            return !1;
        },
        RGBtoHSB: function(a, b, c, d) {
            (a /= 255), (b /= 255), (c /= 255);
            var e, f, g, h;
            return (
                (g = Math.max(a, b, c)),
                (h = g - Math.min(a, b, c)),
                (e =
                    0 === h ?
                    null :
                    g === a ?
                    (b - c) / h :
                    g === b ?
                    (c - a) / h + 2 :
                    (a - b) / h + 4),
                (e = (((e + 360) % 6) * 60) / 360),
                (f = 0 === h ? 0 : h / g), {
                    h: this._sanitizeNumber(e),
                    s: f,
                    b: g,
                    a: this._sanitizeNumber(d)
                }
            );
        },
        HueToRGB: function(a, b, c) {
            return (
                0 > c ? (c += 1) : c > 1 && (c -= 1),
                1 > 6 * c ?
                a + (b - a) * c * 6 :
                1 > 2 * c ?
                b :
                2 > 3 * c ?
                a + (b - a) * (2 / 3 - c) * 6 :
                a
            );
        },
        HSLtoRGB: function(a, b, c, d) {
            0 > b && (b = 0);
            var e;
            e = 0.5 >= c ? c * (1 + b) : c + b - c * b;
            var f = 2 * c - e,
                g = a + 1 / 3,
                h = a,
                i = a - 1 / 3,
                j = Math.round(255 * this.HueToRGB(f, e, g)),
                k = Math.round(255 * this.HueToRGB(f, e, h)),
                l = Math.round(255 * this.HueToRGB(f, e, i));
            return [j, k, l, this._sanitizeNumber(d)];
        },
        toString: function(a) {
            a = a || "rgba";
            var b = !1;
            switch (a) {
                case "rgb":
                    return (
                        (b = this.toRGB()),
                        this.rgbaIsTransparent(b) ?
                        "transparent" :
                        "rgb(" + b.r + "," + b.g + "," + b.b + ")"
                    );
                case "rgba":
                    return (
                        (b = this.toRGB()),
                        "rgba(" + b.r + "," + b.g + "," + b.b + "," + b.a + ")"
                    );
                case "hsl":
                    return (
                        (b = this.toHSL()),
                        "hsl(" +
                        Math.round(360 * b.h) +
                        "," +
                        Math.round(100 * b.s) +
                        "%," +
                        Math.round(100 * b.l) +
                        "%)"
                    );
                case "hsla":
                    return (
                        (b = this.toHSL()),
                        "hsla(" +
                        Math.round(360 * b.h) +
                        "," +
                        Math.round(100 * b.s) +
                        "%," +
                        Math.round(100 * b.l) +
                        "%," +
                        b.a +
                        ")"
                    );
                case "hex":
                    return this.toHex();
                case "alias":
                    return this.toAlias() || this.toHex();
                default:
                    return b;
            }
        },
        stringParsers: [{
                re: /rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*?\)/,
                format: "rgb",
                parse: function(a) {
                    return [a[1], a[2], a[3], 1];
                },
            },
            {
                re: /rgb\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*?\)/,
                format: "rgb",
                parse: function(a) {
                    return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], 1];
                },
            },
            {
                re: /rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                format: "rgba",
                parse: function(a) {
                    return [a[1], a[2], a[3], a[4]];
                },
            },
            {
                re: /rgba\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                format: "rgba",
                parse: function(a) {
                    return [2.55 * a[1], 2.55 * a[2], 2.55 * a[3], a[4]];
                },
            },
            {
                re: /hsl\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*?\)/,
                format: "hsl",
                parse: function(a) {
                    return [a[1] / 360, a[2] / 100, a[3] / 100, a[4]];
                },
            },
            {
                re: /hsla\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                format: "hsla",
                parse: function(a) {
                    return [a[1] / 360, a[2] / 100, a[3] / 100, a[4]];
                },
            },
            {
                re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,
                format: "hex",
                parse: function(a) {
                    return [
                        parseInt(a[1], 16),
                        parseInt(a[2], 16),
                        parseInt(a[3], 16),
                        1,
                    ];
                },
            },
            {
                re: /#?([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/,
                format: "hex",
                parse: function(a) {
                    return [
                        parseInt(a[1] + a[1], 16),
                        parseInt(a[2] + a[2], 16),
                        parseInt(a[3] + a[3], 16),
                        1,
                    ];
                },
            },
            {
                re: /^([a-z]{3,})$/,
                format: "alias",
                parse: function(a) {
                    var b = this.colorNameToHex(a[0]) || "#000000",
                        c = this.stringParsers[6].re.exec(b),
                        d = c && this.stringParsers[6].parse.apply(this, [c]);
                    return d;
                },
            },
        ],
        colorNameToHex: function(a) {
            return "undefined" != typeof this.colors[a.toLowerCase()] ?
                this.colors[a.toLowerCase()] :
                !1;
        },
    };
    var c = {
            horizontal: !1,
            inline: !1,
            color: !1,
            format: !1,
            input: "input",
            container: !1,
            component: ".add-on, .input-group-addon",
            sliders: {
                saturation: {
                    maxLeft: 100,
                    maxTop: 100,
                    callLeft: "setSaturation",
                    callTop: "setBrightness",
                },
                hue: {
                    maxLeft: 0,
                    maxTop: 100,
                    callLeft: !1,
                    callTop: "setHue"
                },
                alpha: {
                    maxLeft: 0,
                    maxTop: 100,
                    callLeft: !1,
                    callTop: "setAlpha"
                },
            },
            slidersHorz: {
                saturation: {
                    maxLeft: 100,
                    maxTop: 100,
                    callLeft: "setSaturation",
                    callTop: "setBrightness",
                },
                hue: {
                    maxLeft: 100,
                    maxTop: 0,
                    callLeft: "setHue",
                    callTop: !1
                },
                alpha: {
                    maxLeft: 100,
                    maxTop: 0,
                    callLeft: "setAlpha",
                    callTop: !1
                },
            },
            template: '<div class="colorpicker dropdown-menu"><div class="colorpicker-saturation"><i><b></b></i></div><div class="colorpicker-hue"><i></i></div><div class="colorpicker-alpha"><i></i></div><div class="colorpicker-color"><div /></div></div>',
            align: "right",
            customClass: null,
        },
        d = function(d, e) {
            (this.element = a(d).addClass("colorpicker-element")),
            (this.options = a.extend(!0, {}, c, this.element.data(), e)),
            (this.component = this.options.component),
            (this.component =
                this.component !== !1 ? this.element.find(this.component) : !1),
            this.component && 0 === this.component.length && (this.component = !1),
                (this.container =
                    this.options.container === !0 ?
                    this.element :
                    this.options.container),
                (this.container = this.container !== !1 ? a(this.container) : !1),
                (this.input = this.element.is("input") ?
                    this.element :
                    this.options.input ?
                    this.element.find(this.options.input) :
                    !1),
                this.input && 0 === this.input.length && (this.input = !1),
                (this.color = new b(
                    this.options.color !== !1 ? this.options.color : this.getValue()
                )),
                (this.format =
                    this.options.format !== !1 ?
                    this.options.format :
                    this.color.origFormat),
                (this.picker = a(this.options.template)),
                this.options.customClass &&
                this.picker.addClass(this.options.customClass),
                this.options.inline ?
                this.picker.addClass("colorpicker-inline colorpicker-visible") :
                this.picker.addClass("colorpicker-hidden"),
                this.options.horizontal &&
                this.picker.addClass("colorpicker-horizontal"),
                ("rgba" === this.format ||
                    "hsla" === this.format ||
                    this.options.format === !1) &&
                this.picker.addClass("colorpicker-with-alpha"),
                "right" === this.options.align &&
                this.picker.addClass("colorpicker-right"),
                this.picker.on(
                    "mousedown.colorpicker touchstart.colorpicker",
                    a.proxy(this.mousedown, this)
                ),
                this.picker.appendTo(this.container ? this.container : a("body")),
                this.input !== !1 &&
                (this.input.on({
                        "keyup.colorpicker": a.proxy(this.keyup, this)
                    }),
                    this.component === !1 &&
                    this.element.on({
                        "focus.colorpicker": a.proxy(this.show, this)
                    }),
                    this.options.inline === !1 &&
                    this.element.on({
                        "focusout.colorpicker": a.proxy(this.hide, this),
                    })),
                this.component !== !1 &&
                this.component.on({
                    "click.colorpicker": a.proxy(this.show, this)
                }),
                this.input === !1 &&
                this.component === !1 &&
                this.element.on({
                    "click.colorpicker": a.proxy(this.show, this)
                }),
                this.input !== !1 &&
                this.component !== !1 &&
                "color" === this.input.attr("type") &&
                this.input.on({
                    "click.colorpicker": a.proxy(this.show, this),
                    "focus.colorpicker": a.proxy(this.show, this),
                }),
                this.update(),
                a(
                    a.proxy(function() {
                        this.element.trigger("create");
                    }, this)
                );
        };
    (d.Color = b),
    (d.prototype = {
        constructor: d,
        destroy: function() {
            this.picker.remove(),
                this.element.removeData("colorpicker").off(".colorpicker"),
                this.input !== !1 && this.input.off(".colorpicker"),
                this.component !== !1 && this.component.off(".colorpicker"),
                this.element.removeClass("colorpicker-element"),
                this.element.trigger({
                    type: "destroy"
                });
        },
        reposition: function() {
            if (this.options.inline !== !1 || this.options.container) return !1;
            var a =
                this.container && this.container[0] !== document.body ?
                "position" :
                "offset",
                b = this.component || this.element,
                c = b[a]();
            "right" === this.options.align &&
                (c.left -= this.picker.outerWidth() - b.outerWidth()),
                this.picker.css({
                    top: c.top + b.outerHeight(),
                    left: c.left
                });
        },
        show: function(b) {
            return this.isDisabled() ?
                !1 :
                (this.picker
                    .addClass("colorpicker-visible")
                    .removeClass("colorpicker-hidden"),
                    this.reposition(),
                    a(window).on("resize.colorpicker", a.proxy(this.reposition, this)), !b ||
                    (this.hasInput() && "color" !== this.input.attr("type")) ||
                    (b.stopPropagation &&
                        b.preventDefault &&
                        (b.stopPropagation(), b.preventDefault())),
                    this.options.inline === !1 &&
                    a(window.document).on({
                        "mousedown.colorpicker": a.proxy(this.hide, this),
                    }),
                    void this.element.trigger({
                        type: "showPicker",
                        color: this.color,
                    }));
        },
        hide: function() {
            this.picker
                .addClass("colorpicker-hidden")
                .removeClass("colorpicker-visible"),
                a(window).off("resize.colorpicker", this.reposition),
                a(document).off({
                    "mousedown.colorpicker": this.hide
                }),
                this.update(),
                this.element.trigger({
                    type: "hidePicker",
                    color: this.color
                });
        },
        updateData: function(a) {
            return (
                (a = a || this.color.toString(this.format)),
                this.element.data("color", a),
                a
            );
        },
        updateInput: function(a) {
            return (
                (a = a || this.color.toString(this.format)),
                this.input !== !1 && this.input.prop("value", a),
                a
            );
        },
        updatePicker: function(a) {
            void 0 !== a && (this.color = new b(a));
            var c =
                this.options.horizontal === !1 ?
                this.options.sliders :
                this.options.slidersHorz,
                d = this.picker.find("i");
            return 0 !== d.length ?
                (this.options.horizontal === !1 ?
                    ((c = this.options.sliders),
                        d
                        .eq(1)
                        .css("top", c.hue.maxTop * (1 - this.color.value.h))
                        .end()
                        .eq(2)
                        .css("top", c.alpha.maxTop * (1 - this.color.value.a))) :
                    ((c = this.options.slidersHorz),
                        d
                        .eq(1)
                        .css("left", c.hue.maxLeft * (1 - this.color.value.h))
                        .end()
                        .eq(2)
                        .css("left", c.alpha.maxLeft * (1 - this.color.value.a))),
                    d
                    .eq(0)
                    .css({
                        top: c.saturation.maxTop -
                            this.color.value.b * c.saturation.maxTop,
                        left: this.color.value.s * c.saturation.maxLeft,
                    }),
                    this.picker
                    .find(".colorpicker-saturation")
                    .css(
                        "backgroundColor",
                        this.color.toHex(this.color.value.h, 1, 1, 1)
                    ),
                    this.picker
                    .find(".colorpicker-alpha")
                    .css("backgroundColor", this.color.toHex()),
                    this.picker
                    .find(".colorpicker-color, .colorpicker-color div")
                    .css("backgroundColor", this.color.toString(this.format)),
                    a) :
                void 0;
        },
        updateComponent: function(a) {
            if (
                ((a = a || this.color.toString(this.format)), this.component !== !1)
            ) {
                var b = this.component.find("i").eq(0);
                b.length > 0 ?
                    b.css({
                        backgroundColor: a
                    }) :
                    this.component.css({
                        backgroundColor: a
                    });
            }
            return a;
        },
        update: function(a) {
            var b;
            return (
                (this.getValue(!1) !== !1 || a === !0) &&
                ((b = this.updateComponent()),
                    this.updateInput(b),
                    this.updateData(b),
                    this.updatePicker()),
                b
            );
        },
        setValue: function(a) {
            (this.color = new b(a)),
            this.update(),
                this.element.trigger({
                    type: "changeColor",
                    color: this.color,
                    value: a,
                });
        },
        getValue: function(a) {
            a = void 0 === a ? "#000000" : a;
            var b;
            return (
                (b = this.hasInput() ? this.input.val() : this.element.data("color")),
                (void 0 === b || "" === b || null === b) && (b = a),
                b
            );
        },
        hasInput: function() {
            return this.input !== !1;
        },
        isDisabled: function() {
            return this.hasInput() ? this.input.prop("disabled") === !0 : !1;
        },
        disable: function() {
            return this.hasInput() ?
                (this.input.prop("disabled", !0),
                    this.element.trigger({
                        type: "disable",
                        color: this.color,
                        value: this.getValue(),
                    }), !0) :
                !1;
        },
        enable: function() {
            return this.hasInput() ?
                (this.input.prop("disabled", !1),
                    this.element.trigger({
                        type: "enable",
                        color: this.color,
                        value: this.getValue(),
                    }), !0) :
                !1;
        },
        currentSlider: null,
        mousePointer: {
            left: 0,
            top: 0
        },
        mousedown: function(b) {
            b.pageX ||
                b.pageY ||
                !b.originalEvent ||
                ((b.pageX = b.originalEvent.touches[0].pageX),
                    (b.pageY = b.originalEvent.touches[0].pageY)),
                b.stopPropagation(),
                b.preventDefault();
            var c = a(b.target),
                d = c.closest("div"),
                e = this.options.horizontal ?
                this.options.slidersHorz :
                this.options.sliders;
            if (!d.is(".colorpicker")) {
                if (d.is(".colorpicker-saturation"))
                    this.currentSlider = a.extend({}, e.saturation);
                else if (d.is(".colorpicker-hue"))
                    this.currentSlider = a.extend({}, e.hue);
                else {
                    if (!d.is(".colorpicker-alpha")) return !1;
                    this.currentSlider = a.extend({}, e.alpha);
                }
                var f = d.offset();
                (this.currentSlider.guide = d.find("i")[0].style),
                (this.currentSlider.left = b.pageX - f.left),
                (this.currentSlider.top = b.pageY - f.top),
                (this.mousePointer = {
                    left: b.pageX,
                    top: b.pageY
                }),
                a(document)
                    .on({
                        "mousemove.colorpicker": a.proxy(this.mousemove, this),
                        "touchmove.colorpicker": a.proxy(this.mousemove, this),
                        "mouseup.colorpicker": a.proxy(this.mouseup, this),
                        "touchend.colorpicker": a.proxy(this.mouseup, this),
                    })
                    .trigger("mousemove");
            }
            return !1;
        },
        mousemove: function(a) {
            a.pageX ||
                a.pageY ||
                !a.originalEvent ||
                ((a.pageX = a.originalEvent.touches[0].pageX),
                    (a.pageY = a.originalEvent.touches[0].pageY)),
                a.stopPropagation(),
                a.preventDefault();
            var b = Math.max(
                    0,
                    Math.min(
                        this.currentSlider.maxLeft,
                        this.currentSlider.left +
                        ((a.pageX || this.mousePointer.left) - this.mousePointer.left)
                    )
                ),
                c = Math.max(
                    0,
                    Math.min(
                        this.currentSlider.maxTop,
                        this.currentSlider.top +
                        ((a.pageY || this.mousePointer.top) - this.mousePointer.top)
                    )
                );
            return (
                (this.currentSlider.guide.left = b + "px"),
                (this.currentSlider.guide.top = c + "px"),
                this.currentSlider.callLeft &&
                this.color[this.currentSlider.callLeft].call(
                    this.color,
                    b / this.currentSlider.maxLeft
                ),
                this.currentSlider.callTop &&
                this.color[this.currentSlider.callTop].call(
                    this.color,
                    c / this.currentSlider.maxTop
                ),
                "setAlpha" === this.currentSlider.callTop &&
                this.options.format === !1 &&
                (1 !== this.color.value.a ?
                    ((this.format = "rgba"), (this.color.origFormat = "rgba")) :
                    ((this.format = "hex"), (this.color.origFormat = "hex"))),
                this.update(!0),
                this.element.trigger({
                    type: "changeColor",
                    color: this.color
                }), !1
            );
        },
        mouseup: function(b) {
            return (
                b.stopPropagation(),
                b.preventDefault(),
                a(document).off({
                    "mousemove.colorpicker": this.mousemove,
                    "touchmove.colorpicker": this.mousemove,
                    "mouseup.colorpicker": this.mouseup,
                    "touchend.colorpicker": this.mouseup,
                }), !1
            );
        },
        keyup: function(a) {
            38 === a.keyCode ?
                (this.color.value.a < 1 &&
                    (this.color.value.a =
                        Math.round(100 * (this.color.value.a + 0.01)) / 100),
                    this.update(!0)) :
                40 === a.keyCode ?
                (this.color.value.a > 0 &&
                    (this.color.value.a =
                        Math.round(100 * (this.color.value.a - 0.01)) / 100),
                    this.update(!0)) :
                ((this.color = new b(this.input.val())),
                    this.color.origFormat &&
                    this.options.format === !1 &&
                    (this.format = this.color.origFormat),
                    this.getValue(!1) !== !1 &&
                    (this.updateData(), this.updateComponent(), this.updatePicker())),
                this.element.trigger({
                    type: "changeColor",
                    color: this.color,
                    value: this.input.val(),
                });
        },
    }),
    (a.colorpicker = d),
    (a.fn.colorpicker = function(b) {
        var c,
            e = arguments,
            f = this.each(function() {
                var f = a(this),
                    g = f.data("colorpicker"),
                    h = "object" == typeof b ? b : {};
                g || "string" == typeof b ?
                    "string" == typeof b &&
                    (c = g[b].apply(g, Array.prototype.slice.call(e, 1))) :
                    f.data("colorpicker", new d(this, h));
            });
        return "getValue" === b ? c : f;
    }),
    (a.fn.colorpicker.constructor = d);
});
/*
Trix 0.10.1
Copyright © 2017 Basecamp, LLC
http://trix-editor.org/
 */
(function() {}).call(this),
    function() {
        var t;
        null == window.Set && (window.Set = t = function() {
            function t() {
                this.clear()
            }
            return t.prototype.clear = function() {
                return this.values = []
            }, t.prototype.has = function(t) {
                return -1 !== this.values.indexOf(t)
            }, t.prototype.add = function(t) {
                return this.has(t) || this.values.push(t), this
            }, t.prototype["delete"] = function(t) {
                var e;
                return -1 === (e = this.values.indexOf(t)) ? !1 : (this.values.splice(e, 1), !0)
            }, t.prototype.forEach = function() {
                var t;
                return (t = this.values).forEach.apply(t, arguments)
            }, t
        }())
    }.call(this),
    function(t) {
        function e() {}

        function n(t, e) {
            return function() {
                t.apply(e, arguments)
            }
        }

        function o(t) {
            if ("object" != typeof this) throw new TypeError("Promises must be constructed via new");
            if ("function" != typeof t) throw new TypeError("not a function");
            this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], c(t, this)
        }

        function i(t, e) {
            for (; 3 === t._state;) t = t._value;
            return 0 === t._state ? void t._deferreds.push(e) : (t._handled = !0, void h(function() {
                var n = 1 === t._state ? e.onFulfilled : e.onRejected;
                if (null === n) return void(1 === t._state ? r : s)(e.promise, t._value);
                var o;
                try {
                    o = n(t._value)
                } catch (i) {
                    return void s(e.promise, i)
                }
                r(e.promise, o)
            }))
        }

        function r(t, e) {
            try {
                if (e === t) throw new TypeError("A promise cannot be resolved with itself.");
                if (e && ("object" == typeof e || "function" == typeof e)) {
                    var i = e.then;
                    if (e instanceof o) return t._state = 3, t._value = e, void a(t);
                    if ("function" == typeof i) return void c(n(i, e), t)
                }
                t._state = 1, t._value = e, a(t)
            } catch (r) {
                s(t, r)
            }
        }

        function s(t, e) {
            t._state = 2, t._value = e, a(t)
        }

        function a(t) {
            2 === t._state && 0 === t._deferreds.length && setTimeout(function() {
                t._handled || p(t._value)
            }, 1);
            for (var e = 0, n = t._deferreds.length; n > e; e++) i(t, t._deferreds[e]);
            t._deferreds = null
        }

        function u(t, e, n) {
            this.onFulfilled = "function" == typeof t ? t : null, this.onRejected = "function" == typeof e ? e : null, this.promise = n
        }

        function c(t, e) {
            var n = !1;
            try {
                t(function(t) {
                    n || (n = !0, r(e, t))
                }, function(t) {
                    n || (n = !0, s(e, t))
                })
            } catch (o) {
                if (n) return;
                n = !0, s(e, o)
            }
        }
        var l = setTimeout,
            h = "function" == typeof setImmediate && setImmediate || function(t) {
                l(t, 1)
            },
            p = function(t) {
                "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", t)
            };
        o.prototype["catch"] = function(t) {
            return this.then(null, t)
        }, o.prototype.then = function(t, n) {
            var r = new o(e);
            return i(this, new u(t, n, r)), r
        }, o.all = function(t) {
            var e = Array.prototype.slice.call(t);
            return new o(function(t, n) {
                function o(r, s) {
                    try {
                        if (s && ("object" == typeof s || "function" == typeof s)) {
                            var a = s.then;
                            if ("function" == typeof a) return void a.call(s, function(t) {
                                o(r, t)
                            }, n)
                        }
                        e[r] = s, 0 === --i && t(e)
                    } catch (u) {
                        n(u)
                    }
                }
                if (0 === e.length) return t([]);
                for (var i = e.length, r = 0; r < e.length; r++) o(r, e[r])
            })
        }, o.resolve = function(t) {
            return t && "object" == typeof t && t.constructor === o ? t : new o(function(e) {
                e(t)
            })
        }, o.reject = function(t) {
            return new o(function(e, n) {
                n(t)
            })
        }, o.race = function(t) {
            return new o(function(e, n) {
                for (var o = 0, i = t.length; i > o; o++) t[o].then(e, n)
            })
        }, o._setImmediateFn = function(t) {
            h = t
        }, o._setUnhandledRejectionFn = function(t) {
            p = t
        }, "undefined" != typeof module && module.exports ? module.exports = o : t.Promise || (t.Promise = o)
    }(this),
    /**
     * @license
     * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
     * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
     * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
     * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
     * Code distributed by Google as part of the polymer project is also
     * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
     */
    "undefined" == typeof WeakMap && ! function() {
        var t = Object.defineProperty,
            e = Date.now() % 1e9,
            n = function() {
                this.name = "__st" + (1e9 * Math.random() >>> 0) + (e++ + "__")
            };
        n.prototype = {
            set: function(e, n) {
                var o = e[this.name];
                return o && o[0] === e ? o[1] = n : t(e, this.name, {
                    value: [e, n],
                    writable: !0
                }), this
            },
            get: function(t) {
                var e;
                return (e = t[this.name]) && e[0] === t ? e[1] : void 0
            },
            "delete": function(t) {
                var e = t[this.name];
                return e && e[0] === t ? (e[0] = e[1] = void 0, !0) : !1
            },
            has: function(t) {
                var e = t[this.name];
                return e ? e[0] === t : !1
            }
        }, window.WeakMap = n
    }(),
    function(t) {
        function e(t) {
            A.push(t), b || (b = !0, g(o))
        }

        function n(t) {
            return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(t) || t
        }

        function o() {
            b = !1;
            var t = A;
            A = [], t.sort(function(t, e) {
                return t.uid_ - e.uid_
            });
            var e = !1;
            t.forEach(function(t) {
                var n = t.takeRecords();
                i(t), n.length && (t.callback_(n, t), e = !0)
            }), e && o()
        }

        function i(t) {
            t.nodes_.forEach(function(e) {
                var n = m.get(e);
                n && n.forEach(function(e) {
                    e.observer === t && e.removeTransientObservers()
                })
            })
        }

        function r(t, e) {
            for (var n = t; n; n = n.parentNode) {
                var o = m.get(n);
                if (o)
                    for (var i = 0; i < o.length; i++) {
                        var r = o[i],
                            s = r.options;
                        if (n === t || s.subtree) {
                            var a = e(s);
                            a && r.enqueue(a)
                        }
                    }
            }
        }

        function s(t) {
            this.callback_ = t, this.nodes_ = [], this.records_ = [], this.uid_ = ++C
        }

        function a(t, e) {
            this.type = t, this.target = e, this.addedNodes = [], this.removedNodes = [], this.previousSibling = null, this.nextSibling = null, this.attributeName = null, this.attributeNamespace = null, this.oldValue = null
        }

        function u(t) {
            var e = new a(t.type, t.target);
            return e.addedNodes = t.addedNodes.slice(), e.removedNodes = t.removedNodes.slice(), e.previousSibling = t.previousSibling, e.nextSibling = t.nextSibling, e.attributeName = t.attributeName, e.attributeNamespace = t.attributeNamespace, e.oldValue = t.oldValue, e
        }

        function c(t, e) {
            return w = new a(t, e)
        }

        function l(t) {
            return x ? x : (x = u(w), x.oldValue = t, x)
        }

        function h() {
            w = x = void 0
        }

        function p(t) {
            return t === x || t === w
        }

        function d(t, e) {
            return t === e ? t : x && p(t) ? x : null
        }

        function f(t, e, n) {
            this.observer = t, this.target = e, this.options = n, this.transientObservedNodes = []
        }
        if (!t.JsMutationObserver) {
            var g, m = new WeakMap;
            if (/Trident|Edge/.test(navigator.userAgent)) g = setTimeout;
            else if (window.setImmediate) g = window.setImmediate;
            else {
                var y = [],
                    v = String(Math.random());
                window.addEventListener("message", function(t) {
                    if (t.data === v) {
                        var e = y;
                        y = [], e.forEach(function(t) {
                            t()
                        })
                    }
                }), g = function(t) {
                    y.push(t), window.postMessage(v, "*")
                }
            }
            var b = !1,
                A = [],
                C = 0;
            s.prototype = {
                observe: function(t, e) {
                    if (t = n(t), !e.childList && !e.attributes && !e.characterData || e.attributeOldValue && !e.attributes || e.attributeFilter && e.attributeFilter.length && !e.attributes || e.characterDataOldValue && !e.characterData) throw new SyntaxError;
                    var o = m.get(t);
                    o || m.set(t, o = []);
                    for (var i, r = 0; r < o.length; r++)
                        if (o[r].observer === this) {
                            i = o[r], i.removeListeners(), i.options = e;
                            break
                        }
                    i || (i = new f(this, t, e), o.push(i), this.nodes_.push(t)), i.addListeners()
                },
                disconnect: function() {
                    this.nodes_.forEach(function(t) {
                        for (var e = m.get(t), n = 0; n < e.length; n++) {
                            var o = e[n];
                            if (o.observer === this) {
                                o.removeListeners(), e.splice(n, 1);
                                break
                            }
                        }
                    }, this), this.records_ = []
                },
                takeRecords: function() {
                    var t = this.records_;
                    return this.records_ = [], t
                }
            };
            var w, x;
            f.prototype = {
                enqueue: function(t) {
                    var n = this.observer.records_,
                        o = n.length;
                    if (n.length > 0) {
                        var i = n[o - 1],
                            r = d(i, t);
                        if (r) return void(n[o - 1] = r)
                    } else e(this.observer);
                    n[o] = t
                },
                addListeners: function() {
                    this.addListeners_(this.target)
                },
                addListeners_: function(t) {
                    var e = this.options;
                    e.attributes && t.addEventListener("DOMAttrModified", this, !0), e.characterData && t.addEventListener("DOMCharacterDataModified", this, !0), e.childList && t.addEventListener("DOMNodeInserted", this, !0), (e.childList || e.subtree) && t.addEventListener("DOMNodeRemoved", this, !0)
                },
                removeListeners: function() {
                    this.removeListeners_(this.target)
                },
                removeListeners_: function(t) {
                    var e = this.options;
                    e.attributes && t.removeEventListener("DOMAttrModified", this, !0), e.characterData && t.removeEventListener("DOMCharacterDataModified", this, !0), e.childList && t.removeEventListener("DOMNodeInserted", this, !0), (e.childList || e.subtree) && t.removeEventListener("DOMNodeRemoved", this, !0)
                },
                addTransientObserver: function(t) {
                    if (t !== this.target) {
                        this.addListeners_(t), this.transientObservedNodes.push(t);
                        var e = m.get(t);
                        e || m.set(t, e = []), e.push(this)
                    }
                },
                removeTransientObservers: function() {
                    var t = this.transientObservedNodes;
                    this.transientObservedNodes = [], t.forEach(function(t) {
                        this.removeListeners_(t);
                        for (var e = m.get(t), n = 0; n < e.length; n++)
                            if (e[n] === this) {
                                e.splice(n, 1);
                                break
                            }
                    }, this)
                },
                handleEvent: function(t) {
                    switch (t.stopImmediatePropagation(), t.type) {
                        case "DOMAttrModified":
                            var e = t.attrName,
                                n = t.relatedNode.namespaceURI,
                                o = t.target,
                                i = new c("attributes", o);
                            i.attributeName = e, i.attributeNamespace = n;
                            var s = t.attrChange === MutationEvent.ADDITION ? null : t.prevValue;
                            r(o, function(t) {
                                return !t.attributes || t.attributeFilter && t.attributeFilter.length && -1 === t.attributeFilter.indexOf(e) && -1 === t.attributeFilter.indexOf(n) ? void 0 : t.attributeOldValue ? l(s) : i
                            });
                            break;
                        case "DOMCharacterDataModified":
                            var o = t.target,
                                i = c("characterData", o),
                                s = t.prevValue;
                            r(o, function(t) {
                                return t.characterData ? t.characterDataOldValue ? l(s) : i : void 0
                            });
                            break;
                        case "DOMNodeRemoved":
                            this.addTransientObserver(t.target);
                        case "DOMNodeInserted":
                            var a, u, p = t.target;
                            "DOMNodeInserted" === t.type ? (a = [p], u = []) : (a = [], u = [p]);
                            var d = p.previousSibling,
                                f = p.nextSibling,
                                i = c("childList", t.target.parentNode);
                            i.addedNodes = a, i.removedNodes = u, i.previousSibling = d, i.nextSibling = f, r(t.relatedNode, function(t) {
                                return t.childList ? i : void 0
                            })
                    }
                    h()
                }
            }, t.JsMutationObserver = s, t.MutationObserver || (t.MutationObserver = s, s._isPolyfilled = !0)
        }
    }(self),
    function() {
        "use strict";
        if (!window.performance) {
            var t = Date.now();
            window.performance = {
                now: function() {
                    return Date.now() - t
                }
            }
        }
        window.requestAnimationFrame || (window.requestAnimationFrame = function() {
            var t = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
            return t ? function(e) {
                return t(function() {
                    e(performance.now())
                })
            } : function(t) {
                return window.setTimeout(t, 1e3 / 60)
            }
        }()), window.cancelAnimationFrame || (window.cancelAnimationFrame = function() {
            return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(t) {
                clearTimeout(t)
            }
        }());
        var e = function() {
            var t = document.createEvent("Event");
            return t.initEvent("foo", !0, !0), t.preventDefault(), t.defaultPrevented
        }();
        if (!e) {
            var n = Event.prototype.preventDefault;
            Event.prototype.preventDefault = function() {
                this.cancelable && (n.call(this), Object.defineProperty(this, "defaultPrevented", {
                    get: function() {
                        return !0
                    },
                    configurable: !0
                }))
            }
        }
        var o = /Trident/.test(navigator.userAgent);
        if ((!window.CustomEvent || o && "function" != typeof window.CustomEvent) && (window.CustomEvent = function(t, e) {
                e = e || {};
                var n = document.createEvent("CustomEvent");
                return n.initCustomEvent(t, Boolean(e.bubbles), Boolean(e.cancelable), e.detail), n
            }, window.CustomEvent.prototype = window.Event.prototype), !window.Event || o && "function" != typeof window.Event) {
            var i = window.Event;
            window.Event = function(t, e) {
                e = e || {};
                var n = document.createEvent("Event");
                return n.initEvent(t, Boolean(e.bubbles), Boolean(e.cancelable)), n
            }, window.Event.prototype = i.prototype
        }
    }(window.WebComponents), window.CustomElements = window.CustomElements || {
        flags: {}
    },
    function(t) {
        var e = t.flags,
            n = [],
            o = function(t) {
                n.push(t)
            },
            i = function() {
                n.forEach(function(e) {
                    e(t)
                })
            };
        t.addModule = o, t.initializeModules = i, t.hasNative = Boolean(document.registerElement), t.isIE = /Trident/.test(navigator.userAgent), t.useNative = !e.register && t.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative)
    }(window.CustomElements), window.CustomElements.addModule(function(t) {
        function e(t, e) {
            n(t, function(t) {
                return e(t) ? !0 : void o(t, e)
            }), o(t, e)
        }

        function n(t, e, o) {
            var i = t.firstElementChild;
            if (!i)
                for (i = t.firstChild; i && i.nodeType !== Node.ELEMENT_NODE;) i = i.nextSibling;
            for (; i;) e(i, o) !== !0 && n(i, e, o), i = i.nextElementSibling;
            return null
        }

        function o(t, n) {
            for (var o = t.shadowRoot; o;) e(o, n), o = o.olderShadowRoot
        }

        function i(t, e) {
            r(t, e, [])
        }

        function r(t, e, n) {
            if (t = window.wrap(t), !(n.indexOf(t) >= 0)) {
                n.push(t);
                for (var o, i = t.querySelectorAll("link[rel=" + s + "]"), a = 0, u = i.length; u > a && (o = i[a]); a++) o.import && r(o.import, e, n);
                e(t)
            }
        }
        var s = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
        t.forDocumentTree = i, t.forSubtree = e
    }), window.CustomElements.addModule(function(t) {
        function e(t, e) {
            return n(t, e) || o(t, e)
        }

        function n(e, n) {
            return t.upgrade(e, n) ? !0 : void(n && s(e))
        }

        function o(t, e) {
            b(t, function(t) {
                return n(t, e) ? !0 : void 0
            })
        }

        function i(t) {
            x.push(t), w || (w = !0, setTimeout(r))
        }

        function r() {
            w = !1;
            for (var t, e = x, n = 0, o = e.length; o > n && (t = e[n]); n++) t();
            x = []
        }

        function s(t) {
            C ? i(function() {
                a(t)
            }) : a(t)
        }

        function a(t) {
            t.__upgraded__ && !t.__attached && (t.__attached = !0, t.attachedCallback && t.attachedCallback())
        }

        function u(t) {
            c(t), b(t, function(t) {
                c(t)
            })
        }

        function c(t) {
            C ? i(function() {
                l(t)
            }) : l(t)
        }

        function l(t) {
            t.__upgraded__ && t.__attached && (t.__attached = !1, t.detachedCallback && t.detachedCallback())
        }

        function h(t) {
            for (var e = t, n = window.wrap(document); e;) {
                if (e == n) return !0;
                e = e.parentNode || e.nodeType === Node.DOCUMENT_FRAGMENT_NODE && e.host
            }
        }

        function p(t) {
            if (t.shadowRoot && !t.shadowRoot.__watched) {
                v.dom && console.log("watching shadow-root for: ", t.localName);
                for (var e = t.shadowRoot; e;) g(e), e = e.olderShadowRoot
            }
        }

        function d(t, n) {
            if (v.dom) {
                var o = n[0];
                if (o && "childList" === o.type && o.addedNodes && o.addedNodes) {
                    for (var i = o.addedNodes[0]; i && i !== document && !i.host;) i = i.parentNode;
                    var r = i && (i.URL || i._URL || i.host && i.host.localName) || "";
                    r = r.split("/?").shift().split("/").pop()
                }
                console.group("mutations (%d) [%s]", n.length, r || "")
            }
            var s = h(t);
            n.forEach(function(t) {
                "childList" === t.type && (E(t.addedNodes, function(t) {
                    t.localName && e(t, s)
                }), E(t.removedNodes, function(t) {
                    t.localName && u(t)
                }))
            }), v.dom && console.groupEnd()
        }

        function f(t) {
            for (t = window.wrap(t), t || (t = window.wrap(document)); t.parentNode;) t = t.parentNode;
            var e = t.__observer;
            e && (d(t, e.takeRecords()), r())
        }

        function g(t) {
            if (!t.__observer) {
                var e = new MutationObserver(d.bind(this, t));
                e.observe(t, {
                    childList: !0,
                    subtree: !0
                }), t.__observer = e
            }
        }

        function m(t) {
            t = window.wrap(t), v.dom && console.group("upgradeDocument: ", t.baseURI.split("/").pop());
            var n = t === window.wrap(document);
            e(t, n), g(t), v.dom && console.groupEnd()
        }

        function y(t) {
            A(t, m)
        }
        var v = t.flags,
            b = t.forSubtree,
            A = t.forDocumentTree,
            C = window.MutationObserver._isPolyfilled && v["throttle-attached"];
        t.hasPolyfillMutations = C, t.hasThrottledAttached = C;
        var w = !1,
            x = [],
            E = Array.prototype.forEach.call.bind(Array.prototype.forEach),
            S = Element.prototype.createShadowRoot;
        S && (Element.prototype.createShadowRoot = function() {
            var t = S.call(this);
            return window.CustomElements.watchShadow(this), t
        }), t.watchShadow = p, t.upgradeDocumentTree = y, t.upgradeDocument = m, t.upgradeSubtree = o, t.upgradeAll = e, t.attached = s, t.takeRecords = f
    }), window.CustomElements.addModule(function(t) {
        function e(e, o) {
            if ("template" === e.localName && window.HTMLTemplateElement && HTMLTemplateElement.decorate && HTMLTemplateElement.decorate(e), !e.__upgraded__ && e.nodeType === Node.ELEMENT_NODE) {
                var i = e.getAttribute("is"),
                    r = t.getRegisteredDefinition(e.localName) || t.getRegisteredDefinition(i);
                if (r && (i && r.tag == e.localName || !i && !r.extends)) return n(e, r, o)
            }
        }

        function n(e, n, i) {
            return s.upgrade && console.group("upgrade:", e.localName), n.is && e.setAttribute("is", n.is), o(e, n), e.__upgraded__ = !0, r(e), i && t.attached(e), t.upgradeSubtree(e, i), s.upgrade && console.groupEnd(), e
        }

        function o(t, e) {
            Object.__proto__ ? t.__proto__ = e.prototype : (i(t, e.prototype, e.native), t.__proto__ = e.prototype)
        }

        function i(t, e, n) {
            for (var o = {}, i = e; i !== n && i !== HTMLElement.prototype;) {
                for (var r, s = Object.getOwnPropertyNames(i), a = 0; r = s[a]; a++) o[r] || (Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(i, r)), o[r] = 1);
                i = Object.getPrototypeOf(i)
            }
        }

        function r(t) {
            t.createdCallback && t.createdCallback()
        }
        var s = t.flags;
        t.upgrade = e, t.upgradeWithDefinition = n, t.implementPrototype = o
    }), window.CustomElements.addModule(function(t) {
        function e(e, o) {
            var u = o || {};
            if (!e) throw new Error("document.registerElement: first argument `name` must not be empty");
            if (e.indexOf("-") < 0) throw new Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(e) + "'.");
            if (i(e)) throw new Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(e) + "'. The type name is invalid.");
            if (c(e)) throw new Error("DuplicateDefinitionError: a type with name '" + String(e) + "' is already registered");
            return u.prototype || (u.prototype = Object.create(HTMLElement.prototype)), u.__name = e.toLowerCase(), u.extends && (u.extends = u.extends.toLowerCase()), u.lifecycle = u.lifecycle || {}, u.ancestry = r(u.extends), s(u), a(u), n(u.prototype), l(u.__name, u), u.ctor = h(u), u.ctor.prototype = u.prototype, u.prototype.constructor = u.ctor, t.ready && m(document), u.ctor
        }

        function n(t) {
            if (!t.setAttribute._polyfilled) {
                var e = t.setAttribute;
                t.setAttribute = function(t, n) {
                    o.call(this, t, n, e)
                };
                var n = t.removeAttribute;
                t.removeAttribute = function(t) {
                    o.call(this, t, null, n)
                }, t.setAttribute._polyfilled = !0
            }
        }

        function o(t, e, n) {
            t = t.toLowerCase();
            var o = this.getAttribute(t);
            n.apply(this, arguments);
            var i = this.getAttribute(t);
            this.attributeChangedCallback && i !== o && this.attributeChangedCallback(t, o, i)
        }

        function i(t) {
            for (var e = 0; e < C.length; e++)
                if (t === C[e]) return !0
        }

        function r(t) {
            var e = c(t);
            return e ? r(e.extends).concat([e]) : []
        }

        function s(t) {
            for (var e, n = t.extends, o = 0; e = t.ancestry[o]; o++) n = e.is && e.tag;
            t.tag = n || t.__name, n && (t.is = t.__name)
        }

        function a(t) {
            if (!Object.__proto__) {
                var e = HTMLElement.prototype;
                if (t.is) {
                    var n = document.createElement(t.tag);
                    e = Object.getPrototypeOf(n)
                }
                for (var o, i = t.prototype, r = !1; i;) i == e && (r = !0), o = Object.getPrototypeOf(i), o && (i.__proto__ = o), i = o;
                r || console.warn(t.tag + " prototype not found in prototype chain for " + t.is), t.native = e
            }
        }

        function u(t) {
            return v(E(t.tag), t)
        }

        function c(t) {
            return t ? w[t.toLowerCase()] : void 0
        }

        function l(t, e) {
            w[t] = e
        }

        function h(t) {
            return function() {
                return u(t)
            }
        }

        function p(t, e, n) {
            return t === x ? d(e, n) : S(t, e)
        }

        function d(t, e) {
            t && (t = t.toLowerCase()), e && (e = e.toLowerCase());
            var n = c(e || t);
            if (n) {
                if (t == n.tag && e == n.is) return new n.ctor;
                if (!e && !n.is) return new n.ctor
            }
            var o;
            return e ? (o = d(t), o.setAttribute("is", e), o) : (o = E(t), t.indexOf("-") >= 0 && b(o, HTMLElement), o)
        }

        function f(t, e) {
            var n = t[e];
            t[e] = function() {
                var t = n.apply(this, arguments);
                return y(t), t
            }
        }
        var g, m = (t.isIE, t.upgradeDocumentTree),
            y = t.upgradeAll,
            v = t.upgradeWithDefinition,
            b = t.implementPrototype,
            A = t.useNative,
            C = ["annotation-xml", "color-profile", "font-face", "font-face-src", "font-face-uri", "font-face-format", "font-face-name", "missing-glyph"],
            w = {},
            x = "http://www.w3.org/1999/xhtml",
            E = document.createElement.bind(document),
            S = document.createElementNS.bind(document);
        g = Object.__proto__ || A ? function(t, e) {
            return t instanceof e
        } : function(t, e) {
            if (t instanceof e) return !0;
            for (var n = t; n;) {
                if (n === e.prototype) return !0;
                n = n.__proto__
            }
            return !1
        }, f(Node.prototype, "cloneNode"), f(document, "importNode"), document.registerElement = e, document.createElement = d, document.createElementNS = p, t.registry = w, t.instanceof = g, t.reservedTagList = C, t.getRegisteredDefinition = c, document.register = document.registerElement
    }),
    function(t) {
        function e() {
            r(window.wrap(document)), window.CustomElements.ready = !0;
            var t = window.requestAnimationFrame || function(t) {
                setTimeout(t, 16)
            };
            t(function() {
                setTimeout(function() {
                    window.CustomElements.readyTime = Date.now(), window.HTMLImports && (window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime), document.dispatchEvent(new CustomEvent("WebComponentsReady", {
                        bubbles: !0
                    }))
                })
            })
        } {
            var n = t.useNative,
                o = t.initializeModules;
            t.isIE
        }
        if (n) {
            var i = function() {};
            t.watchShadow = i, t.upgrade = i, t.upgradeAll = i, t.upgradeDocumentTree = i, t.upgradeSubtree = i, t.takeRecords = i, t.instanceof = function(t, e) {
                return t instanceof e
            }
        } else o();
        var r = t.upgradeDocumentTree,
            s = t.upgradeDocument;
        if (window.wrap || (window.ShadowDOMPolyfill ? (window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded, window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded) : window.wrap = window.unwrap = function(t) {
                return t
            }), window.HTMLImports && (window.HTMLImports.__importsParsingHook = function(t) {
                t.import && s(wrap(t.import))
            }), "complete" === document.readyState || t.flags.eager) e();
        else if ("interactive" !== document.readyState || window.attachEvent || window.HTMLImports && !window.HTMLImports.ready) {
            var a = window.HTMLImports && !window.HTMLImports.ready ? "HTMLImportsLoaded" : "DOMContentLoaded";
            window.addEventListener(a, e)
        } else e()
    }(window.CustomElements),
    function() {}.call(this),
    function() {
        var t = this;
        (function() {
            (function() {
                this.Trix = {
                    VERSION: "0.10.1",
                    ZERO_WIDTH_SPACE: "\ufeff",
                    NON_BREAKING_SPACE: "\xa0",
                    OBJECT_REPLACEMENT_CHARACTER: "\ufffc",
                    config: {}
                }
            }).call(this)
        }).call(t);
        var e = t.Trix;
        (function() {
            (function() {
                e.BasicObject = function() {
                    function t() {}
                    var e, n, o;
                    return t.proxyMethod = function(t) {
                        var o, i, r, s, a;
                        return r = n(t), o = r.name, s = r.toMethod, a = r.toProperty, i = r.optional, this.prototype[o] = function() {
                            var t, n;
                            return t = null != s ? i ? "function" == typeof this[s] ? this[s]() : void 0 : this[s]() : null != a ? this[a] : void 0, i ? (n = null != t ? t[o] : void 0, null != n ? e.call(n, t, arguments) : void 0) : (n = t[o], e.call(n, t, arguments))
                        }
                    }, n = function(t) {
                        var e, n;
                        if (!(n = t.match(o))) throw new Error("can't parse @proxyMethod expression: " + t);
                        return e = {
                            name: n[4]
                        }, null != n[2] ? e.toMethod = n[1] : e.toProperty = n[1], null != n[3] && (e.optional = !0), e
                    }, e = Function.prototype.apply, o = /^(.+?)(\(\))?(\?)?\.(.+?)$/, t
                }()
            }).call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Object = function(n) {
                        function o() {
                            this.id = ++i
                        }
                        var i;
                        return t(o, n), i = 0, o.fromJSONString = function(t) {
                            return this.fromJSON(JSON.parse(t))
                        }, o.prototype.hasSameConstructorAs = function(t) {
                            return this.constructor === (null != t ? t.constructor : void 0)
                        }, o.prototype.isEqualTo = function(t) {
                            return this === t
                        }, o.prototype.inspect = function() {
                            var t, e, n;
                            return t = function() {
                                var t, o, i;
                                o = null != (t = this.contentsForInspection()) ? t : {}, i = [];
                                for (e in o) n = o[e], i.push(e + "=" + n);
                                return i
                            }.call(this), "#<" + this.constructor.name + ":" + this.id + (t.length ? " " + t.join(", ") : "") + ">"
                        }, o.prototype.contentsForInspection = function() {}, o.prototype.toJSONString = function() {
                            return JSON.stringify(this)
                        }, o.prototype.toUTF16String = function() {
                            return e.UTF16String.box(this)
                        }, o.prototype.getCacheKey = function() {
                            return this.id.toString()
                        }, o
                    }(e.BasicObject)
                }.call(this),
                function() {
                    e.extend = function(t) {
                        var e, n;
                        for (e in t) n = t[e], this[e] = n;
                        return this
                    }
                }.call(this),
                function() {
                    e.extend({
                        defer: function(t) {
                            return setTimeout(t, 1)
                        }
                    })
                }.call(this),
                function() {
                    var t, n;
                    e.extend({
                        normalizeSpaces: function(t) {
                            return t.replace(RegExp("" + e.ZERO_WIDTH_SPACE, "g"), "").replace(RegExp("" + e.NON_BREAKING_SPACE, "g"), " ")
                        },
                        summarizeStringChange: function(t, o) {
                            var i, r, s, a;
                            return t = e.UTF16String.box(t), o = e.UTF16String.box(o), o.length < t.length ? (r = n(t, o), a = r[0], i = r[1]) : (s = n(o, t), i = s[0], a = s[1]), {
                                added: i,
                                removed: a
                            }
                        }
                    }), n = function(n, o) {
                        var i, r, s, a, u;
                        return n.isEqualTo(o) ? ["", ""] : (r = t(n, o), a = r.utf16String.length, s = a ? (u = r.offset, r, i = n.codepoints.slice(0, u).concat(n.codepoints.slice(u + a)), t(o, e.UTF16String.fromCodepoints(i))) : t(o, n), [r.utf16String.toString(), s.utf16String.toString()])
                    }, t = function(t, e) {
                        var n, o, i;
                        for (n = 0, o = t.length, i = e.length; o > n && t.charAt(n).isEqualTo(e.charAt(n));) n++;
                        for (; o > n + 1 && t.charAt(o - 1).isEqualTo(e.charAt(i - 1));) o--, i--;
                        return {
                            utf16String: t.slice(n, o),
                            offset: n
                        }
                    }
                }.call(this),
                function() {
                    e.extend({
                        copyObject: function(t) {
                            var e, n, o;
                            null == t && (t = {}), n = {};
                            for (e in t) o = t[e], n[e] = o;
                            return n
                        },
                        objectsAreEqual: function(t, e) {
                            var n, o;
                            if (null == t && (t = {}), null == e && (e = {}), Object.keys(t).length !== Object.keys(e).length) return !1;
                            for (n in t)
                                if (o = t[n], o !== e[n]) return !1;
                            return !0
                        }
                    })
                }.call(this),
                function() {
                    var t = [].slice;
                    e.extend({
                        arraysAreEqual: function(t, e) {
                            var n, o, i, r;
                            if (null == t && (t = []), null == e && (e = []), t.length !== e.length) return !1;
                            for (o = n = 0, i = t.length; i > n; o = ++n)
                                if (r = t[o], r !== e[o]) return !1;
                            return !0
                        },
                        arrayStartsWith: function(t, n) {
                            return null == t && (t = []), null == n && (n = []), e.arraysAreEqual(t.slice(0, n.length), n)
                        },
                        spliceArray: function() {
                            var e, n, o;
                            return n = arguments[0], e = 2 <= arguments.length ? t.call(arguments, 1) : [], o = n.slice(0), o.splice.apply(o, e), o
                        },
                        summarizeArrayChange: function(t, e) {
                            var n, o, i, r, s, a, u, c, l, h, p;
                            for (null == t && (t = []), null == e && (e = []), n = [], h = [], i = new Set, r = 0, u = t.length; u > r; r++) p = t[r], i.add(p);
                            for (o = new Set, s = 0, c = e.length; c > s; s++) p = e[s], o.add(p), i.has(p) || n.push(p);
                            for (a = 0, l = t.length; l > a; a++) p = t[a], o.has(p) || h.push(p);
                            return {
                                added: n,
                                removed: h
                            }
                        }
                    })
                }.call(this),
                function() {
                    var t, n, o, i;
                    t = null, n = null, i = null, o = null, e.extend({
                        getAllAttributeNames: function() {
                            return null != t ? t : t = e.getTextAttributeNames().concat(e.getBlockAttributeNames())
                        },
                        getBlockConfig: function(t) {
                            return e.config.blockAttributes[t]
                        },
                        getBlockAttributeNames: function() {
                            return null != n ? n : n = Object.keys(e.config.blockAttributes)
                        },
                        getTextConfig: function(t) {
                            return e.config.textAttributes[t]
                        },
                        getTextAttributeNames: function() {
                            return null != i ? i : i = Object.keys(e.config.textAttributes)
                        },
                        getListAttributeNames: function() {
                            var t, n;
                            return null != o ? o : o = function() {
                                var o, i;
                                o = e.config.blockAttributes, i = [];
                                for (t in o) n = o[t].listAttribute, null != n && i.push(n);
                                return i
                            }()
                        }
                    })
                }.call(this),
                function() {
                    var t, n, o, i, r, s = [].indexOf || function(t) {
                        for (var e = 0, n = this.length; n > e; e++)
                            if (e in this && this[e] === t) return e;
                        return -1
                    };
                    t = document.documentElement, n = null != (o = null != (i = null != (r = t.matchesSelector) ? r : t.webkitMatchesSelector) ? i : t.msMatchesSelector) ? o : t.mozMatchesSelector, e.extend({
                        handleEvent: function(n, o) {
                            var i, r, s, a, u, c, l, h, p, d, f, g;
                            return h = null != o ? o : {}, c = h.onElement, u = h.matchingSelector, g = h.withCallback, a = h.inPhase, l = h.preventDefault, d = h.times, r = null != c ? c : t, p = u, i = g, f = "capturing" === a, s = function(t) {
                                var n;
                                return null != d && 0 === --d && s.destroy(), n = e.findClosestElementFromNode(t.target, {
                                    matchingSelector: p
                                }), null != n && (null != g && g.call(n, t, n), l) ? t.preventDefault() : void 0
                            }, s.destroy = function() {
                                return r.removeEventListener(n, s, f)
                            }, r.addEventListener(n, s, f), s
                        },
                        handleEventOnce: function(t, n) {
                            return null == n && (n = {}), n.times = 1, e.handleEvent(t, n)
                        },
                        triggerEvent: function(n, o) {
                            var i, r, s, a, u, c, l;
                            return l = null != o ? o : {}, c = l.onElement, r = l.bubbles, s = l.cancelable, i = l.attributes, a = null != c ? c : t, r = r !== !1, s = s !== !1, u = document.createEvent("Events"), u.initEvent(n, r, s), null != i && e.extend.call(u, i), a.dispatchEvent(u)
                        },
                        elementMatchesSelector: function(t, e) {
                            return 1 === (null != t ? t.nodeType : void 0) ? n.call(t, e) : void 0
                        },
                        findClosestElementFromNode: function(t, n) {
                            var o, i, r;
                            for (i = null != n ? n : {}, o = i.matchingSelector, r = i.untilNode; null != t && t.nodeType !== Node.ELEMENT_NODE;) t = t.parentNode;
                            if (null != t) {
                                if (null == o) return t;
                                if (t.closest && null == r) return t.closest(o);
                                for (; t && t !== r;) {
                                    if (e.elementMatchesSelector(t, o)) return t;
                                    t = t.parentNode
                                }
                            }
                        },
                        findInnerElement: function(t) {
                            for (; null != t ? t.firstElementChild : void 0;) t = t.firstElementChild;
                            return t
                        },
                        innerElementIsActive: function(t) {
                            return document.activeElement !== t && e.elementContainsNode(t, document.activeElement)
                        },
                        elementContainsNode: function(t, e) {
                            if (t && e)
                                for (; e;) {
                                    if (e === t) return !0;
                                    e = e.parentNode
                                }
                        },
                        findNodeFromContainerAndOffset: function(t, e) {
                            var n;
                            if (t) return t.nodeType === Node.TEXT_NODE ? t : 0 === e ? null != (n = t.firstChild) ? n : t : t.childNodes.item(e - 1)
                        },
                        findElementFromContainerAndOffset: function(t, n) {
                            var o;
                            return o = e.findNodeFromContainerAndOffset(t, n), e.findClosestElementFromNode(o)
                        },
                        findChildIndexOfNode: function(t) {
                            var e;
                            if (null != t ? t.parentNode : void 0) {
                                for (e = 0; t = t.previousSibling;) e++;
                                return e
                            }
                        },
                        walkTree: function(t, e) {
                            var n, o, i, r, s;
                            return i = null != e ? e : {}, o = i.onlyNodesOfType, r = i.usingFilter, n = i.expandEntityReferences, s = function() {
                                switch (o) {
                                    case "element":
                                        return NodeFilter.SHOW_ELEMENT;
                                    case "text":
                                        return NodeFilter.SHOW_TEXT;
                                    case "comment":
                                        return NodeFilter.SHOW_COMMENT;
                                    default:
                                        return NodeFilter.SHOW_ALL
                                }
                            }(), document.createTreeWalker(t, s, null != r ? r : null, n === !0)
                        },
                        tagName: function(t) {
                            var e;
                            return null != t && null != (e = t.tagName) ? e.toLowerCase() : void 0
                        },
                        makeElement: function(t, e) {
                            var n, o, i, r, s, a, u, c, l, h;
                            if (null == e && (e = {}), "object" == typeof t ? (e = t, t = e.tagName) : e = {
                                    attributes: e
                                }, o = document.createElement(t), null != e.editable && (null == e.attributes && (e.attributes = {}), e.attributes.contenteditable = e.editable), e.attributes) {
                                a = e.attributes;
                                for (r in a) h = a[r], o.setAttribute(r, h)
                            }
                            if (e.style) {
                                u = e.style;
                                for (r in u) h = u[r], o.style[r] = h
                            }
                            if (e.data) {
                                c = e.data;
                                for (r in c) h = c[r], o.dataset[r] = h
                            }
                            if (e.className)
                                for (l = e.className.split(" "), i = 0, s = l.length; s > i; i++) n = l[i], o.classList.add(n);
                            return e.textContent && (o.textContent = e.textContent), o
                        },
                        cloneFragment: function(t) {
                            var e, n, o, i, r;
                            for (e = document.createDocumentFragment(), r = t.childNodes, n = 0, o = r.length; o > n; n++) i = r[n], e.appendChild(i.cloneNode(!0));
                            return e
                        },
                        makeFragment: function(t) {
                            var e, n, o;
                            for (null == t && (t = ""), e = document.createElement("div"), e.innerHTML = t, n = document.createDocumentFragment(); o = e.firstChild;) n.appendChild(o);
                            return n
                        },
                        getBlockTagNames: function() {
                            var t, n;
                            return null != e.blockTagNames ? e.blockTagNames : e.blockTagNames = function() {
                                var o, i;
                                o = e.config.blockAttributes, i = [];
                                for (t in o) n = o[t], i.push(n.tagName);
                                return i
                            }()
                        },
                        nodeIsBlockContainer: function(t) {
                            return e.nodeIsBlockStartComment(null != t ? t.firstChild : void 0)
                        },
                        nodeProbablyIsBlockContainer: function(t) {
                            var n, o;
                            return n = e.tagName(t), s.call(e.getBlockTagNames(), n) >= 0 && (o = e.tagName(t.firstChild), s.call(e.getBlockTagNames(), o) < 0)
                        },
                        nodeIsBlockStart: function(t, n) {
                            var o;
                            return o = (null != n ? n : {
                                strict: !0
                            }).strict, o ? e.nodeIsBlockStartComment(t) : e.nodeIsBlockStartComment(t) || !e.nodeIsBlockStartComment(t.firstChild) && e.nodeProbablyIsBlockContainer(t)
                        },
                        nodeIsBlockStartComment: function(t) {
                            return e.nodeIsCommentNode(t) && "block" === (null != t ? t.data : void 0)
                        },
                        nodeIsCommentNode: function(t) {
                            return (null != t ? t.nodeType : void 0) === Node.COMMENT_NODE
                        },
                        nodeIsCursorTarget: function(t) {
                            return t ? e.nodeIsTextNode(t) ? t.data === e.ZERO_WIDTH_SPACE : e.nodeIsCursorTarget(t.firstChild) : void 0
                        },
                        nodeIsAttachmentElement: function(t) {
                            return e.elementMatchesSelector(t, e.AttachmentView.attachmentSelector)
                        },
                        nodeIsEmptyTextNode: function(t) {
                            return e.nodeIsTextNode(t) && "" === (null != t ? t.data : void 0)
                        },
                        nodeIsTextNode: function(t) {
                            return (null != t ? t.nodeType : void 0) === Node.TEXT_NODE
                        }
                    })
                }.call(this),
                function() {
                    var t, n, o, i, r;
                    t = e.copyObject, i = e.objectsAreEqual, e.extend({
                        normalizeRange: o = function(t) {
                            var e;
                            if (null != t) return Array.isArray(t) || (t = [t, t]), [n(t[0]), n(null != (e = t[1]) ? e : t[0])]
                        },
                        rangeIsCollapsed: function(t) {
                            var e, n, i;
                            if (null != t) return n = o(t), i = n[0], e = n[1], r(i, e)
                        },
                        rangesAreEqual: function(t, e) {
                            var n, i, s, a, u, c;
                            if (null != t && null != e) return s = o(t), i = s[0], n = s[1], a = o(e), c = a[0], u = a[1], r(i, c) && r(n, u)
                        }
                    }), n = function(e) {
                        return "number" == typeof e ? e : t(e)
                    }, r = function(t, e) {
                        return "number" == typeof t ? t === e : i(t, e)
                    }
                }.call(this),
                function() {
                    var t, n, o, i;
                    t = {
                        extendsTagName: "div",
                        css: "%t { display: block; }"
                    }, e.registerElement = function(e, n) {
                        var r, s, a, u, c, l, h;
                        return null == n && (n = {}), e = e.toLowerCase(), c = i(n), u = null != (h = c.extendsTagName) ? h : t.extendsTagName, delete c.extendsTagName, s = c.defaultCSS, delete c.defaultCSS, null != s && u === t.extendsTagName ? s += "\n" + t.css : s = t.css, o(s, e), a = Object.getPrototypeOf(document.createElement(u)), a.__super__ = a, l = Object.create(a, c), r = document.registerElement(e, {
                            prototype: l
                        }), Object.defineProperty(l, "constructor", {
                            value: r
                        }), r
                    }, o = function(t, e) {
                        var o;
                        return o = n(e), o.textContent = t.replace(/%t/g, e)
                    }, n = function(t) {
                        var e;
                        return e = document.createElement("style"), e.setAttribute("type", "text/css"), e.setAttribute("data-tag-name", t.toLowerCase()), document.head.insertBefore(e, document.head.firstChild), e
                    }, i = function(t) {
                        var e, n, o;
                        n = {};
                        for (e in t) o = t[e], n[e] = "function" == typeof o ? {
                            value: o
                        } : o;
                        return n
                    }
                }.call(this),
                function() {
                    var t, n;
                    e.extend({
                        getDOMSelection: function() {
                            var t;
                            return t = window.getSelection(), t.rangeCount > 0 ? t : void 0
                        },
                        getDOMRange: function() {
                            var n, o;
                            return (n = null != (o = e.getDOMSelection()) ? o.getRangeAt(0) : void 0) && !t(n) ? n : void 0
                        },
                        setDOMRange: function(t) {
                            var n;
                            return n = window.getSelection(), n.removeAllRanges(), n.addRange(t), e.selectionChangeObserver.update()
                        }
                    }), t = function(t) {
                        return n(t.startContainer) || n(t.endContainer)
                    }, n = function(t) {
                        return !Object.getPrototypeOf(t)
                    }
                }.call(this),
                function() {}.call(this),
                function() {
                    var t, n = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var i in e) o.call(e, i) && (t[i] = e[i]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        o = {}.hasOwnProperty;
                    t = e.arraysAreEqual, e.Hash = function(o) {
                        function i(t) {
                            null == t && (t = {}), this.values = s(t), i.__super__.constructor.apply(this, arguments)
                        }
                        var r, s, a, u, c;
                        return n(i, o), i.fromCommonAttributesOfObjects = function(t) {
                            var e, n, o, i, s, a;
                            if (null == t && (t = []), !t.length) return new this;
                            for (e = r(t[0]), o = e.getKeys(), a = t.slice(1), n = 0, i = a.length; i > n; n++) s = a[n], o = e.getKeysCommonToHash(r(s)), e = e.slice(o);
                            return e
                        }, i.box = function(t) {
                            return r(t)
                        }, i.prototype.add = function(t, e) {
                            return this.merge(u(t, e))
                        }, i.prototype.remove = function(t) {
                            return new e.Hash(s(this.values, t))
                        }, i.prototype.get = function(t) {
                            return this.values[t]
                        }, i.prototype.has = function(t) {
                            return t in this.values
                        }, i.prototype.merge = function(t) {
                            return new e.Hash(a(this.values, c(t)))
                        }, i.prototype.slice = function(t) {
                            var n, o, i, r;
                            for (r = {}, n = 0, i = t.length; i > n; n++) o = t[n], this.has(o) && (r[o] = this.values[o]);
                            return new e.Hash(r)
                        }, i.prototype.getKeys = function() {
                            return Object.keys(this.values)
                        }, i.prototype.getKeysCommonToHash = function(t) {
                            var e, n, o, i, s;
                            for (t = r(t), i = this.getKeys(), s = [], e = 0, o = i.length; o > e; e++) n = i[e], this.values[n] === t.values[n] && s.push(n);
                            return s
                        }, i.prototype.isEqualTo = function(e) {
                            return t(this.toArray(), r(e).toArray())
                        }, i.prototype.isEmpty = function() {
                            return 0 === this.getKeys().length
                        }, i.prototype.toArray = function() {
                            var t, e, n;
                            return (null != this.array ? this.array : this.array = function() {
                                var o;
                                e = [], o = this.values;
                                for (t in o) n = o[t], e.push(t, n);
                                return e
                            }.call(this)).slice(0)
                        }, i.prototype.toObject = function() {
                            return s(this.values)
                        }, i.prototype.toJSON = function() {
                            return this.toObject()
                        }, i.prototype.contentsForInspection = function() {
                            return {
                                values: JSON.stringify(this.values)
                            }
                        }, u = function(t, e) {
                            var n;
                            return n = {}, n[t] = e, n
                        }, a = function(t, e) {
                            var n, o, i;
                            o = s(t);
                            for (n in e) i = e[n], o[n] = i;
                            return o
                        }, s = function(t, e) {
                            var n, o, i, r, s;
                            for (r = {}, s = Object.keys(t).sort(), n = 0, i = s.length; i > n; n++) o = s[n], o !== e && (r[o] = t[o]);
                            return r
                        }, r = function(t) {
                            return t instanceof e.Hash ? t : new e.Hash(t)
                        }, c = function(t) {
                            return t instanceof e.Hash ? t.values : t
                        }, i
                    }(e.Object)
                }.call(this),
                function() {
                    e.ObjectGroup = function() {
                        function t(t, e) {
                            var n, o;
                            this.objects = null != t ? t : [], o = e.depth, n = e.asTree, n && (this.depth = o, this.objects = this.constructor.groupObjects(this.objects, {
                                asTree: n,
                                depth: this.depth + 1
                            }))
                        }
                        return t.groupObjects = function(t, e) {
                            var n, o, i, r, s, a, u, c, l;
                            for (null == t && (t = []), l = null != e ? e : {}, i = l.depth, n = l.asTree, n && null == i && (i = 0), c = [], s = 0, a = t.length; a > s; s++) {
                                if (u = t[s], r) {
                                    if (("function" == typeof u.canBeGrouped ? u.canBeGrouped(i) : void 0) && ("function" == typeof(o = r[r.length - 1]).canBeGroupedWith ? o.canBeGroupedWith(u, i) : void 0)) {
                                        r.push(u);
                                        continue
                                    }
                                    c.push(new this(r, {
                                        depth: i,
                                        asTree: n
                                    })), r = null
                                }("function" == typeof u.canBeGrouped ? u.canBeGrouped(i) : void 0) ? r = [u]: c.push(u)
                            }
                            return r && c.push(new this(r, {
                                depth: i,
                                asTree: n
                            })), c
                        }, t.prototype.getObjects = function() {
                            return this.objects
                        }, t.prototype.getDepth = function() {
                            return this.depth
                        }, t.prototype.getCacheKey = function() {
                            var t, e, n, o, i;
                            for (e = ["objectGroup"], i = this.getObjects(), t = 0, n = i.length; n > t; t++) o = i[t], e.push(o.getCacheKey());
                            return e.join("/")
                        }, t
                    }()
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.ObjectMap = function(e) {
                        function n(t) {
                            var e, n, o, i, r;
                            for (null == t && (t = []), this.objects = {}, o = 0, i = t.length; i > o; o++) r = t[o], n = JSON.stringify(r), null == (e = this.objects)[n] && (e[n] = r)
                        }
                        return t(n, e), n.prototype.find = function(t) {
                            var e;
                            return e = JSON.stringify(t), this.objects[e]
                        }, n
                    }(e.BasicObject)
                }.call(this),
                function() {
                    e.ElementStore = function() {
                        function t(t) {
                            this.reset(t)
                        }
                        var e;
                        return t.prototype.add = function(t) {
                            var n;
                            return n = e(t), this.elements[n] = t
                        }, t.prototype.remove = function(t) {
                            var n, o;
                            return n = e(t), (o = this.elements[n]) ? (delete this.elements[n], o) : void 0
                        }, t.prototype.reset = function(t) {
                            var e, n, o;
                            for (null == t && (t = []), this.elements = {}, n = 0, o = t.length; o > n; n++) e = t[n], this.add(e);
                            return t
                        }, e = function(t) {
                            return t.dataset.trixStoreKey
                        }, t
                    }()
                }.call(this),
                function() {}.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Operation = function(e) {
                        function n() {
                            return n.__super__.constructor.apply(this, arguments)
                        }
                        return t(n, e), n.prototype.isPerforming = function() {
                            return this.performing === !0
                        }, n.prototype.hasPerformed = function() {
                            return this.performed === !0
                        }, n.prototype.hasSucceeded = function() {
                            return this.performed && this.succeeded
                        }, n.prototype.hasFailed = function() {
                            return this.performed && !this.succeeded
                        }, n.prototype.getPromise = function() {
                            return null != this.promise ? this.promise : this.promise = new Promise(function(t) {
                                return function(e, n) {
                                    return t.performing = !0, t.perform(function(o, i) {
                                        return t.succeeded = o, t.performing = !1, t.performed = !0, t.succeeded ? e(i) : n(i)
                                    })
                                }
                            }(this))
                        }, n.prototype.perform = function(t) {
                            return t(!1)
                        }, n.prototype.release = function() {
                            var t;
                            return null != (t = this.promise) && "function" == typeof t.cancel && t.cancel(), this.promise = null, this.performing = null, this.performed = null, this.succeeded = null
                        }, n.proxyMethod("getPromise().then"), n.proxyMethod("getPromise().catch"), n
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i, r, s = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) a.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        a = {}.hasOwnProperty;
                    e.UTF16String = function(t) {
                        function e(t, e) {
                            this.ucs2String = t, this.codepoints = e, this.length = this.codepoints.length, this.ucs2Length = this.ucs2String.length
                        }
                        return s(e, t), e.box = function(t) {
                            return null == t && (t = ""), t instanceof this ? t : this.fromUCS2String(null != t ? t.toString() : void 0)
                        }, e.fromUCS2String = function(t) {
                            return new this(t, i(t))
                        }, e.fromCodepoints = function(t) {
                            return new this(r(t), t)
                        }, e.prototype.offsetToUCS2Offset = function(t) {
                            return r(this.codepoints.slice(0, Math.max(0, t))).length
                        }, e.prototype.offsetFromUCS2Offset = function(t) {
                            return i(this.ucs2String.slice(0, Math.max(0, t))).length
                        }, e.prototype.slice = function() {
                            var t;
                            return this.constructor.fromCodepoints((t = this.codepoints).slice.apply(t, arguments))
                        }, e.prototype.charAt = function(t) {
                            return this.slice(t, t + 1)
                        }, e.prototype.isEqualTo = function(t) {
                            return this.constructor.box(t).ucs2String === this.ucs2String
                        }, e.prototype.toJSON = function() {
                            return this.ucs2String
                        }, e.prototype.getCacheKey = function() {
                            return this.ucs2String
                        }, e.prototype.toString = function() {
                            return this.ucs2String
                        }, e
                    }(e.BasicObject), t = 1 === ("function" == typeof Array.from ? Array.from("\ud83d\udc7c").length : void 0), n = null != ("function" == typeof " ".codePointAt ? " ".codePointAt(0) : void 0), o = " \ud83d\udc7c" === ("function" == typeof String.fromCodePoint ? String.fromCodePoint(32, 128124) : void 0), i = t && n ? function(t) {
                        return Array.from(t).map(function(t) {
                            return t.codePointAt(0)
                        })
                    } : function(t) {
                        var e, n, o, i, r;
                        for (i = [], e = 0, o = t.length; o > e;) r = t.charCodeAt(e++), r >= 55296 && 56319 >= r && o > e && (n = t.charCodeAt(e++), 56320 === (64512 & n) ? r = ((1023 & r) << 10) + (1023 & n) + 65536 : e--), i.push(r);
                        return i
                    }, r = o ? function(t) {
                        return String.fromCodePoint.apply(String, t)
                    } : function(t) {
                        var e, n, o;
                        return e = function() {
                            var e, i, r;
                            for (r = [], e = 0, i = t.length; i > e; e++) o = t[e], n = "", o > 65535 && (o -= 65536, n += String.fromCharCode(o >>> 10 & 1023 | 55296), o = 56320 | 1023 & o), r.push(n + String.fromCharCode(o));
                            return r
                        }(), e.join("")
                    }
                }.call(this),
                function() {}.call(this),
                function() {}.call(this),
                function() {
                    e.config.lang = {
                        bold: "Bold",
                        bullets: "Bullets",
                        "byte": "Byte",
                        bytes: "Bytes",
                        captionPlaceholder: "Type a caption here\u2026",
                        captionPrompt: "Add a caption\u2026",
                        code: "Code",
                        heading1: "Heading",
                        indent: "Increase Level",
                        italic: "Italic",
                        link: "Link",
                        numbers: "Numbers",
                        outdent: "Decrease Level",
                        quote: "Quote",
                        redo: "Redo",
                        remove: "Remove",
                        strike: "Strikethrough",
                        undo: "Undo",
                        unlink: "Unlink",
                        urlPlaceholder: "Enter a URL\u2026",
                        GB: "GB",
                        KB: "KB",
                        MB: "MB",
                        PB: "PB",
                        TB: "TB"
                    }
                }.call(this),
                function() {
                    e.config.css = {
                        classNames: {
                            attachment: {
                                container: "attachment",
                                typePrefix: "attachment-",
                                caption: "caption",
                                captionEdited: "caption-edited",
                                captionEditor: "caption-editor",
                                editingCaption: "caption-editing",
                                progressBar: "progress",
                                removeButton: "remove icon",
                                size: "size"
                            }
                        }
                    }
                }.call(this),
                function() {
                    var t;
                    e.config.blockAttributes = t = {
                        "default": {
                            tagName: "div",
                            parse: !1
                        },
                        quote: {
                            tagName: "blockquote",
                            nestable: !0
                        },
                        heading1: {
                            tagName: "h1",
                            terminal: !0,
                            breakOnReturn: !0,
                            group: !1
                        },
                        code: {
                            tagName: "pre",
                            terminal: !0,
                            text: {
                                plaintext: !0
                            }
                        },
                        bulletList: {
                            tagName: "ul",
                            parse: !1
                        },
                        bullet: {
                            tagName: "li",
                            listAttribute: "bulletList",
                            group: !1,
                            nestable: !0,
                            test: function(n) {
                                return e.tagName(n.parentNode) === t[this.listAttribute].tagName
                            }
                        },
                        numberList: {
                            tagName: "ol",
                            parse: !1
                        },
                        number: {
                            tagName: "li",
                            listAttribute: "numberList",
                            group: !1,
                            nestable: !0,
                            test: function(n) {
                                return e.tagName(n.parentNode) === t[this.listAttribute].tagName
                            }
                        }
                    }
                }.call(this),
                function() {
                    var t, n;
                    t = e.config.lang, n = [t.bytes, t.KB, t.MB, t.GB, t.TB, t.PB], e.config.fileSize = {
                        prefix: "IEC",
                        precision: 2,
                        formatter: function(e) {
                            var o, i, r, s, a;
                            switch (e) {
                                case 0:
                                    return "0 " + t.bytes;
                                case 1:
                                    return "1 " + t.byte;
                                default:
                                    return o = function() {
                                        switch (this.prefix) {
                                            case "SI":
                                                return 1e3;
                                            case "IEC":
                                                return 1024
                                        }
                                    }.call(this), i = Math.floor(Math.log(e) / Math.log(o)), r = e / Math.pow(o, i), s = r.toFixed(this.precision), a = s.replace(/0*$/, "").replace(/\.$/, ""), a + " " + n[i]
                            }
                        }
                    }
                }.call(this),
                function() {
                    e.config.textAttributes = {
                        bold: {
                            tagName: "strong",
                            inheritable: !0,
                            parser: function(t) {
                                var e;
                                return e = window.getComputedStyle(t), "bold" === e.fontWeight || e.fontWeight >= 600
                            }
                        },
                        italic: {
                            tagName: "em",
                            inheritable: !0,
                            parser: function(t) {
                                var e;
                                return e = window.getComputedStyle(t), "italic" === e.fontStyle
                            }
                        },
                        href: {
                            groupTagName: "a",
                            parser: function(t) {
                                var n, o, i;
                                return n = e.AttachmentView.attachmentSelector, i = "a:not(" + n + ")", (o = e.findClosestElementFromNode(t, {
                                    matchingSelector: i
                                })) ? o.getAttribute("href") : void 0
                            }
                        },
                        strike: {
                            tagName: "del",
                            inheritable: !0
                        },
                        frozen: {
                            style: {
                                backgroundColor: "highlight"
                            }
                        }
                    }
                }.call(this),
                function() {
                    var t, n, o, i, r;
                    r = "[data-trix-serialize=false]", i = ["contenteditable", "data-trix-id", "data-trix-store-key", "data-trix-mutable"], n = "data-trix-serialized-attributes", o = "[" + n + "]", t = new RegExp("<!--block-->", "g"), e.extend({
                        serializers: {
                            "application/json": function(t) {
                                var n;
                                if (t instanceof e.Document) n = t;
                                else {
                                    if (!(t instanceof HTMLElement)) throw new Error("unserializable object");
                                    n = e.Document.fromHTML(t.innerHTML)
                                }
                                return n.toSerializableDocument().toJSONString()
                            },
                            "text/html": function(s) {
                                var a, u, c, l, h, p, d, f, g, m, y, v, b, A, C, w, x;
                                if (s instanceof e.Document) l = e.DocumentView.render(s);
                                else {
                                    if (!(s instanceof HTMLElement)) throw new Error("unserializable object");
                                    l = s.cloneNode(!0)
                                }
                                for (A = l.querySelectorAll(r), h = 0, g = A.length; g > h; h++) c = A[h], c.parentNode.removeChild(c);
                                for (p = 0, m = i.length; m > p; p++)
                                    for (a = i[p], C = l.querySelectorAll("[" + a + "]"), d = 0, y = C.length; y > d; d++) c = C[d], c.removeAttribute(a);
                                for (w = l.querySelectorAll(o), f = 0, v = w.length; v > f; f++) {
                                    c = w[f];
                                    try {
                                        u = JSON.parse(c.getAttribute(n)), c.removeAttribute(n);
                                        for (b in u) x = u[b], c.setAttribute(b, x)
                                    } catch (E) {}
                                }
                                return l.innerHTML.replace(t, "")
                            }
                        },
                        deserializers: {
                            "application/json": function(t) {
                                return e.Document.fromJSONString(t)
                            },
                            "text/html": function(t) {
                                return e.Document.fromHTML(t)
                            }
                        },
                        serializeToContentType: function(t, n) {
                            var o;
                            if (o = e.serializers[n]) return o(t);
                            throw new Error("unknown content type: " + n)
                        },
                        deserializeFromContentType: function(t, n) {
                            var o;
                            if (o = e.deserializers[n]) return o(t);
                            throw new Error("unknown content type: " + n)
                        }
                    })
                }.call(this),
                function() {
                    var t, n;
                    n = e.makeFragment, t = e.config.lang, e.config.toolbar = {
                        content: n('<div class="button_row">\n  <span class="button_group text_tools">\n    <button type="button" class="icon bold" data-trix-attribute="bold" data-trix-key="b" title="' + t.bold + '">' + t.bold + '</button>\n    <button type="button" class="icon italic" data-trix-attribute="italic" data-trix-key="i" title="' + t.italic + '">' + t.italic + '</button>\n    <button type="button" class="icon strike" data-trix-attribute="strike" title="' + t.strike + '">' + t.strike + '</button>\n    <button type="button" class="icon link" data-trix-attribute="href" data-trix-action="link" data-trix-key="k" title="' + t.link + '">' + t.link + '</button>\n  </span>\n\n  <span class="button_group block_tools">\n    <button type="button" class="icon heading-1" data-trix-attribute="heading1" title="' + t.heading1 + '">' + t.heading1 + '</button>\n    <button type="button" class="icon quote" data-trix-attribute="quote" title="' + t.quote + '">' + t.quote + '</button>\n    <button type="button" class="icon code" data-trix-attribute="code" title="' + t.code + '">' + t.code + '</button>\n    <button type="button" class="icon list bullets" data-trix-attribute="bullet" title="' + t.bullets + '">' + t.bullets + '</button>\n    <button type="button" class="icon list numbers" data-trix-attribute="number" title="' + t.numbers + '">' + t.numbers + '</button>\n    <button type="button" class="icon nesting-level decrease" data-trix-action="decreaseNestingLevel" title="' + t.outdent + '">' + t.outdent + '</button>\n    <button type="button" class="icon nesting-level increase" data-trix-action="increaseNestingLevel" title="' + t.indent + '">' + t.indent + '</button>\n  </span>\n\n  <span class="button_group history_tools">\n    <button type="button" class="icon undo" data-trix-action="undo" data-trix-key="z" title="' + t.undo + '">' + t.undo + '</button>\n    <button type="button" class="icon redo" data-trix-action="redo" data-trix-key="shift+z" title="' + t.redo + '">' + t.redo + '</button>\n  </span>\n</div>\n\n<div class="dialogs">\n  <div class="dialog link_dialog" data-trix-attribute="href" data-trix-dialog="href">\n    <div class="link_url_fields">\n      <input type="url" required name="href" placeholder="' + t.urlPlaceholder + '">\n      <div class="button_group">\n        <input type="button" value="' + t.link + '" data-trix-method="setAttribute">\n        <input type="button" value="' + t.unlink + '" data-trix-method="removeAttribute">\n      </div>\n    </div>\n  </div>\n</div>')
                    }
                }.call(this),
                function() {
                    e.config.undoInterval = 5e3
                }.call(this),
                function() {
                    var t, n;
                    t = e.makeElement, n = {
                        cursorTarget: t({
                            tagName: "span",
                            textContent: e.ZERO_WIDTH_SPACE,
                            data: {
                                trixSelection: !0,
                                trixCursorTarget: !0,
                                trixSerialize: !1
                            }
                        })
                    }, e.extend({
                        selectionElements: {
                            selector: "[data-trix-selection]",
                            cssText: "font-size: 0 !important;\npadding: 0 !important;\nmargin: 0 !important;\nborder: none !important;\nline-height: 0 !important;",
                            create: function(t) {
                                return n[t].cloneNode(!0)
                            }
                        }
                    })
                }.call(this),
                function() {}.call(this),
                function() {
                    var t;
                    t = e.cloneFragment, e.registerElement("trix-toolbar", {
                        defaultCSS: "%t {\n  white-space: collapse;\n}\n\n%t .dialog {\n  display: none;\n}\n\n%t .dialog.active {\n  display: block;\n}\n\n%t .dialog input.validate:invalid {\n  background-color: #ffdddd;\n}\n\n%t[native] {\n  display: none;\n}",
                        createdCallback: function() {
                            return "" === this.innerHTML ? this.appendChild(t(e.config.toolbar.content)) : void 0
                        }
                    })
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty,
                        o = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    e.ObjectView = function(n) {
                        function i(t, e) {
                            this.object = t, this.options = null != e ? e : {}, this.childViews = [], this.rootView = this
                        }
                        return t(i, n), i.prototype.getNodes = function() {
                            var t, e, n, o, i;
                            for (null == this.nodes && (this.nodes = this.createNodes()), o = this.nodes, i = [], t = 0, e = o.length; e > t; t++) n = o[t], i.push(n.cloneNode(!0));
                            return i
                        }, i.prototype.invalidate = function() {
                            var t;
                            return this.nodes = null, null != (t = this.parentView) ? t.invalidate() : void 0
                        }, i.prototype.invalidateViewForObject = function(t) {
                            var e;
                            return null != (e = this.findViewForObject(t)) ? e.invalidate() : void 0
                        }, i.prototype.findOrCreateCachedChildView = function(t, e) {
                            var n;
                            return (n = this.getCachedViewForObject(e)) ? this.recordChildView(n) : (n = this.createChildView.apply(this, arguments), this.cacheViewForObject(n, e)), n
                        }, i.prototype.createChildView = function(t, n, o) {
                            var i;
                            return null == o && (o = {}), n instanceof e.ObjectGroup && (o.viewClass = t, t = e.ObjectGroupView), i = new t(n, o), this.recordChildView(i)
                        }, i.prototype.recordChildView = function(t) {
                            return t.parentView = this, t.rootView = this.rootView, o.call(this.childViews, t) < 0 && this.childViews.push(t), t
                        }, i.prototype.getAllChildViews = function() {
                            var t, e, n, o, i;
                            for (i = [], o = this.childViews, e = 0, n = o.length; n > e; e++) t = o[e], i.push(t), i = i.concat(t.getAllChildViews());
                            return i
                        }, i.prototype.findElement = function() {
                            return this.findElementForObject(this.object)
                        }, i.prototype.findElementForObject = function(t) {
                            var e;
                            return (e = null != t ? t.id : void 0) ? this.rootView.element.querySelector("[data-trix-id='" + e + "']") : void 0
                        }, i.prototype.findViewForObject = function(t) {
                            var e, n, o, i;
                            for (o = this.getAllChildViews(), e = 0, n = o.length; n > e; e++)
                                if (i = o[e], i.object === t) return i
                        }, i.prototype.getViewCache = function() {
                            return this.rootView !== this ? this.rootView.getViewCache() : this.isViewCachingEnabled() ? null != this.viewCache ? this.viewCache : this.viewCache = {} : void 0
                        }, i.prototype.isViewCachingEnabled = function() {
                            return this.shouldCacheViews !== !1
                        }, i.prototype.enableViewCaching = function() {
                            return this.shouldCacheViews = !0
                        }, i.prototype.disableViewCaching = function() {
                            return this.shouldCacheViews = !1
                        }, i.prototype.getCachedViewForObject = function(t) {
                            var e;
                            return null != (e = this.getViewCache()) ? e[t.getCacheKey()] : void 0
                        }, i.prototype.cacheViewForObject = function(t, e) {
                            var n;
                            return null != (n = this.getViewCache()) ? n[e.getCacheKey()] = t : void 0
                        }, i.prototype.garbageCollectCachedViews = function() {
                            var t, e, n, i, r, s;
                            if (t = this.getViewCache()) {
                                s = this.getAllChildViews().concat(this), n = function() {
                                    var t, e, n;
                                    for (n = [], t = 0, e = s.length; e > t; t++) r = s[t], n.push(r.object.getCacheKey());
                                    return n
                                }(), i = [];
                                for (e in t) o.call(n, e) < 0 && i.push(delete t[e]);
                                return i
                            }
                        }, i
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.ObjectGroupView = function(e) {
                        function n() {
                            n.__super__.constructor.apply(this, arguments), this.objectGroup = this.object, this.viewClass = this.options.viewClass, delete this.options.viewClass
                        }
                        return t(n, e), n.prototype.getChildViews = function() {
                            var t, e, n, o;
                            if (!this.childViews.length)
                                for (o = this.objectGroup.getObjects(), t = 0, e = o.length; e > t; t++) n = o[t], this.findOrCreateCachedChildView(this.viewClass, n, this.options);
                            return this.childViews
                        }, n.prototype.createNodes = function() {
                            var t, e, n, o, i, r, s, a, u;
                            for (t = this.createContainerElement(), s = this.getChildViews(), e = 0, o = s.length; o > e; e++)
                                for (u = s[e], a = u.getNodes(), n = 0, i = a.length; i > n; n++) r = a[n], t.appendChild(r);
                            return [t]
                        }, n.prototype.createContainerElement = function(t) {
                            return null == t && (t = this.objectGroup.getDepth()), this.getChildViews()[0].createContainerElement(t)
                        }, n
                    }(e.ObjectView)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Controller = function(e) {
                        function n() {
                            return n.__super__.constructor.apply(this, arguments)
                        }
                        return t(n, e), n
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        u = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) c.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        c = {}.hasOwnProperty,
                        l = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    t = e.findClosestElementFromNode, o = e.nodeIsEmptyTextNode, n = e.nodeIsBlockStartComment, i = e.normalizeSpaces, r = e.summarizeStringChange, s = e.tagName, e.MutationObserver = function(e) {
                        function c(t) {
                            this.element = t, this.didMutate = a(this.didMutate, this), this.observer = new window.MutationObserver(this.didMutate), this.start()
                        }
                        var h, p, d, f;
                        return u(c, e), p = "data-trix-mutable", d = "[" + p + "]", f = {
                            attributes: !0,
                            childList: !0,
                            characterData: !0,
                            characterDataOldValue: !0,
                            subtree: !0
                        }, c.prototype.start = function() {
                            return this.reset(), this.observer.observe(this.element, f)
                        }, c.prototype.stop = function() {
                            return this.observer.disconnect()
                        }, c.prototype.didMutate = function(t) {
                            var e, n;
                            return (e = this.mutations).push.apply(e, this.findSignificantMutations(t)), this.mutations.length ? (null != (n = this.delegate) && "function" == typeof n.elementDidMutate && n.elementDidMutate(this.getMutationSummary()), this.reset()) : void 0
                        }, c.prototype.reset = function() {
                            return this.mutations = []
                        }, c.prototype.findSignificantMutations = function(t) {
                            var e, n, o, i;
                            for (i = [], e = 0, n = t.length; n > e; e++) o = t[e], this.mutationIsSignificant(o) && i.push(o);
                            return i
                        }, c.prototype.mutationIsSignificant = function(t) {
                            var e, n, o, i;
                            for (i = this.nodesModifiedByMutation(t), e = 0, n = i.length; n > e; e++)
                                if (o = i[e], this.nodeIsSignificant(o)) return !0;
                            return !1
                        }, c.prototype.nodeIsSignificant = function(t) {
                            return t !== this.element && !this.nodeIsMutable(t) && !o(t)
                        }, c.prototype.nodeIsMutable = function(e) {
                            return t(e, {
                                matchingSelector: d
                            })
                        }, c.prototype.nodesModifiedByMutation = function(t) {
                            var e;
                            switch (e = [], t.type) {
                                case "attributes":
                                    t.attributeName !== p && e.push(t.target);
                                    break;
                                case "characterData":
                                    e.push(t.target.parentNode), e.push(t.target);
                                    break;
                                case "childList":
                                    e.push.apply(e, t.addedNodes), e.push.apply(e, t.removedNodes)
                            }
                            return e
                        }, c.prototype.getMutationSummary = function() {
                            return this.getTextMutationSummary()
                        }, c.prototype.getTextMutationSummary = function() {
                            var t, e, n, o, i, r, s, a, u, c, h;
                            for (a = this.getTextChangesFromCharacterData(), n = a.additions, i = a.deletions, h = this.getTextChangesFromChildList(), u = h.additions, r = 0, s = u.length; s > r; r++) e = u[r], l.call(n, e) < 0 && n.push(e);
                            return i.push.apply(i, h.deletions), c = {}, (t = n.join("")) && (c.textAdded = t), (o = i.join("")) && (c.textDeleted = o), c
                        }, c.prototype.getMutationsByType = function(t) {
                            var e, n, o, i, r;
                            for (i = this.mutations, r = [], e = 0, n = i.length; n > e; e++) o = i[e], o.type === t && r.push(o);
                            return r
                        }, c.prototype.getTextChangesFromChildList = function() {
                            var t, e, o, r, s, a, u, c, l, p, d;
                            for (t = [], u = [], a = this.getMutationsByType("childList"), e = 0, r = a.length; r > e; e++) s = a[e], t.push.apply(t, s.addedNodes), u.push.apply(u, s.removedNodes);
                            return c = 0 === t.length && 1 === u.length && n(u[0]), c ? (p = [], d = ["\n"]) : (p = h(t), d = h(u)), {
                                additions: function() {
                                    var t, e, n;
                                    for (n = [], o = t = 0, e = p.length; e > t; o = ++t) l = p[o], l !== d[o] && n.push(i(l));
                                    return n
                                }(),
                                deletions: function() {
                                    var t, e, n;
                                    for (n = [], o = t = 0, e = d.length; e > t; o = ++t) l = d[o], l !== p[o] && n.push(i(l));
                                    return n
                                }()
                            }
                        }, c.prototype.getTextChangesFromCharacterData = function() {
                            var t, e, n, o, s, a, u, c;
                            return e = this.getMutationsByType("characterData"), e.length && (c = e[0], n = e[e.length - 1], s = i(c.oldValue), o = i(n.target.data), a = r(s, o), t = a.added, u = a.removed), {
                                additions: t ? [t] : [],
                                deletions: u ? [u] : []
                            }
                        }, h = function(t) {
                            var e, n, o, i;
                            for (null == t && (t = []), i = [], e = 0, n = t.length; n > e; e++) switch (o = t[e], o.nodeType) {
                                case Node.TEXT_NODE:
                                    i.push(o.data);
                                    break;
                                case Node.ELEMENT_NODE:
                                    "br" === s(o) ? i.push("\n") : i.push.apply(i, h(o.childNodes))
                            }
                            return i
                        }, c
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.FileVerificationOperation = function(e) {
                        function n(t) {
                            this.file = t
                        }
                        return t(n, e), n.prototype.perform = function(t) {
                            var e;
                            return e = new FileReader, e.onerror = function() {
                                return t(!1)
                            }, e.onload = function(n) {
                                return function() {
                                    e.onerror = null;
                                    try {
                                        e.abort()
                                    } catch (o) {}
                                    return t(!0, n.file)
                                }
                            }(this), e.readAsArrayBuffer(this.file)
                        }, n
                    }(e.Operation)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.CompositionInput = function(e) {
                        function n(t) {
                            var e;
                            this.inputController = t, e = this.inputController, this.responder = e.responder, this.delegate = e.delegate, this.inputSummary = e.inputSummary, this.data = {}
                        }
                        return t(n, e), n.prototype.start = function(t) {
                            var e, n;
                            return this.data.start = t, "keypress" === this.inputSummary.eventName && this.inputSummary.textAdded && null != (e = this.responder) && e.deleteInDirection("left"), this.selectionIsExpanded() || (this.insertPlaceholder(), this.requestRender()), this.range = null != (n = this.responder) ? n.getSelectedRange() : void 0
                        }, n.prototype.update = function(t) {
                            var e;
                            return this.data.update = t, (e = this.selectPlaceholder()) ? (this.forgetPlaceholder(), this.range = e) : void 0
                        }, n.prototype.end = function(t) {
                            var e, n, o, i;
                            return this.data.end = t, this.forgetPlaceholder(), this.canApplyToDocument() ? (this.setInputSummary({
                                preferDocument: !0
                            }), null != (e = this.delegate) && e.inputControllerWillPerformTyping(), null != (n = this.responder) && n.setSelectedRange(this.range), null != (o = this.responder) && o.insertString(this.data.end), null != (i = this.responder) ? i.setSelectedRange(this.range[0] + this.data.end.length) : void 0) : null != this.data.start || null != this.data.update ? (this.requestReparse(), this.inputController.reset()) : void 0
                        }, n.prototype.getEndData = function() {
                            return this.data.end
                        }, n.prototype.isEnded = function() {
                            return null != this.getEndData()
                        }, n.prototype.canApplyToDocument = function() {
                            var t, e;
                            return 0 === (null != (t = this.data.start) ? t.length : void 0) && (null != (e = this.data.end) ? e.length : void 0) > 0 && null != this.range
                        }, n.proxyMethod("inputController.setInputSummary"), n.proxyMethod("inputController.requestRender"), n.proxyMethod("inputController.requestReparse"), n.proxyMethod("responder?.selectionIsExpanded"), n.proxyMethod("responder?.insertPlaceholder"), n.proxyMethod("responder?.selectPlaceholder"), n.proxyMethod("responder?.forgetPlaceholder"), n
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a, u, c, l, h, p, d, f = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) g.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        g = {}.hasOwnProperty,
                        m = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    i = e.handleEvent, c = e.makeElement, r = e.innerElementIsActive, l = e.objectsAreEqual, p = e.tagName, e.InputController = function(p) {
                        function d(t) {
                            var n;
                            this.element = t, this.resetInputSummary(), this.mutationObserver = new e.MutationObserver(this.element), this.mutationObserver.delegate = this;
                            for (n in this.events) i(n, {
                                onElement: this.element,
                                withCallback: this.handlerFor(n),
                                inPhase: "capturing"
                            })
                        }
                        var g;
                        return f(d, p), g = 0, d.keyNames = {
                            8: "backspace",
                            9: "tab",
                            13: "return",
                            37: "left",
                            39: "right",
                            46: "delete",
                            68: "d",
                            72: "h",
                            79: "o"
                        }, d.prototype.handlerFor = function(t) {
                            return function(e) {
                                return function(n) {
                                    return e.handleInput(function() {
                                        return r(this.element) ? void 0 : (this.eventName = t, this.events[t].call(this, n))
                                    })
                                }
                            }(this)
                        }, d.prototype.setInputSummary = function(t) {
                            var e, n;
                            null == t && (t = {}), this.inputSummary.eventName = this.eventName;
                            for (e in t) n = t[e], this.inputSummary[e] = n;
                            return this.inputSummary
                        }, d.prototype.resetInputSummary = function() {
                            return this.inputSummary = {}
                        }, d.prototype.reset = function() {
                            return this.resetInputSummary(), e.selectionChangeObserver.reset()
                        }, d.prototype.editorWillSyncDocumentView = function() {
                            return this.mutationObserver.stop()
                        }, d.prototype.editorDidSyncDocumentView = function() {
                            return this.mutationObserver.start()
                        }, d.prototype.requestRender = function() {
                            var t;
                            return null != (t = this.delegate) && "function" == typeof t.inputControllerDidRequestRender ? t.inputControllerDidRequestRender() : void 0
                        }, d.prototype.requestReparse = function() {
                            var t;
                            return null != (t = this.delegate) && "function" == typeof t.inputControllerDidRequestReparse && t.inputControllerDidRequestReparse(), this.requestRender()
                        }, d.prototype.elementDidMutate = function(t) {
                            var e;
                            return this.isComposing() ? null != (e = this.delegate) && "function" == typeof e.inputControllerDidAllowUnhandledInput ? e.inputControllerDidAllowUnhandledInput() : void 0 : this.handleInput(function() {
                                return this.mutationIsSignificant(t) && (this.mutationIsExpected(t) ? this.requestRender() : this.requestReparse()), this.reset()
                            })
                        }, d.prototype.mutationIsExpected = function(t) {
                            var e, n, o, i, r, s, a, u, c, l;
                            return a = t.textAdded, u = t.textDeleted, this.inputSummary.preferDocument ? !0 : (e = null != a ? a === this.inputSummary.textAdded : !this.inputSummary.textAdded, n = null != u ? this.inputSummary.didDelete : !this.inputSummary.didDelete, c = "\n" === a && !e, l = "\n" === u && !n, s = c && !l || l && !c, s && (i = this.getSelectedRange()) && (o = c ? -1 : 1, null != (r = this.responder) ? r.positionIsBlockBreak(i[1] + o) : void 0) ? !0 : e && n)
                        }, d.prototype.mutationIsSignificant = function(t) {
                            var e, n, o;
                            return o = Object.keys(t).length > 0, e = "" === (null != (n = this.compositionInput) ? n.getEndData() : void 0), o || !e
                        }, d.prototype.attachFiles = function(t) {
                            var n, o;
                            return o = function() {
                                var o, i, r;
                                for (r = [], o = 0, i = t.length; i > o; o++) n = t[o], r.push(new e.FileVerificationOperation(n));
                                return r
                            }(), Promise.all(o).then(function(t) {
                                return function(e) {
                                    return t.handleInput(function() {
                                        var t, n;
                                        return null != (t = this.delegate) && t.inputControllerWillAttachFiles(), null != (n = this.responder) && n.insertFiles(e), this.requestRender()
                                    })
                                }
                            }(this))
                        }, d.prototype.events = {
                            keydown: function(t) {
                                var n, o, i, r, a, u, c, l, h;
                                if (this.isComposing() || this.resetInputSummary(), r = this.constructor.keyNames[t.keyCode]) {
                                    for (o = this.keys, l = ["ctrl", "alt", "shift", "meta"], i = 0, u = l.length; u > i; i++) c = l[i], t[c + "Key"] && ("ctrl" === c && (c = "control"), o = null != o ? o[c] : void 0);
                                    null != (null != o ? o[r] : void 0) && (this.setInputSummary({
                                        keyName: r
                                    }), e.selectionChangeObserver.reset(), o[r].call(this, t))
                                }
                                return s(t) && (n = String.fromCharCode(t.keyCode).toLowerCase()) && (a = function() {
                                    var e, n, o, i;
                                    for (o = ["alt", "shift"], i = [], e = 0, n = o.length; n > e; e++) c = o[e], t[c + "Key"] && i.push(c);
                                    return i
                                }(), a.push(n), null != (h = this.delegate) ? h.inputControllerDidReceiveKeyboardCommand(a) : void 0) ? t.preventDefault() : void 0
                            },
                            keypress: function(t) {
                                var e, n, o;
                                if (null == this.inputSummary.eventName && (!t.metaKey && !t.ctrlKey || t.altKey) && !u(t) && !a(t)) return null === t.which ? e = String.fromCharCode(t.keyCode) : 0 !== t.which && 0 !== t.charCode && (e = String.fromCharCode(t.charCode)), null != e ? (null != (n = this.delegate) && n.inputControllerWillPerformTyping(), null != (o = this.responder) && o.insertString(e), this.setInputSummary({
                                    textAdded: e,
                                    didDelete: this.selectionIsExpanded()
                                })) : void 0
                            },
                            textInput: function(t) {
                                var e, n, o, i;
                                return e = t.data, i = this.inputSummary.textAdded, i && i !== e && i.toUpperCase() === e ? (n = this.getSelectedRange(), this.setSelectedRange([n[0], n[1] + i.length]), null != (o = this.responder) && o.insertString(e), this.setInputSummary({
                                    textAdded: e
                                }), this.setSelectedRange(n)) : void 0
                            },
                            dragenter: function(t) {
                                return t.preventDefault()
                            },
                            dragstart: function(t) {
                                var e, n;
                                return n = t.target, this.serializeSelectionToDataTransfer(t.dataTransfer), this.draggedRange = this.getSelectedRange(), null != (e = this.delegate) && "function" == typeof e.inputControllerDidStartDrag ? e.inputControllerDidStartDrag() : void 0
                            },
                            dragover: function(t) {
                                var e, n;
                                return !this.draggedRange && !this.canAcceptDataTransfer(t.dataTransfer) || (t.preventDefault(), e = {
                                    x: t.clientX,
                                    y: t.clientY
                                }, l(e, this.draggingPoint)) ? void 0 : (this.draggingPoint = e, null != (n = this.delegate) && "function" == typeof n.inputControllerDidReceiveDragOverPoint ? n.inputControllerDidReceiveDragOverPoint(this.draggingPoint) : void 0)
                            },
                            dragend: function() {
                                var t;
                                return null != (t = this.delegate) && "function" == typeof t.inputControllerDidCancelDrag && t.inputControllerDidCancelDrag(), this.draggedRange = null, this.draggingPoint = null
                            },
                            drop: function(t) {
                                var n, o, i, r, s, a, u, c, l;
                                return t.preventDefault(), i = null != (s = t.dataTransfer) ? s.files : void 0, r = {
                                    x: t.clientX,
                                    y: t.clientY
                                }, null != (a = this.responder) && a.setLocationRangeFromPointRange(r), (null != i ? i.length : void 0) ? this.attachFiles(i) : this.draggedRange ? (null != (u = this.delegate) && u.inputControllerWillMoveText(), null != (c = this.responder) && c.moveTextFromRange(this.draggedRange), this.draggedRange = null, this.requestRender()) : (o = t.dataTransfer.getData("application/x-trix-document")) && (n = e.Document.fromJSONString(o), null != (l = this.responder) && l.insertDocument(n), this.requestRender()), this.draggedRange = null, this.draggingPoint = null
                            },
                            cut: function(t) {
                                var e;
                                return this.serializeSelectionToDataTransfer(t.clipboardData) && t.preventDefault(), null != (e = this.delegate) && e.inputControllerWillCutText(), this.deleteInDirection("backward"), t.defaultPrevented ? this.requestRender() : void 0
                            },
                            copy: function(t) {
                                return this.serializeSelectionToDataTransfer(t.clipboardData) ? t.preventDefault() : void 0
                            },
                            paste: function(n) {
                                var i, r, s, a, u, c, l, p, d, f, y, v, b, A, C, w, x, E, S, k, R, L;
                                return u = null != (l = n.clipboardData) ? l : n.testClipboardData, c = {
                                    paste: u
                                }, null == u || h(n) ? void this.getPastedHTMLUsingHiddenElement(function(t) {
                                    return function(e) {
                                        var n, o, i;
                                        return c.html = e, null != (n = t.delegate) && n.inputControllerWillPasteText(c), null != (o = t.responder) && o.insertHTML(e), t.requestRender(), null != (i = t.delegate) ? i.inputControllerDidPaste(c) : void 0
                                    }
                                }(this)) : ((s = u.getData("URL")) ? (L = u.getData("public.url-name") || s, c.string = L, this.setInputSummary({
                                    textAdded: L,
                                    didDelete: this.selectionIsExpanded()
                                }), null != (p = this.delegate) && p.inputControllerWillPasteText(c), null != (A = this.responder) && A.insertText(e.Text.textForStringWithAttributes(L, {
                                    href: s
                                })), this.requestRender(), null != (C = this.delegate) && C.inputControllerDidPaste(c)) : t(u) ? (L = u.getData("text/plain"), c.string = L, this.setInputSummary({
                                    textAdded: L,
                                    didDelete: this.selectionIsExpanded()
                                }), null != (w = this.delegate) && w.inputControllerWillPasteText(c), null != (x = this.responder) && x.insertString(L), this.requestRender(), null != (E = this.delegate) && E.inputControllerDidPaste(c)) : (a = u.getData("text/html")) ? (c.html = a, null != (S = this.delegate) && S.inputControllerWillPasteText(c), null != (k = this.responder) && k.insertHTML(a), this.requestRender(), null != (R = this.delegate) && R.inputControllerDidPaste(c)) : m.call(u.types, "Files") >= 0 && (r = null != (d = u.items) && null != (f = d[0]) && "function" == typeof f.getAsFile ? f.getAsFile() : void 0) && (!r.name && (i = o(r)) && (r.name = "pasted-file-" + ++g + "." + i), c.file = r, null != (y = this.delegate) && y.inputControllerWillAttachFiles(), null != (v = this.responder) && v.insertFile(r), this.requestRender(), null != (b = this.delegate) && b.inputControllerDidPaste(c)), n.preventDefault())
                            },
                            compositionstart: function(t) {
                                return this.getCompositionInput().start(t.data)
                            },
                            compositionupdate: function(t) {
                                return this.getCompositionInput().update(t.data)
                            },
                            compositionend: function(t) {
                                return this.getCompositionInput().end(t.data)
                            },
                            input: function(t) {
                                return t.stopPropagation()
                            }
                        }, d.prototype.keys = {
                            backspace: function(t) {
                                var e;
                                return null != (e = this.delegate) && e.inputControllerWillPerformTyping(), this.deleteInDirection("backward", t)
                            },
                            "delete": function(t) {
                                var e;
                                return null != (e = this.delegate) && e.inputControllerWillPerformTyping(), this.deleteInDirection("forward", t)
                            },
                            "return": function() {
                                var t, e;
                                return this.setInputSummary({
                                    preferDocument: !0
                                }), null != (t = this.delegate) && t.inputControllerWillPerformTyping(), null != (e = this.responder) ? e.insertLineBreak() : void 0
                            },
                            tab: function(t) {
                                var e, n;
                                return (null != (e = this.responder) ? e.canIncreaseNestingLevel() : void 0) ? (null != (n = this.responder) && n.increaseNestingLevel(), this.requestRender(), t.preventDefault()) : void 0
                            },
                            left: function(t) {
                                var e;
                                return this.selectionIsInCursorTarget() ? (t.preventDefault(), null != (e = this.responder) ? e.moveCursorInDirection("backward") : void 0) : void 0
                            },
                            right: function(t) {
                                var e;
                                return this.selectionIsInCursorTarget() ? (t.preventDefault(), null != (e = this.responder) ? e.moveCursorInDirection("forward") : void 0) : void 0
                            },
                            control: {
                                d: function(t) {
                                    var e;
                                    return null != (e = this.delegate) && e.inputControllerWillPerformTyping(), this.deleteInDirection("forward", t)
                                },
                                h: function(t) {
                                    var e;
                                    return null != (e = this.delegate) && e.inputControllerWillPerformTyping(), this.deleteInDirection("backward", t)
                                },
                                o: function(t) {
                                    var e, n;
                                    return t.preventDefault(), null != (e = this.delegate) && e.inputControllerWillPerformTyping(), null != (n = this.responder) && n.insertString("\n", {
                                        updatePosition: !1
                                    }), this.requestRender()
                                }
                            },
                            shift: {
                                "return": function(t) {
                                    var e, n;
                                    return null != (e = this.delegate) && e.inputControllerWillPerformTyping(), null != (n = this.responder) && n.insertString("\n"), this.requestRender(), t.preventDefault()
                                },
                                tab: function(t) {
                                    var e, n;
                                    return (null != (e = this.responder) ? e.canDecreaseNestingLevel() : void 0) ? (null != (n = this.responder) && n.decreaseNestingLevel(), this.requestRender(), t.preventDefault()) : void 0
                                },
                                left: function(t) {
                                    return this.selectionIsInCursorTarget() ? (t.preventDefault(), this.expandSelectionInDirection("backward")) : void 0
                                },
                                right: function(t) {
                                    return this.selectionIsInCursorTarget() ? (t.preventDefault(), this.expandSelectionInDirection("forward")) : void 0
                                }
                            },
                            alt: {
                                backspace: function() {
                                    var t;
                                    return this.setInputSummary({
                                        preferDocument: !1
                                    }), null != (t = this.delegate) ? t.inputControllerWillPerformTyping() : void 0
                                }
                            },
                            meta: {
                                backspace: function() {
                                    var t;
                                    return this.setInputSummary({
                                        preferDocument: !1
                                    }), null != (t = this.delegate) ? t.inputControllerWillPerformTyping() : void 0
                                }
                            }
                        }, d.prototype.handleInput = function(t) {
                            var e, n;
                            try {
                                return null != (e = this.delegate) && e.inputControllerWillHandleInput(), t.call(this)
                            } finally {
                                null != (n = this.delegate) && n.inputControllerDidHandleInput()
                            }
                        }, d.prototype.getCompositionInput = function() {
                            return this.isComposing() ? this.compositionInput : this.compositionInput = new e.CompositionInput(this)
                        }, d.prototype.isComposing = function() {
                            return null != this.compositionInput && !this.compositionInput.isEnded()
                        }, d.prototype.deleteInDirection = function(t, e) {
                            var n;
                            return (null != (n = this.responder) ? n.deleteInDirection(t) : void 0) !== !1 ? this.setInputSummary({
                                didDelete: !0
                            }) : e ? (e.preventDefault(), this.requestRender()) : void 0
                        }, d.prototype.serializeSelectionToDataTransfer = function(t) {
                            var o, i;
                            if (n(t)) return o = null != (i = this.responder) ? i.getSelectedDocument().toSerializableDocument() : void 0, t.setData("application/x-trix-document", JSON.stringify(o)), t.setData("text/html", e.DocumentView.render(o).innerHTML), t.setData("text/plain", o.toString().replace(/\n$/, "")), !0
                        }, d.prototype.canAcceptDataTransfer = function(t) {
                            var e, n, o, i, r, s;
                            for (s = {}, i = null != (o = null != t ? t.types : void 0) ? o : [], e = 0, n = i.length; n > e; e++) r = i[e], s[r] = !0;
                            return s.Files || s["application/x-trix-document"] || s["text/html"] || s["text/plain"]
                        }, d.prototype.getPastedHTMLUsingHiddenElement = function(t) {
                            var e, n, o;
                            return n = this.getSelectedRange(), o = {
                                position: "absolute",
                                left: window.pageXOffset + "px",
                                top: window.pageYOffset + "px",
                                opacity: 0
                            }, e = c({
                                style: o,
                                tagName: "div",
                                editable: !0
                            }), document.body.appendChild(e), e.focus(), requestAnimationFrame(function(o) {
                                return function() {
                                    var i;
                                    return i = e.innerHTML, document.body.removeChild(e), o.setSelectedRange(n), t(i)
                                }
                            }(this))
                        }, d.proxyMethod("responder?.getSelectedRange"), d.proxyMethod("responder?.setSelectedRange"), d.proxyMethod("responder?.expandSelectionInDirection"), d.proxyMethod("responder?.selectionIsInCursorTarget"), d.proxyMethod("responder?.selectionIsExpanded"), d
                    }(e.BasicObject), o = function(t) {
                        var e, n;
                        return null != (e = t.type) && null != (n = e.match(/\/(\w+)$/)) ? n[1] : void 0
                    }, u = function(t) {
                        return t.metaKey && t.altKey && !t.shiftKey && 94 === t.keyCode
                    }, a = function(t) {
                        return t.metaKey && t.altKey && t.shiftKey && 9674 === t.keyCode
                    }, s = function(t) {
                        return /Mac|^iP/.test(navigator.platform) ? t.metaKey : t.ctrlKey
                    }, h = function(t) {
                        var e, n;
                        return (n = null != (e = t.clipboardData) ? e.types : void 0) ? m.call(n, "text/html") < 0 && (m.call(n, "com.apple.webarchive") >= 0 || m.call(n, "com.apple.flat-rtfd") >= 0) : void 0
                    }, t = function(t) {
                        var e, n, o;
                        return o = t.getData("text/plain"), n = t.getData("text/html"), o && n ? (e = c("div"), e.innerHTML = n, e.textContent === o ? !e.querySelector(":not(meta)") : void 0) : null != o ? o.length : void 0
                    }, d = {
                        "application/x-trix-feature-detection": "test"
                    }, n = function(t) {
                        var e, n;
                        if (null != (null != t ? t.setData : void 0)) {
                            for (e in d)
                                if (n = d[e], t.setData(e, n), t.getData(e) !== n) return;
                            return !0
                        }
                    }
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        u = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) c.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        c = {}.hasOwnProperty;
                    n = e.handleEvent, r = e.makeElement, s = e.tagName, o = e.InputController.keyNames, i = e.config.lang, t = e.config.css.classNames, e.AttachmentEditorController = function(e) {
                        function c(t, e, n) {
                            this.attachmentPiece = t, this.element = e, this.container = n, this.uninstall = a(this.uninstall, this), this.didKeyDownCaption = a(this.didKeyDownCaption, this), this.didChangeCaption = a(this.didChangeCaption, this), this.didClickCaption = a(this.didClickCaption, this), this.didClickRemoveButton = a(this.didClickRemoveButton, this), this.attachment = this.attachmentPiece.attachment, "a" === s(this.element) && (this.element = this.element.firstChild), this.install()
                        }
                        var l;
                        return u(c, e), l = function(t) {
                            return function() {
                                var e;
                                return e = t.apply(this, arguments), e["do"](), null == this.undos && (this.undos = []), this.undos.push(e.undo)
                            }
                        }, c.prototype.install = function() {
                            return this.makeElementMutable(), this.attachment.isPreviewable() && this.makeCaptionEditable(), this.addRemoveButton()
                        }, c.prototype.makeElementMutable = l(function() {
                            return {
                                "do": function(t) {
                                    return function() {
                                        return t.element.dataset.trixMutable = !0
                                    }
                                }(this),
                                undo: function(t) {
                                    return function() {
                                        return delete t.element.dataset.trixMutable
                                    }
                                }(this)
                            }
                        }), c.prototype.makeCaptionEditable = l(function() {
                            var t, e;
                            return t = this.element.querySelector("figcaption"), e = null, {
                                "do": function(o) {
                                    return function() {
                                        return e = n("click", {
                                            onElement: t,
                                            withCallback: o.didClickCaption,
                                            inPhase: "capturing"
                                        })
                                    }
                                }(this),
                                undo: function() {
                                    return function() {
                                        return e.destroy()
                                    }
                                }(this)
                            }
                        }), c.prototype.addRemoveButton = l(function() {
                            var e;
                            return e = r({
                                tagName: "button",
                                textContent: i.remove,
                                className: t.attachment.removeButton,
                                attributes: {
                                    type: "button",
                                    title: i.remove
                                },
                                data: {
                                    trixMutable: !0
                                }
                            }), n("click", {
                                onElement: e,
                                withCallback: this.didClickRemoveButton
                            }), {
                                "do": function(t) {
                                    return function() {
                                        return t.element.appendChild(e)
                                    }
                                }(this),
                                undo: function(t) {
                                    return function() {
                                        return t.element.removeChild(e)
                                    }
                                }(this)
                            }
                        }), c.prototype.editCaption = l(function() {
                            var e, o, s, a, u;
                            return a = r({
                                tagName: "textarea",
                                className: t.attachment.captionEditor,
                                attributes: {
                                    placeholder: i.captionPlaceholder
                                }
                            }), a.value = this.attachmentPiece.getCaption(), u = a.cloneNode(), u.classList.add("trix-autoresize-clone"), e = function() {
                                return u.value = a.value, a.style.height = u.scrollHeight + "px"
                            }, n("input", {
                                onElement: a,
                                withCallback: e
                            }), n("keydown", {
                                onElement: a,
                                withCallback: this.didKeyDownCaption
                            }), n("change", {
                                onElement: a,
                                withCallback: this.didChangeCaption
                            }), n("blur", {
                                onElement: a,
                                withCallback: this.uninstall
                            }), s = this.element.querySelector("figcaption"), o = s.cloneNode(), {
                                "do": function() {
                                    return s.style.display = "none", o.appendChild(a), o.appendChild(u), o.classList.add(t.attachment.editingCaption), s.parentElement.insertBefore(o, s), e(), a.focus()
                                },
                                undo: function() {
                                    return o.parentNode.removeChild(o), s.style.display = null
                                }
                            }
                        }), c.prototype.didClickRemoveButton = function(t) {
                            var e;
                            return t.preventDefault(), t.stopPropagation(), null != (e = this.delegate) ? e.attachmentEditorDidRequestRemovalOfAttachment(this.attachment) : void 0
                        }, c.prototype.didClickCaption = function(t) {
                            return t.preventDefault(), this.editCaption()
                        }, c.prototype.didChangeCaption = function(t) {
                            var e, n, o;
                            return e = t.target.value.replace(/\s/g, " ").trim(), e ? null != (n = this.delegate) && "function" == typeof n.attachmentEditorDidRequestUpdatingAttributesForAttachment ? n.attachmentEditorDidRequestUpdatingAttributesForAttachment({
                                caption: e
                            }, this.attachment) : void 0 : null != (o = this.delegate) && "function" == typeof o.attachmentEditorDidRequestRemovingAttributeForAttachment ? o.attachmentEditorDidRequestRemovingAttributeForAttachment("caption", this.attachment) : void 0
                        }, c.prototype.didKeyDownCaption = function(t) {
                            var e;
                            return "return" === o[t.keyCode] ? (t.preventDefault(), this.didChangeCaption(t), null != (e = this.delegate) && "function" == typeof e.attachmentEditorDidRequestDeselectingAttachment ? e.attachmentEditorDidRequestDeselectingAttachment(this.attachment) : void 0) : void 0
                        }, c.prototype.uninstall = function() {
                            for (var t, e; e = this.undos.pop();) e();
                            return null != (t = this.delegate) ? t.didUninstallAttachmentEditor(this) : void 0
                        }, c
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i, r = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) s.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        s = {}.hasOwnProperty;
                    o = e.makeElement, i = e.selectionElements, t = e.config.css.classNames, e.AttachmentView = function(e) {
                        function s() {
                            s.__super__.constructor.apply(this, arguments), this.attachment = this.object, this.attachment.uploadProgressDelegate = this, this.attachmentPiece = this.options.piece
                        }
                        return r(s, e), s.attachmentSelector = "[data-trix-attachment]", s.prototype.createContentNodes = function() {
                            return []
                        }, s.prototype.createNodes = function() {
                            var e, n, r, s, a, u, c, l, h, p, d;
                            if (s = o({
                                    tagName: "figure",
                                    className: this.getClassName()
                                }), this.attachment.hasContent()) s.innerHTML = this.attachment.getContent();
                            else
                                for (p = this.createContentNodes(), u = 0, l = p.length; l > u; u++) h = p[u], s.appendChild(h);
                            s.appendChild(this.createCaptionElement()), n = {
                                trixAttachment: JSON.stringify(this.attachment),
                                trixContentType: this.attachment.getContentType(),
                                trixId: this.attachment.id
                            }, e = this.attachmentPiece.getAttributesForAttachment(), e.isEmpty() || (n.trixAttributes = JSON.stringify(e)), this.attachment.isPending() && (this.progressElement = o({
                                tagName: "progress",
                                attributes: {
                                    "class": t.attachment.progressBar,
                                    value: this.attachment.getUploadProgress(),
                                    max: 100
                                },
                                data: {
                                    trixMutable: !0,
                                    trixStoreKey: ["progressElement", this.attachment.id].join("/")
                                }
                            }), s.appendChild(this.progressElement), n.trixSerialize = !1), (a = this.getHref()) ? (r = o("a", {
                                href: a
                            }), r.appendChild(s)) : r = s;
                            for (c in n) d = n[c], r.dataset[c] = d;
                            return r.setAttribute("contenteditable", !1), [i.create("cursorTarget"), r, i.create("cursorTarget")]
                        }, s.prototype.createCaptionElement = function() {
                            var e, n, i, r, s;
                            return n = o({
                                tagName: "figcaption",
                                className: t.attachment.caption
                            }), (e = this.attachmentPiece.getCaption()) ? (n.classList.add(t.attachment.captionEdited), n.textContent = e) : (i = this.attachment.getFilename()) && (n.textContent = i, (r = this.attachment.getFormattedFilesize()) && (n.appendChild(document.createTextNode(" ")), s = o({
                                tagName: "span",
                                className: t.attachment.size,
                                textContent: r
                            }), n.appendChild(s))), n
                        }, s.prototype.getClassName = function() {
                            var e, n;
                            return n = [t.attachment.container, "" + t.attachment.typePrefix + this.attachment.getType()], (e = this.attachment.getExtension()) && n.push(e), n.join(" ")
                        }, s.prototype.getHref = function() {
                            return n(this.attachment.getContent(), "a") ? void 0 : this.attachment.getHref()
                        }, s.prototype.findProgressElement = function() {
                            var t;
                            return null != (t = this.findElement()) ? t.querySelector("progress") : void 0
                        }, s.prototype.attachmentDidChangeUploadProgress = function() {
                            var t, e;
                            return e = this.attachment.getUploadProgress(), null != (t = this.findProgressElement()) ? t.value = e : void 0
                        }, s
                    }(e.ObjectView), n = function(t, e) {
                        var n;
                        return n = o("div"), n.innerHTML = null != t ? t : "", n.querySelector(e)
                    }
                }.call(this),
                function() {
                    var t, n = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var i in e) o.call(e, i) && (t[i] = e[i]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        o = {}.hasOwnProperty;
                    t = e.makeElement, e.PreviewableAttachmentView = function(e) {
                        function o() {
                            o.__super__.constructor.apply(this, arguments), this.attachment.previewDelegate = this
                        }
                        return n(o, e), o.prototype.createContentNodes = function() {
                            return this.image = t({
                                tagName: "img",
                                attributes: {
                                    src: ""
                                },
                                data: {
                                    trixMutable: !0
                                }
                            }), this.refresh(this.image), [this.image]
                        }, o.prototype.refresh = function(t) {
                            var e;
                            return null == t && (t = null != (e = this.findElement()) ? e.querySelector("img") : void 0), t ? this.updateAttributesForImage(t) : void 0
                        }, o.prototype.updateAttributesForImage = function(t) {
                            var e, n, o, i, r, s;
                            return r = this.attachment.getURL(), n = this.attachment.getPreviewURL(), t.src = n || r, n === r ? t.removeAttribute("data-trix-serialized-attributes") : (o = JSON.stringify({
                                src: r
                            }), t.setAttribute("data-trix-serialized-attributes", o)), s = this.attachment.getWidth(), e = this.attachment.getHeight(), null != s && (t.width = s), null != e && (t.height = e), i = ["imageElement", this.attachment.id, t.src, t.width, t.height].join("/"), t.dataset.trixStoreKey = i
                        }, o.prototype.attachmentDidChangePreviewURL = function() {
                            return this.refresh(this.image), this.refresh()
                        }, o
                    }(e.AttachmentView)
                }.call(this),
                function() {
                    var t, n, o, i = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) r.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        r = {}.hasOwnProperty;
                    o = e.makeElement, t = e.findInnerElement, n = e.getTextConfig, e.PieceView = function(r) {
                        function s() {
                            var t;
                            s.__super__.constructor.apply(this, arguments), this.piece = this.object, this.attributes = this.piece.getAttributes(), t = this.options, this.textConfig = t.textConfig, this.context = t.context, this.piece.attachment ? this.attachment = this.piece.attachment : this.string = this.piece.toString()
                        }
                        var a;
                        return i(s, r), s.prototype.createNodes = function() {
                            var e, n, o, i, r, s;
                            if (s = this.attachment ? this.createAttachmentNodes() : this.createStringNodes(), e = this.createElement()) {
                                for (o = t(e), n = 0, i = s.length; i > n; n++) r = s[n], o.appendChild(r);
                                s = [e]
                            }
                            return s
                        }, s.prototype.createAttachmentNodes = function() {
                            var t, n;
                            return t = this.attachment.isPreviewable() ? e.PreviewableAttachmentView : e.AttachmentView, n = this.createChildView(t, this.piece.attachment, {
                                piece: this.piece
                            }), n.getNodes()
                        }, s.prototype.createStringNodes = function() {
                            var t, e, n, i, r, s, a, u, c, l;
                            if (null != (u = this.textConfig) ? u.plaintext : void 0) return [document.createTextNode(this.string)];
                            for (a = [], c = this.string.split("\n"), n = e = 0, i = c.length; i > e; n = ++e) l = c[n], n > 0 && (t = o("br"), a.push(t)), (r = l.length) && (s = document.createTextNode(this.preserveSpaces(l)), a.push(s));
                            return a
                        }, s.prototype.createElement = function() {
                            var t, e, i, r, s, a, u, c;
                            for (r in this.attributes)
                                if ((t = n(r)) && (t.tagName && (s = o(t.tagName), i ? (i.appendChild(s), i = s) : e = i = s), t.style))
                                    if (u) {
                                        a = t.style;
                                        for (r in a) c = a[r], u[r] = c
                                    } else u = t.style;
                            if (u) {
                                null == e && (e = o("span"));
                                for (r in u) c = u[r], e.style[r] = c
                            }
                            return e
                        }, s.prototype.createContainerElement = function() {
                            var t, e, i, r, s;
                            r = this.attributes;
                            for (i in r)
                                if (s = r[i], (e = n(i)) && e.groupTagName) return t = {}, t[i] = s, o(e.groupTagName, t)
                        }, a = e.NON_BREAKING_SPACE, s.prototype.preserveSpaces = function(t) {
                            return this.context.isLast && (t = t.replace(/\ $/, a)), t = t.replace(/(\S)\ {3}(\S)/g, "$1 " + a + " $2").replace(/\ {2}/g, a + " ").replace(/\ {2}/g, " " + a), (this.context.isFirst || this.context.followsWhitespace) && (t = t.replace(/^\ /, a)), t
                        }, s
                    }(e.ObjectView)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.TextView = function(n) {
                        function o() {
                            o.__super__.constructor.apply(this, arguments), this.text = this.object, this.textConfig = this.options.textConfig
                        }
                        var i;
                        return t(o, n), o.prototype.createNodes = function() {
                            var t, n, o, r, s, a, u, c, l, h;
                            for (a = [], c = e.ObjectGroup.groupObjects(this.getPieces()), r = c.length - 1, o = n = 0, s = c.length; s > n; o = ++n) u = c[o], t = {}, 0 === o && (t.isFirst = !0), o === r && (t.isLast = !0), i(l) && (t.followsWhitespace = !0), h = this.findOrCreateCachedChildView(e.PieceView, u, {
                                textConfig: this.textConfig,
                                context: t
                            }), a.push.apply(a, h.getNodes()), l = u;
                            return a
                        }, o.prototype.getPieces = function() {
                            var t, e, n, o, i;
                            for (o = this.text.getPieces(), i = [], t = 0, e = o.length; e > t; t++) n = o[t], n.hasAttribute("blockBreak") || i.push(n);
                            return i
                        }, i = function(t) {
                            return /\s$/.test(null != t ? t.toString() : void 0)
                        }, o
                    }(e.ObjectView)
                }.call(this),
                function() {
                    var t, n, o = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) i.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        i = {}.hasOwnProperty;
                    n = e.makeElement, t = e.getBlockConfig, e.BlockView = function(i) {
                        function r() {
                            r.__super__.constructor.apply(this, arguments), this.block = this.object, this.attributes = this.block.getAttributes()
                        }
                        return o(r, i), r.prototype.createNodes = function() {
                            var o, i, r, s, a, u, c, l, h;
                            if (o = document.createComment("block"), u = [o], this.block.isEmpty() ? u.push(n("br")) : (l = null != (c = t(this.block.getLastAttribute())) ? c.text : void 0, h = this.findOrCreateCachedChildView(e.TextView, this.block.text, {
                                    textConfig: l
                                }), u.push.apply(u, h.getNodes()), this.shouldAddExtraNewlineElement() && u.push(n("br"))), this.attributes.length) return u;
                            for (i = n(e.config.blockAttributes["default"].tagName), r = 0, s = u.length; s > r; r++) a = u[r], i.appendChild(a);
                            return [i]
                        }, r.prototype.createContainerElement = function(e) {
                            var o, i;
                            return o = this.attributes[e], i = t(o), n(i.tagName)
                        }, r.prototype.shouldAddExtraNewlineElement = function() {
                            return /\n\n$/.test(this.block.toString())
                        }, r
                    }(e.ObjectView)
                }.call(this),
                function() {
                    var t, n, o = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) i.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        i = {}.hasOwnProperty;
                    t = e.defer, n = e.makeElement, e.DocumentView = function(i) {
                        function r() {
                            r.__super__.constructor.apply(this, arguments), this.element = this.options.element, this.elementStore = new e.ElementStore, this.setDocument(this.object)
                        }
                        var s, a, u;
                        return o(r, i), r.render = function(t) {
                            var e, o;
                            return e = n("div"), o = new this(t, {
                                element: e
                            }), o.render(), o.sync(), e
                        }, r.prototype.setDocument = function(t) {
                            return t.isEqualTo(this.document) ? void 0 : this.document = this.object = t
                        }, r.prototype.render = function() {
                            var t, o, i, r, s, a, u;
                            if (this.childViews = [], this.shadowElement = n("div"), !this.document.isEmpty()) {
                                for (s = e.ObjectGroup.groupObjects(this.document.getBlocks(), {
                                        asTree: !0
                                    }), a = [], t = 0, o = s.length; o > t; t++) r = s[t], u = this.findOrCreateCachedChildView(e.BlockView, r), a.push(function() {
                                    var t, e, n, o;
                                    for (n = u.getNodes(), o = [], t = 0, e = n.length; e > t; t++) i = n[t], o.push(this.shadowElement.appendChild(i));
                                    return o
                                }.call(this));
                                return a
                            }
                        }, r.prototype.isSynced = function() {
                            return s(this.shadowElement, this.element)
                        }, r.prototype.sync = function() {
                            var t;
                            for (t = this.createDocumentFragmentForSync(); this.element.lastChild;) this.element.removeChild(this.element.lastChild);
                            return this.element.appendChild(t), this.didSync()
                        }, r.prototype.didSync = function() {
                            return this.elementStore.reset(a(this.element)), t(function(t) {
                                return function() {
                                    return t.garbageCollectCachedViews()
                                }
                            }(this))
                        }, r.prototype.createDocumentFragmentForSync = function() {
                            var t, e, n, o, i, r, s, u, c, l;
                            for (e = document.createDocumentFragment(), u = this.shadowElement.childNodes, n = 0, i = u.length; i > n; n++) s = u[n], e.appendChild(s.cloneNode(!0));
                            for (c = a(e), o = 0, r = c.length; r > o; o++) t = c[o], (l = this.elementStore.remove(t)) && t.parentNode.replaceChild(l, t);
                            return e
                        }, a = function(t) {
                            return t.querySelectorAll("[data-trix-store-key]")
                        }, s = function(t, e) {
                            return u(t.innerHTML) === u(e.innerHTML)
                        }, u = function(t) {
                            return t.replace(/&nbsp;/g, " ")
                        }, r
                    }(e.ObjectView)
                }.call(this),
                function() {
                    var t, n, o, i, r = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        s = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) a.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        a = {}.hasOwnProperty;
                    o = e.handleEvent, i = e.innerElementIsActive, n = e.defer, t = e.AttachmentView.attachmentSelector, e.CompositionController = function(a) {
                        function u(n, i) {
                            this.element = n, this.composition = i, this.didClickAttachment = r(this.didClickAttachment, this), this.didBlur = r(this.didBlur, this), this.didFocus = r(this.didFocus, this), this.documentView = new e.DocumentView(this.composition.document, {
                                element: this.element
                            }), o("focus", {
                                onElement: this.element,
                                withCallback: this.didFocus
                            }), o("blur", {
                                onElement: this.element,
                                withCallback: this.didBlur
                            }), o("click", {
                                onElement: this.element,
                                matchingSelector: "a[contenteditable=false]",
                                preventDefault: !0
                            }), o("mousedown", {
                                onElement: this.element,
                                matchingSelector: t,
                                withCallback: this.didClickAttachment
                            }), o("click", {
                                onElement: this.element,
                                matchingSelector: "a" + t,
                                preventDefault: !0
                            })
                        }
                        return s(u, a), u.prototype.didFocus = function() {
                            var t, e, n;
                            return t = function(t) {
                                return function() {
                                    var e;
                                    return t.focused ? void 0 : (t.focused = !0, null != (e = t.delegate) && "function" == typeof e.compositionControllerDidFocus ? e.compositionControllerDidFocus() : void 0)
                                }
                            }(this), null != (e = null != (n = this.blurPromise) ? n.then(t) : void 0) ? e : t()
                        }, u.prototype.didBlur = function() {
                            return this.blurPromise = new Promise(function(t) {
                                return function(e) {
                                    return n(function() {
                                        var n;
                                        return i(t.element) || (t.focused = null, null != (n = t.delegate) && "function" == typeof n.compositionControllerDidBlur && n.compositionControllerDidBlur()), t.blurPromise = null, e()
                                    })
                                }
                            }(this))
                        }, u.prototype.didClickAttachment = function(t, e) {
                            var n, o;
                            return n = this.findAttachmentForElement(e), null != (o = this.delegate) && "function" == typeof o.compositionControllerDidSelectAttachment ? o.compositionControllerDidSelectAttachment(n) : void 0
                        }, u.prototype.render = function() {
                            var t, e, n;
                            return this.revision !== this.composition.revision && (this.documentView.setDocument(this.composition.document), this.documentView.render(), this.revision = this.composition.revision), this.documentView.isSynced() || (null != (t = this.delegate) && "function" == typeof t.compositionControllerWillSyncDocumentView && t.compositionControllerWillSyncDocumentView(), this.documentView.sync(), this.reinstallAttachmentEditor(), null != (e = this.delegate) && "function" == typeof e.compositionControllerDidSyncDocumentView && e.compositionControllerDidSyncDocumentView()), null != (n = this.delegate) && "function" == typeof n.compositionControllerDidRender ? n.compositionControllerDidRender() : void 0
                        }, u.prototype.rerenderViewForObject = function(t) {
                            return this.invalidateViewForObject(t), this.render()
                        }, u.prototype.invalidateViewForObject = function(t) {
                            return this.documentView.invalidateViewForObject(t)
                        }, u.prototype.isViewCachingEnabled = function() {
                            return this.documentView.isViewCachingEnabled()
                        }, u.prototype.enableViewCaching = function() {
                            return this.documentView.enableViewCaching()
                        }, u.prototype.disableViewCaching = function() {
                            return this.documentView.disableViewCaching()
                        }, u.prototype.refreshViewCache = function() {
                            return this.documentView.garbageCollectCachedViews()
                        }, u.prototype.installAttachmentEditorForAttachment = function(t) {
                            var n, o, i;
                            if ((null != (i = this.attachmentEditor) ? i.attachment : void 0) !== t && (o = this.documentView.findElementForObject(t))) return this.uninstallAttachmentEditor(), n = this.composition.document.getAttachmentPieceForAttachment(t), this.attachmentEditor = new e.AttachmentEditorController(n, o, this.element), this.attachmentEditor.delegate = this
                        }, u.prototype.uninstallAttachmentEditor = function() {
                            var t;
                            return null != (t = this.attachmentEditor) ? t.uninstall() : void 0
                        }, u.prototype.reinstallAttachmentEditor = function() {
                            var t;
                            return this.attachmentEditor ? (t = this.attachmentEditor.attachment, this.uninstallAttachmentEditor(), this.installAttachmentEditorForAttachment(t)) : void 0
                        }, u.prototype.editAttachmentCaption = function() {
                            var t;
                            return null != (t = this.attachmentEditor) ? t.editCaption() : void 0
                        }, u.prototype.didUninstallAttachmentEditor = function() {
                            return this.attachmentEditor = null, this.render()
                        }, u.prototype.attachmentEditorDidRequestUpdatingAttributesForAttachment = function(t, e) {
                            var n;
                            return null != (n = this.delegate) && "function" == typeof n.compositionControllerWillUpdateAttachment && n.compositionControllerWillUpdateAttachment(e), this.composition.updateAttributesForAttachment(t, e)
                        }, u.prototype.attachmentEditorDidRequestRemovingAttributeForAttachment = function(t, e) {
                            var n;
                            return null != (n = this.delegate) && "function" == typeof n.compositionControllerWillUpdateAttachment && n.compositionControllerWillUpdateAttachment(e), this.composition.removeAttributeForAttachment(t, e)
                        }, u.prototype.attachmentEditorDidRequestRemovalOfAttachment = function(t) {
                            var e;
                            return null != (e = this.delegate) && "function" == typeof e.compositionControllerDidRequestRemovalOfAttachment ? e.compositionControllerDidRequestRemovalOfAttachment(t) : void 0
                        }, u.prototype.attachmentEditorDidRequestDeselectingAttachment = function(t) {
                            var e;
                            return null != (e = this.delegate) && "function" == typeof e.compositionControllerDidRequestDeselectingAttachment ? e.compositionControllerDidRequestDeselectingAttachment(t) : void 0
                        }, u.prototype.findAttachmentForElement = function(t) {
                            return this.composition.document.getAttachmentById(parseInt(t.dataset.trixId, 10))
                        }, u
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        r = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) s.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        s = {}.hasOwnProperty;
                    n = e.handleEvent, o = e.triggerEvent, t = e.findClosestElementFromNode, e.ToolbarController = function(e) {
                        function s(t) {
                            this.element = t, this.didKeyDownDialogInput = i(this.didKeyDownDialogInput, this), this.didClickDialogButton = i(this.didClickDialogButton, this), this.didClickAttributeButton = i(this.didClickAttributeButton, this), this.didClickActionButton = i(this.didClickActionButton, this), this.attributes = {}, this.actions = {}, this.resetDialogInputs(), n("mousedown", {
                                onElement: this.element,
                                matchingSelector: a,
                                withCallback: this.didClickActionButton
                            }), n("mousedown", {
                                onElement: this.element,
                                matchingSelector: c,
                                withCallback: this.didClickAttributeButton
                            }), n("click", {
                                onElement: this.element,
                                matchingSelector: y,
                                preventDefault: !0
                            }), n("click", {
                                onElement: this.element,
                                matchingSelector: l,
                                withCallback: this.didClickDialogButton
                            }), n("keydown", {
                                onElement: this.element,
                                matchingSelector: h,
                                withCallback: this.didKeyDownDialogInput
                            })
                        }
                        var a, u, c, l, h, p, d, f, g, m, y;
                        return r(s, e), a = "button[data-trix-action]", c = "button[data-trix-attribute]", y = [a, c].join(", "), p = ".dialog[data-trix-dialog]", u = p + ".active", l = p + " input[data-trix-method]", h = p + " input[type=text], " + p + " input[type=url]", s.prototype.didClickActionButton = function(t, e) {
                            var n, o, i;
                            return null != (o = this.delegate) && o.toolbarDidClickButton(), t.preventDefault(), n = d(e), this.getDialog(n) ? this.toggleDialog(n) : null != (i = this.delegate) ? i.toolbarDidInvokeAction(n) : void 0
                        }, s.prototype.didClickAttributeButton = function(t, e) {
                            var n, o, i;
                            return null != (o = this.delegate) && o.toolbarDidClickButton(), t.preventDefault(), n = f(e), this.getDialog(n) ? this.toggleDialog(n) : null != (i = this.delegate) && i.toolbarDidToggleAttribute(n), this.refreshAttributeButtons()
                        }, s.prototype.didClickDialogButton = function(e, n) {
                            var o, i;
                            return o = t(n, {
                                matchingSelector: p
                            }), i = n.getAttribute("data-trix-method"), this[i].call(this, o)
                        }, s.prototype.didKeyDownDialogInput = function(t, e) {
                            var n, o;
                            return 13 === t.keyCode && (t.preventDefault(), n = e.getAttribute("name"), o = this.getDialog(n), this.setAttribute(o)), 27 === t.keyCode ? (t.preventDefault(), this.hideDialog()) : void 0
                        }, s.prototype.updateActions = function(t) {
                            return this.actions = t, this.refreshActionButtons()
                        }, s.prototype.refreshActionButtons = function() {
                            return this.eachActionButton(function(t) {
                                return function(e, n) {
                                    return e.disabled = t.actions[n] === !1
                                }
                            }(this))
                        }, s.prototype.eachActionButton = function(t) {
                            var e, n, o, i, r;
                            for (i = this.element.querySelectorAll(a), r = [], n = 0, o = i.length; o > n; n++) e = i[n], r.push(t(e, d(e)));
                            return r
                        }, s.prototype.updateAttributes = function(t) {
                            return this.attributes = t, this.refreshAttributeButtons()
                        }, s.prototype.refreshAttributeButtons = function() {
                            return this.eachAttributeButton(function(t) {
                                return function(e, n) {
                                    return e.disabled = t.attributes[n] === !1, t.attributes[n] || t.dialogIsVisible(n) ? e.classList.add("active") : e.classList.remove("active")
                                }
                            }(this))
                        }, s.prototype.eachAttributeButton = function(t) {
                            var e, n, o, i, r;
                            for (i = this.element.querySelectorAll(c), r = [], n = 0, o = i.length; o > n; n++) e = i[n], r.push(t(e, f(e)));
                            return r
                        }, s.prototype.applyKeyboardCommand = function(t) {
                            var e, n, i, r, s, a, u;
                            for (s = JSON.stringify(t.sort()), u = this.element.querySelectorAll("[data-trix-key]"), r = 0, a = u.length; a > r; r++)
                                if (e = u[r], i = e.getAttribute("data-trix-key").split("+"), n = JSON.stringify(i.sort()), n === s) return o("mousedown", {
                                    onElement: e
                                }), !0;
                            return !1
                        }, s.prototype.dialogIsVisible = function(t) {
                            var e;
                            return (e = this.getDialog(t)) ? e.classList.contains("active") : void 0
                        }, s.prototype.toggleDialog = function(t) {
                            return this.dialogIsVisible(t) ? this.hideDialog() : this.showDialog(t)
                        }, s.prototype.showDialog = function(t) {
                            var e, n, o, i, r, s, a, u, c, l;
                            for (this.hideDialog(), null != (a = this.delegate) && a.toolbarWillShowDialog(), o = this.getDialog(t), o.classList.add("active"), u = o.querySelectorAll("input[disabled]"), i = 0, s = u.length; s > i; i++) n = u[i], n.removeAttribute("disabled");
                            return (e = f(o)) && (r = m(o, t)) && (r.value = null != (c = this.attributes[e]) ? c : "", r.select()), null != (l = this.delegate) ? l.toolbarDidShowDialog(t) : void 0
                        }, s.prototype.setAttribute = function(t) {
                            var e, n, o;
                            return e = f(t), n = m(t, e), n.willValidate && !n.checkValidity() ? (n.classList.add("validate"), n.focus()) : (null != (o = this.delegate) && o.toolbarDidUpdateAttribute(e, n.value), this.hideDialog())
                        }, s.prototype.removeAttribute = function(t) {
                            var e, n;
                            return e = f(t), null != (n = this.delegate) && n.toolbarDidRemoveAttribute(e), this.hideDialog()
                        }, s.prototype.hideDialog = function() {
                            var t, e;
                            return (t = this.element.querySelector(u)) ? (t.classList.remove("active"), this.resetDialogInputs(), null != (e = this.delegate) ? e.toolbarDidHideDialog(g(t)) : void 0) : void 0
                        }, s.prototype.resetDialogInputs = function() {
                            var t, e, n, o, i;
                            for (o = this.element.querySelectorAll(h), i = [], t = 0, n = o.length; n > t; t++) e = o[t], e.setAttribute("disabled", "disabled"), i.push(e.classList.remove("validate"));
                            return i
                        }, s.prototype.getDialog = function(t) {
                            return this.element.querySelector(".dialog[data-trix-dialog=" + t + "]")
                        }, m = function(t, e) {
                            return null == e && (e = f(t)), t.querySelector("input[name='" + e + "']")
                        }, d = function(t) {
                            return t.getAttribute("data-trix-action")
                        }, f = function(t) {
                            return t.getAttribute("data-trix-attribute")
                        }, g = function(t) {
                            return t.getAttribute("data-trix-dialog")
                        }, s
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.ImagePreloadOperation = function(e) {
                        function n(t) {
                            this.url = t
                        }
                        return t(n, e), n.prototype.perform = function(t) {
                            var e;
                            return e = new Image, e.onload = function(n) {
                                return function() {
                                    return e.width = n.width = e.naturalWidth, e.height = n.height = e.naturalHeight, t(!0, e)
                                }
                            }(this), e.onerror = function() {
                                return t(!1)
                            }, e.src = this.url
                        }, n
                    }(e.Operation)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        n = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var i in e) o.call(e, i) && (t[i] = e[i]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        o = {}.hasOwnProperty;
                    e.Attachment = function(o) {
                        function i(n) {
                            null == n && (n = {}), this.releaseFile = t(this.releaseFile, this), i.__super__.constructor.apply(this, arguments), this.attributes = e.Hash.box(n), this.didChangeAttributes()
                        }
                        return n(i, o), i.previewablePattern = /^image(\/(gif|png|jpe?g)|$)/, i.attachmentForFile = function(t) {
                            var e, n;
                            return n = this.attributesForFile(t), e = new this(n), e.setFile(t), e
                        }, i.attributesForFile = function(t) {
                            return new e.Hash({
                                filename: t.name,
                                filesize: t.size,
                                contentType: t.type
                            })
                        }, i.fromJSON = function(t) {
                            return new this(t)
                        }, i.prototype.getAttribute = function(t) {
                            return this.attributes.get(t)
                        }, i.prototype.hasAttribute = function(t) {
                            return this.attributes.has(t)
                        }, i.prototype.getAttributes = function() {
                            return this.attributes.toObject()
                        }, i.prototype.setAttributes = function(t) {
                            var e, n;
                            return null == t && (t = {}), e = this.attributes.merge(t), this.attributes.isEqualTo(e) ? void 0 : (this.attributes = e, this.didChangeAttributes(), null != (n = this.delegate) && "function" == typeof n.attachmentDidChangeAttributes ? n.attachmentDidChangeAttributes(this) : void 0)
                        }, i.prototype.didChangeAttributes = function() {
                            return this.isPreviewable() ? this.preloadURL() : void 0
                        }, i.prototype.isPending = function() {
                            return null != this.file && !(this.getURL() || this.getHref())
                        }, i.prototype.isPreviewable = function() {
                            return this.attributes.has("previewable") ? this.attributes.get("previewable") : this.constructor.previewablePattern.test(this.getContentType())
                        }, i.prototype.getType = function() {
                            return this.hasContent() ? "content" : this.isPreviewable() ? "preview" : "file"
                        }, i.prototype.getURL = function() {
                            return this.attributes.get("url")
                        }, i.prototype.getHref = function() {
                            return this.attributes.get("href")
                        }, i.prototype.getFilename = function() {
                            var t;
                            return null != (t = this.attributes.get("filename")) ? t : ""
                        }, i.prototype.getFilesize = function() {
                            return this.attributes.get("filesize")
                        }, i.prototype.getFormattedFilesize = function() {
                            var t;
                            return t = this.attributes.get("filesize"), "number" == typeof t ? e.config.fileSize.formatter(t) : ""
                        }, i.prototype.getExtension = function() {
                            var t;
                            return null != (t = this.getFilename().match(/\.(\w+)$/)) ? t[1].toLowerCase() : void 0
                        }, i.prototype.getContentType = function() {
                            return this.attributes.get("contentType")
                        }, i.prototype.hasContent = function() {
                            return this.attributes.has("content")
                        }, i.prototype.getContent = function() {
                            return this.attributes.get("content")
                        }, i.prototype.getWidth = function() {
                            return this.attributes.get("width")
                        }, i.prototype.getHeight = function() {
                            return this.attributes.get("height")
                        }, i.prototype.getFile = function() {
                            return this.file
                        }, i.prototype.setFile = function(t) {
                            return this.file = t, this.isPreviewable() ? this.preloadFile() : void 0
                        }, i.prototype.releaseFile = function() {
                            return this.releasePreloadedFile(), this.file = null
                        }, i.prototype.getUploadProgress = function() {
                            var t;
                            return null != (t = this.uploadProgress) ? t : 0
                        }, i.prototype.setUploadProgress = function(t) {
                            var e;
                            return this.uploadProgress !== t ? (this.uploadProgress = t, null != (e = this.uploadProgressDelegate) && "function" == typeof e.attachmentDidChangeUploadProgress ? e.attachmentDidChangeUploadProgress(this) : void 0) : void 0
                        }, i.prototype.toJSON = function() {
                            return this.getAttributes()
                        }, i.prototype.getCacheKey = function() {
                            return [i.__super__.getCacheKey.apply(this, arguments), this.attributes.getCacheKey(), this.getPreviewURL()].join("/")
                        }, i.prototype.getPreviewURL = function() {
                            return this.previewURL || this.preloadingURL
                        }, i.prototype.setPreviewURL = function(t) {
                            var e, n;
                            return t !== this.getPreviewURL() ? (this.previewURL = t, null != (e = this.previewDelegate) && "function" == typeof e.attachmentDidChangePreviewURL && e.attachmentDidChangePreviewURL(this), null != (n = this.delegate) && "function" == typeof n.attachmentDidChangePreviewURL ? n.attachmentDidChangePreviewURL(this) : void 0) : void 0
                        }, i.prototype.preloadURL = function() {
                            return this.preload(this.getURL(), this.releaseFile)
                        }, i.prototype.preloadFile = function() {
                            return this.file ? (this.fileObjectURL = URL.createObjectURL(this.file), this.preload(this.fileObjectURL)) : void 0
                        }, i.prototype.releasePreloadedFile = function() {
                            return this.fileObjectURL ? (URL.revokeObjectURL(this.fileObjectURL), this.fileObjectURL = null) : void 0
                        }, i.prototype.preload = function(t, n) {
                            var o;
                            return t && t !== this.getPreviewURL() ? (this.preloadingURL = t, o = new e.ImagePreloadOperation(t), o.then(function(e) {
                                return function(o) {
                                    var i, r;
                                    return r = o.width, i = o.height, e.setAttributes({
                                        width: r,
                                        height: i
                                    }), e.preloadingURL = null, e.setPreviewURL(t), "function" == typeof n ? n() : void 0
                                }
                            }(this))) : void 0
                        }, i
                    }(e.Object)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Piece = function(n) {
                        function o(t, n) {
                            null == n && (n = {}), o.__super__.constructor.apply(this, arguments), this.attributes = e.Hash.box(n)
                        }
                        return t(o, n), o.types = {}, o.registerType = function(t, e) {
                            return e.type = t, this.types[t] = e
                        }, o.fromJSON = function(t) {
                            var e;
                            return (e = this.types[t.type]) ? e.fromJSON(t) : void 0
                        }, o.prototype.copyWithAttributes = function(t) {
                            return new this.constructor(this.getValue(), t)
                        }, o.prototype.copyWithAdditionalAttributes = function(t) {
                            return this.copyWithAttributes(this.attributes.merge(t))
                        }, o.prototype.copyWithoutAttribute = function(t) {
                            return this.copyWithAttributes(this.attributes.remove(t))
                        }, o.prototype.copy = function() {
                            return this.copyWithAttributes(this.attributes)
                        }, o.prototype.getAttribute = function(t) {
                            return this.attributes.get(t)
                        }, o.prototype.getAttributesHash = function() {
                            return this.attributes
                        }, o.prototype.getAttributes = function() {
                            return this.attributes.toObject()
                        }, o.prototype.getCommonAttributes = function() {
                            var t, e, n;
                            return (n = pieceList.getPieceAtIndex(0)) ? (t = n.attributes, e = t.getKeys(), pieceList.eachPiece(function(n) {
                                return e = t.getKeysCommonToHash(n.attributes), t = t.slice(e)
                            }), t.toObject()) : {}
                        }, o.prototype.hasAttribute = function(t) {
                            return this.attributes.has(t)
                        }, o.prototype.hasSameStringValueAsPiece = function(t) {
                            return null != t && this.toString() === t.toString()
                        }, o.prototype.hasSameAttributesAsPiece = function(t) {
                            return null != t && (this.attributes === t.attributes || this.attributes.isEqualTo(t.attributes))
                        }, o.prototype.isBlockBreak = function() {
                            return !1
                        }, o.prototype.isEqualTo = function(t) {
                            return o.__super__.isEqualTo.apply(this, arguments) || this.hasSameConstructorAs(t) && this.hasSameStringValueAsPiece(t) && this.hasSameAttributesAsPiece(t)
                        }, o.prototype.isEmpty = function() {
                            return 0 === this.length
                        }, o.prototype.isSerializable = function() {
                            return !0
                        }, o.prototype.toJSON = function() {
                            return {
                                type: this.constructor.type,
                                attributes: this.getAttributes()
                            }
                        }, o.prototype.contentsForInspection = function() {
                            return {
                                type: this.constructor.type,
                                attributes: this.attributes.inspect()
                            }
                        }, o.prototype.canBeGrouped = function() {
                            return this.hasAttribute("href")
                        }, o.prototype.canBeGroupedWith = function(t) {
                            return this.getAttribute("href") === t.getAttribute("href")
                        }, o.prototype.getLength = function() {
                            return this.length
                        }, o.prototype.canBeConsolidatedWith = function() {
                            return !1
                        }, o
                    }(e.Object)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Piece.registerType("attachment", e.AttachmentPiece = function(n) {
                        function o(t) {
                            this.attachment = t, o.__super__.constructor.apply(this, arguments), this.length = 1, this.ensureAttachmentExclusivelyHasAttribute("href")
                        }
                        return t(o, n), o.fromJSON = function(t) {
                            return new this(e.Attachment.fromJSON(t.attachment), t.attributes)
                        }, o.prototype.ensureAttachmentExclusivelyHasAttribute = function(t) {
                            return this.hasAttribute(t) && this.attachment.hasAttribute(t) ? this.attributes = this.attributes.remove(t) : void 0
                        }, o.prototype.getValue = function() {
                            return this.attachment
                        }, o.prototype.isSerializable = function() {
                            return !this.attachment.isPending()
                        }, o.prototype.getCaption = function() {
                            var t;
                            return null != (t = this.attributes.get("caption")) ? t : ""
                        }, o.prototype.getAttributesForAttachment = function() {
                            return this.attributes.slice(["caption"])
                        }, o.prototype.canBeGrouped = function() {
                            return o.__super__.canBeGrouped.apply(this, arguments) && !this.attachment.hasAttribute("href")
                        }, o.prototype.isEqualTo = function(t) {
                            var e;
                            return o.__super__.isEqualTo.apply(this, arguments) && this.attachment.id === (null != t && null != (e = t.attachment) ? e.id : void 0)
                        }, o.prototype.toString = function() {
                            return e.OBJECT_REPLACEMENT_CHARACTER
                        }, o.prototype.toJSON = function() {
                            var t;
                            return t = o.__super__.toJSON.apply(this, arguments), t.attachment = this.attachment, t
                        }, o.prototype.getCacheKey = function() {
                            return [o.__super__.getCacheKey.apply(this, arguments), this.attachment.getCacheKey()].join("/")
                        }, o.prototype.toConsole = function() {
                            return JSON.stringify(this.toString())
                        }, o
                    }(e.Piece))
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Piece.registerType("string", e.StringPiece = function(e) {
                        function n(t) {
                            n.__super__.constructor.apply(this, arguments), this.string = t, this.length = this.string.length
                        }
                        return t(n, e), n.fromJSON = function(t) {
                            return new this(t.string, t.attributes)
                        }, n.prototype.getValue = function() {
                            return this.string
                        }, n.prototype.toString = function() {
                            return this.string.toString()
                        }, n.prototype.isBlockBreak = function() {
                            return "\n" === this.toString() && this.getAttribute("blockBreak") === !0
                        }, n.prototype.toJSON = function() {
                            var t;
                            return t = n.__super__.toJSON.apply(this, arguments), t.string = this.string, t
                        }, n.prototype.canBeConsolidatedWith = function(t) {
                            return null != t && this.hasSameConstructorAs(t) && this.hasSameAttributesAsPiece(t)
                        }, n.prototype.consolidateWith = function(t) {
                            return new this.constructor(this.toString() + t.toString(), this.attributes)
                        }, n.prototype.splitAtOffset = function(t) {
                            var e, n;
                            return 0 === t ? (e = null, n = this) : t === this.length ? (e = this, n = null) : (e = new this.constructor(this.string.slice(0, t), this.attributes), n = new this.constructor(this.string.slice(t), this.attributes)), [e, n]
                        }, n.prototype.toConsole = function() {
                            var t;
                            return t = this.string, t.length > 15 && (t = t.slice(0, 14) + "\u2026"), JSON.stringify(t.toString())
                        }, n
                    }(e.Piece))
                }.call(this),
                function() {
                    var t, n = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var i in e) o.call(e, i) && (t[i] = e[i]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        o = {}.hasOwnProperty,
                        i = [].slice;
                    t = e.spliceArray, e.SplittableList = function(e) {
                        function o(t) {
                            null == t && (t = []), o.__super__.constructor.apply(this, arguments), this.objects = t.slice(0), this.length = this.objects.length
                        }
                        var r, s, a;
                        return n(o, e), o.box = function(t) {
                            return t instanceof this ? t : new this(t)
                        }, o.prototype.indexOf = function(t) {
                            return this.objects.indexOf(t)
                        }, o.prototype.splice = function() {
                            var e;
                            return e = 1 <= arguments.length ? i.call(arguments, 0) : [], new this.constructor(t.apply(null, [this.objects].concat(i.call(e))))
                        }, o.prototype.eachObject = function(t) {
                            var e, n, o, i, r, s;
                            for (r = this.objects, s = [], n = e = 0, o = r.length; o > e; n = ++e) i = r[n], s.push(t(i, n));
                            return s
                        }, o.prototype.insertObjectAtIndex = function(t, e) {
                            return this.splice(e, 0, t)
                        }, o.prototype.insertSplittableListAtIndex = function(t, e) {
                            return this.splice.apply(this, [e, 0].concat(i.call(t.objects)))
                        }, o.prototype.insertSplittableListAtPosition = function(t, e) {
                            var n, o, i;
                            return i = this.splitObjectAtPosition(e), o = i[0], n = i[1], new this.constructor(o).insertSplittableListAtIndex(t, n)
                        }, o.prototype.editObjectAtIndex = function(t, e) {
                            return this.replaceObjectAtIndex(e(this.objects[t]), t)
                        }, o.prototype.replaceObjectAtIndex = function(t, e) {
                            return this.splice(e, 1, t)
                        }, o.prototype.removeObjectAtIndex = function(t) {
                            return this.splice(t, 1)
                        }, o.prototype.getObjectAtIndex = function(t) {
                            return this.objects[t]
                        }, o.prototype.getSplittableListInRange = function(t) {
                            var e, n, o, i;
                            return o = this.splitObjectsAtRange(t), n = o[0], e = o[1], i = o[2], new this.constructor(n.slice(e, i + 1))
                        }, o.prototype.selectSplittableList = function(t) {
                            var e, n;
                            return n = function() {
                                var n, o, i, r;
                                for (i = this.objects, r = [], n = 0, o = i.length; o > n; n++) e = i[n], t(e) && r.push(e);
                                return r
                            }.call(this), new this.constructor(n)
                        }, o.prototype.removeObjectsInRange = function(t) {
                            var e, n, o, i;
                            return o = this.splitObjectsAtRange(t), n = o[0], e = o[1], i = o[2], new this.constructor(n).splice(e, i - e + 1)
                        }, o.prototype.transformObjectsInRange = function(t, e) {
                            var n, o, i, r, s, a, u;
                            return s = this.splitObjectsAtRange(t), r = s[0], o = s[1], a = s[2], u = function() {
                                var t, s, u;
                                for (u = [], n = t = 0, s = r.length; s > t; n = ++t) i = r[n], u.push(n >= o && a >= n ? e(i) : i);
                                return u
                            }(), new this.constructor(u)
                        }, o.prototype.splitObjectsAtRange = function(t) {
                            var e, n, o, i, s, u;
                            return i = this.splitObjectAtPosition(a(t)), n = i[0], e = i[1], o = i[2], s = new this.constructor(n).splitObjectAtPosition(r(t) + o), n = s[0], u = s[1], [n, e, u - 1]
                        }, o.prototype.getObjectAtPosition = function(t) {
                            var e, n, o;
                            return o = this.findIndexAndOffsetAtPosition(t), e = o.index, n = o.offset, this.objects[e]
                        }, o.prototype.splitObjectAtPosition = function(t) {
                            var e, n, o, i, r, s, a, u, c, l;
                            return s = this.findIndexAndOffsetAtPosition(t), e = s.index, r = s.offset, i = this.objects.slice(0), null != e ? 0 === r ? (c = e, l = 0) : (o = this.getObjectAtIndex(e), a = o.splitAtOffset(r), n = a[0], u = a[1], i.splice(e, 1, n, u), c = e + 1, l = n.getLength() - r) : (c = i.length, l = 0), [i, c, l]
                        }, o.prototype.consolidate = function() {
                            var t, e, n, o, i, r;
                            for (o = [], i = this.objects[0], r = this.objects.slice(1), t = 0, e = r.length; e > t; t++) n = r[t], ("function" == typeof i.canBeConsolidatedWith ? i.canBeConsolidatedWith(n) : void 0) ? i = i.consolidateWith(n) : (o.push(i), i = n);
                            return null != i && o.push(i), new this.constructor(o)
                        }, o.prototype.consolidateFromIndexToIndex = function(t, e) {
                            var n, o, r;
                            return o = this.objects.slice(0), r = o.slice(t, e + 1), n = new this.constructor(r).consolidate().toArray(), this.splice.apply(this, [t, r.length].concat(i.call(n)))
                        }, o.prototype.findIndexAndOffsetAtPosition = function(t) {
                            var e, n, o, i, r, s, a;
                            for (e = 0, a = this.objects, o = n = 0, i = a.length; i > n; o = ++n) {
                                if (s = a[o], r = e + s.getLength(), t >= e && r > t) return {
                                    index: o,
                                    offset: t - e
                                };
                                e = r
                            }
                            return {
                                index: null,
                                offset: null
                            }
                        }, o.prototype.findPositionAtIndexAndOffset = function(t, e) {
                            var n, o, i, r, s, a;
                            for (s = 0, a = this.objects, n = o = 0, i = a.length; i > o; n = ++o)
                                if (r = a[n], t > n) s += r.getLength();
                                else if (n === t) {
                                s += e;
                                break
                            }
                            return s
                        }, o.prototype.getEndPosition = function() {
                            var t, e;
                            return null != this.endPosition ? this.endPosition : this.endPosition = function() {
                                var n, o, i;
                                for (e = 0, i = this.objects, n = 0, o = i.length; o > n; n++) t = i[n], e += t.getLength();
                                return e
                            }.call(this)
                        }, o.prototype.toString = function() {
                            return this.objects.join("")
                        }, o.prototype.toArray = function() {
                            return this.objects.slice(0)
                        }, o.prototype.toJSON = function() {
                            return this.toArray()
                        }, o.prototype.isEqualTo = function(t) {
                            return o.__super__.isEqualTo.apply(this, arguments) || s(this.objects, null != t ? t.objects : void 0)
                        }, s = function(t, e) {
                            var n, o, i, r, s;
                            if (null == e && (e = []), t.length !== e.length) return !1;
                            for (s = !0, o = n = 0, i = t.length; i > n; o = ++n) r = t[o], s && !r.isEqualTo(e[o]) && (s = !1);
                            return s
                        }, o.prototype.contentsForInspection = function() {
                            var t;
                            return {
                                objects: "[" + function() {
                                    var e, n, o, i;
                                    for (o = this.objects, i = [], e = 0, n = o.length; n > e; e++) t = o[e], i.push(t.inspect());
                                    return i
                                }.call(this).join(", ") + "]"
                            }
                        }, a = function(t) {
                            return t[0]
                        }, r = function(t) {
                            return t[1]
                        }, o
                    }(e.Object)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.Text = function(n) {
                        function o(t) {
                            var n;
                            null == t && (t = []), o.__super__.constructor.apply(this, arguments), this.pieceList = new e.SplittableList(function() {
                                var e, o, i;
                                for (i = [], e = 0, o = t.length; o > e; e++) n = t[e], n.isEmpty() || i.push(n);
                                return i
                            }())
                        }
                        return t(o, n), o.textForAttachmentWithAttributes = function(t, n) {
                            var o;
                            return o = new e.AttachmentPiece(t, n), new this([o])
                        }, o.textForStringWithAttributes = function(t, n) {
                            var o;
                            return o = new e.StringPiece(t, n), new this([o])
                        }, o.fromJSON = function(t) {
                            var n, o;
                            return o = function() {
                                var o, i, r;
                                for (r = [], o = 0, i = t.length; i > o; o++) n = t[o], r.push(e.Piece.fromJSON(n));
                                return r
                            }(), new this(o)
                        }, o.prototype.copy = function() {
                            return this.copyWithPieceList(this.pieceList)
                        }, o.prototype.copyWithPieceList = function(t) {
                            return new this.constructor(t.consolidate().toArray())
                        }, o.prototype.copyUsingObjectMap = function(t) {
                            var e, n;
                            return n = function() {
                                var n, o, i, r, s;
                                for (i = this.getPieces(), s = [], n = 0, o = i.length; o > n; n++) e = i[n], s.push(null != (r = t.find(e)) ? r : e);
                                return s
                            }.call(this), new this.constructor(n)
                        }, o.prototype.appendText = function(t) {
                            return this.insertTextAtPosition(t, this.getLength())
                        }, o.prototype.insertTextAtPosition = function(t, e) {
                            return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(t.pieceList, e))
                        }, o.prototype.removeTextAtRange = function(t) {
                            return this.copyWithPieceList(this.pieceList.removeObjectsInRange(t))
                        }, o.prototype.replaceTextAtRange = function(t, e) {
                            return this.removeTextAtRange(e).insertTextAtPosition(t, e[0])
                        }, o.prototype.moveTextFromRangeToPosition = function(t, e) {
                            var n, o;
                            if (!(t[0] <= e && e <= t[1])) return o = this.getTextAtRange(t), n = o.getLength(), t[0] < e && (e -= n), this.removeTextAtRange(t).insertTextAtPosition(o, e)
                        }, o.prototype.addAttributeAtRange = function(t, e, n) {
                            var o;
                            return o = {}, o[t] = e, this.addAttributesAtRange(o, n)
                        }, o.prototype.addAttributesAtRange = function(t, e) {
                            return this.copyWithPieceList(this.pieceList.transformObjectsInRange(e, function(e) {
                                return e.copyWithAdditionalAttributes(t)
                            }))
                        }, o.prototype.removeAttributeAtRange = function(t, e) {
                            return this.copyWithPieceList(this.pieceList.transformObjectsInRange(e, function(e) {
                                return e.copyWithoutAttribute(t)
                            }))
                        }, o.prototype.setAttributesAtRange = function(t, e) {
                            return this.copyWithPieceList(this.pieceList.transformObjectsInRange(e, function(e) {
                                return e.copyWithAttributes(t)
                            }))
                        }, o.prototype.getAttributesAtPosition = function(t) {
                            var e, n;
                            return null != (e = null != (n = this.pieceList.getObjectAtPosition(t)) ? n.getAttributes() : void 0) ? e : {}
                        }, o.prototype.getCommonAttributes = function() {
                            var t, n;
                            return t = function() {
                                var t, e, o, i;
                                for (o = this.pieceList.toArray(), i = [], t = 0, e = o.length; e > t; t++) n = o[t], i.push(n.getAttributes());
                                return i
                            }.call(this), e.Hash.fromCommonAttributesOfObjects(t).toObject()
                        }, o.prototype.getCommonAttributesAtRange = function(t) {
                            var e;
                            return null != (e = this.getTextAtRange(t).getCommonAttributes()) ? e : {}
                        }, o.prototype.getExpandedRangeForAttributeAtOffset = function(t, e) {
                            var n, o, i;
                            for (n = i = e, o = this.getLength(); n > 0 && this.getCommonAttributesAtRange([n - 1, i])[t];) n--;
                            for (; o > i && this.getCommonAttributesAtRange([e, i + 1])[t];) i++;
                            return [n, i]
                        }, o.prototype.getTextAtRange = function(t) {
                            return this.copyWithPieceList(this.pieceList.getSplittableListInRange(t))
                        }, o.prototype.getStringAtRange = function(t) {
                            return this.pieceList.getSplittableListInRange(t).toString()
                        }, o.prototype.getStringAtPosition = function(t) {
                            return this.getStringAtRange([t, t + 1])
                        }, o.prototype.startsWithString = function(t) {
                            return this.getStringAtRange([0, t.length]) === t
                        }, o.prototype.endsWithString = function(t) {
                            var e;
                            return e = this.getLength(), this.getStringAtRange([e - t.length, e]) === t
                        }, o.prototype.getAttachmentPieces = function() {
                            var t, e, n, o, i;
                            for (o = this.pieceList.toArray(), i = [], t = 0, e = o.length; e > t; t++) n = o[t], null != n.attachment && i.push(n);
                            return i
                        }, o.prototype.getAttachments = function() {
                            var t, e, n, o, i;
                            for (o = this.getAttachmentPieces(), i = [], t = 0, e = o.length; e > t; t++) n = o[t], i.push(n.attachment);
                            return i
                        }, o.prototype.getAttachmentAndPositionById = function(t) {
                            var e, n, o, i, r, s;
                            for (i = 0, r = this.pieceList.toArray(), e = 0, n = r.length; n > e; e++) {
                                if (o = r[e], (null != (s = o.attachment) ? s.id : void 0) === t) return {
                                    attachment: o.attachment,
                                    position: i
                                };
                                i += o.length
                            }
                            return {
                                attachment: null,
                                position: null
                            }
                        }, o.prototype.getAttachmentById = function(t) {
                            var e, n, o;
                            return o = this.getAttachmentAndPositionById(t), e = o.attachment, n = o.position, e
                        }, o.prototype.getRangeOfAttachment = function(t) {
                            var e, n;
                            return n = this.getAttachmentAndPositionById(t.id), t = n.attachment, e = n.position, null != t ? [e, e + 1] : void 0
                        }, o.prototype.updateAttributesForAttachment = function(t, e) {
                            var n;
                            return (n = this.getRangeOfAttachment(e)) ? this.addAttributesAtRange(t, n) : this
                        }, o.prototype.getLength = function() {
                            return this.pieceList.getEndPosition()
                        }, o.prototype.isEmpty = function() {
                            return 0 === this.getLength()
                        }, o.prototype.isEqualTo = function(t) {
                            var e;
                            return o.__super__.isEqualTo.apply(this, arguments) || (null != t && null != (e = t.pieceList) ? e.isEqualTo(this.pieceList) : void 0)
                        }, o.prototype.isBlockBreak = function() {
                            return 1 === this.getLength() && this.pieceList.getObjectAtIndex(0).isBlockBreak()
                        }, o.prototype.eachPiece = function(t) {
                            return this.pieceList.eachObject(t)
                        }, o.prototype.getPieces = function() {
                            return this.pieceList.toArray()
                        }, o.prototype.getPieceAtPosition = function(t) {
                            return this.pieceList.getObjectAtPosition(t)
                        }, o.prototype.contentsForInspection = function() {
                            return {
                                pieceList: this.pieceList.inspect()
                            }
                        }, o.prototype.toSerializableText = function() {
                            var t;
                            return t = this.pieceList.selectSplittableList(function(t) {
                                return t.isSerializable()
                            }), this.copyWithPieceList(t)
                        }, o.prototype.toString = function() {
                            return this.pieceList.toString()
                        }, o.prototype.toJSON = function() {
                            return this.pieceList.toJSON()
                        }, o.prototype.toConsole = function() {
                            var t;
                            return JSON.stringify(function() {
                                var e, n, o, i;
                                for (o = this.pieceList.toArray(), i = [], e = 0, n = o.length; n > e; e++) t = o[e], i.push(JSON.parse(t.toConsole()));
                                return i
                            }.call(this))
                        }, o
                    }(e.Object)
                }.call(this),
                function() {
                    var t, n, o, i, r, s = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) a.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        a = {}.hasOwnProperty,
                        u = [].slice,
                        c = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    t = e.arraysAreEqual, r = e.spliceArray, o = e.getBlockConfig, n = e.getBlockAttributeNames, i = e.getListAttributeNames, e.Block = function(n) {
                        function a(t, n) {
                            null == t && (t = new e.Text), null == n && (n = []), a.__super__.constructor.apply(this, arguments), this.text = h(t), this.attributes = n
                        }
                        var l, h, p, d, f, g, m, y, v;
                        return s(a, n), a.fromJSON = function(t) {
                            var n;
                            return n = e.Text.fromJSON(t.text), new this(n, t.attributes)
                        }, a.prototype.isEmpty = function() {
                            return this.text.isBlockBreak()
                        }, a.prototype.isEqualTo = function(e) {
                            return a.__super__.isEqualTo.apply(this, arguments) || this.text.isEqualTo(null != e ? e.text : void 0) && t(this.attributes, null != e ? e.attributes : void 0)
                        }, a.prototype.copyWithText = function(t) {
                            return new this.constructor(t, this.attributes)
                        }, a.prototype.copyWithoutText = function() {
                            return this.copyWithText(null)
                        }, a.prototype.copyWithAttributes = function(t) {
                            return new this.constructor(this.text, t)
                        }, a.prototype.copyUsingObjectMap = function(t) {
                            var e;
                            return this.copyWithText((e = t.find(this.text)) ? e : this.text.copyUsingObjectMap(t))
                        }, a.prototype.addAttribute = function(t) {
                            var e;
                            return e = this.attributes.concat(d(t)), this.copyWithAttributes(e)
                        }, a.prototype.removeAttribute = function(t) {
                            var e, n;
                            return n = o(t).listAttribute, e = g(g(this.attributes, t), n), this.copyWithAttributes(e)
                        }, a.prototype.removeLastAttribute = function() {
                            return this.removeAttribute(this.getLastAttribute())
                        }, a.prototype.getLastAttribute = function() {
                            return f(this.attributes)
                        }, a.prototype.getAttributes = function() {
                            return this.attributes.slice(0)
                        }, a.prototype.getAttributeLevel = function() {
                            return this.attributes.length
                        }, a.prototype.getAttributeAtLevel = function(t) {
                            return this.attributes[t - 1]
                        }, a.prototype.hasAttributes = function() {
                            return this.getAttributeLevel() > 0
                        }, a.prototype.getLastNestableAttribute = function() {
                            return f(this.getNestableAttributes())
                        }, a.prototype.getNestableAttributes = function() {
                            var t, e, n, i, r;
                            for (i = this.attributes, r = [], e = 0, n = i.length; n > e; e++) t = i[e], o(t).nestable && r.push(t);
                            return r
                        }, a.prototype.getNestingLevel = function() {
                            return this.getNestableAttributes().length
                        }, a.prototype.decreaseNestingLevel = function() {
                            var t;
                            return (t = this.getLastNestableAttribute()) ? this.removeAttribute(t) : this
                        }, a.prototype.increaseNestingLevel = function() {
                            var t, e, n;
                            return (t = this.getLastNestableAttribute()) ? (n = this.attributes.lastIndexOf(t), e = r.apply(null, [this.attributes, n + 1, 0].concat(u.call(d(t)))), this.copyWithAttributes(e)) : this
                        }, a.prototype.getListItemAttributes = function() {
                            var t, e, n, i, r;
                            for (i = this.attributes, r = [], e = 0, n = i.length; n > e; e++) t = i[e], o(t).listAttribute && r.push(t);
                            return r
                        }, a.prototype.isListItem = function() {
                            var t;
                            return null != (t = o(this.getLastAttribute())) ? t.listAttribute : void 0
                        }, a.prototype.isTerminalBlock = function() {
                            var t;
                            return null != (t = o(this.getLastAttribute())) ? t.terminal : void 0
                        }, a.prototype.breaksOnReturn = function() {
                            var t;
                            return null != (t = o(this.getLastAttribute())) ? t.breakOnReturn : void 0
                        }, a.prototype.findLineBreakInDirectionFromPosition = function(t, e) {
                            var n, o;
                            return o = this.toString(), n = function() {
                                switch (t) {
                                    case "forward":
                                        return o.indexOf("\n", e);
                                    case "backward":
                                        return o.slice(0, e).lastIndexOf("\n")
                                }
                            }(), -1 !== n ? n : void 0
                        }, a.prototype.contentsForInspection = function() {
                            return {
                                text: this.text.inspect(),
                                attributes: this.attributes
                            }
                        }, a.prototype.toString = function() {
                            return this.text.toString()
                        }, a.prototype.toJSON = function() {
                            return {
                                text: this.text,
                                attributes: this.attributes
                            }
                        }, a.prototype.getLength = function() {
                            return this.text.getLength()
                        }, a.prototype.canBeConsolidatedWith = function(t) {
                            return !this.hasAttributes() && !t.hasAttributes()
                        }, a.prototype.consolidateWith = function(t) {
                            var n, o;
                            return n = e.Text.textForStringWithAttributes("\n"), o = this.getTextWithoutBlockBreak().appendText(n), this.copyWithText(o.appendText(t.text))
                        }, a.prototype.splitAtOffset = function(t) {
                            var e, n;
                            return 0 === t ? (e = null, n = this) : t === this.getLength() ? (e = this, n = null) : (e = this.copyWithText(this.text.getTextAtRange([0, t])), n = this.copyWithText(this.text.getTextAtRange([t, this.getLength()]))), [e, n]
                        }, a.prototype.getBlockBreakPosition = function() {
                            return this.text.getLength() - 1
                        }, a.prototype.getTextWithoutBlockBreak = function() {
                            return m(this.text) ? this.text.getTextAtRange([0, this.getBlockBreakPosition()]) : this.text.copy()
                        }, a.prototype.canBeGrouped = function(t) {
                            return this.attributes[t]
                        }, a.prototype.canBeGroupedWith = function(t, e) {
                            var n, r, s, a;
                            return s = t.getAttributes(), r = s[e], n = this.attributes[e], n === r && !(o(n).group === !1 && (a = s[e + 1], c.call(i(), a) < 0))
                        }, h = function(t) {
                            return t = v(t), t = l(t)
                        }, v = function(t) {
                            var n, o, i, r, s, a;
                            return r = !1, a = t.getPieces(), o = 2 <= a.length ? u.call(a, 0, n = a.length - 1) : (n = 0, []), i = a[n++], null == i ? t : (o = function() {
                                var t, e, n;
                                for (n = [], t = 0, e = o.length; e > t; t++) s = o[t], s.isBlockBreak() ? (r = !0, n.push(y(s))) : n.push(s);
                                return n
                            }(), r ? new e.Text(u.call(o).concat([i])) : t)
                        }, p = e.Text.textForStringWithAttributes("\n", {
                            blockBreak: !0
                        }), l = function(t) {
                            return m(t) ? t : t.appendText(p)
                        }, m = function(t) {
                            var e, n;
                            return n = t.getLength(), 0 === n ? !1 : (e = t.getTextAtRange([n - 1, n]), e.isBlockBreak())
                        }, y = function(t) {
                            return t.copyWithoutAttribute("blockBreak")
                        }, d = function(t) {
                            var e;
                            return e = o(t).listAttribute, null != e ? [e, t] : [t]
                        }, f = function(t) {
                            return t.slice(-1)[0]
                        }, g = function(t, e) {
                            var n;
                            return n = t.lastIndexOf(e), -1 === n ? t : r(t, n, 1)
                        }, a
                    }(e.Object)
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a, u, c, l = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) h.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        h = {}.hasOwnProperty,
                        p = [].slice,
                        d = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    t = e.arraysAreEqual, a = e.normalizeSpaces, r = e.makeElement, u = e.tagName, i = e.getBlockTagNames, c = e.walkTree, o = e.findClosestElementFromNode, n = e.elementContainsNode, s = e.nodeIsAttachmentElement, e.HTMLParser = function(h) {
                        function f(t, e) {
                            this.html = t, this.referenceElement = (null != e ? e : {}).referenceElement, this.blocks = [], this.blockElements = [], this.processedElements = []
                        }
                        var g, m, y, v, b, A, C, w, x, E, S, k, R, L, D, O;
                        return l(f, h), g = "style href src width height class".split(" "), f.parse = function(t, e) {
                            var n;
                            return n = new this(t, e), n.parse(), n
                        }, f.prototype.getDocument = function() {
                            return e.Document.fromJSON(this.blocks)
                        }, f.prototype.parse = function() {
                            var t, e;
                            try {
                                for (this.createHiddenContainer(), t = R(this.html), this.containerElement.innerHTML = t, e = c(this.containerElement, {
                                        usingFilter: E
                                    }); e.nextNode();) this.processNode(e.currentNode);
                                return this.translateBlockElementMarginsToNewlines()
                            } finally {
                                this.removeHiddenContainer()
                            }
                        }, f.prototype.createHiddenContainer = function() {
                            return this.referenceElement ? (this.containerElement = this.referenceElement.cloneNode(!1), this.containerElement.removeAttribute("id"), this.containerElement.setAttribute("data-trix-internal", ""), this.containerElement.style.display = "none", this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)) : (this.containerElement = r({
                                tagName: "div",
                                style: {
                                    display: "none"
                                }
                            }), document.body.appendChild(this.containerElement))
                        }, f.prototype.removeHiddenContainer = function() {
                            return this.containerElement.parentNode.removeChild(this.containerElement)
                        }, R = function(t) {
                            var e, n, o, i, r, s, a, u, l, h, f, m, y, v, A, C;
                            for (t = t.replace(/<\/html[^>]*>[^]*$/i, "</html>"), n = document.implementation.createHTMLDocument(""), n.documentElement.innerHTML = t, e = n.body, o = n.head, y = o.querySelectorAll("style"), i = 0, a = y.length; a > i; i++) A = y[i], e.appendChild(A);
                            for (m = [], C = c(e); C.nextNode();) switch (f = C.currentNode, f.nodeType) {
                                case Node.ELEMENT_NODE:
                                    if (b(f)) m.push(f);
                                    else
                                        for (v = p.call(f.attributes), r = 0, u = v.length; u > r; r++) h = v[r].name, d.call(g, h) >= 0 || 0 === h.indexOf("data-trix") || f.removeAttribute(h);
                                    break;
                                case Node.COMMENT_NODE:
                                    m.push(f)
                            }
                            for (s = 0, l = m.length; l > s; s++) f = m[s], f.parentNode.removeChild(f);
                            return e.innerHTML
                        }, b = function(t) {
                            return (null != t ? t.nodeType : void 0) !== Node.ELEMENT_NODE || s(t) ? void 0 : "script" === u(t) || "false" === t.getAttribute("data-trix-serialize")
                        }, E = function(t) {
                            return "style" === u(t) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT
                        }, f.prototype.processNode = function(t) {
                            switch (t.nodeType) {
                                case Node.TEXT_NODE:
                                    return this.processTextNode(t);
                                case Node.ELEMENT_NODE:
                                    return this.appendBlockForElement(t), this.processElement(t)
                            }
                        }, f.prototype.appendBlockForElement = function(e) {
                            var o, i, r, s;
                            if (r = this.isBlockElement(e), i = n(this.currentBlockElement, e), r && !this.isBlockElement(e.firstChild)) {
                                if (!(this.isInsignificantTextNode(e.firstChild) && this.isBlockElement(e.firstElementChild) || (o = this.getBlockAttributes(e), i && t(o, this.currentBlock.attributes)))) return this.currentBlock = this.appendBlockForAttributesWithElement(o, e), this.currentBlockElement = e
                            } else if (this.currentBlockElement && !i && !r) return (s = this.findParentBlockElement(e)) ? this.appendBlockForElement(s) : (this.currentBlock = this.appendEmptyBlock(), this.currentBlockElement = null)
                        }, f.prototype.findParentBlockElement = function(t) {
                            var e;
                            for (e = t.parentElement; e && e !== this.containerElement;) {
                                if (this.isBlockElement(e) && d.call(this.blockElements, e) >= 0) return e;
                                e = e.parentElement
                            }
                            return null
                        }, f.prototype.processTextNode = function(t) {
                            var e, n;
                            return this.isInsignificantTextNode(t) ? void 0 : (n = t.data, v(t.parentNode) || (n = L(n), D(null != (e = t.previousSibling) ? e.textContent : void 0) && (n = x(n))), this.appendStringWithAttributes(n, this.getTextAttributes(t.parentNode)))
                        }, f.prototype.processElement = function(t) {
                            var e, n, o, i, r;
                            if (s(t)) return e = A(t), Object.keys(e).length && (i = this.getTextAttributes(t), this.appendAttachmentWithAttributes(e, i), t.innerHTML = ""), this.processedElements.push(t);
                            switch (u(t)) {
                                case "br":
                                    return this.isExtraBR(t) || this.isBlockElement(t.nextSibling) || this.appendStringWithAttributes("\n", this.getTextAttributes(t)), this.processedElements.push(t);
                                case "img":
                                    e = {
                                        url: t.getAttribute("src"),
                                        contentType: "image"
                                    }, o = w(t);
                                    for (n in o) r = o[n], e[n] = r;
                                    return this.appendAttachmentWithAttributes(e, this.getTextAttributes(t)), this.processedElements.push(t);
                                case "tr":
                                    if (t.parentNode.firstChild !== t) return this.appendStringWithAttributes("\n");
                                    break;
                                case "td":
                                    if (t.parentNode.firstChild !== t) return this.appendStringWithAttributes(" | ")
                            }
                        }, f.prototype.appendBlockForAttributesWithElement = function(t, e) {
                            var n;
                            return this.blockElements.push(e), n = m(t), this.blocks.push(n), n
                        }, f.prototype.appendEmptyBlock = function() {
                            return this.appendBlockForAttributesWithElement([], null)
                        }, f.prototype.appendStringWithAttributes = function(t, e) {
                            return this.appendPiece(k(t, e))
                        }, f.prototype.appendAttachmentWithAttributes = function(t, e) {
                            return this.appendPiece(S(t, e))
                        }, f.prototype.appendPiece = function(t) {
                            return 0 === this.blocks.length && this.appendEmptyBlock(), this.blocks[this.blocks.length - 1].text.push(t)
                        }, f.prototype.appendStringToTextAtIndex = function(t, e) {
                            var n, o;
                            return o = this.blocks[e].text, n = o[o.length - 1], "string" === (null != n ? n.type : void 0) ? n.string += t : o.push(k(t))
                        }, f.prototype.prependStringToTextAtIndex = function(t, e) {
                            var n, o;
                            return o = this.blocks[e].text, n = o[0], "string" === (null != n ? n.type : void 0) ? n.string = t + n.string : o.unshift(k(t))
                        }, k = function(t, e) {
                            var n;
                            return null == e && (e = {}), n = "string", t = a(t), {
                                string: t,
                                attributes: e,
                                type: n
                            }
                        }, S = function(t, e) {
                            var n;
                            return null == e && (e = {}), n = "attachment", {
                                attachment: t,
                                attributes: e,
                                type: n
                            }
                        }, m = function(t) {
                            var e;
                            return null == t && (t = {}), e = [], {
                                text: e,
                                attributes: t
                            }
                        }, f.prototype.getTextAttributes = function(t) {
                            var n, i, r, a, u, c, l, h, p, d, f, g, m;
                            r = {}, d = e.config.textAttributes;
                            for (n in d)
                                if (u = d[n], u.tagName && o(t, {
                                        matchingSelector: u.tagName,
                                        untilNode: this.containerElement
                                    })) r[n] = !0;
                                else if (u.parser && (m = u.parser(t))) {
                                for (i = !1, f = this.findBlockElementAncestors(t), c = 0, p = f.length; p > c; c++)
                                    if (a = f[c], u.parser(a) === m) {
                                        i = !0;
                                        break
                                    }
                                i || (r[n] = m)
                            }
                            if (s(t) && (l = t.getAttribute("data-trix-attributes"))) {
                                g = JSON.parse(l);
                                for (h in g) m = g[h], r[h] = m
                            }
                            return r
                        }, f.prototype.getBlockAttributes = function(t) {
                            var n, o, i, r;
                            for (o = []; t && t !== this.containerElement;) {
                                r = e.config.blockAttributes;
                                for (n in r) i = r[n], i.parse !== !1 && u(t) === i.tagName && (("function" == typeof i.test ? i.test(t) : void 0) || !i.test) && (o.push(n), i.listAttribute && o.push(i.listAttribute));
                                t = t.parentNode
                            }
                            return o.reverse()
                        }, f.prototype.findBlockElementAncestors = function(t) {
                            var e, n;
                            for (e = []; t && t !== this.containerElement;) n = u(t), d.call(i(), n) >= 0 && e.push(t), t = t.parentNode;
                            return e
                        }, A = function(t) {
                            return JSON.parse(t.getAttribute("data-trix-attachment"))
                        }, w = function(t) {
                            var e, n, o;
                            return o = t.getAttribute("width"), n = t.getAttribute("height"), e = {}, o && (e.width = parseInt(o, 10)), n && (e.height = parseInt(n, 10)), e
                        }, f.prototype.isBlockElement = function(t) {
                            var e;
                            if ((null != t ? t.nodeType : void 0) === Node.ELEMENT_NODE && !o(t, {
                                    matchingSelector: "td",
                                    untilNode: this.containerElement
                                })) return e = u(t), d.call(i(), e) >= 0 || "block" === window.getComputedStyle(t).display
                        }, f.prototype.isInsignificantTextNode = function(t) {
                            return (null != t ? t.nodeType : void 0) === Node.TEXT_NODE && O(t.data) && !v(t.parentNode) ? !t.previousSibling || this.isBlockElement(t.previousSibling) || !t.nextSibling || this.isBlockElement(t.nextSibling) : void 0
                        }, f.prototype.isExtraBR = function(t) {
                            return "br" === u(t) && this.isBlockElement(t.parentNode) && t.parentNode.lastChild === t
                        }, v = function(t) {
                            var e;
                            return e = window.getComputedStyle(t).whiteSpace, "pre" === e || "pre-wrap" === e || "pre-line" === e
                        }, f.prototype.translateBlockElementMarginsToNewlines = function() {
                            var t, e, n, o, i, r, s, a;
                            for (e = this.getMarginOfDefaultBlockElement(), s = this.blocks, a = [], o = n = 0, i = s.length; i > n; o = ++n) t = s[o], (r = this.getMarginOfBlockElementAtIndex(o)) && (r.top > 2 * e.top && this.prependStringToTextAtIndex("\n", o), a.push(r.bottom > 2 * e.bottom ? this.appendStringToTextAtIndex("\n", o) : void 0));
                            return a
                        }, f.prototype.getMarginOfBlockElementAtIndex = function(t) {
                            var e, n;
                            return !(e = this.blockElements[t]) || (n = u(e), d.call(i(), n) >= 0 || d.call(this.processedElements, e) >= 0) ? void 0 : C(e)
                        }, f.prototype.getMarginOfDefaultBlockElement = function() {
                            var t;
                            return t = r(e.config.blockAttributes["default"].tagName), this.containerElement.appendChild(t), C(t)
                        }, C = function(t) {
                            var e;
                            return e = window.getComputedStyle(t), "block" === e.display ? {
                                top: parseInt(e.marginTop),
                                bottom: parseInt(e.marginBottom)
                            } : void 0
                        }, y = RegExp("[^\\S" + e.NON_BREAKING_SPACE + "]"), L = function(t) {
                            return t.replace(RegExp("" + y.source, "g"), " ").replace(/\ {2,}/g, " ")
                        }, x = function(t) {
                            return t.replace(RegExp("^" + y.source + "+"), "")
                        }, O = function(t) {
                            return RegExp("^" + y.source + "*$").test(t)
                        }, D = function(t) {
                            return /\s$/.test(t)
                        }, f
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i, r = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) s.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        s = {}.hasOwnProperty,
                        a = [].slice,
                        u = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    t = e.arraysAreEqual, o = e.normalizeRange, i = e.rangeIsCollapsed, n = e.getBlockConfig, e.Document = function(s) {
                        function c(t) {
                            null == t && (t = []), c.__super__.constructor.apply(this, arguments), 0 === t.length && (t = [new e.Block]), this.blockList = e.SplittableList.box(t)
                        }
                        var l;
                        return r(c, s), c.fromJSON = function(t) {
                            var n, o;
                            return o = function() {
                                var o, i, r;
                                for (r = [], o = 0, i = t.length; i > o; o++) n = t[o], r.push(e.Block.fromJSON(n));
                                return r
                            }(), new this(o)
                        }, c.fromHTML = function(t, n) {
                            return e.HTMLParser.parse(t, n).getDocument()
                        }, c.fromString = function(t, n) {
                            var o;
                            return o = e.Text.textForStringWithAttributes(t, n), new this([new e.Block(o)])
                        }, c.prototype.isEmpty = function() {
                            var t;
                            return 1 === this.blockList.length && (t = this.getBlockAtIndex(0), t.isEmpty() && !t.hasAttributes())
                        }, c.prototype.copy = function(t) {
                            var e;
                            return null == t && (t = {}), e = t.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray(), new this.constructor(e)
                        }, c.prototype.copyUsingObjectsFromDocument = function(t) {
                            var n;
                            return n = new e.ObjectMap(t.getObjects()), this.copyUsingObjectMap(n)
                        }, c.prototype.copyUsingObjectMap = function(t) {
                            var e, n, o;
                            return n = function() {
                                var n, i, r, s;
                                for (r = this.getBlocks(), s = [], n = 0, i = r.length; i > n; n++) e = r[n], s.push((o = t.find(e)) ? o : e.copyUsingObjectMap(t));
                                return s
                            }.call(this), new this.constructor(n)
                        }, c.prototype.copyWithBaseBlockAttributes = function(t) {
                            var e, n, o;
                            return null == t && (t = []), o = function() {
                                var o, i, r, s;
                                for (r = this.getBlocks(), s = [], o = 0, i = r.length; i > o; o++) n = r[o], e = t.concat(n.getAttributes()), s.push(n.copyWithAttributes(e));
                                return s
                            }.call(this), new this.constructor(o)
                        }, c.prototype.replaceBlock = function(t, e) {
                            var n;
                            return n = this.blockList.indexOf(t), -1 === n ? this : new this.constructor(this.blockList.replaceObjectAtIndex(e, n))
                        }, c.prototype.insertDocumentAtRange = function(t, e) {
                            var n, r, s, a, u, c, l;
                            return r = t.blockList, u = (e = o(e))[0], c = this.locationFromPosition(u), s = c.index, a = c.offset, l = this, n = this.getBlockAtPosition(u), i(e) && n.isEmpty() && !n.hasAttributes() ? l = new this.constructor(l.blockList.removeObjectAtIndex(s)) : n.getBlockBreakPosition() === a && u++, l = l.removeTextAtRange(e), new this.constructor(l.blockList.insertSplittableListAtPosition(r, u))
                        }, c.prototype.mergeDocumentAtRange = function(e, n) {
                            var i, r, s, a, u, c, l, h, p, d, f, g;
                            return f = (n = o(n))[0], d = this.locationFromPosition(f), r = this.getBlockAtIndex(d.index).getAttributes(), i = e.getBaseBlockAttributes(), g = r.slice(-i.length), t(i, g) ? (l = r.slice(0, -i.length), c = e.copyWithBaseBlockAttributes(l)) : c = e.copy({
                                consolidateBlocks: !0
                            }).copyWithBaseBlockAttributes(r), s = c.getBlockCount(), a = c.getBlockAtIndex(0), t(r, a.getAttributes()) ? (u = a.getTextWithoutBlockBreak(), p = this.insertTextAtRange(u, n), s > 1 && (c = new this.constructor(c.getBlocks().slice(1)), h = f + u.getLength(), p = p.insertDocumentAtRange(c, h))) : p = this.insertDocumentAtRange(c, n), p
                        }, c.prototype.insertTextAtRange = function(t, e) {
                            var n, i, r, s, a;
                            return a = (e = o(e))[0], s = this.locationFromPosition(a), i = s.index, r = s.offset, n = this.removeTextAtRange(e), new this.constructor(n.blockList.editObjectAtIndex(i, function(e) {
                                return e.copyWithText(e.text.insertTextAtPosition(t, r))
                            }))
                        }, c.prototype.removeTextAtRange = function(t) {
                            var e, n, r, s, a, u, c, l, h, p, d, f, g, m, y, v, b, A, C, w, x;
                            return p = t = o(t), l = p[0], A = p[1], i(t) ? this : (d = this.locationRangeFromRange(t), u = d[0], v = d[1], a = u.index, c = u.offset, s = this.getBlockAtIndex(a), y = v.index, b = v.offset, m = this.getBlockAtIndex(y), f = A - l === 1 && s.getBlockBreakPosition() === c && m.getBlockBreakPosition() !== b && "\n" === m.text.getStringAtPosition(b), f ? r = this.blockList.editObjectAtIndex(y, function(t) {
                                return t.copyWithText(t.text.removeTextAtRange([b, b + 1]))
                            }) : (h = s.text.getTextAtRange([0, c]), C = m.text.getTextAtRange([b, m.getLength()]), w = h.appendText(C), g = a !== y && 0 === c, x = g && s.getAttributeLevel() >= m.getAttributeLevel(), n = x ? m.copyWithText(w) : s.copyWithText(w), e = y + 1 - a, r = this.blockList.splice(a, e, n)), new this.constructor(r))
                        }, c.prototype.moveTextFromRangeToPosition = function(t, e) {
                            var n, i, r, s, u, c, l, h, p, d;
                            if (c = t = o(t), p = c[0], r = c[1], e >= p && r >= e) return this;
                            if (i = this.getDocumentAtRange(t), h = this.removeTextAtRange(t), u = e > p, u && (e -= i.getLength()), !h.firstBlockInRangeIsEntirelySelected(t)) {
                                if (l = i.getBlocks(), s = l[0], n = 2 <= l.length ? a.call(l, 1) : [], 0 === n.length ? (d = s.getTextWithoutBlockBreak(), u && (e += 1)) : d = s.text, h = h.insertTextAtRange(d, e), 0 === n.length) return h;
                                i = new this.constructor(n), e += d.getLength()
                            }
                            return h.insertDocumentAtRange(i, e)
                        }, c.prototype.addAttributeAtRange = function(t, e, o) {
                            var i;
                            return i = this.blockList, this.eachBlockAtRange(o, function(o, r, s) {
                                return i = i.editObjectAtIndex(s, function() {
                                    return n(t) ? o.addAttribute(t, e) : r[0] === r[1] ? o : o.copyWithText(o.text.addAttributeAtRange(t, e, r))
                                })
                            }), new this.constructor(i)
                        }, c.prototype.addAttribute = function(t, e) {
                            var n;
                            return n = this.blockList, this.eachBlock(function(o, i) {
                                return n = n.editObjectAtIndex(i, function() {
                                    return o.addAttribute(t, e)
                                })
                            }), new this.constructor(n)
                        }, c.prototype.removeAttributeAtRange = function(t, e) {
                            var o;
                            return o = this.blockList, this.eachBlockAtRange(e, function(e, i, r) {
                                return n(t) ? o = o.editObjectAtIndex(r, function() {
                                    return e.removeAttribute(t)
                                }) : i[0] !== i[1] ? o = o.editObjectAtIndex(r, function() {
                                    return e.copyWithText(e.text.removeAttributeAtRange(t, i))
                                }) : void 0
                            }), new this.constructor(o)
                        }, c.prototype.updateAttributesForAttachment = function(t, e) {
                            var n, o, i, r;
                            return i = (o = this.getRangeOfAttachment(e))[0], n = this.locationFromPosition(i).index, r = this.getTextAtIndex(n), new this.constructor(this.blockList.editObjectAtIndex(n, function(n) {
                                return n.copyWithText(r.updateAttributesForAttachment(t, e))
                            }))
                        }, c.prototype.removeAttributeForAttachment = function(t, e) {
                            var n;
                            return n = this.getRangeOfAttachment(e), this.removeAttributeAtRange(t, n)
                        }, c.prototype.insertBlockBreakAtRange = function(t) {
                            var n, i, r, s;
                            return s = (t = o(t))[0], r = this.locationFromPosition(s).offset, i = this.removeTextAtRange(t), 0 === r && (n = [new e.Block]), new this.constructor(i.blockList.insertSplittableListAtPosition(new e.SplittableList(n), s))
                        }, c.prototype.applyBlockAttributeAtRange = function(t, e, o) {
                            var i, r, s, a;
                            return s = this.expandRangeToLineBreaksAndSplitBlocks(o), r = s.document, o = s.range, i = n(t), i.listAttribute ? (r = r.removeLastListAttributeAtRange(o, {
                                exceptAttributeName: t
                            }), a = r.convertLineBreaksToBlockBreaksInRange(o), r = a.document, o = a.range) : r = i.terminal ? r.removeLastTerminalAttributeAtRange(o) : r.consolidateBlocksAtRange(o), r.addAttributeAtRange(t, e, o)
                        }, c.prototype.removeLastListAttributeAtRange = function(t, e) {
                            var o;
                            return null == e && (e = {}), o = this.blockList, this.eachBlockAtRange(t, function(t, i, r) {
                                var s;
                                if ((s = t.getLastAttribute()) && n(s).listAttribute && s !== e.exceptAttributeName) return o = o.editObjectAtIndex(r, function() {
                                    return t.removeAttribute(s)
                                })
                            }), new this.constructor(o)
                        }, c.prototype.removeLastTerminalAttributeAtRange = function(t) {
                            var e;
                            return e = this.blockList, this.eachBlockAtRange(t, function(t, o, i) {
                                var r;
                                if ((r = t.getLastAttribute()) && n(r).terminal) return e = e.editObjectAtIndex(i, function() {
                                    return t.removeAttribute(r)
                                })
                            }), new this.constructor(e)
                        }, c.prototype.firstBlockInRangeIsEntirelySelected = function(t) {
                            var e, n, i, r, s, a;
                            return r = t = o(t), a = r[0], e = r[1], n = this.locationFromPosition(a), s = this.locationFromPosition(e), 0 === n.offset && n.index < s.index ? !0 : n.index === s.index ? (i = this.getBlockAtIndex(n.index).getLength(), 0 === n.offset && s.offset === i) : !1
                        }, c.prototype.expandRangeToLineBreaksAndSplitBlocks = function(t) {
                            var e, n, i, r, s, a, u, c, l;
                            return a = t = o(t), l = a[0], r = a[1], c = this.locationFromPosition(l), i = this.locationFromPosition(r), e = this, u = e.getBlockAtIndex(c.index), null != (c.offset = u.findLineBreakInDirectionFromPosition("backward", c.offset)) && (s = e.positionFromLocation(c), e = e.insertBlockBreakAtRange([s, s + 1]), i.index += 1, i.offset -= e.getBlockAtIndex(c.index).getLength(), c.index += 1), c.offset = 0, 0 === i.offset && i.index > c.index ? (i.index -= 1, i.offset = e.getBlockAtIndex(i.index).getBlockBreakPosition()) : (n = e.getBlockAtIndex(i.index), "\n" === n.text.getStringAtRange([i.offset - 1, i.offset]) ? i.offset -= 1 : i.offset = n.findLineBreakInDirectionFromPosition("forward", i.offset), i.offset !== n.getBlockBreakPosition() && (s = e.positionFromLocation(i), e = e.insertBlockBreakAtRange([s, s + 1]))), l = e.positionFromLocation(c), r = e.positionFromLocation(i), t = o([l, r]), {
                                document: e,
                                range: t
                            }
                        }, c.prototype.convertLineBreaksToBlockBreaksInRange = function(t) {
                            var e, n, i;
                            return n = (t = o(t))[0], i = this.getStringAtRange(t).slice(0, -1), e = this, i.replace(/.*?\n/g, function(t) {
                                return n += t.length, e = e.insertBlockBreakAtRange([n - 1, n])
                            }), {
                                document: e,
                                range: t
                            }
                        }, c.prototype.consolidateBlocksAtRange = function(t) {
                            var e, n, i, r, s;
                            return i = t = o(t), s = i[0], n = i[1], r = this.locationFromPosition(s).index, e = this.locationFromPosition(n).index, new this.constructor(this.blockList.consolidateFromIndexToIndex(r, e))
                        }, c.prototype.getDocumentAtRange = function(t) {
                            var e;
                            return t = o(t), e = this.blockList.getSplittableListInRange(t).toArray(), new this.constructor(e)
                        }, c.prototype.getStringAtRange = function(t) {
                            return this.getDocumentAtRange(t).toString()
                        }, c.prototype.getBlockAtIndex = function(t) {
                            return this.blockList.getObjectAtIndex(t)
                        }, c.prototype.getBlockAtPosition = function(t) {
                            var e;
                            return e = this.locationFromPosition(t).index, this.getBlockAtIndex(e)
                        }, c.prototype.getTextAtIndex = function(t) {
                            var e;
                            return null != (e = this.getBlockAtIndex(t)) ? e.text : void 0
                        }, c.prototype.getTextAtPosition = function(t) {
                            var e;
                            return e = this.locationFromPosition(t).index, this.getTextAtIndex(e)
                        }, c.prototype.getPieceAtPosition = function(t) {
                            var e, n, o;
                            return o = this.locationFromPosition(t), e = o.index, n = o.offset, this.getTextAtIndex(e).getPieceAtPosition(n)
                        }, c.prototype.getCharacterAtPosition = function(t) {
                            var e, n, o;
                            return o = this.locationFromPosition(t), e = o.index, n = o.offset, this.getTextAtIndex(e).getStringAtRange([n, n + 1])
                        }, c.prototype.getLength = function() {
                            return this.blockList.getEndPosition()
                        }, c.prototype.getBlocks = function() {
                            return this.blockList.toArray()
                        }, c.prototype.getBlockCount = function() {
                            return this.blockList.length
                        }, c.prototype.getEditCount = function() {
                            return this.editCount
                        }, c.prototype.eachBlock = function(t) {
                            return this.blockList.eachObject(t)
                        }, c.prototype.eachBlockAtRange = function(t, e) {
                            var n, i, r, s, a, u, c, l, h, p, d, f;
                            if (u = t = o(t), d = u[0], r = u[1], p = this.locationFromPosition(d), i = this.locationFromPosition(r), p.index === i.index) return n = this.getBlockAtIndex(p.index), f = [p.offset, i.offset], e(n, f, p.index);
                            for (h = [], a = s = c = p.index, l = i.index; l >= c ? l >= s : s >= l; a = l >= c ? ++s : --s)(n = this.getBlockAtIndex(a)) ? (f = function() {
                                switch (a) {
                                    case p.index:
                                        return [p.offset, n.text.getLength()];
                                    case i.index:
                                        return [0, i.offset];
                                    default:
                                        return [0, n.text.getLength()]
                                }
                            }(), h.push(e(n, f, a))) : h.push(void 0);
                            return h
                        }, c.prototype.getCommonAttributesAtRange = function(t) {
                            var n, r, s;
                            return r = (t = o(t))[0], i(t) ? this.getCommonAttributesAtPosition(r) : (s = [], n = [], this.eachBlockAtRange(t, function(t, e) {
                                return e[0] !== e[1] ? (s.push(t.text.getCommonAttributesAtRange(e)), n.push(l(t))) : void 0
                            }), e.Hash.fromCommonAttributesOfObjects(s).merge(e.Hash.fromCommonAttributesOfObjects(n)).toObject())
                        }, c.prototype.getCommonAttributesAtPosition = function(t) {
                            var n, o, i, r, s, a, c, h, p, d;
                            if (p = this.locationFromPosition(t), s = p.index, h = p.offset, i = this.getBlockAtIndex(s), !i) return {};
                            r = l(i), n = i.text.getAttributesAtPosition(h), o = i.text.getAttributesAtPosition(h - 1), a = function() {
                                var t, n;
                                t = e.config.textAttributes, n = [];
                                for (c in t) d = t[c], d.inheritable && n.push(c);
                                return n
                            }();
                            for (c in o) d = o[c], (d === n[c] || u.call(a, c) >= 0) && (r[c] = d);
                            return r
                        }, c.prototype.getRangeOfCommonAttributeAtPosition = function(t, e) {
                            var n, i, r, s, a, u, c, l, h;
                            return a = this.locationFromPosition(e), r = a.index, s = a.offset, h = this.getTextAtIndex(r), u = h.getExpandedRangeForAttributeAtOffset(t, s), l = u[0], i = u[1], c = this.positionFromLocation({
                                index: r,
                                offset: l
                            }), n = this.positionFromLocation({
                                index: r,
                                offset: i
                            }), o([c, n])
                        }, c.prototype.getBaseBlockAttributes = function() {
                            var t, e, n, o, i, r, s;
                            for (t = this.getBlockAtIndex(0).getAttributes(), n = o = 1, s = this.getBlockCount(); s >= 1 ? s > o : o > s; n = s >= 1 ? ++o : --o) e = this.getBlockAtIndex(n).getAttributes(), r = Math.min(t.length, e.length), t = function() {
                                var n, o, s;
                                for (s = [], i = n = 0, o = r;
                                    (o >= 0 ? o > n : n > o) && e[i] === t[i]; i = o >= 0 ? ++n : --n) s.push(e[i]);
                                return s
                            }();
                            return t
                        }, l = function(t) {
                            var e, n;
                            return n = {}, (e = t.getLastAttribute()) && (n[e] = !0), n
                        }, c.prototype.getAttachmentById = function(t) {
                            var e, n, o, i;
                            for (i = this.getAttachments(), n = 0, o = i.length; o > n; n++)
                                if (e = i[n], e.id === t) return e
                        }, c.prototype.getAttachmentPieces = function() {
                            var t;
                            return t = [], this.blockList.eachObject(function(e) {
                                var n;
                                return n = e.text, t = t.concat(n.getAttachmentPieces())
                            }), t
                        }, c.prototype.getAttachments = function() {
                            var t, e, n, o, i;
                            for (o = this.getAttachmentPieces(), i = [], t = 0, e = o.length; e > t; t++) n = o[t], i.push(n.attachment);
                            return i
                        }, c.prototype.getRangeOfAttachment = function(t) {
                            var e, n, i, r, s, a, u;
                            for (r = 0, s = this.blockList.toArray(), n = e = 0, i = s.length; i > e; n = ++e) {
                                if (a = s[n].text, u = a.getRangeOfAttachment(t)) return o([r + u[0], r + u[1]]);
                                r += a.getLength()
                            }
                        }, c.prototype.getLocationRangeOfAttachment = function(t) {
                            var e;
                            return e = this.getRangeOfAttachment(t), this.locationRangeFromRange(e)
                        }, c.prototype.getAttachmentPieceForAttachment = function(t) {
                            var e, n, o, i;
                            for (i = this.getAttachmentPieces(), e = 0, n = i.length; n > e; e++)
                                if (o = i[e], o.attachment === t) return o
                        }, c.prototype.locationFromPosition = function(t) {
                            var e, n;
                            return n = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, t)), null != n.index ? n : (e = this.getBlocks(), {
                                index: e.length - 1,
                                offset: e[e.length - 1].getLength()
                            })
                        }, c.prototype.positionFromLocation = function(t) {
                            return this.blockList.findPositionAtIndexAndOffset(t.index, t.offset)
                        }, c.prototype.locationRangeFromPosition = function(t) {
                            return o(this.locationFromPosition(t))
                        }, c.prototype.locationRangeFromRange = function(t) {
                            var e, n, i, r;
                            if (t = o(t)) return r = t[0], n = t[1], i = this.locationFromPosition(r), e = this.locationFromPosition(n), o([i, e])
                        }, c.prototype.rangeFromLocationRange = function(t) {
                            var e, n;
                            return t = o(t), e = this.positionFromLocation(t[0]), i(t) || (n = this.positionFromLocation(t[1])), o([e, n])
                        }, c.prototype.isEqualTo = function(t) {
                            return this.blockList.isEqualTo(null != t ? t.blockList : void 0)
                        }, c.prototype.getTexts = function() {
                            var t, e, n, o, i;
                            for (o = this.getBlocks(), i = [], e = 0, n = o.length; n > e; e++) t = o[e], i.push(t.text);
                            return i
                        }, c.prototype.getPieces = function() {
                            var t, e, n, o, i;
                            for (n = [], o = this.getTexts(), t = 0, e = o.length; e > t; t++) i = o[t], n.push.apply(n, i.getPieces());
                            return n
                        }, c.prototype.getObjects = function() {
                            return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())
                        }, c.prototype.toSerializableDocument = function() {
                            var t;
                            return t = [], this.blockList.eachObject(function(e) {
                                return t.push(e.copyWithText(e.text.toSerializableText()))
                            }), new this.constructor(t)
                        }, c.prototype.toString = function() {
                            return this.blockList.toString()
                        }, c.prototype.toJSON = function() {
                            return this.blockList.toJSON()
                        }, c.prototype.toConsole = function() {
                            var t;
                            return JSON.stringify(function() {
                                var e, n, o, i;
                                for (o = this.blockList.toArray(), i = [], e = 0, n = o.length; n > e; e++) t = o[e], i.push(JSON.parse(t.text.toConsole()));
                                return i
                            }.call(this))
                        }, c
                    }(e.Object)
                }.call(this),
                function() {
                    e.LineBreakInsertion = function() {
                        function t(t) {
                            var e;
                            this.composition = t, this.document = this.composition.document, e = this.composition.getSelectedRange(), this.startPosition = e[0], this.endPosition = e[1], this.startLocation = this.document.locationFromPosition(this.startPosition), this.endLocation = this.document.locationFromPosition(this.endPosition), this.block = this.document.getBlockAtIndex(this.endLocation.index), this.breaksOnReturn = this.block.breaksOnReturn(), this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1), this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)
                        }
                        return t.prototype.shouldInsertBlockBreak = function() {
                            return this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty() ? 0 !== this.startLocation.offset : this.breaksOnReturn && "\n" !== this.nextCharacter
                        }, t.prototype.shouldBreakFormattedBlock = function() {
                            return this.block.hasAttributes() && !this.block.isListItem() && (this.breaksOnReturn && "\n" === this.nextCharacter || "\n" === this.previousCharacter)
                        }, t.prototype.shouldDecreaseListLevel = function() {
                            return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()
                        }, t.prototype.shouldPrependListItem = function() {
                            return this.block.isListItem() && 0 === this.startLocation.offset && !this.block.isEmpty()
                        }, t.prototype.shouldRemoveLastBlockAttribute = function() {
                            return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()
                        }, t
                    }()
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a, u, c, l, h = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) p.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        p = {}.hasOwnProperty;
                    s = e.normalizeRange, c = e.rangesAreEqual, u = e.rangeIsCollapsed, a = e.objectsAreEqual, t = e.arrayStartsWith, l = e.summarizeArrayChange, o = e.getAllAttributeNames, i = e.getBlockConfig, r = e.getTextConfig, n = e.extend, e.Composition = function(p) {
                        function d() {
                            this.document = new e.Document, this.attachments = [], this.currentAttributes = {}, this.revision = 0
                        }
                        var f;
                        return h(d, p), d.prototype.setDocument = function(t) {
                            var e;
                            return t.isEqualTo(this.document) ? void 0 : (this.document = t, this.refreshAttachments(), this.revision++, null != (e = this.delegate) && "function" == typeof e.compositionDidChangeDocument ? e.compositionDidChangeDocument(t) : void 0)
                        }, d.prototype.getSnapshot = function() {
                            return {
                                document: this.document,
                                selectedRange: this.getSelectedRange()
                            }
                        }, d.prototype.loadSnapshot = function(t) {
                            var n, o, i, r;
                            return n = t.document, r = t.selectedRange, null != (o = this.delegate) && "function" == typeof o.compositionWillLoadSnapshot && o.compositionWillLoadSnapshot(), this.setDocument(null != n ? n : new e.Document), this.setSelection(null != r ? r : [0, 0]), null != (i = this.delegate) && "function" == typeof i.compositionDidLoadSnapshot ? i.compositionDidLoadSnapshot() : void 0
                        }, d.prototype.insertText = function(t, e) {
                            var n, o, i, r;
                            return r = (null != e ? e : {
                                updatePosition: !0
                            }).updatePosition, o = this.getSelectedRange(), this.setDocument(this.document.insertTextAtRange(t, o)), i = o[0], n = i + t.getLength(), r && this.setSelection(n), this.notifyDelegateOfInsertionAtRange([i, n])
                        }, d.prototype.insertBlock = function(t) {
                            var n;
                            return null == t && (t = new e.Block), n = new e.Document([t]), this.insertDocument(n)
                        }, d.prototype.insertDocument = function(t) {
                            var n, o, i;
                            return null == t && (t = new e.Document), o = this.getSelectedRange(), this.setDocument(this.document.insertDocumentAtRange(t, o)), i = o[0], n = i + t.getLength(), this.setSelection(n), this.notifyDelegateOfInsertionAtRange([i, n])
                        }, d.prototype.insertString = function(t, n) {
                            var o, i;
                            return o = this.getCurrentTextAttributes(), i = e.Text.textForStringWithAttributes(t, o), this.insertText(i, n)
                        }, d.prototype.insertBlockBreak = function() {
                            var t, e, n;
                            return e = this.getSelectedRange(), this.setDocument(this.document.insertBlockBreakAtRange(e)), n = e[0], t = n + 1, this.setSelection(t), this.notifyDelegateOfInsertionAtRange([n, t])
                        }, d.prototype.insertLineBreak = function() {
                            var t, n;
                            return n = new e.LineBreakInsertion(this), n.shouldDecreaseListLevel() ? (this.decreaseListLevel(), this.setSelection(n.startPosition)) : n.shouldPrependListItem() ? (t = new e.Document([n.block.copyWithoutText()]), this.insertDocument(t)) : n.shouldInsertBlockBreak() ? this.insertBlockBreak() : n.shouldRemoveLastBlockAttribute() ? this.removeLastBlockAttribute() : n.shouldBreakFormattedBlock() ? this.breakFormattedBlock(n) : this.insertString("\n")
                        }, d.prototype.insertHTML = function(t) {
                            var n, o, i, r, s;
                            return s = this.getPosition(), r = this.document.getLength(), n = e.Document.fromHTML(t), this.setDocument(this.document.mergeDocumentAtRange(n, this.getSelectedRange())), o = this.document.getLength(), i = s + (o - r), this.setSelection(i), this.notifyDelegateOfInsertionAtRange([i, i])
                        }, d.prototype.replaceHTML = function(t) {
                            var n, o, i;
                            return n = e.Document.fromHTML(t).copyUsingObjectsFromDocument(this.document), o = this.getLocationRange({
                                strict: !1
                            }), i = this.document.rangeFromLocationRange(o), this.setDocument(n), this.setSelection(i)
                        }, d.prototype.insertFile = function(t) {
                            var n, o;
                            return (null != (o = this.delegate) ? o.compositionShouldAcceptFile(t) : void 0) ? (n = e.Attachment.attachmentForFile(t), this.insertAttachment(n)) : void 0
                        }, d.prototype.insertFiles = function(t) {
                            var n, o, i, r, s, a, u;
                            for (u = new e.Text, r = 0, s = t.length; s > r; r++) i = t[r], (null != (a = this.delegate) ? a.compositionShouldAcceptFile(i) : void 0) && (n = e.Attachment.attachmentForFile(i), o = e.Text.textForAttachmentWithAttributes(n, this.currentAttributes), u = u.appendText(o));
                            return this.insertText(u)
                        }, d.prototype.insertAttachment = function(t) {
                            var n;
                            return n = e.Text.textForAttachmentWithAttributes(t, this.currentAttributes), this.insertText(n)
                        }, d.prototype.deleteInDirection = function(t) {
                            var e, n, o, i, r, s, a;
                            return i = this.getLocationRange(), r = this.getSelectedRange(), s = u(r), s ? o = "backward" === t && 0 === i[0].offset : a = i[0].index !== i[1].index, o && this.canDecreaseBlockAttributeLevel() && (n = this.getBlock(), n.isListItem() ? this.decreaseListLevel() : this.decreaseBlockAttributeLevel(), this.setSelection(r[0]), n.isEmpty()) ? !1 : (s && (r = this.getExpandedRangeInDirection(t), "backward" === t && (e = this.getAttachmentAtRange(r))), e ? (this.editAttachment(e), !1) : (this.setDocument(this.document.removeTextAtRange(r)), this.setSelection(r[0]), o || a ? !1 : void 0))
                        }, d.prototype.moveTextFromRange = function(t) {
                            var e;
                            return e = this.getSelectedRange()[0], this.setDocument(this.document.moveTextFromRangeToPosition(t, e)), this.setSelection(e)
                        }, d.prototype.removeAttachment = function(t) {
                            var e;
                            return (e = this.document.getRangeOfAttachment(t)) ? (this.stopEditingAttachment(), this.setDocument(this.document.removeTextAtRange(e)), this.setSelection(e[0])) : void 0
                        }, d.prototype.removeLastBlockAttribute = function() {
                            var t, e, n, o;
                            return n = this.getSelectedRange(), o = n[0], e = n[1], t = this.document.getBlockAtPosition(e), this.removeCurrentAttribute(t.getLastAttribute()), this.setSelection(o)
                        }, f = " ", d.prototype.insertPlaceholder = function() {
                            return this.placeholderPosition = this.getPosition(), this.insertString(f)
                        }, d.prototype.selectPlaceholder = function() {
                            return null != this.placeholderPosition ? (this.setSelectedRange([this.placeholderPosition, this.placeholderPosition + f.length]), this.getSelectedRange()) : void 0
                        }, d.prototype.forgetPlaceholder = function() {
                            return this.placeholderPosition = null
                        }, d.prototype.hasCurrentAttribute = function(t) {
                            var e;
                            return e = this.currentAttributes[t], null != e && e !== !1
                        }, d.prototype.toggleCurrentAttribute = function(t) {
                            var e;
                            return (e = !this.currentAttributes[t]) ? this.setCurrentAttribute(t, e) : this.removeCurrentAttribute(t)
                        }, d.prototype.canSetCurrentAttribute = function(t) {
                            return i(t) ? this.canSetCurrentBlockAttribute(t) : this.canSetCurrentTextAttribute(t)
                        }, d.prototype.canSetCurrentTextAttribute = function(t) {
                            switch (t) {
                                case "href":
                                    return !this.selectionContainsAttachmentWithAttribute(t);
                                default:
                                    return !0
                            }
                        }, d.prototype.canSetCurrentBlockAttribute = function() {
                            var t;
                            if (t = this.getBlock()) return !t.isTerminalBlock()
                        }, d.prototype.setCurrentAttribute = function(t, e) {
                            return i(t) ? this.setBlockAttribute(t, e) : (this.setTextAttribute(t, e), this.currentAttributes[t] = e, this.notifyDelegateOfCurrentAttributesChange())
                        }, d.prototype.setTextAttribute = function(t, n) {
                            var o, i, r, s;
                            if (i = this.getSelectedRange()) return r = i[0], o = i[1], r !== o ? this.setDocument(this.document.addAttributeAtRange(t, n, i)) : "href" === t ? (s = e.Text.textForStringWithAttributes(n, {
                                href: n
                            }), this.insertText(s)) : void 0
                        }, d.prototype.setBlockAttribute = function(t, e) {
                            var n, o;
                            if (o = this.getSelectedRange()) return this.canSetCurrentAttribute(t) ? (n = this.getBlock(), this.setDocument(this.document.applyBlockAttributeAtRange(t, e, o)), this.setSelection(o)) : void 0
                        }, d.prototype.removeCurrentAttribute = function(t) {
                            return i(t) ? (this.removeBlockAttribute(t), this.updateCurrentAttributes()) : (this.removeTextAttribute(t), delete this.currentAttributes[t], this.notifyDelegateOfCurrentAttributesChange())
                        }, d.prototype.removeTextAttribute = function(t) {
                            var e;
                            if (e = this.getSelectedRange()) return this.setDocument(this.document.removeAttributeAtRange(t, e))
                        }, d.prototype.removeBlockAttribute = function(t) {
                            var e;
                            if (e = this.getSelectedRange()) return this.setDocument(this.document.removeAttributeAtRange(t, e))
                        }, d.prototype.canDecreaseNestingLevel = function() {
                            var t;
                            return (null != (t = this.getBlock()) ? t.getNestingLevel() : void 0) > 0
                        }, d.prototype.canIncreaseNestingLevel = function() {
                            var e, n, o;
                            if (e = this.getBlock()) return (null != (o = i(e.getLastNestableAttribute())) ? o.listAttribute : 0) ? (n = this.getPreviousBlock()) ? t(n.getListItemAttributes(), e.getListItemAttributes()) : void 0 : e.getNestingLevel() > 0
                        }, d.prototype.decreaseNestingLevel = function() {
                            var t;
                            if (t = this.getBlock()) return this.setDocument(this.document.replaceBlock(t, t.decreaseNestingLevel()))
                        }, d.prototype.increaseNestingLevel = function() {
                            var t;
                            if (t = this.getBlock()) return this.setDocument(this.document.replaceBlock(t, t.increaseNestingLevel()))
                        }, d.prototype.canDecreaseBlockAttributeLevel = function() {
                            var t;
                            return (null != (t = this.getBlock()) ? t.getAttributeLevel() : void 0) > 0
                        }, d.prototype.decreaseBlockAttributeLevel = function() {
                            var t, e;
                            return (t = null != (e = this.getBlock()) ? e.getLastAttribute() : void 0) ? this.removeCurrentAttribute(t) : void 0
                        }, d.prototype.decreaseListLevel = function() {
                            var t, e, n, o, i, r;
                            for (r = this.getSelectedRange()[0], i = this.document.locationFromPosition(r).index, n = i, t = this.getBlock().getAttributeLevel();
                                (e = this.document.getBlockAtIndex(n + 1)) && e.isListItem() && e.getAttributeLevel() > t;) n++;
                            return r = this.document.positionFromLocation({
                                index: i,
                                offset: 0
                            }), o = this.document.positionFromLocation({
                                index: n,
                                offset: 0
                            }), this.setDocument(this.document.removeLastListAttributeAtRange([r, o]))
                        }, d.prototype.updateCurrentAttributes = function() {
                            var t, e, n, i, r, s;
                            if (s = this.getSelectedRange({
                                    ignoreLock: !0
                                })) {
                                for (e = this.document.getCommonAttributesAtRange(s), r = o(), n = 0, i = r.length; i > n; n++) t = r[n], e[t] || this.canSetCurrentAttribute(t) || (e[t] = !1);
                                if (!a(e, this.currentAttributes)) return this.currentAttributes = e, this.notifyDelegateOfCurrentAttributesChange()
                            }
                        }, d.prototype.getCurrentAttributes = function() {
                            return n.call({}, this.currentAttributes)
                        }, d.prototype.getCurrentTextAttributes = function() {
                            var t, e, n, o;
                            t = {}, n = this.currentAttributes;
                            for (e in n) o = n[e], r(e) && (t[e] = o);
                            return t
                        }, d.prototype.freezeSelection = function() {
                            return this.setCurrentAttribute("frozen", !0)
                        }, d.prototype.thawSelection = function() {
                            return this.removeCurrentAttribute("frozen")
                        }, d.prototype.hasFrozenSelection = function() {
                            return this.hasCurrentAttribute("frozen")
                        }, d.proxyMethod("getSelectionManager().getPointRange"), d.proxyMethod("getSelectionManager().setLocationRangeFromPointRange"), d.proxyMethod("getSelectionManager().locationIsCursorTarget"), d.proxyMethod("getSelectionManager().selectionIsExpanded"), d.proxyMethod("delegate?.getSelectionManager"), d.prototype.setSelection = function(t) {
                            var e, n;
                            return e = this.document.locationRangeFromRange(t), null != (n = this.delegate) ? n.compositionDidRequestChangingSelectionToLocationRange(e) : void 0
                        }, d.prototype.getSelectedRange = function() {
                            var t;
                            return (t = this.getLocationRange()) ? this.document.rangeFromLocationRange(t) : void 0
                        }, d.prototype.setSelectedRange = function(t) {
                            var e;
                            return e = this.document.locationRangeFromRange(t), this.getSelectionManager().setLocationRange(e)
                        }, d.prototype.getPosition = function() {
                            var t;
                            return (t = this.getLocationRange()) ? this.document.positionFromLocation(t[0]) : void 0
                        }, d.prototype.getLocationRange = function(t) {
                            var e;
                            return null != (e = this.getSelectionManager().getLocationRange(t)) ? e : s({
                                index: 0,
                                offset: 0
                            })
                        }, d.prototype.getExpandedRangeInDirection = function(t) {
                            var e, n, o;
                            return n = this.getSelectedRange(), o = n[0], e = n[1], "backward" === t ? o = this.translateUTF16PositionFromOffset(o, -1) : e = this.translateUTF16PositionFromOffset(e, 1), s([o, e])
                        }, d.prototype.moveCursorInDirection = function(t) {
                            var e, n, o, i;
                            return this.editingAttachment ? o = this.document.getRangeOfAttachment(this.editingAttachment) : (i = this.getSelectedRange(), o = this.getExpandedRangeInDirection(t), n = !c(i, o)), this.setSelectedRange("backward" === t ? o[0] : o[1]), n && (e = this.getAttachmentAtRange(o)) ? this.editAttachment(e) : void 0
                        }, d.prototype.expandSelectionInDirection = function(t) {
                            var e;
                            return e = this.getExpandedRangeInDirection(t), this.setSelectedRange(e)
                        }, d.prototype.expandSelectionForEditing = function() {
                            return this.hasCurrentAttribute("href") ? this.expandSelectionAroundCommonAttribute("href") : void 0
                        }, d.prototype.expandSelectionAroundCommonAttribute = function(t) {
                            var e, n;
                            return e = this.getPosition(), n = this.document.getRangeOfCommonAttributeAtPosition(t, e), this.setSelectedRange(n)
                        }, d.prototype.selectionContainsAttachmentWithAttribute = function(t) {
                            var e, n, o, i, r;
                            if (r = this.getSelectedRange()) {
                                for (i = this.document.getDocumentAtRange(r).getAttachments(), n = 0, o = i.length; o > n; n++)
                                    if (e = i[n], e.hasAttribute(t)) return !0;
                                return !1
                            }
                        }, d.prototype.selectionIsInCursorTarget = function() {
                            return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())
                        }, d.prototype.positionIsCursorTarget = function(t) {
                            var e;
                            return (e = this.document.locationFromPosition(t)) ? this.locationIsCursorTarget(e) : void 0
                        }, d.prototype.positionIsBlockBreak = function(t) {
                            var e;
                            return null != (e = this.document.getPieceAtPosition(t)) ? e.isBlockBreak() : void 0
                        }, d.prototype.getSelectedDocument = function() {
                            var t;
                            return (t = this.getSelectedRange()) ? this.document.getDocumentAtRange(t) : void 0
                        }, d.prototype.getAttachments = function() {
                            return this.attachments.slice(0)
                        }, d.prototype.refreshAttachments = function() {
                            var t, e, n, o, i, r, s, a, u, c, h, p;
                            for (n = this.document.getAttachments(), a = l(this.attachments, n), t = a.added, h = a.removed, this.attachments = n, o = 0, r = h.length; r > o; o++) e = h[o], e.delegate = null, null != (u = this.delegate) && "function" == typeof u.compositionDidRemoveAttachment && u.compositionDidRemoveAttachment(e);
                            for (p = [], i = 0, s = t.length; s > i; i++) e = t[i], e.delegate = this, p.push(null != (c = this.delegate) && "function" == typeof c.compositionDidAddAttachment ? c.compositionDidAddAttachment(e) : void 0);
                            return p
                        }, d.prototype.attachmentDidChangeAttributes = function(t) {
                            var e;
                            return this.revision++, null != (e = this.delegate) && "function" == typeof e.compositionDidEditAttachment ? e.compositionDidEditAttachment(t) : void 0
                        }, d.prototype.attachmentDidChangePreviewURL = function(t) {
                            var e;
                            return this.revision++, null != (e = this.delegate) && "function" == typeof e.compositionDidChangeAttachmentPreviewURL ? e.compositionDidChangeAttachmentPreviewURL(t) : void 0
                        }, d.prototype.editAttachment = function(t) {
                            var e;
                            if (t !== this.editingAttachment) return this.stopEditingAttachment(), this.editingAttachment = t, null != (e = this.delegate) && "function" == typeof e.compositionDidStartEditingAttachment ? e.compositionDidStartEditingAttachment(this.editingAttachment) : void 0
                        }, d.prototype.stopEditingAttachment = function() {
                            var t;
                            if (this.editingAttachment) return null != (t = this.delegate) && "function" == typeof t.compositionDidStopEditingAttachment && t.compositionDidStopEditingAttachment(this.editingAttachment), this.editingAttachment = null
                        }, d.prototype.canEditAttachmentCaption = function() {
                            var t;
                            return null != (t = this.editingAttachment) ? t.isPreviewable() : void 0
                        }, d.prototype.updateAttributesForAttachment = function(t, e) {
                            return this.setDocument(this.document.updateAttributesForAttachment(t, e))
                        }, d.prototype.removeAttributeForAttachment = function(t, e) {
                            return this.setDocument(this.document.removeAttributeForAttachment(t, e))
                        }, d.prototype.breakFormattedBlock = function(t) {
                            var n, o, i, r, s;
                            return o = t.document, n = t.block, r = t.startPosition, s = [r - 1, r], n.getBlockBreakPosition() === t.startLocation.offset ? (n.breaksOnReturn() && "\n" === t.nextCharacter ? r += 1 : o = o.removeTextAtRange(s), s = [r, r]) : "\n" === t.nextCharacter ? "\n" === t.previousCharacter ? s = [r - 1, r + 1] : (s = [r, r + 1], r += 1) : t.startLocation.offset - 1 !== 0 && (r += 1), i = new e.Document([n.removeLastAttribute().copyWithoutText()]), this.setDocument(o.insertDocumentAtRange(i, s)), this.setSelection(r)
                        }, d.prototype.getPreviousBlock = function() {
                            var t, e;
                            return (e = this.getLocationRange()) && (t = e[0].index, t > 0) ? this.document.getBlockAtIndex(t - 1) : void 0
                        }, d.prototype.getBlock = function() {
                            var t;
                            return (t = this.getLocationRange()) ? this.document.getBlockAtIndex(t[0].index) : void 0
                        }, d.prototype.getAttachmentAtRange = function(t) {
                            var n;
                            return n = this.document.getDocumentAtRange(t), n.toString() === e.OBJECT_REPLACEMENT_CHARACTER + "\n" ? n.getAttachments()[0] : void 0
                        }, d.prototype.notifyDelegateOfCurrentAttributesChange = function() {
                            var t;
                            return null != (t = this.delegate) && "function" == typeof t.compositionDidChangeCurrentAttributes ? t.compositionDidChangeCurrentAttributes(this.currentAttributes) : void 0
                        }, d.prototype.notifyDelegateOfInsertionAtRange = function(t) {
                            var e;
                            return null != (e = this.delegate) && "function" == typeof e.compositionDidPerformInsertionAtRange ? e.compositionDidPerformInsertionAtRange(t) : void 0
                        }, d.prototype.translateUTF16PositionFromOffset = function(t, e) {
                            var n, o;
                            return o = this.document.toUTF16String(), n = o.offsetFromUCS2Offset(t), o.offsetToUCS2Offset(n + e)
                        }, d
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.UndoManager = function(e) {
                        function n(t) {
                            this.composition = t, this.undoEntries = [], this.redoEntries = []
                        }
                        var o;
                        return t(n, e), n.prototype.recordUndoEntry = function(t, e) {
                            var n, i, r, s, a;
                            return s = null != e ? e : {}, i = s.context, n = s.consolidatable, r = this.undoEntries.slice(-1)[0], n && o(r, t, i) ? void 0 : (a = this.createEntry({
                                description: t,
                                context: i
                            }), this.undoEntries.push(a), this.redoEntries = [])
                        }, n.prototype.undo = function() {
                            var t, e;
                            return (e = this.undoEntries.pop()) ? (t = this.createEntry(e), this.redoEntries.push(t), this.composition.loadSnapshot(e.snapshot)) : void 0
                        }, n.prototype.redo = function() {
                            var t, e;
                            return (t = this.redoEntries.pop()) ? (e = this.createEntry(t), this.undoEntries.push(e), this.composition.loadSnapshot(t.snapshot)) : void 0
                        }, n.prototype.canUndo = function() {
                            return this.undoEntries.length > 0
                        }, n.prototype.canRedo = function() {
                            return this.redoEntries.length > 0
                        }, n.prototype.createEntry = function(t) {
                            var e, n, o;
                            return o = null != t ? t : {}, n = o.description, e = o.context, {
                                description: null != n ? n.toString() : void 0,
                                context: JSON.stringify(e),
                                snapshot: this.composition.getSnapshot()
                            }
                        }, o = function(t, e, n) {
                            return (null != t ? t.description : void 0) === (null != e ? e.toString() : void 0) && (null != t ? t.context : void 0) === JSON.stringify(n)
                        }, n
                    }(e.BasicObject)
                }.call(this),
                function() {
                    e.Editor = function() {
                        function t(t, n, o) {
                            this.composition = t, this.selectionManager = n, this.element = o, this.undoManager = new e.UndoManager(this.composition)
                        }
                        return t.prototype.loadDocument = function(t) {
                            return this.loadSnapshot({
                                document: t,
                                selectedRange: [0, 0]
                            })
                        }, t.prototype.loadHTML = function(t) {
                            return null == t && (t = ""), this.loadDocument(e.Document.fromHTML(t, {
                                referenceElement: this.element
                            }))
                        }, t.prototype.loadJSON = function(t) {
                            var n, o;
                            return n = t.document, o = t.selectedRange, n = e.Document.fromJSON(n), this.loadSnapshot({
                                document: n,
                                selectedRange: o
                            })
                        }, t.prototype.loadSnapshot = function(t) {
                            return this.undoManager = new e.UndoManager(this.composition), this.composition.loadSnapshot(t)
                        }, t.prototype.getDocument = function() {
                            return this.composition.document
                        }, t.prototype.getSelectedDocument = function() {
                            return this.composition.getSelectedDocument()
                        }, t.prototype.getSnapshot = function() {
                            return this.composition.getSnapshot()
                        }, t.prototype.toJSON = function() {
                            return this.getSnapshot()
                        }, t.prototype.deleteInDirection = function(t) {
                            return this.composition.deleteInDirection(t)
                        }, t.prototype.insertAttachment = function(t) {
                            return this.composition.insertAttachment(t)
                        }, t.prototype.insertDocument = function(t) {
                            return this.composition.insertDocument(t)
                        }, t.prototype.insertFile = function(t) {
                            return this.composition.insertFile(t)
                        }, t.prototype.insertHTML = function(t) {
                            return this.composition.insertHTML(t)
                        }, t.prototype.insertString = function(t) {
                            return this.composition.insertString(t)
                        }, t.prototype.insertText = function(t) {
                            return this.composition.insertText(t)
                        }, t.prototype.insertLineBreak = function() {
                            return this.composition.insertLineBreak()
                        }, t.prototype.getSelectedRange = function() {
                            return this.composition.getSelectedRange()
                        }, t.prototype.getPosition = function() {
                            return this.composition.getPosition()
                        }, t.prototype.getClientRectAtPosition = function(t) {
                            var e;
                            return e = this.getDocument().locationRangeFromRange([t, t + 1]), this.selectionManager.getClientRectAtLocationRange(e)
                        }, t.prototype.expandSelectionInDirection = function(t) {
                            return this.composition.expandSelectionInDirection(t)
                        }, t.prototype.moveCursorInDirection = function(t) {
                            return this.composition.moveCursorInDirection(t)
                        }, t.prototype.setSelectedRange = function(t) {
                            return this.composition.setSelectedRange(t)
                        }, t.prototype.activateAttribute = function(t, e) {
                            return null == e && (e = !0), this.composition.setCurrentAttribute(t, e)
                        }, t.prototype.attributeIsActive = function(t) {
                            return this.composition.hasCurrentAttribute(t)
                        }, t.prototype.canActivateAttribute = function(t) {
                            return this.composition.canSetCurrentAttribute(t)
                        }, t.prototype.deactivateAttribute = function(t) {
                            return this.composition.removeCurrentAttribute(t)
                        }, t.prototype.canDecreaseNestingLevel = function() {
                            return this.composition.canDecreaseNestingLevel()
                        }, t.prototype.canIncreaseNestingLevel = function() {
                            return this.composition.canIncreaseNestingLevel()
                        }, t.prototype.decreaseNestingLevel = function() {
                            return this.canDecreaseNestingLevel() ? this.composition.decreaseNestingLevel() : void 0
                        }, t.prototype.increaseNestingLevel = function() {
                            return this.canIncreaseNestingLevel() ? this.composition.increaseNestingLevel() : void 0
                        }, t.prototype.canDecreaseIndentationLevel = function() {
                            return this.canDecreaseNestingLevel()
                        }, t.prototype.canIncreaseIndentationLevel = function() {
                            return this.canIncreaseNestingLevel()
                        }, t.prototype.decreaseIndentationLevel = function() {
                            return this.decreaseNestingLevel()
                        }, t.prototype.increaseIndentationLevel = function() {
                            return this.increaseNestingLevel()
                        }, t.prototype.canRedo = function() {
                            return this.undoManager.canRedo()
                        }, t.prototype.canUndo = function() {
                            return this.undoManager.canUndo()
                        }, t.prototype.recordUndoEntry = function(t, e) {
                            var n, o, i;
                            return i = null != e ? e : {}, o = i.context, n = i.consolidatable, this.undoManager.recordUndoEntry(t, {
                                context: o,
                                consolidatable: n
                            })
                        }, t.prototype.redo = function() {
                            return this.canRedo() ? this.undoManager.redo() : void 0
                        }, t.prototype.undo = function() {
                            return this.canUndo() ? this.undoManager.undo() : void 0
                        }, t
                    }()
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.ManagedAttachment = function(e) {
                        function n(t, e) {
                            var n;
                            this.attachmentManager = t, this.attachment = e, n = this.attachment, this.id = n.id, this.file = n.file
                        }
                        return t(n, e), n.prototype.remove = function() {
                            return this.attachmentManager.requestRemovalOfAttachment(this.attachment)
                        }, n.proxyMethod("attachment.getAttribute"), n.proxyMethod("attachment.hasAttribute"), n.proxyMethod("attachment.setAttribute"), n.proxyMethod("attachment.getAttributes"), n.proxyMethod("attachment.setAttributes"), n.proxyMethod("attachment.isPending"), n.proxyMethod("attachment.isPreviewable"), n.proxyMethod("attachment.getURL"), n.proxyMethod("attachment.getHref"), n.proxyMethod("attachment.getFilename"), n.proxyMethod("attachment.getFilesize"), n.proxyMethod("attachment.getFormattedFilesize"), n.proxyMethod("attachment.getExtension"), n.proxyMethod("attachment.getContentType"), n.proxyMethod("attachment.getFile"), n.proxyMethod("attachment.setFile"), n.proxyMethod("attachment.releaseFile"), n.proxyMethod("attachment.getUploadProgress"), n.proxyMethod("attachment.setUploadProgress"), n
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t = function(t, e) {
                            function o() {
                                this.constructor = t
                            }
                            for (var i in e) n.call(e, i) && (t[i] = e[i]);
                            return o.prototype = e.prototype, t.prototype = new o, t.__super__ = e.prototype, t
                        },
                        n = {}.hasOwnProperty;
                    e.AttachmentManager = function(n) {
                        function o(t) {
                            var e, n, o;
                            for (null == t && (t = []), this.managedAttachments = {}, n = 0, o = t.length; o > n; n++) e = t[n], this.manageAttachment(e)
                        }
                        return t(o, n), o.prototype.getAttachments = function() {
                            var t, e, n, o;
                            n = this.managedAttachments, o = [];
                            for (e in n) t = n[e], o.push(t);
                            return o
                        }, o.prototype.manageAttachment = function(t) {
                            var n, o;
                            return null != (n = this.managedAttachments)[o = t.id] ? n[o] : n[o] = new e.ManagedAttachment(this, t)
                        }, o.prototype.attachmentIsManaged = function(t) {
                            return t.id in this.managedAttachments
                        }, o.prototype.requestRemovalOfAttachment = function(t) {
                            var e;
                            return this.attachmentIsManaged(t) && null != (e = this.delegate) && "function" == typeof e.attachmentManagerDidRequestRemovalOfAttachment ? e.attachmentManagerDidRequestRemovalOfAttachment(t) : void 0
                        }, o.prototype.unmanageAttachment = function(t) {
                            var e;
                            return e = this.managedAttachments[t.id], delete this.managedAttachments[t.id], e
                        }, o
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a, u, c, l, h;
                    t = e.elementContainsNode, n = e.findChildIndexOfNode, r = e.nodeIsBlockStart, s = e.nodeIsBlockStartComment, i = e.nodeIsBlockContainer, a = e.nodeIsCursorTarget, u = e.nodeIsEmptyTextNode, c = e.nodeIsTextNode, o = e.nodeIsAttachmentElement, l = e.tagName, h = e.walkTree, e.LocationMapper = function() {
                        function e(t) {
                            this.element = t
                        }
                        var p, d, f, g;
                        return e.prototype.findLocationFromContainerAndOffset = function(e, o, i) {
                            var s, u, l, p, g, m, y;
                            for (m = (null != i ? i : {
                                    strict: !0
                                }).strict, u = 0, l = !1, p = {
                                    index: 0,
                                    offset: 0
                                }, (s = this.findAttachmentElementParentForNode(e)) && (e = s.parentNode, o = n(s)), y = h(this.element, {
                                    usingFilter: f
                                }); y.nextNode();) {
                                if (g = y.currentNode, g === e && c(e)) {
                                    a(g) || (p.offset += o);
                                    break
                                }
                                if (g.parentNode === e) {
                                    if (u++ === o) break
                                } else if (!t(e, g) && u > 0) break;
                                r(g, {
                                    strict: m
                                }) ? (l && p.index++, p.offset = 0, l = !0) : p.offset += d(g)
                            }
                            return p
                        }, e.prototype.findContainerAndOffsetFromLocation = function(t) {
                            var e, o, s, a, u, l;
                            if (0 === t.index && 0 === t.offset) {
                                for (e = this.element, a = 0; e.firstChild;)
                                    if (e = e.firstChild, i(e)) {
                                        a = 1;
                                        break
                                    }
                                return [e, a]
                            }
                            if (u = this.findNodeAndOffsetFromLocation(t), o = u[0], s = u[1], o) {
                                if (c(o)) e = o, l = o.textContent, a = t.offset - s;
                                else {
                                    if (e = o.parentNode, !r(o.previousSibling) && !i(e))
                                        for (; o === e.lastChild && (o = e, e = e.parentNode, !i(e)););
                                    a = n(o), 0 !== t.offset && a++
                                }
                                return [e, a]
                            }
                        }, e.prototype.findNodeAndOffsetFromLocation = function(t) {
                            var e, n, o, i, r, s, u, l;
                            for (u = 0, l = this.getSignificantNodesForIndex(t.index), n = 0, o = l.length; o > n; n++) {
                                if (e = l[n], i = d(e), t.offset <= u + i)
                                    if (c(e)) {
                                        if (r = e, s = u, t.offset === s && a(r)) break
                                    } else r || (r = e, s = u);
                                if (u += i, u > t.offset) break
                            }
                            return [r, s]
                        }, e.prototype.findAttachmentElementParentForNode = function(t) {
                            for (; t && t !== this.element;) {
                                if (o(t)) return t;
                                t = t.parentNode
                            }
                        }, e.prototype.getSignificantNodesForIndex = function(t) {
                            var e, n, o, i, r;
                            for (o = [], r = h(this.element, {
                                    usingFilter: p
                                }), i = !1; r.nextNode();)
                                if (n = r.currentNode, s(n)) {
                                    if ("undefined" != typeof e && null !== e ? e++ : e = 0, e === t) i = !0;
                                    else if (i) break
                                } else i && o.push(n);
                            return o
                        }, d = function(t) {
                            var e;
                            return t.nodeType === Node.TEXT_NODE ? a(t) ? 0 : (e = t.textContent, e.length) : "br" === l(t) || o(t) ? 1 : 0
                        }, p = function(t) {
                            return g(t) === NodeFilter.FILTER_ACCEPT ? f(t) : NodeFilter.FILTER_REJECT
                        }, g = function(t) {
                            return u(t) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT
                        }, f = function(t) {
                            return o(t.parentNode) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT
                        }, e
                    }()
                }.call(this),
                function() {
                    var t, n, o = [].slice;
                    t = e.getDOMRange, n = e.setDOMRange, e.PointMapper = function() {
                        function e() {}
                        return e.prototype.createDOMRangeFromPoint = function(e) {
                            var o, i, r, s, a, u, c, l;
                            if (c = e.x, l = e.y, document.caretPositionFromPoint) return a = document.caretPositionFromPoint(c, l), r = a.offsetNode, i = a.offset, o = document.createRange(), o.setStart(r, i), o;
                            if (document.caretRangeFromPoint) return document.caretRangeFromPoint(c, l);
                            if (document.body.createTextRange) {
                                s = t();
                                try {
                                    u = document.body.createTextRange(), u.moveToPoint(c, l), u.select()
                                } catch (h) {}
                                return o = t(), n(s), o
                            }
                        }, e.prototype.getClientRectsForDOMRange = function(t) {
                            var e, n, i;
                            return n = o.call(t.getClientRects()), i = n[0], e = n[n.length - 1], [i, e]
                        }, e
                    }()
                }.call(this),
                function() {
                    var t, n = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        o = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) i.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        i = {}.hasOwnProperty,
                        r = [].indexOf || function(t) {
                            for (var e = 0, n = this.length; n > e; e++)
                                if (e in this && this[e] === t) return e;
                            return -1
                        };
                    t = e.getDOMRange, e.SelectionChangeObserver = function(e) {
                        function i() {
                            this.run = n(this.run, this), this.update = n(this.update, this), this.selectionManagers = []
                        }
                        var s;
                        return o(i, e), i.prototype.start = function() {
                            return this.started ? void 0 : (this.started = !0, "onselectionchange" in document ? document.addEventListener("selectionchange", this.update, !0) : this.run())
                        }, i.prototype.stop = function() {
                            return this.started ? (this.started = !1, document.removeEventListener("selectionchange", this.update, !0)) : void 0
                        }, i.prototype.registerSelectionManager = function(t) {
                            return r.call(this.selectionManagers, t) < 0 ? (this.selectionManagers.push(t), this.start()) : void 0
                        }, i.prototype.unregisterSelectionManager = function(t) {
                            var e;
                            return this.selectionManagers = function() {
                                var n, o, i, r;
                                for (i = this.selectionManagers, r = [], n = 0, o = i.length; o > n; n++) e = i[n], e !== t && r.push(e);
                                return r
                            }.call(this), 0 === this.selectionManagers.length ? this.stop() : void 0
                        }, i.prototype.notifySelectionManagersOfSelectionChange = function() {
                            var t, e, n, o, i;
                            for (n = this.selectionManagers, o = [], t = 0, e = n.length; e > t; t++) i = n[t], o.push(i.selectionDidChange());
                            return o
                        }, i.prototype.update = function() {
                            var e;
                            return e = t(), s(e, this.domRange) ? void 0 : (this.domRange = e, this.notifySelectionManagersOfSelectionChange())
                        }, i.prototype.reset = function() {
                            return this.domRange = null, this.update()
                        }, i.prototype.run = function() {
                            return this.started ? (this.update(), requestAnimationFrame(this.run)) : void 0
                        }, s = function(t, e) {
                            return (null != t ? t.startContainer : void 0) === (null != e ? e.startContainer : void 0) && (null != t ? t.startOffset : void 0) === (null != e ? e.startOffset : void 0) && (null != t ? t.endContainer : void 0) === (null != e ? e.endContainer : void 0) && (null != t ? t.endOffset : void 0) === (null != e ? e.endOffset : void 0)
                        }, i
                    }(e.BasicObject), null == e.selectionChangeObserver && (e.selectionChangeObserver = new e.SelectionChangeObserver)
                }.call(this),
                function() {
                    var t, n, o, i, r, s, a, u, c, l, h = function(t, e) {
                            return function() {
                                return t.apply(e, arguments)
                            }
                        },
                        p = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) d.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        d = {}.hasOwnProperty;
                    o = e.getDOMSelection, n = e.getDOMRange, l = e.setDOMRange, t = e.elementContainsNode, s = e.nodeIsCursorTarget, r = e.innerElementIsActive, i = e.handleEvent, a = e.normalizeRange, u = e.rangeIsCollapsed, c = e.rangesAreEqual, e.SelectionManager = function(d) {
                        function f(t) {
                            this.element = t, this.selectionDidChange = h(this.selectionDidChange, this), this.didMouseDown = h(this.didMouseDown, this), this.locationMapper = new e.LocationMapper(this.element), this.pointMapper = new e.PointMapper, this.lockCount = 0, i("mousedown", {
                                onElement: this.element,
                                withCallback: this.didMouseDown
                            })
                        }
                        return p(f, d), f.prototype.getLocationRange = function(t) {
                            var e, o;
                            return null == t && (t = {}), e = t.strict === !1 ? this.createLocationRangeFromDOMRange(n(), {
                                strict: !1
                            }) : t.ignoreLock ? this.currentLocationRange : null != (o = this.lockedLocationRange) ? o : this.currentLocationRange
                        }, f.prototype.setLocationRange = function(t) {
                            var e;
                            if (!this.lockedLocationRange) return t = a(t), (e = this.createDOMRangeFromLocationRange(t)) ? (l(e), this.updateCurrentLocationRange(t)) : void 0
                        }, f.prototype.setLocationRangeFromPointRange = function(t) {
                            var e, n;
                            return t = a(t), n = this.getLocationAtPoint(t[0]), e = this.getLocationAtPoint(t[1]), this.setLocationRange([n, e])
                        }, f.prototype.getClientRectAtLocationRange = function(t) {
                            var e;
                            return (e = this.createDOMRangeFromLocationRange(t)) ? this.getClientRectsForDOMRange(e)[1] : void 0
                        }, f.prototype.locationIsCursorTarget = function(t) {
                            var e, n, o;
                            return o = this.findNodeAndOffsetFromLocation(t), e = o[0], n = o[1], s(e)
                        }, f.prototype.lock = function() {
                            return 0 === this.lockCount++ ? (this.updateCurrentLocationRange(), this.lockedLocationRange = this.getLocationRange()) : void 0
                        }, f.prototype.unlock = function() {
                            var t;
                            return 0 === --this.lockCount && (t = this.lockedLocationRange, this.lockedLocationRange = null, null != t) ? this.setLocationRange(t) : void 0
                        }, f.prototype.clearSelection = function() {
                            var t;
                            return null != (t = o()) ? t.removeAllRanges() : void 0
                        }, f.prototype.selectionIsCollapsed = function() {
                            var t;
                            return (null != (t = n()) ? t.collapsed : void 0) === !0
                        }, f.prototype.selectionIsExpanded = function() {
                            return !this.selectionIsCollapsed()
                        }, f.proxyMethod("locationMapper.findLocationFromContainerAndOffset"), f.proxyMethod("locationMapper.findContainerAndOffsetFromLocation"), f.proxyMethod("locationMapper.findNodeAndOffsetFromLocation"), f.proxyMethod("pointMapper.createDOMRangeFromPoint"), f.proxyMethod("pointMapper.getClientRectsForDOMRange"), f.prototype.didMouseDown = function() {
                            return this.pauseTemporarily()
                        }, f.prototype.pauseTemporarily = function() {
                            var e, n, o, r;
                            return this.paused = !0, n = function(e) {
                                return function() {
                                    var n, i, s;
                                    for (e.paused = !1, clearTimeout(r), i = 0, s = o.length; s > i; i++) n = o[i], n.destroy();
                                    return t(document, e.element) ? e.selectionDidChange() : void 0
                                }
                            }(this), r = setTimeout(n, 200), o = function() {
                                var t, o, r, s;
                                for (r = ["mousemove", "keydown"], s = [], t = 0, o = r.length; o > t; t++) e = r[t], s.push(i(e, {
                                    onElement: document,
                                    withCallback: n
                                }));
                                return s
                            }()
                        }, f.prototype.selectionDidChange = function() {
                            return this.paused || r(this.element) ? void 0 : this.updateCurrentLocationRange()
                        }, f.prototype.updateCurrentLocationRange = function(t) {
                            var e;
                            return (null != t ? t : t = this.createLocationRangeFromDOMRange(n())) && !c(t, this.currentLocationRange) ? (this.currentLocationRange = t, null != (e = this.delegate) && "function" == typeof e.locationRangeDidChange ? e.locationRangeDidChange(this.currentLocationRange.slice(0)) : void 0) : void 0
                        }, f.prototype.createDOMRangeFromLocationRange = function(t) {
                            var e, n, o, i;
                            return o = this.findContainerAndOffsetFromLocation(t[0]), n = u(t) ? o : null != (i = this.findContainerAndOffsetFromLocation(t[1])) ? i : o, null != o && null != n ? (e = document.createRange(), e.setStart.apply(e, o), e.setEnd.apply(e, n), e) : void 0
                        }, f.prototype.createLocationRangeFromDOMRange = function(t, e) {
                            var n, o;
                            if (null != t && this.domRangeWithinElement(t) && (o = this.findLocationFromContainerAndOffset(t.startContainer, t.startOffset, e))) return t.collapsed || (n = this.findLocationFromContainerAndOffset(t.endContainer, t.endOffset, e)), a([o, n])
                        }, f.prototype.getLocationAtPoint = function(t) {
                            var e, n;
                            return (e = this.createDOMRangeFromPoint(t)) && null != (n = this.createLocationRangeFromDOMRange(e)) ? n[0] : void 0
                        }, f.prototype.domRangeWithinElement = function(e) {
                            return e.collapsed ? t(this.element, e.startContainer) : t(this.element, e.startContainer) && t(this.element, e.endContainer)
                        }, f
                    }(e.BasicObject)
                }.call(this),
                function() {
                    var t, n, o, i = function(t, e) {
                            function n() {
                                this.constructor = t
                            }
                            for (var o in e) r.call(e, o) && (t[o] = e[o]);
                            return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t
                        },
                        r = {}.hasOwnProperty,
                        s = [].slice;
                    n = e.rangeIsCollapsed, o = e.rangesAreEqual, t = e.objectsAreEqual, e.EditorController = function(r) {
                        function a(t) {
                            var n, o;
                            this.editorElement = t.editorElement, n = t.document, o = t.html, this.selectionManager = new e.SelectionManager(this.editorElement), this.selectionManager.delegate = this, this.composition = new e.Composition, this.composition.delegate = this, this.attachmentManager = new e.AttachmentManager(this.composition.getAttachments()), this.attachmentManager.delegate = this, this.inputController = new e.InputController(this.editorElement), this.inputController.delegate = this, this.inputController.responder = this.composition, this.compositionController = new e.CompositionController(this.editorElement, this.composition), this.compositionController.delegate = this, this.toolbarController = new e.ToolbarController(this.editorElement.toolbarElement), this.toolbarController.delegate = this, this.editor = new e.Editor(this.composition, this.selectionManager, this.editorElement), null != n ? this.editor.loadDocument(n) : this.editor.loadHTML(o)
                        }
                        return i(a, r), a.prototype.registerSelectionManager = function() {
                            return e.selectionChangeObserver.registerSelectionManager(this.selectionManager)
                        }, a.prototype.unregisterSelectionManager = function() {
                            return e.selectionChangeObserver.unregisterSelectionManager(this.selectionManager)
                        }, a.prototype.compositionDidChangeDocument = function() {
                            return this.editorElement.notify("document-change"), this.handlingInput ? void 0 : this.render()
                        }, a.prototype.compositionDidChangeCurrentAttributes = function(t) {
                            return this.currentAttributes = t, this.toolbarController.updateAttributes(this.currentAttributes), this.updateCurrentActions(), this.editorElement.notify("attributes-change", {
                                attributes: this.currentAttributes
                            })
                        }, a.prototype.compositionDidPerformInsertionAtRange = function(t) {
                            return this.pasting ? this.pastedRange = t : void 0
                        }, a.prototype.compositionShouldAcceptFile = function(t) {
                            return this.editorElement.notify("file-accept", {
                                file: t
                            })
                        }, a.prototype.compositionDidAddAttachment = function(t) {
                            var e;
                            return e = this.attachmentManager.manageAttachment(t), this.editorElement.notify("attachment-add", {
                                attachment: e
                            })
                        }, a.prototype.compositionDidEditAttachment = function(t) {
                            var e;
                            return this.compositionController.rerenderViewForObject(t), e = this.attachmentManager.manageAttachment(t), this.editorElement.notify("attachment-edit", {
                                attachment: e
                            }), this.editorElement.notify("change")
                        }, a.prototype.compositionDidChangeAttachmentPreviewURL = function(t) {
                            return this.compositionController.invalidateViewForObject(t), this.editorElement.notify("change")
                        }, a.prototype.compositionDidRemoveAttachment = function(t) {
                            var e;
                            return e = this.attachmentManager.unmanageAttachment(t), this.editorElement.notify("attachment-remove", {
                                attachment: e
                            })
                        }, a.prototype.compositionDidStartEditingAttachment = function(t) {
                            return this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(t), this.compositionController.installAttachmentEditorForAttachment(t), this.selectionManager.setLocationRange(this.attachmentLocationRange)
                        }, a.prototype.compositionDidStopEditingAttachment = function() {
                            return this.compositionController.uninstallAttachmentEditor(), this.attachmentLocationRange = null
                        }, a.prototype.compositionDidRequestChangingSelectionToLocationRange = function(t) {
                            return !this.loadingSnapshot || this.isFocused() ? (this.requestedLocationRange = t, this.compositionRevisionWhenLocationRangeRequested = this.composition.revision, this.handlingInput ? void 0 : this.render()) : void 0
                        }, a.prototype.compositionWillLoadSnapshot = function() {
                            return this.loadingSnapshot = !0
                        }, a.prototype.compositionDidLoadSnapshot = function() {
                            return this.compositionController.refreshViewCache(), this.render(), this.loadingSnapshot = !1
                        }, a.prototype.getSelectionManager = function() {
                            return this.selectionManager
                        }, a.proxyMethod("getSelectionManager().setLocationRange"), a.proxyMethod("getSelectionManager().getLocationRange"), a.prototype.attachmentManagerDidRequestRemovalOfAttachment = function(t) {
                            return this.removeAttachment(t)
                        }, a.prototype.compositionControllerWillSyncDocumentView = function() {
                            return this.inputController.editorWillSyncDocumentView(), this.selectionManager.lock(), this.selectionManager.clearSelection()
                        }, a.prototype.compositionControllerDidSyncDocumentView = function() {
                            return this.inputController.editorDidSyncDocumentView(), this.selectionManager.unlock(), this.updateCurrentActions(), this.editorElement.notify("sync")
                        }, a.prototype.compositionControllerDidRender = function() {
                            return null != this.requestedLocationRange && (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision && this.selectionManager.setLocationRange(this.requestedLocationRange), this.requestedLocationRange = null, this.compositionRevisionWhenLocationRangeRequested = null), this.renderedCompositionRevision !== this.composition.revision && (this.composition.updateCurrentAttributes(), this.editorElement.notify("render")), this.renderedCompositionRevision = this.composition.revision
                        }, a.prototype.compositionControllerDidFocus = function() {
                            return this.toolbarController.hideDialog(), this.editorElement.notify("focus")
                        }, a.prototype.compositionControllerDidBlur = function() {
                            return this.editorElement.notify("blur")
                        }, a.prototype.compositionControllerDidSelectAttachment = function(t) {
                            return this.composition.editAttachment(t)
                        }, a.prototype.compositionControllerDidRequestDeselectingAttachment = function(t) {
                            var e, n;
                            return e = null != (n = this.attachmentLocationRange) ? n : this.composition.document.getLocationRangeOfAttachment(t), this.selectionManager.setLocationRange(e[1])
                        }, a.prototype.compositionControllerWillUpdateAttachment = function(t) {
                            return this.editor.recordUndoEntry("Edit Attachment", {
                                context: t.id,
                                consolidatable: !0
                            })
                        }, a.prototype.compositionControllerDidRequestRemovalOfAttachment = function(t) {
                            return this.removeAttachment(t)
                        }, a.prototype.inputControllerWillHandleInput = function() {
                            return this.handlingInput = !0, this.requestedRender = !1
                        }, a.prototype.inputControllerDidRequestRender = function() {
                            return this.requestedRender = !0
                        }, a.prototype.inputControllerDidHandleInput = function() {
                            return this.handlingInput = !1, this.requestedRender ? (this.requestedRender = !1, this.render()) : void 0
                        }, a.prototype.inputControllerDidAllowUnhandledInput = function() {
                            return this.editorElement.notify("change")
                        }, a.prototype.inputControllerDidRequestReparse = function() {
                            return this.reparse()
                        }, a.prototype.inputControllerWillPerformTyping = function() {
                            return this.recordTypingUndoEntry()
                        }, a.prototype.inputControllerWillCutText = function() {
                            return this.editor.recordUndoEntry("Cut")
                        }, a.prototype.inputControllerWillPasteText = function() {
                            return this.editor.recordUndoEntry("Paste"), this.pasting = !0
                        }, a.prototype.inputControllerDidPaste = function(t) {
                            var e;
                            return e = this.pastedRange, this.pastedRange = null, this.pasting = null, this.editorElement.notify("paste", {
                                pasteData: t,
                                range: e
                            })
                        }, a.prototype.inputControllerWillMoveText = function() {
                            return this.editor.recordUndoEntry("Move")
                        }, a.prototype.inputControllerWillAttachFiles = function() {
                            return this.editor.recordUndoEntry("Drop Files")
                        }, a.prototype.inputControllerDidReceiveKeyboardCommand = function(t) {
                            return this.toolbarController.applyKeyboardCommand(t)
                        }, a.prototype.inputControllerDidStartDrag = function() {
                            return this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()
                        }, a.prototype.inputControllerDidReceiveDragOverPoint = function(t) {
                            return this.selectionManager.setLocationRangeFromPointRange(t)
                        }, a.prototype.inputControllerDidCancelDrag = function() {
                            return this.selectionManager.setLocationRange(this.locationRangeBeforeDrag), this.locationRangeBeforeDrag = null
                        }, a.prototype.locationRangeDidChange = function(t) {
                            return this.composition.updateCurrentAttributes(), this.updateCurrentActions(), this.attachmentLocationRange && !o(this.attachmentLocationRange, t) && this.composition.stopEditingAttachment(), this.editorElement.notify("selection-change")
                        }, a.prototype.toolbarDidClickButton = function() {
                            return this.getLocationRange() ? void 0 : this.setLocationRange({
                                index: 0,
                                offset: 0
                            })
                        }, a.prototype.toolbarDidInvokeAction = function(t) {
                            return this.invokeAction(t)
                        }, a.prototype.toolbarDidToggleAttribute = function(t) {
                            return this.recordFormattingUndoEntry(), this.composition.toggleCurrentAttribute(t), this.render(), this.selectionFrozen ? void 0 : this.editorElement.focus()
                        }, a.prototype.toolbarDidUpdateAttribute = function(t, e) {
                            return this.recordFormattingUndoEntry(), this.composition.setCurrentAttribute(t, e), this.render(), this.selectionFrozen ? void 0 : this.editorElement.focus()
                        }, a.prototype.toolbarDidRemoveAttribute = function(t) {
                            return this.recordFormattingUndoEntry(), this.composition.removeCurrentAttribute(t), this.render(), this.selectionFrozen ? void 0 : this.editorElement.focus()
                        }, a.prototype.toolbarWillShowDialog = function() {
                            return this.composition.expandSelectionForEditing(), this.freezeSelection()
                        }, a.prototype.toolbarDidShowDialog = function(t) {
                            return this.editorElement.notify("toolbar-dialog-show", {
                                dialogName: t
                            })
                        }, a.prototype.toolbarDidHideDialog = function(t) {
                            return this.thawSelection(), this.editorElement.focus(), this.editorElement.notify("toolbar-dialog-hide", {
                                dialogName: t
                            })
                        }, a.prototype.freezeSelection = function() {
                            return this.selectionFrozen ? void 0 : (this.selectionManager.lock(), this.composition.freezeSelection(), this.selectionFrozen = !0, this.render())
                        }, a.prototype.thawSelection = function() {
                            return this.selectionFrozen ? (this.composition.thawSelection(), this.selectionManager.unlock(), this.selectionFrozen = !1, this.render()) : void 0
                        }, a.prototype.actions = {
                            undo: {
                                test: function() {
                                    return this.editor.canUndo()
                                },
                                perform: function() {
                                    return this.editor.undo()
                                }
                            },
                            redo: {
                                test: function() {
                                    return this.editor.canRedo()
                                },
                                perform: function() {
                                    return this.editor.redo()
                                }
                            },
                            link: {
                                test: function() {
                                    return this.editor.canActivateAttribute("href")
                                }
                            },
                            increaseNestingLevel: {
                                test: function() {
                                    return this.editor.canIncreaseNestingLevel()
                                },
                                perform: function() {
                                    return this.editor.increaseNestingLevel() && this.render()
                                }
                            },
                            decreaseNestingLevel: {
                                test: function() {
                                    return this.editor.canDecreaseNestingLevel()
                                },
                                perform: function() {
                                    return this.editor.decreaseNestingLevel() && this.render()
                                }
                            },
                            increaseBlockLevel: {
                                test: function() {
                                    return this.editor.canIncreaseNestingLevel()
                                },
                                perform: function() {
                                    return this.editor.increaseNestingLevel() && this.render()
                                }
                            },
                            decreaseBlockLevel: {
                                test: function() {
                                    return this.editor.canDecreaseNestingLevel()
                                },
                                perform: function() {
                                    return this.editor.decreaseNestingLevel() && this.render()
                                }
                            }
                        }, a.prototype.canInvokeAction = function(t) {
                            var e, n;
                            return this.actionIsExternal(t) ? !0 : !!(null != (e = this.actions[t]) && null != (n = e.test) ? n.call(this) : void 0)
                        }, a.prototype.invokeAction = function(t) {
                            var e, n;
                            return this.actionIsExternal(t) ? this.editorElement.notify("action-invoke", {
                                actionName: t
                            }) : null != (e = this.actions[t]) && null != (n = e.perform) ? n.call(this) : void 0
                        }, a.prototype.actionIsExternal = function(t) {
                            return /^x-./.test(t)
                        }, a.prototype.getCurrentActions = function() {
                            var t, e;
                            e = {};
                            for (t in this.actions) e[t] = this.canInvokeAction(t);
                            return e
                        }, a.prototype.updateCurrentActions = function() {
                            var e;
                            return e = this.getCurrentActions(), t(e, this.currentActions) ? void 0 : (this.currentActions = e, this.toolbarController.updateActions(this.currentActions), this.editorElement.notify("actions-change", {
                                actions: this.currentActions
                            }))
                        }, a.prototype.reparse = function() {
                            return this.composition.replaceHTML(this.editorElement.innerHTML)
                        }, a.prototype.render = function() {
                            return this.compositionController.render()
                        }, a.prototype.removeAttachment = function(t) {
                            return this.editor.recordUndoEntry("Delete Attachment"), this.composition.removeAttachment(t), this.render()
                        }, a.prototype.recordFormattingUndoEntry = function() {
                            var t;
                            return t = this.selectionManager.getLocationRange(), n(t) ? void 0 : this.editor.recordUndoEntry("Formatting", {
                                context: this.getUndoContext(),
                                consolidatable: !0
                            })
                        }, a.prototype.recordTypingUndoEntry = function() {
                            return this.editor.recordUndoEntry("Typing", {
                                context: this.getUndoContext(this.currentAttributes),
                                consolidatable: !0
                            })
                        }, a.prototype.getUndoContext = function() {
                            var t;
                            return t = 1 <= arguments.length ? s.call(arguments, 0) : [], [this.getLocationContext(), this.getTimeContext()].concat(s.call(t))
                        }, a.prototype.getLocationContext = function() {
                            var t;
                            return t = this.selectionManager.getLocationRange(), n(t) ? t[0].index : t
                        }, a.prototype.getTimeContext = function() {
                            return e.config.undoInterval > 0 ? Math.floor((new Date).getTime() / e.config.undoInterval) : 0
                        }, a.prototype.isFocused = function() {
                            var t;
                            return this.editorElement === (null != (t = this.editorElement.ownerDocument) ? t.activeElement : void 0)
                        }, a
                    }(e.Controller)
                }.call(this),
                function() {
                    var t, n, o, i, r, s;
                    i = e.makeElement, r = e.selectionElements, s = e.triggerEvent, n = e.handleEvent, o = e.handleEventOnce, t = e.AttachmentView.attachmentSelector, e.registerElement("trix-editor", function() {
                        var a, u, c, l, h, p;
                        return l = 0, a = function(t) {
                            return !document.querySelector(":focus") && t.hasAttribute("autofocus") && document.querySelector("[autofocus]") === t ? t.focus() : void 0
                        }, h = function(t) {
                            return t.hasAttribute("contenteditable") ? void 0 : (t.setAttribute("contenteditable", ""), o("focus", {
                                onElement: t,
                                withCallback: function() {
                                    return u(t)
                                }
                            }))
                        }, u = function(t) {
                            return c(t), p(t)
                        }, c = function(t) {
                            return ("function" == typeof document.queryCommandSupported ? document.queryCommandSupported("enableObjectResizing") : void 0) ? (document.execCommand("enableObjectResizing", !1, !1), n("mscontrolselect", {
                                onElement: t,
                                preventDefault: !0
                            })) : void 0
                        }, p = function() {
                            var t;
                            return ("function" == typeof document.queryCommandSupported ? document.queryCommandSupported("DefaultParagraphSeparator") : void 0) && (t = e.config.blockAttributes["default"].tagName, "div" === t || "p" === t) ? document.execCommand("DefaultParagraphSeparator", !1, t) : void 0
                        }, {
                            defaultCSS: "%t:empty:not(:focus)::before {\n  content: attr(placeholder);\n  color: graytext;\n}\n\n%t a[contenteditable=false] {\n  cursor: text;\n}\n\n%t img {\n  max-width: 100%;\n  height: auto;\n}\n\n%t " + t + " figcaption textarea {\n  resize: none;\n}\n\n%t " + t + " figcaption textarea.trix-autoresize-clone {\n  position: absolute;\n  left: -9999px;\n  max-height: 0px;\n}\n\n%t " + t + '[data-trix-mutable] figcaption:empty::before {\n  content: "' + e.config.lang.captionPrompt + '";\n  color: graytext;\n}\n\n%t ' + r.selector + " { " + r.cssText + " }",
                            trixId: {
                                get: function() {
                                    return this.hasAttribute("trix-id") ? this.getAttribute("trix-id") : (this.setAttribute("trix-id", ++l), this.trixId)
                                }
                            },
                            toolbarElement: {
                                get: function() {
                                    var t, e, n;
                                    return this.hasAttribute("toolbar") ? null != (e = this.ownerDocument) ? e.getElementById(this.getAttribute("toolbar")) : void 0 : this.parentElement ? (n = "trix-toolbar-" + this.trixId, this.setAttribute("toolbar", n), t = i("trix-toolbar", {
                                        id: n
                                    }), this.parentElement.insertBefore(t, this), t) : void 0
                                }
                            },
                            inputElement: {
                                get: function() {
                                    var t, e, n;
                                    return this.hasAttribute("input") ? null != (n = this.ownerDocument) ? n.getElementById(this.getAttribute("input")) : void 0 : this.parentElement ? (e = "trix-input-" + this.trixId, this.setAttribute("input", e), t = i("input", {
                                        type: "hidden",
                                        id: e
                                    }), this.parentElement.insertBefore(t, this.nextElementSibling), t) : void 0
                                }
                            },
                            editor: {
                                get: function() {
                                    var t;
                                    return null != (t = this.editorController) ? t.editor : void 0
                                }
                            },
                            name: {
                                get: function() {
                                    var t;
                                    return null != (t = this.inputElement) ? t.name : void 0
                                }
                            },
                            value: {
                                get: function() {
                                    var t;
                                    return null != (t = this.inputElement) ? t.value : void 0
                                },
                                set: function(t) {
                                    var e;
                                    return this.defaultValue = t, null != (e = this.editor) ? e.loadHTML(this.defaultValue) : void 0
                                }
                            },
                            notify: function(t, n) {
                                var o;
                                switch (t) {
                                    case "document-change":
                                        this.documentChangedSinceLastRender = !0;
                                        break;
                                    case "render":
                                        this.documentChangedSinceLastRender && (this.documentChangedSinceLastRender = !1, this.notify("change"));
                                        break;
                                    case "change":
                                    case "attachment-add":
                                    case "attachment-edit":
                                    case "attachment-remove":
                                        null != (o = this.inputElement) && (o.value = e.serializeToContentType(this, "text/html"))
                                }
                                return this.editorController ? s("trix-" + t, {
                                    onElement: this,
                                    attributes: n
                                }) : void 0
                            },
                            createdCallback: function() {
                                return h(this)
                            },
                            attachedCallback: function() {
                                return this.hasAttribute("data-trix-internal") ? void 0 : (null == this.editorController && (this.editorController = new e.EditorController({
                                    editorElement: this,
                                    html: this.defaultValue = this.value
                                })), this.editorController.registerSelectionManager(), this.registerResetListener(), a(this), requestAnimationFrame(function(t) {
                                    return function() {
                                        return t.notify("initialize")
                                    }
                                }(this)))
                            },
                            detachedCallback: function() {
                                var t;
                                return null != (t = this.editorController) && t.unregisterSelectionManager(), this.unregisterResetListener()
                            },
                            registerResetListener: function() {
                                return this.resetListener = this.resetBubbled.bind(this), window.addEventListener("reset", this.resetListener, !1)
                            },
                            unregisterResetListener: function() {
                                return window.removeEventListener("reset", this.resetListener, !1)
                            },
                            resetBubbled: function(t) {
                                var e;
                                return t.target !== (null != (e = this.inputElement) ? e.form : void 0) || t.defaultPrevented ? void 0 : this.reset()
                            },
                            reset: function() {
                                return this.value = this.defaultValue
                            }
                        }
                    }())
                }.call(this),
                function() {}.call(this)
        }).call(this), "object" == typeof module && module.exports ? module.exports = e : "function" == typeof define && define.amd && define(e)
    }.call(this);
/*!
 * clipboard.js v2.0.6
 * https://clipboardjs.com/
 * 
 * Licensed MIT © Zeno Rocha
 */
! function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.ClipboardJS = e() : t.ClipboardJS = e()
}(this, function() {
    return o = {}, r.m = n = [function(t, e) {
        t.exports = function(t) {
            var e;
            if ("SELECT" === t.nodeName) t.focus(), e = t.value;
            else if ("INPUT" === t.nodeName || "TEXTAREA" === t.nodeName) {
                var n = t.hasAttribute("readonly");
                n || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), n || t.removeAttribute("readonly"), e = t.value
            } else {
                t.hasAttribute("contenteditable") && t.focus();
                var o = window.getSelection(),
                    r = document.createRange();
                r.selectNodeContents(t), o.removeAllRanges(), o.addRange(r), e = o.toString()
            }
            return e
        }
    }, function(t, e) {
        function n() {}
        n.prototype = {
            on: function(t, e, n) {
                var o = this.e || (this.e = {});
                return (o[t] || (o[t] = [])).push({
                    fn: e,
                    ctx: n
                }), this
            },
            once: function(t, e, n) {
                var o = this;

                function r() {
                    o.off(t, r), e.apply(n, arguments)
                }
                return r._ = e, this.on(t, r, n)
            },
            emit: function(t) {
                for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, r = n.length; o < r; o++) n[o].fn.apply(n[o].ctx, e);
                return this
            },
            off: function(t, e) {
                var n = this.e || (this.e = {}),
                    o = n[t],
                    r = [];
                if (o && e)
                    for (var i = 0, a = o.length; i < a; i++) o[i].fn !== e && o[i].fn._ !== e && r.push(o[i]);
                return r.length ? n[t] = r : delete n[t], this
            }
        }, t.exports = n, t.exports.TinyEmitter = n
    }, function(t, e, n) {
        var d = n(3),
            h = n(4);
        t.exports = function(t, e, n) {
            if (!t && !e && !n) throw new Error("Missing required arguments");
            if (!d.string(e)) throw new TypeError("Second argument must be a String");
            if (!d.fn(n)) throw new TypeError("Third argument must be a Function");
            if (d.node(t)) return s = e, f = n, (u = t).addEventListener(s, f), {
                destroy: function() {
                    u.removeEventListener(s, f)
                }
            };
            if (d.nodeList(t)) return a = t, c = e, l = n, Array.prototype.forEach.call(a, function(t) {
                t.addEventListener(c, l)
            }), {
                destroy: function() {
                    Array.prototype.forEach.call(a, function(t) {
                        t.removeEventListener(c, l)
                    })
                }
            };
            if (d.string(t)) return o = t, r = e, i = n, h(document.body, o, r, i);
            throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
            var o, r, i, a, c, l, u, s, f
        }
    }, function(t, n) {
        n.node = function(t) {
            return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType
        }, n.nodeList = function(t) {
            var e = Object.prototype.toString.call(t);
            return void 0 !== t && ("[object NodeList]" === e || "[object HTMLCollection]" === e) && "length" in t && (0 === t.length || n.node(t[0]))
        }, n.string = function(t) {
            return "string" == typeof t || t instanceof String
        }, n.fn = function(t) {
            return "[object Function]" === Object.prototype.toString.call(t)
        }
    }, function(t, e, n) {
        var a = n(5);

        function i(t, e, n, o, r) {
            var i = function(e, n, t, o) {
                return function(t) {
                    t.delegateTarget = a(t.target, n), t.delegateTarget && o.call(e, t)
                }
            }.apply(this, arguments);
            return t.addEventListener(n, i, r), {
                destroy: function() {
                    t.removeEventListener(n, i, r)
                }
            }
        }
        t.exports = function(t, e, n, o, r) {
            return "function" == typeof t.addEventListener ? i.apply(null, arguments) : "function" == typeof n ? i.bind(null, document).apply(null, arguments) : ("string" == typeof t && (t = document.querySelectorAll(t)), Array.prototype.map.call(t, function(t) {
                return i(t, e, n, o, r)
            }))
        }
    }, function(t, e) {
        if ("undefined" != typeof Element && !Element.prototype.matches) {
            var n = Element.prototype;
            n.matches = n.matchesSelector || n.mozMatchesSelector || n.msMatchesSelector || n.oMatchesSelector || n.webkitMatchesSelector
        }
        t.exports = function(t, e) {
            for (; t && 9 !== t.nodeType;) {
                if ("function" == typeof t.matches && t.matches(e)) return t;
                t = t.parentNode
            }
        }
    }, function(t, e, n) {
        "use strict";
        n.r(e);
        var o = n(0),
            r = n.n(o),
            i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            };

        function a(t, e) {
            for (var n = 0; n < e.length; n++) {
                var o = e[n];
                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)
            }
        }

        function c(t) {
            ! function(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }(this, c), this.resolveOptions(t), this.initSelection()
        }
        var l = (function(t, e, n) {
                return e && a(t.prototype, e), n && a(t, n), t
            }(c, [{
                key: "resolveOptions",
                value: function(t) {
                    var e = 0 < arguments.length && void 0 !== t ? t : {};
                    this.action = e.action, this.container = e.container, this.emitter = e.emitter, this.target = e.target, this.text = e.text, this.trigger = e.trigger, this.selectedText = ""
                }
            }, {
                key: "initSelection",
                value: function() {
                    this.text ? this.selectFake() : this.target && this.selectTarget()
                }
            }, {
                key: "selectFake",
                value: function() {
                    var t = this,
                        e = "rtl" == document.documentElement.getAttribute("dir");
                    this.removeFake(), this.fakeHandlerCallback = function() {
                        return t.removeFake()
                    }, this.fakeHandler = this.container.addEventListener("click", this.fakeHandlerCallback) || !0, this.fakeElem = document.createElement("textarea"), this.fakeElem.style.fontSize = "12pt", this.fakeElem.style.border = "0", this.fakeElem.style.padding = "0", this.fakeElem.style.margin = "0", this.fakeElem.style.position = "absolute", this.fakeElem.style[e ? "right" : "left"] = "-9999px";
                    var n = window.pageYOffset || document.documentElement.scrollTop;
                    this.fakeElem.style.top = n + "px", this.fakeElem.setAttribute("readonly", ""), this.fakeElem.value = this.text, this.container.appendChild(this.fakeElem), this.selectedText = r()(this.fakeElem), this.copyText()
                }
            }, {
                key: "removeFake",
                value: function() {
                    this.fakeHandler && (this.container.removeEventListener("click", this.fakeHandlerCallback), this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem && (this.container.removeChild(this.fakeElem), this.fakeElem = null)
                }
            }, {
                key: "selectTarget",
                value: function() {
                    this.selectedText = r()(this.target), this.copyText()
                }
            }, {
                key: "copyText",
                value: function() {
                    var e = void 0;
                    try {
                        e = document.execCommand(this.action)
                    } catch (t) {
                        e = !1
                    }
                    this.handleResult(e)
                }
            }, {
                key: "handleResult",
                value: function(t) {
                    this.emitter.emit(t ? "success" : "error", {
                        action: this.action,
                        text: this.selectedText,
                        trigger: this.trigger,
                        clearSelection: this.clearSelection.bind(this)
                    })
                }
            }, {
                key: "clearSelection",
                value: function() {
                    this.trigger && this.trigger.focus(), document.activeElement.blur(), window.getSelection().removeAllRanges()
                }
            }, {
                key: "destroy",
                value: function() {
                    this.removeFake()
                }
            }, {
                key: "action",
                set: function(t) {
                    var e = 0 < arguments.length && void 0 !== t ? t : "copy";
                    if (this._action = e, "copy" !== this._action && "cut" !== this._action) throw new Error('Invalid "action" value, use either "copy" or "cut"')
                },
                get: function() {
                    return this._action
                }
            }, {
                key: "target",
                set: function(t) {
                    if (void 0 !== t) {
                        if (!t || "object" !== (void 0 === t ? "undefined" : i(t)) || 1 !== t.nodeType) throw new Error('Invalid "target" value, use a valid Element');
                        if ("copy" === this.action && t.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                        if ("cut" === this.action && (t.hasAttribute("readonly") || t.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                        this._target = t
                    }
                },
                get: function() {
                    return this._target
                }
            }]), c),
            u = n(1),
            s = n.n(u),
            f = n(2),
            d = n.n(f),
            h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            },
            p = function(t, e, n) {
                return e && y(t.prototype, e), n && y(t, n), t
            };

        function y(t, e) {
            for (var n = 0; n < e.length; n++) {
                var o = e[n];
                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)
            }
        }
        var m = (function(t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
        }(v, s.a), p(v, [{
            key: "resolveOptions",
            value: function(t) {
                var e = 0 < arguments.length && void 0 !== t ? t : {};
                this.action = "function" == typeof e.action ? e.action : this.defaultAction, this.target = "function" == typeof e.target ? e.target : this.defaultTarget, this.text = "function" == typeof e.text ? e.text : this.defaultText, this.container = "object" === h(e.container) ? e.container : document.body
            }
        }, {
            key: "listenClick",
            value: function(t) {
                var e = this;
                this.listener = d()(t, "click", function(t) {
                    return e.onClick(t)
                })
            }
        }, {
            key: "onClick",
            value: function(t) {
                var e = t.delegateTarget || t.currentTarget;
                this.clipboardAction && (this.clipboardAction = null), this.clipboardAction = new l({
                    action: this.action(e),
                    target: this.target(e),
                    text: this.text(e),
                    container: this.container,
                    trigger: e,
                    emitter: this
                })
            }
        }, {
            key: "defaultAction",
            value: function(t) {
                return b("action", t)
            }
        }, {
            key: "defaultTarget",
            value: function(t) {
                var e = b("target", t);
                if (e) return document.querySelector(e)
            }
        }, {
            key: "defaultText",
            value: function(t) {
                return b("text", t)
            }
        }, {
            key: "destroy",
            value: function() {
                this.listener.destroy(), this.clipboardAction && (this.clipboardAction.destroy(), this.clipboardAction = null)
            }
        }], [{
            key: "isSupported",
            value: function(t) {
                var e = 0 < arguments.length && void 0 !== t ? t : ["copy", "cut"],
                    n = "string" == typeof e ? [e] : e,
                    o = !!document.queryCommandSupported;
                return n.forEach(function(t) {
                    o = o && !!document.queryCommandSupported(t)
                }), o
            }
        }]), v);

        function v(t, e) {
            ! function(t, e) {
                if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
            }(this, v);
            var n = function(t, e) {
                if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !e || "object" != typeof e && "function" != typeof e ? t : e
            }(this, (v.__proto__ || Object.getPrototypeOf(v)).call(this));
            return n.resolveOptions(e), n.listenClick(t), n
        }

        function b(t, e) {
            var n = "data-clipboard-" + t;
            if (e.hasAttribute(n)) return e.getAttribute(n)
        }
        e.default = m
    }], r.c = o, r.d = function(t, e, n) {
        r.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: n
        })
    }, r.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, r.t = function(e, t) {
        if (1 & t && (e = r(e)), 8 & t) return e;
        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
        var n = Object.create(null);
        if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var o in e) r.d(n, o, function(t) {
                return e[t]
            }.bind(null, o));
        return n
    }, r.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        } : function() {
            return t
        };
        return r.d(e, "a", e), e
    }, r.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, r.p = "", r(r.s = 6).default;

    function r(t) {
        if (o[t]) return o[t].exports;
        var e = o[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return n[t].call(e.exports, e, e.exports, r), e.l = !0, e.exports
    }
    var n, o
});
// IMPORTANT: The order of these files matters.











;